<patriknw> good docs
<patriknw> nice removal
<patriknw> This doesn't look like java code
<patriknw> Does this mean that resize will not be done for ask?
<patriknw> There should also be a section about the actual ask/? change, move from ActorRef to pattern, with code samples v1.3 vs v2.0
Do separate v1.3/v2.0 samples in java also, since the syntax is changed.
<patriknw> I think some more things are needed in the migration kit.
Add the needed implicit conversions in OldActor so that existing code works inside actors.
Add needed implicit conversion in this package.scala file so that existing code works outside actors, i.e. in tests.

<rkuhn> ask() calls tell(), which should resize
<rkuhn> good point, will do, including specific section in migration docs
<rkuhn> It’s a shame that the CPS plugin does not work for Java ;-) (good catch, will fix of course)
<viktorklang> Document as internal and make final
<viktorklang> I like to move it move it
<viktorklang> create ticket
<viktorklang> should be private[akka]
<viktorklang> I'd definitely recommend making DeadLetterActorRef a subtype of EmptyLocalActorRef, and drop DeadLetterActorRefLike
<viktorklang> why is this class public, and not documented. I'm guessing this should be private[akka] and documented as internal (Java users will be able to use private[akka]-things, right?)
<viktorklang> add ": Unit"
<viktorklang> add ": Unit"
<viktorklang> Public class?
<viktorklang> Does AskSupport need some overall ScalaDoc?
<viktorklang> move f inside flow
<viktorklang> move f inside flow
<viktorklang> ungood
<rkuhn> It don’t work because constructor of ELAR supposed to `init()` while constructor of DLAR can’t `init()`.
<rkuhn> sure, everybody likes Davy Jones, don’t they?
<rkuhn> un-why?
<viktorklang> ScalaDoc?
<viktorklang> Nooooo
<viktorklang> move f
