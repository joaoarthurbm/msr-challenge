Nice abstraction I like it
; general
This is great
; general
We need the guard to guard the access to shutdownSchedule   private var shutdownSchedule  UNSCHEDULED This can be nonvolatile since it is protected by guard withGuardWe can rewrite this function asif futuresdecrementAndGet  0 guard withGuard   if uuidsisEmpty      shutdownSchedule match
; design
Ill experiment a bit with this thanks for being on top of it
; general
I committed your suggested fix above If there are any other changes youd prefer let me know
; general
Oh I tinkered with it got the final tests running now will check your latest commit
; general
Thanks man the other methods were too lucrative compared to these Now you can docamelactivationFutureForfooforeach   a  a  SomeMessage  a  SomeOtherMessage  a  SomeThirdMessageAnd never block yo
; general
thats whassup blockins for suckas
; general
Looks good The consumer can wait in its own ec for registration while others can get an activationFuture on their ec seems more isolatedThat should prevent the possibility that someone is somehow blocking the consumer registration because it all happens in one queue on one ec dispatcher somewhere
; general
Yup and it also doesnt use something arbitrary as the default dispatcher
; general
Cool well caught
; general
this creates two methods one with type Nil and one with type IterableString where one is a bridge method I think we should avoid that when not necessary
; general
yeah always use explicit return parameters for userfacing APIs
; general
different proposal simply make within abstract in ScatterGatherFirstCompletedLike so that it will be picked up from ScatterGatherFirstCompletedRouter apply the same treatment to nrOfInstances and routees since custom routers do not really have to do this if they dont want to
; general
having this in here makes sense other routers may use it also potentially
; general
and not only because it MAY trip up certain IDEs
; general
Good catch I will implement this immediately
; general
PropsTestActor is nicer
; general
Use actorContextactorOfPropsDemocratActor dSame below
; general
All samples should really have Typsafe copyright headers Add a ticket for going through and add that
; general
Why use tell here And why not sender tell fib  More idiomatic Scala
; general
Nicer with RoundRobinRouter5
; general
Use 2 spaces indentation below Should not be userrouter but router
; general
Perhaps worth mentioning that you get these odd names b etc since no address is specified
; general
Use backticks for code not
; general
Why  used in this section Use backticks
; general
Why use AtomicInteger inside an actor Does it escape If not use an Int
; design
Same here Needed
; general
On the other hand could be nice to be explicit So Ill say keep it
; general
Good job I like it
; general
Thanks for your feedback I will update accordingly and push
; general
Ack sorry guys thought we flushed all these out  loled at the hysterical viktorklang
; general
Anything that fails spuriously is hysterical in my world
; general
These default values are marked final now but the type annotations stop them from being constants Is the intention for them to be constants
; general
Yes that was the plan why would the type annotation mess with that
; general
From what I remember a constant definition has to have final val and no type annotation I would also guess that it only covers some types like primitives String arrays of constants
; general
Can confirm that its final val with no type annotation and that general objects cant be constant expressions So    final val defaultDeployId    constant    final val defaultDeployId String    not constant    final val defaultSupervisor  None  not constant
; general
Why what The no type annotation I think it was always speced that way
; general
But what sense does it make
; general
Missing a  here
; general
Very nice douche
; general
Thanks I guess
; general
since it is part of referenceconf this will always be true
; general
Ie the pool config should be commented out
; general
routees  routees filterNot abandonedRouteescontains
; general
should this happen at each message send
; general
Couldnt this be handled inside Poolresize instead
; general
I think that line is meant to call def resizePoolprops Props context ActorContext currentRoutees IndexedSeqActorRef
; general
Ah it shouldnt since the pool is immutable I get it
; general
that is not true note that I use confighasPath which is the user defined config as opposed to deployment which has the default fallfacks includedval deployment  configwithFallbackdefault
; general
if its not done on each message send when is it then to be doneDo you think of some kind of modulusIn that case I think it should be implemented in the RouterPool  and it belongs to the advanced use cases that the user can implement themselves
; general
What do you mean by I think that line is meant to call def resizePoolIsnt that exactly what it does
; general
yes and I wanted to hide this from the user if they implement their own RouterPool
; general
Ah I didnt see that it was in RouterConfig
; general
ah sorry I somehow managed to forget how this works
; general
wrt every call yes I agree that it should be handled in the pool implementation so the hook should stay as is here Down in the default impl I think it should only resize on every Nth message based on the elasticity parameters Otherwise one flip of the AtomicBoolean per message send would be too costly I propose an atomic counter with a threshold and the reduction is done by the one doing the resizing anybody else just always increments
; design
Or you just do a TTAS
; general
On Tue Jan 10 2012 at 1009 AM Roland Kuhn replyreplygithubcom wrote wrt every call yes I agree that it should be handled in the pool implementation so the hook should stay as is here Down in the default impl I think it should only resize on every Nth message based on the elasticity parameters Otherwise one flip of the AtomicBoolean per message send would be too costly I propose an atomic counter with a threshold and the reduction is done by the one doing the resizing anybody else just always incrementsHmm right now the AtomicBoolean is in RouterConfig so that users doesnthave to implement concurrency stuff when writing their own Resizer Whatabout placing the counter and the Nth message check there also but theResizer decide how often by providing a methoddef resizeOnEachNthMessage IntThe config of that belongs to the Resizer impl  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkacommit8b71bf5bea435cc0ef2caa68a3e6afa4ac01da77commitcomment852491 Patrik NordwallTypesafe httptypesafecom  EnterpriseGrade Scala from the ExpertsTwitter patriknw
; design
Sorry what is a TTASOn Tue Jan 10 2012 at 1010 AM viktorklang replyreplygithubcom wrote Or you just do a TTAS  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkacommit8b71bf5bea435cc0ef2caa68a3e6afa4ac01da77commitcomment852494 Patrik NordwallTypesafe httptypesafecom  EnterpriseGrade Scala from the ExpertsTwitter patriknw
; general
yes sounds good might be good to call that method on each check though so that the Resizer has full dynamic control
; general
TTAS  CCAS if somethingget  somethingcompareAndSetfalse true Avoids CAS if not needed
; general
On Tue Jan 10 2012 at 1033 AM Roland Kuhn replyreplygithubcom wrote yes sounds good might be good to call that method on each check though so that the Resizer has full dynamic controlYes thats the planThanks for good suggestion  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkacommit8b71bf5bea435cc0ef2caa68a3e6afa4ac01da77commitcomment852541 Patrik NordwallTypesafe httptypesafecom  EnterpriseGrade Scala from the ExpertsTwitter patriknw
; general
Completely forgot to rewrite this in the Akka style I just had a few minutes to try it and commit it when it worked I will fix it up
; general
nice work BTW it looks like cheating but I was surprised that it actually prevents me from doing the wrong thing Strange how does that work
; general
I only need to return FutureAny from the shift methods so I can capture exceptions The continuations themselves carry the proper type of the method until the last continuation which I stuff the result of that into the Future created in the flow method The problem as you found is having the inferencer find the correct type for the result of the reset methods annotations I dont care about it I just make it a FutureAny because I only use that to get the exceptionAnd probably magic Definitely a bit of magic in there
; general
Hey Derek This commit seems to break scaladoc generation on publishlocal Can you take a look at that
; general
Yeah probably the same as the problem with Futureapply Ill fix it
; general
Commited fix publishlocal should work again
; general
It is really strange that type inference works when compiling but fails when generating scaladocs Thats twice now I have seen that
; general
Yes strange Could be useful for Scala team to have a ticket if it doesnt already exist
; general
ouch of course you didnt cherrypick the merge commit my bad please also add the doc change in there to release20
; general
Which ones I dont have time to scan the entire commit dude httpsgithubcomjbonerakkacommitb4fcc3b2f2d7e534908057750d0086b9c6e20764
; general
just checkout dispatchersrst from master and commit to release20
; general
On Mon Feb 27 2012 at 220 PM Roland Kuhn replyreplygithubcom wrote just checkout dispatchersrst from master and commit to release20I thought I already updated those in both branches  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkacommitcf6e8b1f1bef43dd12e4efa9f4a193746092a9dfcommitcomment1014854 Viktor KlangAkka Tech LeadTypesafe httpwwwtypesafecom  The software stack for applicationsthat scaleTwitter viktorklang
; general
Ive pushed the changes to releas20 now2012227 iktor lang viktorklanggmailcom On Mon Feb 27 2012 at 220 PM Roland Kuhn  replyreplygithubcom  wrote just checkout dispatchersrst from master and commit to release20 I thought I already updated those in both branches  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkacommitcf6e8b1f1bef43dd12e4efa9f4a193746092a9dfcommitcomment1014854  Viktor Klang Akka Tech Lead Typesafe httpwwwtypesafecom  The software stack for applications that scale Twitter viktorklang Viktor KlangAkka Tech LeadTypesafe httpwwwtypesafecom  The software stack for applicationsthat scaleTwitter viktorklang
; general
At least I thought I did seems to be messed up over at GH right nowgetting an ssh denied2012227 iktor lang viktorklanggmailcom Ive pushed the changes to releas20 now 2012227 iktor lang viktorklanggmailcom On Mon Feb 27 2012 at 220 PM Roland Kuhn  replyreplygithubcom  wrote just checkout dispatchersrst from master and commit to release20 I thought I already updated those in both branches  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkacommitcf6e8b1f1bef43dd12e4efa9f4a193746092a9dfcommitcomment1014854  Viktor Klang Akka Tech Lead Typesafe httpwwwtypesafecom  The software stack for applications that scale Twitter viktorklang  Viktor Klang Akka Tech Lead Typesafe httpwwwtypesafecom  The software stack for applications that scale Twitter viktorklang Viktor KlangAkka Tech LeadTypesafe httpwwwtypesafecom  The software stack for applicationsthat scaleTwitter viktorklang
; general
which is the actor that created it
; design
Do not pass mutable actors between
; general
Im guessing the commit of the file called q was accidental
; general
qfile is badass
; general
Scary wonder where that came fromThanks for noticing Can you please remove it if not already donePatrik22 dec 2011 kl 0050 skrev Peter Vlugterreplyreplygithubcom Im guessing the commit of the file called q was accidental    Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkacommit1bce4c39c3e8844037dd5d6feb8402dedfac7374commitcomment814357
; general
Nice Added to the rst doc for dispatchers
; general
Is it possible not to provide an upper limit
; general
Make a trait for BufferPool and make this class privateakka so its just an implementation detailThen I can optimize the crap out of it
; design
Any particular reason why this is an AtomicInteger and not an AtomicBoolan Just for having nice names Unlocked and Locked
; general
you can release the lock prior to the allocation
; general
this does not need to be volatile as it is guarded by a volatile piggyback of the state
; general
If you make takeBufferFromPool private and its always called from acquire you dont even need case Nil because its guarded by poolSize  0 in acquire aboveMaybe one should measure how much spinning costs compared to allocating a new buffer so one could just allocate a new buffer when theres contention though this would maybe just shift the contention to malloc underneath
; design
Thinking more about it I think we should allocate an array instead then the adds and removes do not incur any allocations
; general
Right Since it is currently fixed size anyway an array would fit perfectly
; general
Would you use a simple array or a scalacollectionmutableArrayStack tomake the management of addingremoving items easierOn Thu Jan 17 2013 at 743 AM Johannes Rudolphnotificationsgithubcomwrote Right Since it is currently fixed size anyway an array would fit perfectly  Reply to this email directly or view it on GitHubhttpsgithubcomakkaakkacommit7d89aefb634e6dd2c31ed8f13b6963be4f338352commitcomment2453179
; general
negative size  take random size
; general
multiple releases is possible here making the pool corrupted
; general
I thin drewhk has a point here rename this to locked and make it an AtomicBoolean and drop Unlocked and Locked and use truefalse
; general
I dont understand Arent concurrent accesses synchronized through the lock in addBufferToPool
; general
Scrap that comment about it being guarded It isnt of course Maybe thats what you meant above
; general
I think its deceptive to not release it and not returning a way for the user to know if the release failed
; general
That depends on what exactly the contract of release is I see release as just a notice from the user to the pool that the user wont use this buffer any more and that it can be now freed or reused on a best effort basis I dont see why this would be deceptive Its just a looser contract The buffer will be GCd sooner or later in any caseIf you use free as in malloc you also dont know if a particular buffer will be put back into a free list or given back to the OS at the time of the call or only later on
; general
collection of native memory is fraught with dangers Its not collected on normal GC sweeps
; general
So what do you suggest If we cant control or force releasing native memory the only thing I see we could do is to limit the amount we allocate in the first place But then we could just rely on the JVM limit to do thatWhat we could do is put buffers bigger than the configured size into an extra collection sorted by size maybe only weak referenced and fallback to a more expensive buffer lookup when a bigger buffer is needed
; general
Perhaps the solution is to not be able to request a size at all the size youll get is the size in the config The only use of the buffer is to gain performance and a smaller buffer should not affect the semantics of your program
; design
BTW What the JDK implementation is doing is very similar than what we have here However they use private API to really free the buffer when they cant or dont want to take it backhttphgopenjdkjavanetjdk7buildgatejdkfilea06412e13bf7srcshareclassessunniochUtiljava
; design
Thanks for the link I still think that a simpler solution as outlined above is good enough bang for the buck
; design
Still we need a potentially unlimited number of buffers What should we do with them if we dont need them any more if we dont let them be garbage collected
; general
Its a good question I can see a couple of different solutions1 We only create at most N direct bytebuffer these are the ones we pool outside of those buffers we only allocate normal ByteBuffers and these will be collected by Normal GC2 We only ever create direct ByteBuffers but they are always of the configured size we only pool N of those and let the JVM handle the collection of that native memoryI definitely want to avoid having our own freelists its just adding a crapload of liability without adding that much value ie we do not know if the JVM uses freelists for the malloc call also
; general
Regarding 1 that would certainly be possible My only complaint would be that this solution would increase workload when we run out of pooled buffers and start using heap buffers because when calling channelreadwrite the JDK will then use its own direct buffer pool and copy everything over If pool exhaustion can be seen as a sign of high load having to fallback to heap buffers could then further increase load Regarding 2 I dont understand what you mean with let the JVM handle the collection of that native memory Do you mean we have buffers that we dont pool but which will be garbage collected normally after use Taking bigsized buffers out of the picture it seems it seems to be almost what is already implemented hereWhats the difference between a pool and a freelistFYI I checked how garbage collection of direct buffers is done in openjdk 7 Some time after a direct buffer becomes eligible for garbage collection the referencehandler thread runs Cleaner code associated with a direct bufer which will then free the resources Seehttphgopenjdkjavanetjdk7buildgatejdkfilea06412e13bf7srcshareclassessunmiscCleanerjavaThe total size of memory allocated in direct buffers is limited by a flag When allocating a direct buffer the JDK checks first that this limit is not yet reached If it is reached it will run Systemgc before attempting to allocate a direct buffer which will free unreferenced direct buffers
; design
The difference between a pool and a freelist for me is that a freelist handles differently sized pooled itemsI suggest that all buffers will be allocated with the preconfigured size ie the one in the config file then we cap the pool size at a fixed number specified by the confWe shouldnt optimize depending on a specific JVM implementation because people use both older newer and different implementationsThoughts
; design
So the Cleaner code is present in JDK6 as well and relying on javalangrefReference and friends in some way or another to do cleaning is really the only way I cant imagine that any other  JVM does it to differentlyThat said I think that any pool that we have should be simple as viktorklang suggested The heuristics for what to pool of what size will be hard to configuretune It also needs to use SoftReference to not starve the JVM if we have a large pool that we stop using but still keep around
; general
I agree to not optimizing to a specific JVM implementation I would go with your proposed 2 solution Ie we have fixed size buffers from which we pool a fixed number and let everything above this fixed number be garbage collected by the JVM rightI cant really decide on SoftReferences I guess it would be the right thing to use them but I dont know how much overhead they bring over hard references
; design
If youre talking about access overhead then after optimization only one extra pointer dereference
; general
logdebugRequesting channel from  connection  comment applies to all log statements
; general
should the reconnection timeout be configurable
; general
I may be wrong but I dont think you need to bother with the if logisDebugEnabled if you use the more efficient logdebugReceived channel  channel
; general
logdebugApplying  registered callbacks on channel  registeredCallbackssize channel
; general
Move this to configuration  Reference the branch that I made  Its probably not perfect but will provide some idea on how to create an extension
; design
val channelFuture  connectionActor  CreateRandomNameChildchannelActorCreator mapTo manifestActorRef
; general
should avoid blocking here and just work with the future
; general
timeout should be configurable
; general
channelActor  ExecuteCallbackTocallback mapTo manifestT   though I havent used this pattern with a type param so my comment may be inappropriate
; general
Can you safely go to Disconnected if you swallowed an Exception above  Seems like you might get into a state of runaway connections
; general
stopping here for now running for coffee and hoping to enjoy some sunshine
; general
should be yes must have missed that
; general
I dont know if creating a string is as efficient as checking a boolean
; general
I tried to use the extension example you created already Will add these timeouts there too
; general
For as far as I know this exception can only happen if close is called while the connection is already closed in case of some other error happening on the sideI can build in an additional connectionisOpen check to be really sure in case of the exception
; general
The literal is interned no cost
; general
yeah but Stringformat is slow compared to the logging libs string formatting
; general
alternately it might fit in the connection properties if it is something that could vary with different connections
; general
Why does this exist
; general
So the underlying rabbitmq layer doesnt end up with a nonmeaningful poolxthready situation when we look it in ie JVisualVM
; general
the connection actor should probably be a child of a context rather than the system
; design
Should be a WordSpec with MustMatchers Or we do it in a seperate ticket all at once but it is probably better using the boyscout rule
; general
I would apply the boy scout rule when there are major changes not minor tweaks like this
; general
It will have to happen at some point before integrating wipcamel into akka master So add a ticket for changing all tests to WordSpec and MustMatchers or fix it at every pull request your choice I rather fix stuff when I see it to each his own
; general
I would have fixed it straight away but sbt build is fucked and also there are some significant changes in master  is gone so my local sbt build script which uses akka core snapshot doesnt work either
; general
If by sbt build is fucked you mean the jmxri and jdmk stuff then just install them locally from the link I sent until Patrik has fixed that If you mean something else then I dont know what you mean
; general
Did you merge wipcamel with latest master You could also work on top of wipcamel sort of isolated do all merges there then when all tickets are done rebase wipcamel on top of the master at that time fix it where needed and do a final pull request squashed as one commit with all the features in one commit message I dont use a published snapshot but just the sbt sub project akkacamel build so you are isolated at the point of wipcamel
; design
No I didnt merge itI just want to focus on tasks and dont want to be shaving the Yak if you know what I mean
; general
Ok if you really dont like shaving the Yak  pull akka sources from wipcamel use the AkkaBuild work in the sub project akkacamel and dont depend on snapshot binaries well that might include some Yak shaving I dont know your setup
; general
This would be exactly yak shavingThe big sbt script doesnt work with genidea either So for now Ill depend on defined snapshot from our last rebase to wipcamel and Ill use the big script to reformat the code before commits
; general
genidea sbtnoclassifiers works for me with mpeltonen plugin in my global sbt dirRaymond Roestenburgcode httpgithubcomRayRoestenburgblog httproestenburgagilesquadcomtwtr RayRoestenburgOn Jan 24 2012 at 1847 Piotr Gabryanczykreplyreplygithubcom wrote this would be exactly yak shaving so  The big sbt script doesnt work with genidea either So for now Ill depend on defined snapshot from our last rebase to wipcamel and Ill use the big script to reformat the code before commits    Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkacommit7e1899a22306e401e40c5621c59c9f926cd6e9a5commitcomment897076
; general
I meant genidea nosbtclassifiers BTWOn Tue Jan 24 2012 at 647 PM Piotr Gabryanczyk replyreplygithubcom wrote this would be exactly yak shaving so The big sbt script doesnt work with genidea either So for now Ill depend on defined snapshot from our last rebase to wipcamel and Ill use the big script to reformat the code before commits  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkacommit7e1899a22306e401e40c5621c59c9f926cd6e9a5commitcomment897076 Raymond Roestenburgcode httpgithubcomRayRoestenburgblog httproestenburgagilesquadcomtwtr RayRoestenburg
; general
I did that and ended up with massive project which I dont need and incorrect depsI dont fancy shaving the project and fixing deps every time something changes in the projectMultimodule setup simply sucks
; general
Strange I also got the big project but it loads quite quick on intellij11 and the deps work fine as well for what Ive seen and I compiletestin sbt and yeah I know its the standard it works on my machinecomment which doesnt helpThere is definitely some room for improvement in the IDE support andoverall performance of it but its a whole lot better than about a yearagoOn Tue Jan 24 2012 at 1026 PM Piotr Gabryanczyk replyreplygithubcom wrote I did that and ended up with massive project which I dont need and incorrect reps I dont fancy shaving the project and fixing deps every time something changes in the project Multimodule setup simply sucks  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkacommit7e1899a22306e401e40c5621c59c9f926cd6e9a5commitcomment897972 Raymond Roestenburgcode httpgithubcomRayRoestenburgblog httproestenburgagilesquadcomtwtr RayRoestenburg
; general
It might be the canary syndrome  the cannary thinks the life is good in the cage as it havent seen the life without the cage Check this file instead and do genideaname  tmpcamelversion  20scalaVersion  291resolvers  Typesafe Snapshots at httprepotypesafecomtypesafesnapshotsresolvers  Typesafe Repository at httprepotypesafecomtypesafereleaseslibraryDependencies  Seq  comtypesafeakka  akkaactor  2020120119000630  comtypesafeakka  akkaslf4j  2020120119000630  comtypesafeakka  akkatestkit  2020120119000630  test  orgapachecamel  camelcore  280  orgscalatest  scalatest  161  test  orgmockito  mockitocore  190  test junit  junit  410  testscalacOptions  Seqdeprecation unchecked XlintparallelExecution in Test  true
; general
20M3 is published
; general
piotrga hehe that might be true viktorklang cool
; general
Love reading your committquarrels kick some major Camel ass
; general
We use the callback to remove the Future from the Dispatchers registry so if a Future times out now its impossible to trigger that callback Ill make a ticket I know how to fix that
; general
Great catch also add a test for thatOn Apr 27 2011 836 PM derekjw replyreplygithubcomwrote We use the callback to remove the Future from the Dispatchers registryso if a Future times out now its impossible to trigger that callback Illmake a ticket I know how to fix that  Reply to this email directly or view it on GitHubhttpsgithubcomjbonerakkacommit800840719f54e67ce25e59ff7fc691ff6055e478commitcomment359627
; general
Cant we just keep an AtomicLong that we incr when we add a FutureInvocationto the executor and decr when the runmethod of the FutureInvocationrunhas been executedThen we dont need to generate an Uuid per FutureInvocation either wdyt2011427 iktor lang viktorklanggmailcom Great catch also add a test for that On Apr 27 2011 836 PM derekjw  replyreplygithubcom wrote  We use the callback to remove the Future from the Dispatchers registry so if a Future times out now its impossible to trigger that callback Ill make a ticket I know how to fix that     Reply to this email directly or view it on GitHub  httpsgithubcomjbonerakkacommit800840719f54e67ce25e59ff7fc691ff6055e478commitcomment359627 Viktor KlangDirector of Research and DevelopmentScalable Solutions httpwwwscalablesolutionsseCode   githubcomviktorklangFollow twittercomviktorklangRead   klangismtumblrcom
; general
Yes The uuid tracking was kept incase of needing to track or cancel anexecuting Future I also wanted to keep behavior as close to the originalspawn method in case of other functionality that I might not have beenaware of I can change it to an AtomicLong for sureI have become much more comfortable working in the Akka source since I wrotethis its kinda funny seeing how much I tip toed around inside thedispatcher codeOn Apr 27 2011 357 PM viktorklang replyreplygithubcomwrote Cant we just keep an AtomicLong that we incr when we add aFutureInvocation to the executor and decr when the runmethod of the FutureInvocationrun has been executed Then we dont need to generate an Uuid per FutureInvocation either wdyt 2011427 iktor lang viktorklanggmailcom Great catch also add a test for that On Apr 27 2011 836 PM derekjw  replyreplygithubcom wrote  We use the callback to remove the Future from the Dispatchersregistry so if a Future times out now its impossible to trigger that callbackIll make a ticket I know how to fix that     Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkacommit800840719f54e67ce25e59ff7fc691ff6055e478commitcomment359627  Viktor Klang Director of Research and Development Scalable Solutions httpwwwscalablesolutionsse Code githubcomviktorklang Follow twittercomviktorklang Read klangismtumblrcom  Reply to this email directly or view it on GitHubhttpsgithubcomjbonerakkacommit800840719f54e67ce25e59ff7fc691ff6055e478commitcomment359933
; general
On Thu Apr 28 2011 at 1212 AM derekjw replyreplygithubcomwrote Yes The uuid tracking was kept incase of needing to track or cancel an executing Future I also wanted to keep behavior as close to the original spawn method in case of other functionality that I might not have been aware of I can change it to an AtomicLong for sureCoolio send me a linky to the branch so I can review it before it goes intomainline I have become much more comfortable working in the Akka source since I wrote this its kinda funny seeing how much I tip toed around inside the dispatcher codeWell I think thats sensible messing up the dispatcher is probably theworst thing ThanksOn Apr 27 2011 357 PM viktorklang  replyreplygithubcom wrote  Cant we just keep an AtomicLong that we incr when we add a FutureInvocation  to the executor and decr when the runmethod of the FutureInvocationrun  has been executed   Then we dont need to generate an Uuid per FutureInvocation either wdyt   2011427 iktor lang viktorklanggmailcom   Great catch also add a test for that  On Apr 27 2011 836 PM derekjw   replyreplygithubcom  wrote   We use the callback to remove the Future from the Dispatchers registry  so if a Future times out now its impossible to trigger that callback Ill  make a ticket I know how to fix that        Reply to this email directly or view it on GitHub    httpsgithubcomjbonerakkacommit800840719f54e67ce25e59ff7fc691ff6055e478commitcomment359627        Viktor Klang  Director of Research and Development  Scalable Solutions httpwwwscalablesolutionsse   Code githubcomviktorklang  Follow twittercomviktorklang  Read klangismtumblrcom     Reply to this email directly or view it on GitHub  httpsgithubcomjbonerakkacommit800840719f54e67ce25e59ff7fc691ff6055e478commitcomment359933  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkacommit800840719f54e67ce25e59ff7fc691ff6055e478commitcomment359950 Viktor KlangDirector of Research and DevelopmentScalable Solutions httpwwwscalablesolutionsseCode   githubcomviktorklangFollow twittercomviktorklangRead   klangismtumblrcom
; general
isnt it possible to make it even shorter    actor       become         case hello  sender  hi
; design
I agree that this is a nice dream but this wont work because we need the new keyword in order to properly scope our implicits foremost self as the sender for  Thus the potential for making it even shorter is limited to a gain of two charaters if the traits name were a single letter
; general
Macro to the rescue
; general
Hmm now that you mention this it might be possible But Eugene said that macros implementing traits is even more experimental than macros are by themselves so maybe this can wait until Akka 22
; general
Yeah it can wait But it will not look that good to either have  2 ways of doing the same thing or  go through deprecation and removal of a feature introduced in the previous release
; general
I was thinking more along the lines of keeping it source compatible by changing actor to be a macro which will check whether its argument is actually a class definition and pass that on or the proposed thing above although I must say that in the latter case a lot more magic would be needed because eg no become is usually in scope so the code would not typecheck before being passed to the macro This is another reason why I would not want to rush things well have to see how macrobased APIs should be done
; design
Id still think it would be interesting to explore if it is not possible to get closer to Patriks syntax using macros
; general
Im curios have you actually seen this match
; general
why not use immutableSeq here as well
; general
building the varargs array is an overhead which was avoided in the old version I guess your reasons are aesthetic
; general
yes this was necessary
; general
If someone has something like that Im going to bail out early
; general
Sie sieht mir Rodeln
; general
Because its a 2N op instead of N
; general
youre a naughty one
; general
Buuuuuut we are not expecting huge Iterables here right
; general
not unless they are also Eaterable
; general
Why do we need 2 toplevel daemons can they exist without eachother
; general
Badass Who taught you this badass trick
; general
They have different responsibility lifecycle and deployment One is for gossiping between nodes the other for commands between nodes and user  node I guess I could create an empty dummy supervisor for them And then look them up with actorFor in the Node Not sure if it is worth it but do you want me to do that
; general
Because you didnt want me to use this method in ActorSystemImpl So I made the code dependent on ExtendedActorSystem and added this one
; general
Why HOCON allows you to not quote strings More slick IMO
; general
HOCON allows you to not quote strings More slick IMO
; general
HOCON allows you to not quote strings More slick IMO
; general
HOCON allows you to not quote strings More slick IMO
; general
I think we should use Duration as much as possible ie import akkautilduration10 milliseconds
; general
Use durationtickDuration  100ms
; general
Use DurationgetMillisecondsakkaschedulertickDuration MILLISECONDS
; general
Constructor of HashedWheelTimer should take Duration instead of value and unit parameters
; general
Totally agree with Patrik
; general
Cool Ill update the test trait and HWT constructorOn Tue Nov 22 2011 at 1611 viktorklang replyreplygithubcom wrote Totally agree with Patrik  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkacommitac03696d88bf76eae5c760582b29f37f180493decommitcomment738004
; general
This might be an important TODO Is it possible to grab the mailbox from the outside somehowIt would be nice with a callback in the mailbox that is invoked when the mailbox status has been changed to Closed then the mailbox could do its own cleanup Is that possible to add
; general
We already have a cleanUpMailboxFor in MessageDispatcher we could have that method invoke an beforeCleanup callback on MailboxYou fix
; general
That is good Ill add thatOn Mon Nov 14 2011 at 124 PM viktorklang replyreplygithubcom wrote We already have a cleanUpMailboxFor in MessageDispatcher we could have that method invoke an beforeCleanup callback on Mailbox You fix  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkacommit4aa1905ce30eee9915ebc0e6675058b81ebeac99commitcomment715396 Patrik NordwallTypesafe httptypesafecom  EnterpriseGrade Scala from the ExpertsTwitter patriknw
; general
Why do we need to reset the interruptedflag on the Thread running the test It should only be the threads of the Dispatcher that should get interrupted
; general
I have no logical explanation for itIt was a lets try this and see if it works which it did But you can runthe tests for yourself with and without the after method and see if it failson your machineI can spend time researching why but I guess that is not the best way tospend my timeOn Fri Jul 15 2011 at 1034 AM viktorklang replyreplygithubcomwrote Why do we need to reset the interruptedflag on the Thread running the test It should only be the threads of the Dispatcher that should get interrupted  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkacommitf93624e7e0ebb38c8ed351fbbd045ef1c4fbd207commitcomment478859
; general
Based on the stacktrace I concluded that the thread executing the test hadreceived an interrupt and therefor its interrupted status was set andtherefor it fails on the queueIf I disabled the interruped tests everything was alright If I enabledthem the other test started to fail So that was why the most logical placeto fix the problem was at the location of the interrupted testsBut again I have no idea how the interrupted flag was set on the testexecuting threadOn Fri Jul 15 2011 at 1042 AM Peter Veentjer alarmnummergmailcomwrote I have no logical explanation for it It was a lets try this and see if it works which it did But you can run the tests for yourself with and without the after method and see if it fails on your machine I can spend time researching why but I guess that is not the best way to spend my time On Fri Jul 15 2011 at 1034 AM viktorklang  replyreplygithubcomwrote Why do we need to reset the interruptedflag on the Thread running the test It should only be the threads of the Dispatcher that should get interrupted  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkacommitf93624e7e0ebb38c8ed351fbbd045ef1c4fbd207commitcomment478859
; general
Please note that some Serializers need type information regarding how to reify the Class you might want to use the same kind of approach as TypedActor httpsgithubcomakkaakkablobmasterakkaactorsrcmainscalaakkaactorTypedActorscalaL135
; design
You reply with an exception
; general
These still need to go
; general
I know havent thought of a nice solution yet
; design
Actually I want to have the calling future be completed with an exception Do I need to do that differently
; general
Any proposal or thoughts on this The acknack come in async from the rabbitmq broker so there needs to be some way of completing a previous constructed future for the caller
; general
case Leftexception  akkaactorStatusFailureexception
; general
Why not just have a child actor that handles that
; design
Sample project should be updated to sbt 012 like the rest of the akka build
; general
The one in this currently discussed commithttpsgithubcomakkaakkablobda78c3af0fd0e32b10c6cc54cfdce75dee8e0061akkasbtpluginsampleprojectbuildproperties
; general
Great thanks Pete
; general
I think we have some inconsistency in how we write those Settings classes I think making the Settings class itself final is most clear but here it might be intended to be able to subclass I dont know
; design
I dont think any of the two buys us anything What is the purpose of final in this context
; general
to not make it overridableI agree that it doesnt matter
; general
Agree ignore me
; general
should the ticket stay open until we have changed this whole test to be based on TestLatches for verifying actor creationtermination
; design
Dont know if thats possible since the test wants to test a previous value against a current value
; general
well we want to trigger creationtermination of children via the resizer and that should happen deterministically no
; general
Very Robertly done 1
; general
Why these vals  import ClusterSettings
; general
Very good 1
; general
Sure They can be removed But I wont do it in this pull request
; general
Good Thanks Great reviews
; general
Thx for this feature  well try to use it in akkacamel module
; general
a problem with what if there was a problem is not really clear
; general
Lol its an Awaitable its an abstraction for Futures its more clear but at this level all we can really say is that itll throw up if it tried something inedible
; general
Ok So we cant even say that it dies if there was a user problem of some sort
; general
No since it might not be usercode related at all Lets say youd have a ConnectionPool that returned AwaitableConnection so it could for instance create Connections asynchronously or reuse an existing one Now the user might not have done anything but Awaitresult throws a SQLException because the database went down or somesuch
; general
Sure Got it Thanks
; general
Youre welcome buddy thanks for questioning it
; general
Docs for DynamicVariable say that the value will follow any child threads created If this is true then it is not thread safe as then we would have multiple threads adding to the Stack That is why I went with ThreadLocal I didnt check the code to see exactly what it did though so I may have misunderstood
; general
On Fri Apr 29 2011 at 336 PM derekjw replyreplygithubcomwrote Docs for DynamicVariable say that the value will follow any child threads created If this is true then it is not thread safe as then we would have multiple threads adding to the Stack That is why I went with ThreadLocal I didnt check the code to see exactly what it did though so I may have misunderstoodAh ok good catch will change back to ThreadLocal   Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkacommit1fb228c06d5fdb67c22d59455357821f5a2290fbcommitcomment362511 Viktor KlangDirector of Research and DevelopmentScalable Solutions httpwwwscalablesolutionsseCode   githubcomviktorklangFollow twittercomviktorklangRead   klangismtumblrcom
; general
Everything else looks good
; general
GreatRunning tests as we speak
; general
Does this mean that it will start 16 threads on my notebook I think this should default to 01 or so unless your comment about it being multiplied by the number of cores is misleading
; general
No it will start 2 threads You need to separate FromFactor from Size
; general
what about this this seems to indicate up to 64 threads on my notebook Im talking about the comment to the right
; general
its a fixed size not a factor
; general
then the comment is misleading is all Im sayin
; general
Lol good point Can you push a fix
; general
will push tomorrow today is my official day off
; general
Np I just pushed a fixed version
; general
Job prvalidatorpercommit failed for 671ebf89 resultshttpsjenkinsakkaio8498jobprvalidatorpercommit81brTook 46 minbr to rebuild comment PLS REBUILDprvalidatorpercommit671ebf890931ae5ed72b5663d2b728754e449e7c on PR 1381
; general
RemoteNodeDeathWatchFast strikes again
; general
It will be my top priority tomorrow
; general
what you want to sell this
; general
LOL I maded it for u
; general
okay so we make extension loading fully implicit then
; general
That I have not changed Im still in the at load timecamp this patch does not change that
; general
yep looks good to me
; general
Then the scaladoc is misleading getting the thing loaded multiple times means calling registerExtension multiple times If you supply the wrong key youll get an exception instead
; general
My point wasclass F extends ExtensionIdSomethingnew Fsystemnew FsystemWill create 2 distinct extension instances of Something
; general
My opinion is that BOTH of them should throw an exception ExtensionIdapply should only work after having registered the extension Alternatively we could go completely the other way and remove loadExtensions completely instead relying only on JITregistration But that has the duplicate extension problem unless we take special care and Im not even sure what that means
; general
Or we have AOT and JIT Extensions AOT throw if not loaded at boot JIT always does createifabsent
; general
I dont agree that extensions must be defined in config ie loaded beforeuse I think on demand registration is very good especially for our builtin extensions To use an extension the user only needs to add the jardependency and dont care about adding special configurationOn Fri Nov 25 2011 at 1100 AM Roland Kuhn replyreplygithubcom wrote My opinion is that BOTH of them should throw an exception ExtensionIdapply should only work after having registered the extension Alternatively we could go completely the other way and remove loadExtensions completely instead relying only on JITregistration But that has the duplicate extension problem unless we take special care and Im not even sure what that means  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkacommit603a8ed034f0489cb1330e81d1159640b9432e16commitcomment745865 Patrik NordwallTypesafe httptypesafecom  EnterpriseGrade Scala from the ExpertsTwitter patriknw
; general
What is the difference Why not always do JIT but have the possibility todefine extensions in config to be initialized at startupAOT via config has a use case for extensions that starts some kind ofruntime service very much as our boot classesShould we merge the concept of boot classes and extensionsOn Fri Nov 25 2011 at 1105 AM viktorklang replyreplygithubcom wrote Or we have AOT and JIT Extensions AOT throw if not loaded at boot JIT always does createifabsent  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkacommit603a8ed034f0489cb1330e81d1159640b9432e16commitcomment745876 Patrik NordwallTypesafe httptypesafecom  EnterpriseGrade Scala from the ExpertsTwitter patriknw
; general
now THAT sounds very interesting
; general
Yes very good idea PatrikOpen a ticket
; general
toString is probably not the right thing to sort over given that ports 10000 do exist Id recommend something like    val addrs  Seq    addrssortBytheRealAddressSorterzipWithIndexforeach  case a i  membersiaddress must bea where theRealAddressSorter must be the algorithm actually applied within the clustering
; design
That could be supplied by a ClusterSpec base class as assertMembersaddrs or some such
; design
Sounds good Just used natural string sorting since that is what Riak does But they dont have port as part of the name but just a userprovided string Add a ticket to change Clusterscala You have to provide a default sorter though
; general
Ah okay didnt read that code Then the comparator was actually the right one
; general
On Fri May 25 2012 at 1027 AM Roland Kuhn replyreplygithubcom wrote Ah okay didnt read that code Then the comparator was actually the right onebut still wrong in the implementation   Reply to this email directly or view it on GitHub httpsgithubcomakkaakkacommit3aba8dc424e643f7085821729b19f93926bcae8dcommitcomment1375782 Patrik NordwallTypesafe httptypesafecom   The software stack for applications thatscaleTwitter patriknw
; design
Nice solution to the problem but shouldnt we be careful with introducing weak references I think they have a negative impact on stop the world time in CMS garbage collector
; design
Indeed there is another option and that is to keep the uuid and look it upin the registry each time but it will be slower and generate more garbagewhich is why that wasnt the first option WdytOn Jul 12 2011 724 AM patriknw replyreplygithubcomwrote Nice solution to the problem but shouldnt we be careful with introducingweak references I think they have a negative impact on stop the world timein CMS garbage collector  Reply to this email directly or view it on GitHubhttpsgithubcomjbonerakkacommitc8c12ab56b8303918e54c80713561a5b4f44a6cbcommitcomment472101
; design
That depends on how bad weak references are for the GC I dont knowProbably need to be benchmarked and may be dependent on the usageapplication If lookup by uuid is an option I think that is more safeIts only a lookup in ConcurrentHashMapOn Tue Jul 12 2011 at 811 AM viktorklang replyreplygithubcomwrote Indeed there is another option and that is to keep the uuid and look it up in the registry each time but it will be slower and generate more garbage which is why that wasnt the first option Wdyt On Jul 12 2011 724 AM patriknw  replyreplygithubcom wrote  Nice solution to the problem but shouldnt we be careful with introducing weak references I think they have a negative impact on stop the world time in CMS garbage collector     Reply to this email directly or view it on GitHub  httpsgithubcomjbonerakkacommitc8c12ab56b8303918e54c80713561a5b4f44a6cbcommitcomment472101  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkacommitc8c12ab56b8303918e54c80713561a5b4f44a6cbcommitcomment472153 Patrik NordwallTypesafe httptypesafecom  EnterpriseGrade Scala from the ExpertsTwitter patriknw
; design
I totally agree can you change that in release12 and master Viktor KlangAkka Tech LeadTypesafe httpwwwtypesafecom  EnterpriseGrade Scala from theExpertsTwitter viktorklang
; general
okOn Tue Jul 12 2011 at 853 AM viktorklang replyreplygithubcomwrote I totally agree can you change that in release12 and master  Viktor Klang Akka Tech Lead Typesafe httpwwwtypesafecom  EnterpriseGrade Scala from the Experts Twitter viktorklang  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkacommitc8c12ab56b8303918e54c80713561a5b4f44a6cbcommitcomment472216
; general
Perhaps that Im too stupid but I dont understand how the scheduler should be used in practice and how many instances you want to have In more traditional application if some kind of scheduler is needed no sharing is needed The service that needs it can create and manage it or the di container if that is usedSo it appears that this singleton scheduler serves some purpose but Im not sure which one And as a quick hack why not remove the lifecycle methods Just let it be there as a platform service like the gc or the system clock Something that is always up and running It isnt the best solution because it doesnt scale everyone using the same scheduler so more contention But at least you dont need to worry about shutdown
; design
On Tue Jul 12 2011 at 921 AM pveentjer replyreplygithubcomwrote Perhaps that Im too stupid but I dont understand how the scheduler should be used in practice and how many instances you want to have In more traditional application if some kind of scheduler is needed no sharing is needed The service that needs it can create and manage it or the di container if that is usedHave youve read the docs for it So it appears that this singleton scheduler serves some purpose but Im not sure which one And as a quick hack why not remove the lifecycle methods Just let it be there as a platform service like the gc or the system clock Something that is always up and running It isnt the best solution because it doesnt scale everyone using the same scheduler so more contention But at least you dont need to worry about shutdownYes this is exactly what Ive proposed the past 2 days on the akkadev ML
; design
What happens if the ActorRef becomes remote Maybe it is local whenscheduled but then has become remote when the task is executed I startedwith this ActorregistrylocalactorForuuid but that doesnt work for theabove scenario I guessOn Tue Jul 12 2011 at 926 AM viktorklang replyreplygithubcomwrote On Tue Jul 12 2011 at 921 AM pveentjer  replyreplygithubcomwrote  Perhaps that Im too stupid but I dont understand how the scheduler  should be used in practice and how many instances you want to have In more  traditional application if some kind of scheduler is needed no sharing is  needed The service that needs it can create and manage it or the di  container if that is used  Have youve read the docs for it   So it appears that this singleton scheduler serves some purpose but Im  not sure which one And as a quick hack why not remove the lifecycle  methods Just let it be there as a platform service like the gc or the  system clock Something that is always up and running It isnt the best  solution because it doesnt scale everyone using the same scheduler so  more contention But at least you dont need to worry about shutdown  Yes this is exactly what Ive proposed the past 2 days on the akkadev ML  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkacommitc8c12ab56b8303918e54c80713561a5b4f44a6cbcommitcomment472264 Patrik NordwallTypesafe httptypesafecom  EnterpriseGrade Scala from the ExpertsTwitter patriknw
; design
Yes I didI checked the docs from the Akka projecthttpakkaiodocsakka113commonschedulerhtmlAnd I have checked the documentation of the Scala sources themselvesBased on that information Im not able to derive much It appears to besomesystem service that always is available But it is more guessing andbackgroundknowledge than hard scienceOn Tue Jul 12 2011 at 1026 AM viktorklang replyreplygithubcomwrote On Tue Jul 12 2011 at 921 AM pveentjer  replyreplygithubcomwrote  Perhaps that Im too stupid but I dont understand how the scheduler  should be used in practice and how many instances you want to have In more  traditional application if some kind of scheduler is needed no sharing is  needed The service that needs it can create and manage it or the di  container if that is used  Have youve read the docs for it   So it appears that this singleton scheduler serves some purpose but Im  not sure which one And as a quick hack why not remove the lifecycle  methods Just let it be there as a platform service like the gc or the  system clock Something that is always up and running It isnt the best  solution because it doesnt scale everyone using the same scheduler so  more contention But at least you dont need to worry about shutdown  Yes this is exactly what Ive proposed the past 2 days on the akkadev ML  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkacommitc8c12ab56b8303918e54c80713561a5b4f44a6cbcommitcomment472264
; design
On Tue Jul 12 2011 at 931 AM patriknw replyreplygithubcomwrote What happens if the ActorRef becomes remoteIt cannot or did someone develop migration of LocalActorRefs Maybe it is local when scheduled but then has become remote when the task is executed I started with this ActorregistrylocalactorForuuid but that doesnt work for the above scenario I guessWould also not work with the weakrefs Viktor KlangAkka Tech LeadTypesafe httpwwwtypesafecom  EnterpriseGrade Scala from theExpertsTwitter viktorklang
; general
On Tue Jul 12 2011 at 939 AM viktorklang replyreplygithubcomwrote On Tue Jul 12 2011 at 931 AM patriknw  replyreplygithubcomwrote  What happens if the ActorRef becomes remote It cannot or did someone develop migration of LocalActorRefsOk I dont know much about the new clustering and thats why I was askingI thought a ActorRef could be used transparently even when the actor wasmoving around in the cluster  Maybe it is local when  scheduled but then has become remote when the task is executed I started  with this ActorregistrylocalactorForuuid but that doesnt work for  the  above scenario I guess Would also not work with the weakrefs   Viktor Klang Akka Tech Lead Typesafe httpwwwtypesafecom  EnterpriseGrade Scala from the Experts Twitter viktorklang  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkacommitc8c12ab56b8303918e54c80713561a5b4f44a6cbcommitcomment472288 Patrik NordwallTypesafe httptypesafecom  EnterpriseGrade Scala from the ExpertsTwitter patriknw
; design
Ok I dont know much about the new clustering and thats why I was asking I thought a ActorRef could be used transparently even when the actor was moving around in the clusterAlright that does not exist to my knowledge
; design
Afaik it is going to be possible to transparently move actors on thecluster in the future If the system sees for example that in a certain timeperiod 2 actors are talking a lot to each other the system could decide tobring them to a single jvm so you will have a better locality of referenceSo the system can dynamically move actors aroundThis needs quite some thought I think if we are also introducing the othertypes of routing like hash based routing since well moving an actor to adifferent partition would make the actor less cheap to findDoesnt exist yet but it is part of the futureOn Tue Jul 12 2011 at 1049 AM viktorklang replyreplygithubcomwrote  Ok I dont know much about the new clustering and thats why I was  asking  I thought a ActorRef could be used transparently even when the actor was  moving around in the cluster  Alright that does not exist to my knowledge   Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkacommitc8c12ab56b8303918e54c80713561a5b4f44a6cbcommitcomment472308
; design
Nice formatting change  Should switch to the FSMDocTest approach for UntypedActorDocTest wrt Before and After because that still leaks when tests fail
; general
Its not only formatting change It leaked I was surprised that it made a difference to initialize in Before compared to in constructor but it does and if you whould have added another test method it would have failed fatally since After is run after each test methodYes we should change UntypedActorDocTest but there is at least one place where it demonstrates how to create an ActorSystem so that must be taken in consideration
; general
Ouch so what is the ScalaTest equivalent of beforeAllafterAll Then we should probably use that And the one test which needs to do its special thing should just do so while adding try    finally  systemshutdown
; general
BeforeClassAfterClass We have used that in several places also
; general
YES that is very close to ideal only one stylistic nitpick I would prefer the  of the originexplaining comments to be aligned with the  so that the keys stick out more visually
; general
Can you notify Havoc of this he might not read all of our github commentsOn Dec 2 2011 at 1240 Roland Kuhnreplyreplygithubcom wrote YES that is very close to ideal only one stylistic nitpick I would prefer the  of the originexplaining comments to be aligned with the  so that the keys stick out more visually    Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkacommiteebe068aa5979b459ef8a8c356c39b4bd7f6b509commitcomment763671
; general
havocp what do you think
; general
Isnt requiring messages for the config opening the door to get unintentional errorsFor example the HWM must be set before connecting or binding the socket  when i then have code like thisscalaval socket  newSocketconfigsocket  HWM100Lsocket  Bindtcpdkkdk3394There are no guarantees that the message HWM will actually be processed before the Bind message unless you put the throughput of the dispatcher to 1I also have a question regarding the polling Because there is a pollReceiveTimeout set the zeromq poller will block the actor for that amount of time and then iterate once to block againHaving that poller in the same actor instead of in a future or a child actor doesnt that lead to messages you send to the socket actor are only processed once per pollcycle and with the amount of messages being processed per cycle not being larger than the throughput setting of the dispatcher
; design
The no guarantees sentence is not correct Akka does not guarantee delivery of any one message but in practice it cannot fail within the same JVM if you are sensible enough to configure the JVM to exit upon OutOfMemoryErrorBUT messages are never reordered and this does not depend on the throughput setting
; general
What order of messages are retained on a persender basis
; general
As far as I can tell HWM will be processed before Bind in your code
; general
Why do the check before and after send
; general
Its a performance optimization saving one stack trace and all that
; general
I think it might be premature since it will do 1 extra volatile read for each listener on every sendShould be rare that listeners die and its not good not to unregister when the  listener dies so I think the toll of an exception will be lowComment the first check out and leave a Uncomment me if this bottlenecks sounds like a fair compromise
; general
absolutely always keeping on learning
; general
Youre doing awesome work Im glad to have you on board
; general
Why at info level
; general
May I suggest using actor  die and then wait for the message to get processed
; design
Why the sleep here
; general
Why not val name1  actorNode1  identifyasString
; general
Same comment as above
; general
Why not using actor  die and then wait for it to be processed
; design
Id recommendsetaddactor  identifyasString
; general
Why the sleep here
; general
Why the sleep here
; general
recommend asString instead of getasInstanceOfString
; design
recommend asString instead of getasInstanceOfString
; design
Shouldnt we also assert that the total count is 1000
; general
See my comment for the other exactly the same code
; general
recommend asString instead of getasInstanceOfString
; design
Why the sleep here
; general
Why the sleep here
; general
recommend asString instead of getasInstanceOfString
; design
recommend asString instead of getasInstanceOfString
; design
He Viktor with a dying node that is not possible
; general
We need to make sure that the node is running long enough to be able to act as a cluster node  Else the node would shutdown immediately
; general
Will fix it
; general
He VIktor waiting for something to complete while a node is shutdown currently is not going to work since you get a shitload of exceptions
; general
Else the node shuts down before it should shut down
; general
Done although personally I dont like nested expressions so I keep the 2 step approach But  I have simplified the toString stuff
; general
Else the node shuts down before it should shut down
; general
I changed them all will not comments any more on this suggestion
; general
Good one Will add it
; general
Why You can set a 4 second timeout if you must
; general
Cant it wait for a ZK watch to complete or something
; general
This is a great start Patrik Nice work
; general
That timeout doesnt seem right
; general
Great that this was started
; general
we dont automatically have Timeout in scope so I think you should add    implicit val timout  Timeout5 secondsandor    implicit def timeout  contextsystemsettingsActorTimeout
; general
perhaps change this to myownlogsourcename
; general
thanks for the reminder will scrap the currently provided default argument which enables running without providing a Timeout instance
; general
Shouldnt this be included in the ticket as wellhttpsgithubcomjbonerakkablobmasterakkatestkitsrcmainscalaakkatestkitTestActorRefscalaL41
; general
Not sure Im not sure if the TestActorRef needs its own sense of equality
; general
We will probably have to rethink the TestActorRef a bit after the previous configuration changes and the upcoming supervision changes Ill keep an eye on it
; general
does it have to be AnyRef here and is that why you do VectorT  nr instead of using it as is
; general
Why abs if i is known to be negative
; general
I see its to make sure its a Vector
; general
But why Vector Couldnt it bee an Array too You index it with idx but that returns a value exactly in the range 0n1 so I dont see the need for a hash trie WDYT
; general
Looks cool I didnt know that ArraysbinarySearch has that nice feature
; general
So the reason for the Vector is that I had issues with toArray and ClassTags and the Java API having erased types It was a bit above my Scalafu level so I vent for thisIf somebody can turn it back into an Array in a nice way then please do so
; design
I can take a stab at that Will try something like    private val nodeHashRing ArrayInt nodeRing ArrayT         val nhr IndexedSeqInt nr IndexedSeqT  nodestoIndexedSeqsortBy1unzip       nhrtoArray nrtoArray
; design
Tried that Welcome to No ClassTag available for T
; general
yeah its definitely outside of my comfort zone also Correct me if there is a better way but adding this compiles fine without warnings also    class ConsistentHashT  Any ClassTag    private val nodeHashRing ArrayInt nodeRing ArrayT        val nhr SeqInt nr SeqT  nodestoSequnzip      nhrtoArray nrtoArray    I have reintroduced the SortedMap in the constructor to handle the sorting there instead No need to resort everything when adding single nodes
; design
Cool That was what I was looking for
; general
Cant you just write ConsistentHashT ClassTag
; general
yes thxI have committed the ClassTagfuIt was a bit nasty for the java case create but I have tried it out
; general
I think the comparison should be protocol agnostic We sort the node not the protocol it is looked up with
; general
We have said that the system should be enforced to be the same across a cluster But that is not done yet
; general
so what you say is that only host and port should be used and that makes sense because that is the unique thing
; general
Yes Host and Port
; general
Since were always and only pushing a function that will run notifyresthead why do we need this at all I mean its not closing over the current head at the time of the call to addToCallbacks
; general
We also need to decide if one failing throwing callback should abort the running of the other callbacks wdyt
; general
If I may interject in general I think that each callback should get its chance The exception does not make much sense in the context which is doing the notification so Id vote for swallowing and logging it
; general
Yeah the exception is caught in notify
; general
I prefer that exceptions not bring everything else down This is especially true now that all the callbacks are executed in one place a single exception could prevent a lot of other callbacks from getting executed
; general
It was getting late but I also had the idea of just creating a single function per Future Looks like you did this as well in your own changes
; general
Isnt the Scala style convention for constants ClusterPath
; general
I dont like that But I agree that all caps is ugly I rather go withclusterPath Most stuff are immutable vals anyway so constants loosemeaning in Scala Change it if you likeJonas BonrCTOTypesafe  EnterpriseGrade Scala from the ExpertsPhone 46 733 777 123Twitter jboner On Aug 28 2011 337 PM patriknw replyreplygithubcomwrote Isnt the Scala style convention for constants ClusterPath   Reply to this email directly or view it on GitHubhttpsgithubcomjbonerakkacommit4d317517932a162539602537b88d229c0ad6ed1fcommitcomment555913
; general
If it starts with capital letter you dont need to backtick it in patternmatchingOn Aug 28 2011 337 PM patriknw replyreplygithubcomwrote Isnt the Scala style convention for constants ClusterPath   Reply to this email directly or view it on GitHubhttpsgithubcomjbonerakkacommit4d317517932a162539602537b88d229c0ad6ed1fcommitcomment555913
; general
Ok If the general opinion is to go for ClusterPath then go for itJonas BonrCTOTypesafe  EnterpriseGrade Scala from the ExpertsPhone 46 733 777 123Twitter jboner On Aug 28 2011 644 PM viktorklang replyreplygithubcomwrote If it starts with capital letter you dont need to backtick it in pattern matching On Aug 28 2011 337 PM patriknw  replyreplygithubcom wrote Isnt the Scala style convention for constants ClusterPath   Reply to this email directly or view it on GitHubhttpsgithubcomjbonerakkacommit4d317517932a162539602537b88d229c0ad6ed1fcommitcomment555913  Reply to this email directly or view it on GitHubhttpsgithubcomjbonerakkacommit4d317517932a162539602537b88d229c0ad6ed1fcommitcomment556024
; general
Personally I dont care as long as we are consistent We should try to stickto style guide or document the deviation in Developer GuidelineOn Sun Aug 28 2011 at 718 PM jboner replyreplygithubcomwrote Ok If the general opinion is to go for ClusterPath then go for it  Jonas Bonr CTO Typesafe  EnterpriseGrade Scala from the Experts Phone 46 733 777 123 Twitter jboner  On Aug 28 2011 644 PM viktorklang  replyreplygithubcom wrote  If it starts with capital letter you dont need to backtick it in pattern  matching  On Aug 28 2011 337 PM patriknw   replyreplygithubcom  wrote  Isnt the Scala style convention for constants ClusterPath      Reply to this email directly or view it on GitHub   httpsgithubcomjbonerakkacommit4d317517932a162539602537b88d229c0ad6ed1fcommitcomment555913     Reply to this email directly or view it on GitHub  httpsgithubcomjbonerakkacommit4d317517932a162539602537b88d229c0ad6ed1fcommitcomment556024  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkacommit4d317517932a162539602537b88d229c0ad6ed1fcommitcomment556059 Patrik NordwallTypesafe httptypesafecom  EnterpriseGrade Scala from the ExpertsTwitter patriknw
; general
1  I think we should drop all caps for constants
; general
Where is ifNode defined What is its semantics
; general
Its the one method without ScalaDoc in MultiNodeSpec I have already created a ticket for improving its syntax has too many parentheses right now
; general
Thanks Ill look into it
; general
Should we implement this as a completeWith alternativedef completeWithfun   FutureBlah  try   this completeWith fun catch    case e Exception       EventHandlererrore this egetMessage      this completeWithException e Because I guess this is a rather common usecase
; general
Why is this cpsFutureAny and not cpsFutureA
; general
For some reason I cannot compile your branchI get thisinfo  akkaactortests  testcompile info   Source analysis 39 newmodified 0 indirectly invalidated 0 removedinfo Compiling test sourceserror UsersviktorklangDocumentsworkspaceakkaakkaakkaactortestssrctestscalaakkadispatchFutureSpecscala65 value  is not a member of Nothingerror     assertfuture1get  WORLDerror                        error UsersviktorklangDocumentsworkspaceakkaakkaakkaactortestssrctestscalaakkadispatchFutureSpecscala66 value  is not a member of Nothingerror     assertfuture2get  WORLDerror                        error UsersviktorklangDocumentsworkspaceakkaakkaakkaactortestssrctestscalaakkadispatchFutureSpecscala77 value  is not a member of Nothingerror     assertfuture1get  WORLDerror                        error three errors foundIve done clean cleanlib update reload testcompile
; general
Yeah forgot to commit the revert Ill get that up
; general
Because it most likely isnt a FutureA The simple answer is that its best to just ignore the annotations they are just there for the compiler plugin The return type is A and that is really what mattersThe how do I make this work hitting my head against the wall isnt helping answer is that all shifts contained within a reset must have the same annotation My first try at this actually used the suspendable annotation which is an alias of cpsUnit and is the most commonly used for this kind of thing HawtDispatch continuations use it The only reason why I had to switch is that there was no other way of failing fast or at all with a Future containing an Exception If an exception was thrown in the original code it was lost and the whole Futureflow block would time outAt the end of the day its best just to not think about it too much
; general
On the verification of transition I did find that throwing exceptions did help me catch a race condition under test  but I can also see the perspective that you should just ignore invalid transition attempts
; general
Definitely a better solution to the previous lockunlock approach
; design
Looking back at this is there a way to factor this call to notify listeners on enter out  Its common to all three states
; general
The semaphore is no longer here I see  I was using that to ensure that only the first call could be attempted while in halfopen state  This is part of Nygards design and is a differentiator from Closed state  If we want to diverge from that  thats fine as long as its not an oversight
; design
You have a race here
; general
is it ok if this fails
; general
is it ok if this fails
; general
case   callFails
; general
iffailureCountincrementAndGet  maxFailures tripBreaker
; general
Looks great Patrik  Since this is general purpose  does it belong in akkautil  Or does that introduce an unwanted dependency on akkadispatch
; general
In what way is this interesting
; general
This got brought over from my PR  I had included it so that the caller could get some idea when another attempt could succeed if they wanted to put in some kind of backoff logic or report something to the user  When creating custom exceptions I prefer to add context to help the catcher decide how to handle
; general
scullxbones this is one of the things that you can help with What do you think about passing in the from state as method parameter      if currentStatecompareAndSetfrom CircuitBreakerOpen        CircuitBreakerOpenenterAll these could delegate to a    def transitionfrom CircuitBreakerState to CircuitBreakerState
; general
yes as implemented here it should be ignoredEspecially transitions from Closed will happen more than once since several calls run at the same time and increase the failure count beyond threshold That can perhaps be prevented by using  maxFailuresscullxbones please think through the state transitions and see if we should not ignore false transition attempts
; general
You are right I missed that and I think it would be useful to have Please add it again Perhaps it is more lightweight to use an AtomicBoolean instead of Semaphore since there is only one permit
; general
My suggestion is to place it in akkapattern instead of akkautil since it is a higher level construct built on top of other things What do you think about that viktorklang
; general
On these callbacks I originally hadscaladef onOpencallback  Unit CircuitBreakerAnd changed them at Viktors request toscaladef onOpenTcallback  T CircuitBreakerShould I be bringing that forward again or was there a decision that wasnt needed  Being a callback the return type isnt used but not requiring Unit is a more flexible approach
; design
For the transitions I like the use of  maxFailures to make all consistent  Both resetBreaker and attemptReset are only called once per trip through  one by the scheduler attemptReset and the other by the guard only admitting a single thread into halfopens invoke call  Given the choice I do prefer the approach of failfast rather than having assumptions about concurrent behavior fail silently
; general
I changed from    def onOpenTfunc   T CircuitBreakerIts more convenient on caller side without Regarding T or Unit I have no strong opinion but I dont understand what benefit T would add for these
; general
Type inference with Unit can be an issue for partial functions so either use T or Any I prefer T though
; general
ok then there is a reason use T
; general
Job prvalidatorpercommit failed for 4ceb70c4 Took 46 min resultshttpsjenkinsakkaio8498jobprvalidatorpercommit691brbrTo retry exactly this commit if the failure was spurious comment PLS REBUILDprvalidatorpercommit4ceb70c4f7834ab27aae7d10833ecfcea9b08bc2 on PR 1699NOTE new commits are rebuilt automatically as they appear Theres no need to force a rebuild if youre updating the PR
; general
My understanding why this might work is the following 1 The version of a gossip itself cannot be lower than or be in conflict with any of the versions inside its seen table 2 A state with version is candidate for convergence if there are no other gossips and states circulating that are newer or in conflictSo if a state is candidate then we are only interested in tracking its own progress  we do not care exactly which earlier versions were seen by other nodes since those states wont converge anywayIf a state is not candidate then by point 1 it cannot contain information about the progress of the actual candidate if such state exists so its seen table will be of no use in case of merges anyway
; general
Do you have numbers how much we gain by this change space wise This seems to be significant
; general
SidenotePoint 1 can be proven inductively Let assume that all nodes have some state S with a seen table T satisfying 1 A versioned state can be updated in two ways  the node itself makes modifications from S resulting in S The version of this state vS dominates all versions in T since by the induction criterion vS  than every entry of T and vS  vS Also the T table only differs at one place from T  the nodes self entry  the node merges S and S into S and T and T into T Since vS  vS and vS  vS using the induction criterion 1 on S T S T it follows that vS is larger than any version in T or T and the only version that can be larger in T than the previous tables is the nodes self entryTherefore any valid update of a versioned state and its seen table keeps property 1 intactQED
; general
doesnt this potentially put back removed members into the seen Set previous mergeSeenTables had allowed members
; general
do we need this method at all
; general
I think this is a huge win Should be carefully tested repeat job
; general
I like this large red blob
; general
Agreed Is this trick known Potential blog post if correct
; general
No I havent checked any numbers yet but the seen table is probably the bulk of the message
; general
So we only merge the seen tables when the gossip versions are the same so that shouldnt really be an issue The fact that we needed to filter them out before was that we never cleared the seen table during version bumps
; design
Id recommend  foreach clusterrelease
; design
Is the None classloader appropriate here
; general
Shouldnt we add a ticket for that
; general
Qualify this with  Throwable so the intent is clearer
; general
Qualify this with  Throwable if its intended to cover even OOMEs etc
; general
I see transactionLogNode    id shouldnt this be made into a method so its easier to maintain
; general
He ViktorI dont know I just extracted some methods but I didnt do much on the inside
; general
We should ask jonas  Since it is his comment But I can make a ticket for it
; general
I can do that But I did not write this code just some cleanupYou are reviewing code of Jonas
; general
He ViktorA lot of comments are about code Jonas write I can clean it up bit imho not part of the ticket
; general
Boy scout rule
; general
I have no problem with the boy scout ruleBut I also try to limit the scope of the ticket I already did some cleaningto make it easier readableOn Sun Aug 7 2011 at 827 PM viktorklang replyreplygithubcomwrote Boy scout rule  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkacommitaaec3aef77d7780a006bcac0ce0d6de2db77e7b7commitcomment517981
; general
I always clean code up when I visit it its the only way to ensure that the codebases health is preserved thats the only reason I commented itMaintenance is an implicit cost for all tickets that involves touching code
; general
Are you complaining about my code Should my code be cleaned up That is not possible
; general
Im only limiting scope And I was not the one reviewing it you should look at somebody else On Tue Aug 9 2011 at 223 PM jboner replyreplygithubcomwrote Are you complaining about my code Should my code be cleaned up That is not possible   Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkacommitaaec3aef77d7780a006bcac0ce0d6de2db77e7b7commitcomment521297
; general
Lol There is no such thing as your code D There is only our code
; general
Sure Just my bad sense of humorJonas BonrCTOTypesafe  EnterpriseGrade Scala from the ExpertsPhone 46 733 777 123Twitter jboner On Aug 9 2011 127 PM viktorklang replyreplygithubcomwrote Lol There is no such thing as your code D There is only our code  Reply to this email directly or view it on GitHubhttpsgithubcomjbonerakkacommitaaec3aef77d7780a006bcac0ce0d6de2db77e7b7commitcomment521306
; general
I loled didnt I
; general
On Tue Aug 9 2011 at 139 PM viktorklang replyreplygithubcomwrote I loled didnt I You sure did  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkacommitaaec3aef77d7780a006bcac0ce0d6de2db77e7b7commitcomment521328 Jonas BonrCTOTypesafe httpwwwtypesafecom  EnterpriseGrade Scala fromthe ExpertsPhone 46 733 777 123Twitter jboner httptwittercomjbonerGoogle httpgplustojboner
; general
Great we can expand on this for M2
; general
Do you really have to specify user first Thought Roland removed that need Check with him Same in the Scala sample
; general
Theres no docs on actorFor here for Java
; general
I checked with Roland It is correct as is Thanks
; general
Yeah sure I just wanted to get something in for M1
; general
Yes we must have this for M1
; general
Id change this to To obtain an ActorRef to an Actor on a remote node
; design
Add a brief explanation of    akkaactorsystemnamehostnameportactor path
; general
actorFor is coming from where static import
; general
Good point I added that without any code Ill add the context
; general
Why not use the same sample actor address on the two examples to make it really clear Same actor This is how to look it up on local This is how to look it up on remote
; design
I added the oneliners because I wanted to save some time We should of course add better examples of how to use remoting in M2
; general
Sure But it takes 1 min to change it to the same address But skip it if you are tired
; general
No we really need those for M1 its otherwise pointless to add any docs about it at allJust add a quick example on local actorFor and remote actorFor you basically have all the code there already you just need to put it in a Scala file and import it into the docfile
; general
Arent these two examples enough  val actor  contextactorForserviceAretrieval  val actor  contextactorForakkaapp100012552userserviceAretrieval
; design
Yes just clarify the syntax of that URI in a note statement as I wrote earlier in this thread and all should be fine
; general
Yes Ive added that as well Ill push a new version and you can have a final look at it
; general
Great Thanks buddy
; general
Ok looks good Great work HenrikMerge with master and close pull request close the 2 associated tickets and call it a nightGreat work today
; general
Should we log the messages as well
; general
I was thinking about that and I didnt want an attacker to be able to flood the logs more than needed
; general
Good point In that sense it should perhaps even be possible to completely turn it off
; general
update isnt something you typically do with sbt 011
; general
According to Viktors checkstyle rules this should be  Unit
; general
For Java we have ActorSystemcreate
; general
I see no reason to have ActorSystem as static field here move it to calculate method
; design
same with this
; general
add plusOrMinus tolerance when comparing doubles
; general
Fair enough Dont want to upset Viktor and his checkstyle rules
; general
No Ive heard hes pretty badass
; general
It is used on line 116 to add actors
; general
use getContextactorOf if that does not work its a bug
; general
exactly the reason I wanted system to be out of scope
; general
It doesnt compile even You meant instead of using systemactorOf I suppose
; general
From within an UntypedActor you can use contextactorOf
; general
Add TODO FIXME 20
; general
long lines makes it very hard to read on GitHub
; general
Very good Extremely clean code A joy to read
; general
use mapTo for type coercions casting is cheaper though
; general
DemonstratePromise successful 3
; general
This isnt parallel if that should be the case
; general
Might be worth adding a  warning section on that
; general
Id probably use only Futures instead of mixing Futures and actors the mapTostuff seems cluttery
; general
Perhaps documentfailed the failed projection of a FutureonSuccess  foreachonFailurefilterPromisesuccessfulPromisefailed
; general
Might want to clarify why
; general
And what that means that you should avoid Await
; general
Perhaps clarify here that you should prefer PromisefailedPromisesuccessful for constants
; general
great work Patrik
; general
yes there is a description in the doc with example of mapTo but when blocking it makes more sense to do an ordinary cast
; general
It describes in the doc text that f1 has its original value even though map has been used of courseI can move that assert out of the doc map include tag if you dont like it
; design
I dont know how to do that or what you mean Can you elaborate with code
; general
That was all Promisesuccessful3
; general
Creates an already completed future with that valuePromisefailednew FooException creates a completed promise with that failure
; general
something likenote  The execution of futures a b and c are not done in parallel in above example
; general
Exactly because b is only evaluated once a is done etc
; general
ah its already described in the documentSomething to keep in mind when doing this is even though it looks like parts of the above example can run in parallel each step of the for comprehension is run sequentially
; general
I only converted the existing examples We can improve the samples later
; general
Created ticket 1537 for later
; general
I have removed that line because it is actually discussed more further down To that I have addedThe blocking operations are located in Awaitresult and Awaitready to make it easy to spot where blocking occurs
; general
greatAll done If so push and merge
; general
thanks then Ill push the minor things and mergeOn Thu Dec 15 2011 at 1111 PM viktorklang replyreplygithubcom wrote great All done If so push and merge  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkacommit3b6c3e28d3eabfdfa5c38071528f777834fa7306commitcomment799047 Patrik NordwallTypesafe httptypesafecom  EnterpriseGrade Scala from the ExpertsTwitter patriknw
; general
httpstackoverflowcomquestions2419410passingthisinjavaconstructorWe need to devise a correct solution DelayedInit
; design
delaying initialization does not solve the entangled structure it currently has the only clean solution is defining documenting and implementing a clean sequence where we probably will have to break up the ActorRefProviders initialization into constructor and init with the ability to start local system services like logging in between
; design
Or switch to first allocating the objects then call some initmethodclass AkkaApp   val remoting  new Remoting  val pigdog  new Pigdog  def start      remotingstartthis    pigdogstartthis
; general
I wonder why newRoutedActorRef was chosen when the established standard is actorOfHow is this used from JavaHow do I specify a custom Router implementationWhy does it return a RoutedActorRef leaking implementation detail
; design
Should probably use composition instead of inheritance to provide the Routerfunctionality otherwise CustomRouter will never work
; design
Should this class be public
; design
UnsupportedActorRef already implements ScalaActorRef why is it needed here as well
; design
This never forwards ask futures and doesnt give an error leading to silent breakage is this the intended behaviorWhy not propagate the channel to route
; general
Is this a public method intended for enduser usage
; design
Use the new impl of RemoteActorRef start that doesnt set it to Running if stopped
; general
What is the intended Java API for this
; design
Why doesnt this take a Channel to defer the semantics to the Router impl
; general
Same remark with Channel
; general
Shouldnt this use forward
; general
Are all exceptions to be regarded as Dead Actor
; general
Should direct never fail over
; general
Yeah good idea
; general
Why does this extend ScalaActorRef
; general
I like that you split up the routing tests very much needed Good job
; design
I wonder why newRoutedActorRef was chosen when the established standard is actorOfIt was based on the same naming used as in the akkaclusterRouting How is this used from JavaThe newRoutedActorRef cant be used from Java easily that is why I added the other method newRoundRobinActorRef How do I specify a custom Router implementationNot through these methods We already talked about that this morning and I suggested that the current design isnt very exensible for this reason But that is how it was modelled with the ClusterActorRef the new routing is based on It certainly isnt the way how I would have modelled it Why does it return a RoutedActorRef leaking implementation detailI think that RoutedActorRef is going to be a part of the API just like the LocalActorRef where you can do Router specific stuff on like addingremoving connections etcBut In Java I would have set this all up through interfaces or in Scala terms 100 abstract traits Currently the traits in Akka are not
; design
Should probably use composition instead of inheritance to provide the Routerfunctionality otherwise CustomRouter will never worThat is what we talked about this morning But to do a redesign on this part I do not consider a part of this already to big task But we both agree upon that the current approach is not very extensible friendly But this is the approach used in the ClusteredActorRef But a Akka developer that wants to provide a custom router can of course always do something like new RoutedActorRefactorAddress connections with CustomRouterif he wants to provide his own implementation
; design
Should this class be publicIf it should be part of the Api like the LocalActorRef or the RemoteActorRef it should But I dont like making abstract classes part of the API instead of interfaces  UnsupportedActorRef already implements ScalaActorRef why is it needed here as wellI forgot to remove the one in the routedactorref I had some problems with the self type if you remember and I fixed it by adding the scala ref but forget to remove it from the routed ref Will remove it
; design
This is how it is implemented in the ClusteredActorRef the design of the RoutedActorRef was based on
; design
I can remove that as well I added the ScalaActorRef to the UnsupportedActorRef and forgot to remove it from RoutedActorRef and ClusterActorRefWill fix that
; general
Currently they are But there is a ticket for the failover that also needs this question to be answeredSo when we are going to work on the failover we need to come up with a clear definition of failurehttpswwwassemblacomspacesakkatickets1064routedactorrefshouldbeabletodealwithfailover
; general
Ill write a ticket for itWhat should be done is the following when a actor fails that accessed by a direct router it will be reconstructed somewhere else because de events are stored and can be replayed TransactionLog Currently afaik there is no functionality for a failover of such an actor
; design
It was based on the same naming used as in the akkaclusterRoutingOk what do you think about proscons of having RoutingactorOf ActorRef The newRoutedActorRef cant be used from Java easily that is why I added the other method newRoundRobinActorRefCant that be solved with overloading RoutingactorOf to accept a javalangIterable Not through these methods We already talked about that this morning and I suggested that the current design isnt very exensible for this reason But that is how it was modelled with the ClusterActorRef the new routing is based on It certainly isnt the way how I would have modelled itHow much work do you estimate it to be to have a nontrait based impl I think that RoutedActorRef is going to be a part of the API just like the LocalActorRef where you can do Router specific stuff on like addingremoving connections etcIm still unsure if we should expose implementation details or not perhaps we should discuss it on the Akka team meeting on wednesday
; design
Ok open a ticket for fixing it so that ask works
; general
Even when it has a list of local actor refs
; design
I cannot comment on the actual effect of the config but now the lines are internally inconsistent Either its 5000 millis or 5 seconds
; general
These values use the time unit declared in the config So now its wrong
; general
These values use the time unit declared in the config So now its wrong
; general
Good observation Wrong of me FixedOn Tue Apr 12 2011 at 144 PM rkuhn replyreplygithubcomwrote I cannot comment on the actual effect of the config but now the lines are internally inconsistent Either its 5000 millis or 5 seconds  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkacommit03e5944bbe185e7c327a9a5916f5ed2928d0827dcommitcomment338721
; general
This line prevents the use of DurationInf in the following caseAwaitresultsomeActor  someMsg DurationInfsince Duration cant have its length seen
; general
Dont use inf
; general
AwaitresultsomeActor  someMsg DurationInf is perfectly fine what is not fine is passing an infinite implicit ask timeout because that would inhibit proper cleanup of the synthesized PromiseActorRef
; general
That solves the problem obviously But if the following is possiblesomeActor  someMsgTimeoutneverthat is a sendandreceivefuture that will never timeout the created actor waiting for the response will never timeout Its strange that the following only fails in the Await part not in the  partAwaitresultsomeActor  someMsgTimeoutnever DurationInfIm pretty sure that this is not a common case and this shouldnt be the way to use it maybe but in this case I know that eventually Ill get my answer back and I really dont want a timeout to occurPS Sorry for my missing parenthesis earlier
; design
Sorry my mistake My apologies Its as rkuhn says its the infinite Timeout on the ask that makes it fail Still my argument still stands Im sure that Ill get an answer back so I didnt want a timeout to occur And Im sorry for using this as discussion I was going to ask it in the mailing list
; general
In that case how sure are you that it will be within the year month day hour Then just set the timeout accordingly
; general
Since Akka doesnt guarantee delivery you do not know that therell be a reply so just put a decent timeout there
; general
Akka doesnt guarantee delivery but other abstractions can be built with it like the Uniform Reliable Broadcast from Introduction to Reliable and Secure Distributed Programming that guarantee delivery Besides in a local JVM its very unlikely to lose a messageI was referring to this as a conceptual thing I can actually put 1 year as a timeout since I know that it will take mere moments to get the reply but this breaks the eventually concept Eventually means that I will get it it can even be 10 years from now but Ill get it And I dont want to deal with timeouts just because of possible leaks and it wouldnt even be a leak I really want that created actor to wait until it gets a response
; design
If you dont want to deal with timeouts just define your own implicit Inf which is 1 year and then all is good
; general
If Timeout supports Infinity with Timeoutnever I dont see why I should make it look like its infinity Again I can but I was seeing this from a conceptual perspectiveFrom what Ive seen it would need just a few lines of code in object PromiseActorRef But I know that its never like thatIm sorry for all this It wasnt my intention I dont actually have a practical problem here I was merely trying to suggest an enhancement in my opinion
; design
Imho potential infinite leakage of memory and infinite blocking of threads is not an enhancement
; general
Fair enough But that should be the developers problem The documentation already states that it can be dangerous Dragons lie ahead should be enough to deter most unless they really know what theyre doing
; design
In my experience people will fall back to neverInf instead of thinking So offering them that will only harm them
; general
I have no argument against that one I only think thats how sometimes we end up harming those that do thinkThanks for indulging me in these comments I know you probably have a ton of work providing the best Akka you can Again thanks
; general
Youre very welcome thanks for the discussion one should always be prepared to explain why things are as they are
; general
I dont know about you guys but at least on my setup I get a nasty StackOverflowException after applying this patch Ive also tried removing my local ivy2 cache as well as doing a git clean n d xdebug         homekarimwakkaprojectAkkaBuildscaladebug         homekarimwakkaprojectPublishscaladebug         homekarimwakkaprojectUnidocscaladebug         Invalidated direct Setdebug Incrementally invalidated Setdebug Copy resource mappings debug javalangStackOverflowError        at scalacollectionimmutableListfoldRightListscala45        at scalacollectionLinearSeqOptimizedclassfoldRightLinearSeqOptimizedscala120
; general
Have youve downloaded the 0110 launcher
; general
Yes Ive downloaded this onehttptypesafeartifactoryonlinecomtypesafeivyreleasesorgscalatoolssbtsbtlaunch0110sbtlaunchjar
; general
Can you remove your projectplugins directory
; general
I assume that you mean projectsbt7plugins directory If so I still get a StackOverflowError
; general
No projectpluginsI have no idea about the problem youre experiencingAre you sure youre launching with sbt 011 launcher and you have cleanedout any potential residueYou could ask for input on the sbt mailinglistCheersV
; general
I did a fresh checkout removed sbt and ivy2 from my home and the problem persists The directory youre referencing does not existkarimdevelopmentwakka find name pluginsprojecttargetstreamscompiledefinedsbtpluginsprojectsbt7pluginsprojectpluginssbtakkatutorialsakkatutorialsecondprojectpluginsakkatutorialsakkatutorialfirstprojectplugins
; general
I also double checked that Im using sbt 0110
; general
Look at your sbt directory Try to remove the boot subdirectory as well as everything in the plugins subdirectory except for buildsbt
; general
So after removing sbt and ivy2 as well as doing the following  httppastebincomK8pqt6Li
; general
Removed m2You sure the merge went alrightCheers Viktor KlangAkka Tech LeadTypesafe httpwwwtypesafecom  EnterpriseGrade Scala from theExpertsTwitter viktorklang
; general
Now we are talking mateThis is the issue java jar homekarimbinsbtlaunchjarPlease take a look at the sbt website and create a suitable launch script Suitable means increasing heap and stack size
; general
viktorlangIts a fresh checkout so I assume that the merge went righthseebergerhttppastebincompfVL7DEh
; general
Dont you think that to deal with a stack overflow you should increase the stack size not only the heap size
; general
Increasing stack size should work    java Xss2M jar homekarimbinsbtlaunchjar
; general
Yeah thats it Thanks dudes
; general
IIRC Udp sockets can be reconnected and rebound later Is there a rationale for not supporting this
; general
How do you specify that a send is to be discarded if it cannot be sent right now Is the round trip to the selector here really necessary For UDP you usually expect sending on a besteffort basis Couldnt you remove the pending send altogether
; general
Do you check somewhere that the buffer is big enough to accommodate the complete message It seems you are throwing the rest of the message silently away here you usually dont have big UDP packets to avoid fragmentation but you can have UDP packets being 10ks in size and the buffer size may be lower than that
; general
Do you check somewhere that the buffer is big enough to accommodate the   complete messageHow is this possible All I could figure out from the API that it either  returns 0 for read or the complete size I would be happy to report that  it did not fit but I dont know how to do that
; design
Hmm It might make sense maybe we want a separate Reconnect message
; general
You can check the size of the buffer before ByteBuffercapacity or else copyToBuffer returns how many bytes were copied The question is how to react on this Since it isnt possible to split the data up like in the Tcp I would probably use ByteBufferallocateDirect to allocate a buffer big enough for that case or fail with a message that you need to configure bigger buffers
; general
Dude this is a total hackThere has to be another way
; general
He Viktorthe code isnt the prettiest but it deals with the ambiguity replication vsreplicationfactorOn Tue Jul 19 2011 at 1125 AM viktorklang replyreplygithubcomwrote Dude this is a total hack There has to be another way  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkacommit5635c9f76a5950d6231c40c3e705648d9a5f9158commitcomment484440
; general
But cant put it in Configuration That is a generic parser Put it inDeployer where the deployment parser isJonas BonrCTOTypesafe  EnterpriseGrade Scala from the ExpertsPhone 46 733 777 123Twitter jboner On Jul 19 2011 137 PM pveentjer replyreplygithubcomwrote He Viktor the code isnt the prettiest but it deals with the ambiguity replicationvs replicationfactor On Tue Jul 19 2011 at 1125 AM viktorklang  replyreplygithubcomwrote Dude this is a total hack There has to be another way  Reply to this email directly or view it on GitHubhttpsgithubcomjbonerakkacommit5635c9f76a5950d6231c40c3e705648d9a5f9158commitcomment484440  Reply to this email directly or view it on GitHubhttpsgithubcomjbonerakkacommit5635c9f76a5950d6231c40c3e705648d9a5f9158commitcomment484664
; general
Hi JonasIm currently looking at another solution that solves the problem moregenericallyOn Tue Jul 19 2011 at 259 PM jboner replyreplygithubcomwrote But cant put it in Configuration That is a generic parser Put it in Deployer where the deployment parser is  Jonas Bonr CTO Typesafe  EnterpriseGrade Scala from the Experts Phone 46 733 777 123 Twitter jboner  On Jul 19 2011 137 PM pveentjer  replyreplygithubcom wrote  He Viktor   the code isnt the prettiest but it deals with the ambiguity replication vs  replicationfactor   On Tue Jul 19 2011 at 1125 AM viktorklang   replyreplygithubcomwrote   Dude this is a total hack  There has to be another way     Reply to this email directly or view it on GitHub   httpsgithubcomjbonerakkacommit5635c9f76a5950d6231c40c3e705648d9a5f9158commitcomment484440      Reply to this email directly or view it on GitHub  httpsgithubcomjbonerakkacommit5635c9f76a5950d6231c40c3e705648d9a5f9158commitcomment484664  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkacommit5635c9f76a5950d6231c40c3e705648d9a5f9158commitcomment484686
; design
GreatJonas BonrCTOTypesafe  EnterpriseGrade Scala from the ExpertsPhone 46 733 777 123Twitter jboner On Jul 19 2011 208 PM pveentjer replyreplygithubcomwrote Hi Jonas Im currently looking at another solution that solves the problem more generically On Tue Jul 19 2011 at 259 PM jboner  replyreplygithubcomwrote But cant put it in Configuration That is a generic parser Put it in Deployer where the deployment parser is  Jonas Bonr CTO Typesafe  EnterpriseGrade Scala from the Experts Phone 46 733 777 123 Twitter jboner On Jul 19 2011 137 PM pveentjer  replyreplygithubcom wrote  He Viktor   the code isnt the prettiest but it deals with the ambiguityreplication vs  replicationfactor   On Tue Jul 19 2011 at 1125 AM viktorklang   replyreplygithubcomwrote   Dude this is a total hack  There has to be another way     Reply to this email directly or view it on GitHub  httpsgithubcomjbonerakkacommit5635c9f76a5950d6231c40c3e705648d9a5f9158commitcomment484440      Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkacommit5635c9f76a5950d6231c40c3e705648d9a5f9158commitcomment484664  Reply to this email directly or view it on GitHubhttpsgithubcomjbonerakkacommit5635c9f76a5950d6231c40c3e705648d9a5f9158commitcomment484686  Reply to this email directly or view it on GitHubhttpsgithubcomjbonerakkacommit5635c9f76a5950d6231c40c3e705648d9a5f9158commitcomment484695
; design
I think this is betterdef getSectionname String OptionConfiguration      val l  namelength  1    val m  mapcollect       case k v if kstartsWithname  ksubstringl v        if misEmpty None    else Somenew Configurationm  I have ran all the tests and they are fine If no one has an objection thenIll commit thisOn Tue Jul 19 2011 at 314 PM viktorklang replyreplygithubcomwrote Great thanks  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkacommit5635c9f76a5950d6231c40c3e705648d9a5f9158commitcomment484703
; general
Looks better for performance you might want to hoist name out of the guardval section  name  case k v if k startsWith section  k substring l v
; general
He viktorno problemOn Tue Jul 19 2011 at 356 PM viktorklang replyreplygithubcomwrote Looks better  for performance you might want to hoist name out of the guard val section  name   case k v if k startsWith section  k substring l v  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkacommit5635c9f76a5950d6231c40c3e705648d9a5f9158commitcomment484773
; general
coolio But wheres my ExtensionKeyT
; general
Whats the Java API for using it
; design
Yes but how do you declare it in the config file
; general
Should it use java here when there is no java mapped
; general
first youre reviewing a merge second java comes from referenceconf
; general
Will the message be received in application code in each traversed actor or handled by Akka under the hood Probably the latter Needs to be clarified
; design
Should we also provide a special Resolve message that will be handled completely under the hood and reply with ResolvedActorRef messages
; general
Why do we use nul instead of null I think null is more recognized in javascala community
; general
My implementation plan is to transform it into a Listlike data structure in actorFor and then handle this type of message automatically    case class Parentmsg Any extends AutoReceiveMessage    case class Childpattern String msg Any extends AutoReceiveMessage        actorFor  msg  self  ParentChild msg
; design
This would have to be tagged with the initial request and responses would come in onebyone But my feeling is that this is so little gain over just getting the replies that we should not put it into Akka itself Basically Resolve would be an implicit PingPong or EchoRequest
; general
because null has one character too many
; general
we could call it nil though
; general
Yes nul look like a typo to me Why the limit of 3On Mon Nov 21 2011 at 838 AM Roland Kuhn replyreplygithubcom wrote we could call it nil though  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkacommita2a09ec5a922c5a766472a054949cd83aba378cecommitcomment734183 Patrik NordwallTypesafe httptypesafecom  EnterpriseGrade Scala from the ExpertsTwitter patriknw
; general
General geekiness nul was on MSDOS what devnull is to Unix plus all toplevel directories in Unix have three characters
; general
There are other references as well like the bubble walker the dead letter etc
; general
Id say that the most canonical form is to bootstrap thought ActorSystemactorOf then expand using contextactorOf inside actors to form the supervision tree
; general
I think this is bad for the following reason1 watchunwatch need to work from the first moment2 Id expect to have the path resolved when I do actorFor not at some arbitrary potentially racy even later on
; general
Whats the benefit of doing it like that and what are the alternatives
; general
Way cool but this unresolved business gives me the creeps
; general
Yes but they are not intended for public consumption deadLetters is just a local actor reference
; design
Nothing in this is more or less racy than doing the lookup synchronously The reason for this approach is simple should actorFor block for potentially neverreturning network messagesThink of unresolved as reified query which you can send to This also means that you cannot meaningfully watchunwatch it Maybe the unresolved reference should be a supertype of ActorRef so that we can distinguish it on the type level
; design
The benefit is that it works at least I did not find any blockers while pondering different strategies I cannot think of any alternatives which have this property with the implicit requirement of not making our remoting layer a huge mess
; general
Yes I thought so  So what about making them explicitly special in the type system
; general
I should probably add a section about the orcreate part of actorFor My idea here is that an absolute lookup of a declared service will start it if not already done As we said all such services are supervised by a guardian and we can easily make a new one for this purpose just to keep the structure as clear as possible    akkahostportsrvconfiguredservice
; general
yes will expand that section I wrote this doc with reference to the writtenalreadyinmyheadbutnotyetdumped introduction to hierarchical actor systems
; design
Might be better to have something more uniform likeakkaappservicebIf hostport doesnt exist its local
; general
My evil plan was to maybe in the future offer an actor system registry so that you can initiate intersystem communication using these URIs hence the need to include the systems name
; design
The user shouldnt need to care or know about details of a ref an ActorRef is an ActorRef is an ActorRef
; general
Add the section with a TODO so it doesnt get overlooked
; general
All ActorRefs need to support watchunwatch otherwise its not transparent and all is lost
; general
And what are the performance implications
; general
So how would you get an ActorRef to something you look up
; general
Suggestionakkamysystemhostnameportappserviceb with remotingakkamysystemappserviceb without remoting
; general
Yes concerning sending to it and passing it around This section is background information for those who want to know more about the implementation Given this I will add a little note about the special oneoff refs
; design
will commit an update instead just want to wait until we settle on the same page
; general
Okay agreed Proposal    class ActorQuery         def msg Any           class ActorRef extends ActorQueryThen you can also pass queries around and reply to them etc Of course the docs will explain why ActorQuery cannot be a subclass of ActorRef
; design
Well obviously you route messages via different actors so there definitely is a nonnegligible cost You pay for the flexibility it represents
; general
Send it a message and watch out for replies then store away the respective sender references Patrik suggested an AutoReceiveMessage just for this purpose but since at least the replies need to be explicitly handled by the user I tend to think that typical use patterns will make this superfluous Why would you look something up if not intending to send it a message
; general
Well that was my point if including them is for enlightenment on how its implemented why settle for anything less than everything
; general
Really dislike the name ActorQuerytrait EndpointDestinationReceiver   def tell  def  Scala  def ask  Should be here  def  Scala
; general
Is this in the case where it represents an ActorRef or something else
; general
This is why DeathWatch needs to work for them
; general
Otherwise I have no way of finding out whether the endpoint is valid or not
; general
hostport is kinda tightly coupled with the Netty Transport layer We should open up the possibility that whatever goes after the  and the first subsequent slash is the identifier in the used remoting transport
; general
One important aspect is that actor paths never span multiple actor systems or JVMsI think this needs clarification
; design
The unresolvedendpoint actor ref is like a remote actor ref You dont know if there really is an actor on the other end Watchunwatch really need to be async everything is right For me this fits in with the general transparency idea and that actor refs should all be considered as distributed by default not locally known and resolved by default
; design
Sounds good but then it should be resolvedoptimized under the cover so that users dont need to do the resolve by reply msg themselves due to performance reasonsPatrik21 nov 2011 kl 2202 skrev Peter Vlugterreplyreplygithubcom The unresolvedendpoint actor ref is like a remote actor ref You dont know if there really is an actor on the other end Watchunwatch really need to be async everything is right For me this fits in with the general transparency idea and that actor refs should all be considered as distributed by default not locally known and resolved by default    Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkacommita2a09ec5a922c5a766472a054949cd83aba378cecommitcomment736015
; design
Yes I agree Optimised locally to a local actor ref and can be cached on remote nodes
; design
Hej good to see youre back I also had a little chat with Viktor a few hours ago and will try to weld all the ideas and requirements into v2 of this document tomorrow Then we should probably have a skype meeting about it
; general
If its an actor ref then it needs to fully be an actor ref that means that watchunwatch needs to work etc
; design
For sure Monitoring will need to work asynchronously for remote and cluster actor refs which is similar to unresolved local actor refs
; design
If I dowatchactorForsomePathI must get the Terminated message when its terminated or aTerminatedmessage if it doesnt exist otherwise it breaks the contract ofthe death watch
; general
You have remote which is more than three Id prefer null I think And why not call app user or usr instead
; general
Okay you are right either rmt which I dont like or go the full way    user    system    null    temp    remotePS usr stands for Unix system repository
; general
I like that Less cool but more clear Also like user more than app
; general
Should be user
; general
youre looking at an old commit
; general
On Tue Dec 6 2011 at 1141 AM Roland Kuhnreplyreplygithubcomwrote youre looking at an old commit Sounds good then  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkacommita2a09ec5a922c5a766472a054949cd83aba378cecommitcomment771972 Jonas BonrCTOTypesafe  EnterpriseGrade Scala from the ExpertsPhone 46 733 777 123Twitter jboner
; general
this code snippet doesnt make obvious sense what is bangIsInMyCustomMailbxI think the whole section is very internal implementation specific Why does the user have to care Things just work as expectedIt possibly belongs in scaladoc
; design
and same comment here
; general
You are right that it also belongs into the ScalaDoc will fix But it should be documented here as well because if you implement a custom mailbox and use it for toplevel actors then there will be an observable difference in semantics Ill try to make the code snippet more pseudo and more obvious
; general
ok I see
; general
Ill add a support for the rest of the socket options if this looks good enough
; general
Why not make it an ADTsealed trait 0MQSocketOptioncase class Lingervalue Int extends 0MQSocketOption
; design
Ok that will work when setting a socket option How about accessing one
; general
What is the usecase of accessing it
; general
sealed trait SocketOptionQuery    sealed trait SocketOption    case class Lingervalue Int extends SocketOption    object Linger extends SocketOptionQuery    def getOptionq SocketOptionQuery OptionSocketOption    def setOptiono SocketOption
; design
usecase may be if Linger is set to 0 I will affect TCPRESET if not it will be TCPCLOSE which may or may not be interesting to know before calling close I have not much of an idea about 0MQ yet this example is just for TCP stuff
; general
Viktor I am adding such support because the ZeroMQ API allows the user to do so ie if a user uses nondefault values for some socket options akka module should allow it Linger here is just for RFC
; design
Moving CallingThreadDispatcherModelSpecscala broke the build on my machine Does it still work on yours
; general
Oops that happens when doing just editorial changes I fixed it  me goes searching for brown paper bag
; general
This was the first time since v20 was merged into master that I tried compiling it so wasnt sure if it was a problem on my end or not I just have bad luck I guess  glad you were able to fix it
; general
I think Play Mini is a bad name But we should talk to Peter about that
; general
Why is this line hardcoded
; general
Excellent Great job
; general
I just wanted exactly that not the whole line as it also contains mapToIntasPromisemap  which could be confusing That meaning of that is explained  in a later section
; general
Before calling resume you might want to check that the   4 and   2 operations have not been performed ie that the suspension actually worked
; general
nmber  number
; general
new AtomicIntegerOffWhether 0 or Off should it be the same as the value you compareAndSet in the attach method
; general
This uses reftransformAndGet internally but you could just use refsingleupdate since you dont need to get the value to know what it was set to
; general
Id definitely prefer an ADT over magic value 1
; general
Same as above
; general
There still is an adt autoreplicationfactorySo that has not gone missing Only it provides the polymorphic propertyfactor that behaves the same as the previous existing function But if youwant that instead of the polymorphic property I can change it back So yoursayOn Tue Jul 19 2011 at 1128 AM viktorklang replyreplygithubcomwrote Id definitely prefer an ADT over magic value 1  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkacommita145e0773cafee3825eaece65065238dd15c4c68commitcomment484443
; general
I definitely prefer ADT over magic value
; general
Hi ViktorIll change it back I didnt know this was a recommended practice in ScalaOn Tue Jul 19 2011 at 312 PM viktorklang replyreplygithubcomwrote I definitely prefer ADT over magic value  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkacommita145e0773cafee3825eaece65065238dd15c4c68commitcomment484700
; general
second argument of getOrElse is byname which is why I used the empyMap withDefault
; general
puilding up the intermediate list just to add it to the map seems costly use same approach as add    cache  cache  changes       case ca c cs  caupdatedc cagetc match
; general
Realized I was being unclear about this earlier the main reason of caching this is due to the withDefault
; general
Ah now I see Cant use a default on the cache though Is it ok to just have a val outside the fold
; general
Havent had a chance to look at this yet but I am pretty sure I changed filter to Any  Boolean to make things easier when working with Actors although it is incorrect If the new Actor  method returns a FutureAny we should be able to change the test back to the way it was before and have a correct filter method
; design
Yes this might be a good reason to introduct ActorRef now already although the bulk of stuff from my queue will only travel towards master in a few weeks time as I first want to get 12 ready
; general
Problem is that if we go for FutureAny we need to provide some coercion from FutureAny to FutureT
; general
Yes definitely Among my additions is FutureasTManifest which will check conformance right away on the erasure only of course The previous asInstanceOfT approach removed type checks leading to possible errors far down the line but for the Java API that cant be helped
; design
But how can you do the conformancecheck if you dont add the Manifest tothe Future itself because without a value you have no reified type toconform to
; general
The one I have checks on the readside httpsgithubcomjbonerakkablobtestkit12akkaactorsrcmainscalaakkadispatchFuturescalaL348
; general
Requiring a manifest on every ActorCompletableFuture would probably be a major performance hit I was astonished to see the byte code it is always dynamically created instead of preallocated in the using class
; general
Problem is that its blockingRight now we have 3 blocking methods1 get2 await3 awaitatMostIdeally Id want to keep blocking as close to 0 as possible
; general
Have youve tried ClassManifest instead of Manifest
; general
My aim was to make the transition from actor  msgasString as painless as possible but I agree that a single blocking call would be more consistent Ideally Futureawait would be the only one and it would yield a different type AlreadyCompletedFuture for which asT would convert immediately while FutureasT would be my mapToTWill check out ClassManifest IIRC Manifest was what I tried some time ago
; design
This is already in place has exact same semantics as actor msgasString      Implicitly converts the given Future to a AnyOptionAsTypedOptionwhich offers the method codeasTcode    to convert an OptionAny to an OptionT    This means that the following code is equivalent      actor  fooasInt Deprecated      and      actor  fooasInt Recommended     implicit def futureToAnyOptionAsTypedOptionanyFuture Future  newAnyOptionAsTypedOption    try  anyFutureawait  catch  case t FutureTimeoutException      anyFutureresultOrException  Im not too much of a fan of FutureTimeoutException tho
; design
and I thought Id save one allocation by putting that method directly on the single class that you pimp it to BTW ClassManifest and Manifest generate very similar byte code   29  getstatic       51 Field scalareflectClassManifestMODULELscalareflectClassManifest   32  ldc     53 class scalacollectionimmutableList   34  getstatic       51 Field scalareflectClassManifestMODULELscalareflectClassManifest   37  ldc     34 class javalangString   39  invokevirtual   57 Method scalareflectClassManifestclassTypeLjavalangClassLscalareflectClassManifest   42  getstatic       32 Field scalaPredefMODULELscalaPredef   45  iconst0   46  anewarray       59 class scalareflectOptManifest   49  checkcast       38 class LjavalangObject   52  invokevirtual   42 Method scalaPredefwrapRefArrayLjavalangObjectLscalacollectionmutableWrappedArray   55  invokevirtual   62 Method scalareflectClassManifestclassTypeLjavalangClassLscalareflectOptManifestLscalacollectionSeqLscalareflectClassManifestSo two manifests one wrapped array allocated for ListString plus whatever else goes on inside the library Id think that all this could also be done by a static initializer
; design
Why did you remove the dispatcher
; general
Crap this was meant for wipprops only  Ill fix it
; general
Can this be backported in time for the akka 13 release pleaseWere having issues with objects getting into old gen when we need long timeouts just because the scheduler thread still holds on to the onTimeout runnable even though the future has long been completed
; general
Awesome thanks a lot
; general
When did we decide to use daemonic  on as defaultIt has consequences and Im not totally convinced of the benefits to have it default on
; general
We had a vote at the office today I won No but seriously I think we should have only 1 daemonicity flag not per dispatcher so either the ActorSystem runs as a service or it doesnt WDYT then we need to add ActorSystemjoin as well
; general
I agree with that we should have one daemonic flag and was going to suggest    akka       daemonic  off      actor         defaultdispatcher           daemonic  akkadaemonicBut we could also remove the daemonic config on the individual dispatcherschedulerremote things and only use akkadaemonic 1 for thatIf the default value should be on or off needs some discussion thoughSomehow I think the first impression when trying Akka is very important and that we dont have to explain to many things to be able to run the first HelloWorld This would be a fair attempt      object HelloWorld extends App       val system  ActorSystem      val a  systemactorOfPropsHelloWorld      a  hello        class HelloWorld extends Actor       def receive          case x  printlnx   world            This will not work hello world will most often not be printed We will have to explain thread related things in initial sample As first time user I would be more disappointed that my sample doesnt work at all than that the jvm doesnt exit automaticallyAlso it feels weird that we propagate nonblocking everywhere but the very first thing we need to explain is that you must block and spare one thread for keeping things aliveI think default should be daemonic  off The everything runs until systemshutdownIndependent of this I think it is a good idea to add the serverjoin method for the daeomic  on use case join is pretty well known but in akka we dont use it anywhere else so I think we should stick to more existing concepts systemawaitTerminationEven better would be to make system an Awaitable Awaitreadysystem 2 hoursThe result could be an exit status code nonzero indicates abnormal termination
; design
Great writeup PatrikOn Fri Jan 20 2012 at 0810 patriknw replyreplygithubcom wrote I agree with that we should have one daemonic flag and was going to suggest    akka       daemonic  off      actor         defaultdispatcher           daemonic  akkadaemonic But we could also remove the daemonic config on the individual dispatcherschedulerremote things and only use akkadaemonic 1 for that If the default value should be on or off needs some discussion though Somehow I think the first impression when trying Akka is very important and that we dont have to explain to many things to be able to run the first HelloWorld This would be a fair attempt    object HelloWorld extends App       val system  ActorSystem      val a  systemactorOfPropsHelloWorld      a  hello        class HelloWorld extends Actor       def receive          case x  printlnx   world           This will not work hello world will most often not be printed We will have to explain thread related things in initial sample As first time user I would be more disappointed that my sample doesnt work at all than that the jvm doesnt exit automatically I agree with that the first impression of Akka is really important and theHelloWorld example is a very good illustration of how beginners wouldexpect Akka to work Also it feels weird that we propagate nonblocking everywhere but the very first thing we need to explain is that you must block and spare one thread for keeping things alive I think default should be daemonic  off The everything runs until systemshutdown Independent of this I think it is a good idea to add the serverjoin method for the daeomic  on use case join is pretty well known but in akka we dont use it anywhere else so I think we should stick to more existing concepts systemawaitTermination Even better would be to make system an Awaitable Awaitreadysystem 2 hours The result could be an exit status code nonzero indicates abnormal terminationI really like this idea too  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkacommit03bc15feb11a4bed8bf2efa42dde2c87cef9d0afcommitcomment885011
; design
Thanks for this writeup completely agreed with all points But as usual one nitpick Awaitreadysystem  does not at all look like a shutdown to me so keep it simple and just stick with awaitTerminationtimeout
; general
Awaitreadysystem  is not shutdown instruction it is waiting for the system to complete shutdown but awaitTermination is probably even more self describing
; general
looks good now I only need to adapt that when I merge in my stop removal
; general
Doesnt new PropsWorkerclass work
; general
Since yesterday it does
; general
use duration 5 secondsreads better
; general
I dont thing we should place it in akka and I said why in the review of gracefulStop
; general
do we need to expose this in ActorRefProvider interface
; design
existing package is akkapatternwe normally dont use plural for package and class namesakkaactorakkadispatch
; design
This is doc spec must show what users need to do so some kind of import is needed
; general
ah crap forgot to boyscout
; general
not if we expose addTempPathremoveTempPath instead which would be more generic Will try it out
; design
sorry took this over from Nikolay without checking changed now
; general
no this is Scala doc so object Patterns is not needed import akkapatternask is done below in the docvisible part
; design
Add a log INFO here that a new scheduler is created and what needs to be changed to run on the same scheduler
; general
Instead of spreading this logic out may I suggest wrapping the systemscheduler on line 452 in a Scheduler with Closable and just not doing anything on close And then the type of the clusterScheduler can be Scheduler with Closable
; general
Thats interesting but wouldnt that mean that I need to create a wrapper class implementingdelegating 6 methods for the Scheduler Is that really better
; design
and also confusing because it looks like Im closing the default scheduler when reading the code in Clustershutdown which is something that absolutely shouldnt be done
; general
Yup but at least we dont need to remember to treat them differently in the code so whenif we only use one scheduler its only one place to remove it
; general
You shouldnt see the default scheduler in the Clustershutdown you should only see clusterScheduler which is semantically what you want to shut down
; general
I dont get that point compiler will help us if we remove the useDedicatedScheduler function
; general
Yes but useDedicatedScheduler is something that will be used on more than one place I prefer to keep conditional logic contained to as few places as possible and with minimal exposure to consumers
; general
Im doing the change now but I still it is a tradeoff that doesnt pay when the price is to duplicate the interface of the Scheduler to the delegating wrapper
; general
Thanks I appreciate and respect that you have and voice what you believe is right Keep up the great work youre doing some excellent work on the clustering
; general
Great commit message Very descriptive
; general
NAAT Voice of Borat
; general
Is verry niiice
; general
LOLOn Mon Dec 19 2011 at 337 PM viktorklangreplyreplygithubcomwrote Is verry niiice  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkacommit0f3a720f3e4974437b6e804eafa5487452cfcafecommitcomment806206 Jonas BonrCTOTypesafe  EnterpriseGrade Scala from the ExpertsPhone 46 733 777 123Twitter jboner
; general
How does this look from Java Have you thought about a Java API for Path
; design
Yes this is the one that will need a java method Could be child pathchildachildb
; general
Or toJonas BonrCTOTypesafe  EnterpriseGrade Scala from the ExpertsPhone 46 733 777 123Twitter jboner On Nov 10 2011 427 PM Peter Vlugter replyreplygithubcomwrote Yes this is the one that will need a java method Could be child pathchildachildb  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkacommit3f7cff141ddeaf3941da6e208312f8d78ade0012commitcomment708414
; general
This is epic
; general
Why call it preStartProcessor Why not something like preStartRecovery or preStartReplay or something with semantic meaning That is of course if the main purpose of it is to perform recoveryas the docs state
; general
I guess my point is why not have methods with good names and well defined semantic meaning rather than just blindly adopting the preXpostX scheme from Actor which are so generic just because it is only the user implementing them In this example just call the method recover or replay
; design
What happens if I call confirm on a message not delivered through a channel noop The destination actor cant and should not know if it receives messages through a channel or not right
; design
What happens if I call confirm on a message not delivered through a channel noopyes a noop The destination actor cant and should not know if it receives messages through a channel or not right the destination actor or any of its downstream actors is responsible for confirming messages delivered through a channel Therefore it must know
; design
Ok Is confirm used anywhere else If not why is it on the generic Persistent Have you thought about having a special ConfirmablePersistent or ChannelRoutedPersistent message or wrap it in an envelope with the confirm method or similar So it is clear what the intent is Just asking
; general
The processorspecific life cycle hooks are planned to be removed anyway as discussed at httpsgithubcomeligosourceakkacommit12f242ecc9fb69f10170d5658ffb6439558c0c95commitcomment4098360 and httpsgithubcomeligosourceakkacommitde19c60e03f03c24fcfb178a24d8c2c3a6e923d0commitcomment4110432Pull request is coming soon The recovery logic will then directly be in preStart and preRestart We still can factor the recovery logic out into separate overridable methods
; general
I like the idea with ConfirmablePersistent Need to think more about possible implications Added to my todo list
; general
Ok I think that could make sense preStartpreRestart are even less specific But there might be drawbacks
; general
why is this protectedthis its going to be public for Java and its not documented to be internal use only
; design
why is this protectedthis its going to be public for Java and its not documented to be internal use only
; design
Why a valif you want to keep the code noise down you can doimport thiscontextsystemsettingsconfig
; general
Ideally since these are per CamelExtension shouldnt they go into CamelExtension as camelsettings
; general
Shouldnt this be configurable
; general
Why do you need the system here If you only need the configuration shouldnt this take CamelSettings from the CamelExtension
; general
At this point I think that we can safely remove this line there is no code left from the original implementation right
; design
yeah thats very true
; general
move abstraction up to the previous line
; design
wohooo SPEED D
; general
Dont have time to read all of it
; general
A shame really as it is such a master piece
; general
These needs to go into the httpsgithubcomtypesafehubtypesafedocstreemastertutorials repo Can you do that later
; general
This is the nuclear bomb of gitland are you sure it is a good idea to provide it in this readytouse form It can only be applied locally anyway as published branches changing in this way would break all repos having a cloneI am pretty much in love with the immutability principle of git
; general
Might be dangerous in the wrong hands Feel free to remove itJonas BonrhttpscalablesolutionssehttpjonasbonercomhttpakkaiohttpletitcrashcomOn 5 Apr 2011 1900 rkuhn replyreplygithubcomwrote This is the nuclear bomb of gitland are you sure it is a good idea toprovide it in this readytouse form It can only be applied locally anywayas published branches changing in this way would break all repos having aclone I am pretty much in love with the immutability principle of git  Reply to this email directly or view it on GitHubhttpsgithubcomjbonerakkacommitb42417a2783d08ada468df81e34e89f5794b0413commitcomment330107
; design
Its nice but you are probably going to get similar feedback as with tryAll from Viktor on this It might be a general style thing in Akka If I were you I would preempt that and just use the java like try catch stuff that was in my review It might nog be the coolest but it is less code
; general
Its not about cool its about readability and using abstractionsI can stand doingtry x finally ybut    try       templatestart      catch        case e          try            contextstop          catch            case e  swallow so the offending exception is thrown                  throw e            Is beyond my threshold and it is not a good practice It is mixing the levels of abstractions in a methodWe need abstractions for this things the same way that we need abstractions for concurrency like actors instead of threadsWe could do things with threads queues etc but we choose to use actors instead How is it different for error handlingBTW connectotherwise block I actually took from akka examples so it is the same principle as already used within akka
; general
Also akka is full of usages of Either class which is another abstraction in my opinion too low level for error handlingWhat about Option classAll this are abstractions which people use to hide low level stuff It is just a matter of getting used to them and they will be as clean as trycatch which is a part of the language
; design
Im just saying what I would expect from the previous review I understand your point of view Ask Viktor what he thinks This is very generic stuff and of course you are now only using it here but it is something that needs to be accepted or not from a global perspectiveLets say I go along with your points redefining try with try can be confusing you might read passed it And I would rename DangerousStuff to something like TryExtensions or something like that who would want to import dangerous stuff is the inline really necessary
; design
Ive had a similar review a long time ago on the use of partial functions orElse But that was in a hot path in the remoting This of course is not
; general
Akka tests should always use WordSpec with MustMatchers
; general
Im not against a exceptionhandlingthing in akkautil but if it should be there it needs to be very lightweight ie verify inlining and preferrably 0 allocations
; general
In this case you might want to consider Scala ARM
; general
Ok From now onBut please dont ask me to rewrite the existing stuffIn the original camel module there was a mixture of everything so I assumed that as long as it is readable and part of ScalaTest it is allowed
; general
Existing stuff should be encompassed by the boyscout ruleA good intro to the developer guidelenes is in the docs httpakkaiodocsakka20M2devdeveloperguidelineshtml
; general
And the boyscout rule then means that I will probably rewrite it
; general
I read the developer guidelines some time ago and they didnt specify it must be MustMatchers and WordSpecI know that example is showing them but I didnt realise it is restricted to the two above Maybe its worth saying it explicitly to avoid late surprises
; general
Will look into it
; general
You think the example is ambiguous httpsgithubcomjbonerakkablobmasterakkaactortestssrctestscalaakkaticketTicket001Specscala
; general
We sould implement our own AtomicReference that has this operation by default
; general
Why not iterate over entrySet
; general
He Viktorfor the router changes the interface of the router needed to be changedanyway Instead of a mapClusterAddress ActorRef being returned byconnections a Iterable is now returned containing ActorRefsBut as soon as we are going to add failover and node addition then we needto have another very close look at the routersOn Thu Jul 28 2011 at 527 PM viktorklang replyreplygithubcomwrote Why not iterate over entrySet  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkacommit96cc0a00b42fe6d428c3791c7b596a7df334a678commitcomment501093
; design
Why the  at the end
; general
Open brace here is not needed
; general
Why case e Exception here and e Throwable in the route method below
; general
Not possible to do clusteredRef  Dieawait
; general
not possible to do clusteredRef  Dieawait
; general
why this section instead ofinterceptRoutingException   clusteredRef  Hello
; general
Iterating over the entry set is more complex since you do not have the InetSocketAddress by hand if you get the ActorRef entryThe InetSocketAddress is required for remove method
; general
Nope Since you will get shit load of exceptionsBut the waiting stuff sucks since it introduces phantom failures that are very hart to reproduce and also lead to an increase in build timeTherefor we need some kind of elementary waiting structures that are not using the clustering itself since that is the stuff that is being made unstable on purpose But have some kind of  nodegetProcessawait or somethingBut this is the same technique Jonas uses in his test so I concluded that they were good enough
; general
Call it a Java remainder  WIl fix it
; general
But now we cannot see the stacktrace on a remote machine
; general
This is no good This was the whole idea with AkkaException
; general
Pete can you fix this and also add a unit test that verifies that the serialized and reassembled instance has the correct toString with regards to the stacktrace
; general
Do you have a suggested fix If you have printStackTrace within toString you have an infinite loop as printStackTrace calls toString It would need to be a separate method Im completely surprised this has only just showed up
; general
Implement something like the ASF did for HarmonyhttpwwwdocjarcomhtmlapijavalangThrowablejavahtmlSee line 175 and forward
; general
Yes we need a separate method Either our own print stack trace or a separate toString method thats used by remoting I think parts of printStackTrace are private but we can copy the implementation over
; design
Right I think it would be worth fixing this Cant believe it has nothappened before This code have been running in releases for years sinceday one almost If you have time please fix it But prioritize it asnormal Ill open a ticketOn 5 April 2011 2230 pvlugter replyreplygithubcomwrote Yes we need a separate method Either our own print stack trace or a separate toString method thats used by remoting I think parts of printStackTrace are private but we can copy the implementation over  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkacommitbb55de44a45fe7df4b58ac8b41cd868750dd167ccommitcomment330449 Jonas BonrSpecialist at Largework httpscalablesolutionssecode httpakkaioblog httpjonasbonercomtwtr jboner
; design
Shouldnt this be a SecureRandom with a seed with a tad more entropy not an expert in the field of javaRandom
; general
Couldnt hurt Change that
; general
You can coalesce this ifcheck with the ones above
; general
isEmpty is probably preferred here since that is what youre testing
; general
Should probably include that it throws a bunch of exceptions
; general
Im not a huge fan of log and rethrow either swallow and log or just rethrow
; general
filterNot is generally preferred for removal operationsoldAvailableNodes filterNot failureDetectorisAvailable
; general
Nice stuff  Makes me remember some of the code I wrote for the JGroups clustering
; general
Very nice and clean and functional and immutable stuff
; general
Ill leave that to the excellent authors of this amazing feature
; general
LOL Ill do it Thanks
; general
Could change it Just that I already have the value size already calculated so I could use it instead of querying it again
; general
Yeah See previous comment Not sure what to do
; general
Yeah Or we dont throw these The question is what to do on Status  Failure and timeout
; general
Ah didnt know about that one Thanks
; general
LOL May it rest in peace
; general
and thanks a lot for the review
; general
In my experience Jenkins on our current slow box will manage to violate this We generally dont go below 300ms multiplied by the dilation factor of 5 and we still see spurious failures from time to time Yes thats 15sec
; general
Ok is the dilation automatically applied to all durations in tests or do I have to do something special
; general
Look for dilated which is pimped onto Duration by akkatestkitduration2TestDuration TestKit does it internally already for all maximum durations eg in within2 seconds
; general
Job prvalidatorpercommit failed for e58a661f resultshttpsjenkinsakkaio8498jobprvalidatorpercommit389brTook 5 minbr to rebuild comment PLS REBUILDprvalidatorpercommite58a661fe3e3b90185c85c132eb332537530175f on PR 1559
; general
Why 4 spaces indentation mixed with 2 Matters since it is part of docs IMHO No biggie but
; general
This line might be too long for PDF
; general
Loooooong line Makes it hard to read on GitHub
; general
Actually the first versions of Smalltalk was async But Alan Kay was convinced to change it Could be funworth mentioning that
; general
Nicer if you backtick the Java stuff in the text Props Same with other stuff belowe and above
; general
its Java it has 4 spaces
; general
I like the storystyle of writing
; general
No official release of Smalltalk was async right
; general
Unit in Scala but void in Java
; general
Ill write a greasmonkey script that solves that p
; general
Why not complete the sample with showing what to do with the Future
; general
Thats a part of the Future docs
; general
Nice Good job
; general
Yeah but you are mixing 2 and 4
; general
I dont know
; general
Good You have got the hang of the java coding
; general
Job prvalidatorpercommit failed for 61e47c11 Took 47 min resultshttpsjenkinsakkaio8498jobprvalidatorpercommit690brbrTo retry exactly this commit if the failure was spurious comment PLS REBUILDprvalidatorpercommit61e47c115da8cfbcb1c2abfda37752cb436fd7eb on PR 1699NOTE new commits are rebuilt automatically as they appear Theres no need to force a rebuild if youre updating the PR
; general
CommentComparison state can traverse in the following directions starting from Same Concurrent  Before  Same  After  Concurrent
; general
Yes Ill add that to the comments so things might be more readable
; general
CommentShort circuiting is available if  no full comparison requested only validation for a certain ordering ordering ne FullOrder  state Same has already violated see states and allowed transitions in my comment below and the requested ordering does not match with the current state then that state will be never reached again  NB checking for concurrent can only be done with FullOrder  otherwise this route is invalid
; general
probably rename parameter order to currentOrderState or similar
; general
btw is it not possible to immediately return here if order eq Concurrent That state will never change
; general
what if order eq Concurrent here Is it a problem If it is than you can guard against it by shortcircuiting before see previous comment
; general
Yes but we never loop around when order becomes Concurrent so it cant really be that here
; general
Ok I see shortcircuiting is inline just returning Concurrent and not recursing
; general
CommentSince Concurrent state is always immediately returned absorbing state the invariant of this method is that order is one of Same After Before
; general
I could not find any obvious mistakes
; general
shouldnt this be placed in object VectorClock
; design
shouldnt this be placed in object VectorClock
; design
what does this compare the node name hash
; general
I would see this commit running in a repeat job for a while and I would like that you add an extra runtime check in that test run that verifies that old and new impl of compareTo always returns the same result
; general
That is indeed a very good idea
; general
Sure Ill move it and the one below
; design
Yes its the node hash
; general
Or more to the point the Nodes
; general
ok I think I got confused because I forgot that they were located in a TreeMap
; general
This is the way to do it Scope it like this Great
; general
What is the benefit of having ConsistentHashable and consistentHashKey rather than the more generically usable Hashable and hashKey
; general
final class for all messages
; design
I think the method should be named withHashMapping or just withMapping since it is already scoped as a ConsistentHashingRouter
; general
Very good Thank you
; general
to make it very clear that this has nothing to do with hashCode
; general
not required  enough noise here anyway
; general
I think hashKey is clear enough
; general
ok withHashMappingwhat about the scala name consistentHashRouteshould I name that hashRouteIm not sure about Route I picked that because we already used Route for a very similar partial function in the routersIs hashMapping better there also
; general
It is best practice for immutable classes in Java I think we should be idiomatic in our samples httpwwwjavapracticescomtopicTopicActiondoId29
; general
Ok I will change for ConsistentHashableEnvelope and ConsistentHashMappingBut I will keep the verbose name in ConsistentHashable because if user is implementing ConsistentHashable they will typically have both hashCode and hashKey which will cause confusion
; general
I do think we should not prefix with consistent everywhere No need to constrain ourselves like that Where is consistentHashRoute Cant see it What does it do
; general
Change what The names have to match up
; general
httpsgithubcomakkaakkacommita4dd6b754754fbdd61e1fcfa76497664380985dfL2R72So I change to hashRoute or hashMapping
; general
hashMapping sounds good I think
; general
and all case classes should also be final alright I dont disagree with you so I change
; general
No    trait ConsistentHashable       def consistentHashKey Any        case class ConsistentHashableEnvelopemessage Any hashKey Any      extends ConsistentHashable with RouterEnvelope       override def consistentHashKey Any  hashKey    The reason once again is that implementation of ConsistentHashable goes into user code and hashKey is not unique enough to avoid confusion and also possible naming conflicts
; design
Ideally yes but I see now that we have not followed this practice before either so it is up to you
; general
Yeah Intuitive what it means
; general
hashMapping it will be
; general
ah sorry for the previous nitpick you fixed it already
; general
Looks like a job for inline
; general
Indeed the problem in my experience is that it silently fails Has that been fixed
; general
Paul seems to rely on it for the debug logging in the compiler Hed be the best guy to ping about the limitations
; general
Alright thanks for the heads up Ill talk to my colleague
; general
doesnt  do not
; general
I think a picture would be very helpful to explain the subtle differences between restart and recreation what is an incarnation and how does death watch fit into this
; general
yes lets create that and revise docs again when all related tickets have been fixed Ill create a separate ticket for it so its not forgotten
; general
no need to copy props for each x do it once only
; general
isnt that the same as xstoIndexedSeq
; general
Dont specify akkaconf use default ActorSystemPiSystem which will load applicationconf from classpath
; general
I like this withRouting in Props
; general
fixed by abstracting out into RouterConfigcreateRoutees
; general
changed to use breakOut
; general
Henrik changed it back to just defaults I kind of like to demonstrate that you should name things hence took in your suggestion
; general
Yes the system name should be there
; general
Ill keep the name when I wrap this one up later this evening
; general
viktorklang this line had been missing and caused the ActorLifeCycleSpec to fail consistently thank God
; general
Awesomely done Roland
; general
You can drop the braces if you want to
; general
Youre reversing them inplace NICE
; general
I promised no extra allocations remember
; general
I dont really enjoy logrethrow unless it actually serves a purpose could you add a comment here on why its doing logrethrow
; general
Good work roland
; general
Hmm primary reason was that it always did throw the new thing being that more messages have been dropped hence the logging This will probably be caught only in the ExecutorService interestingly enough we have a finally in run but happily throw up pun intended even rescheduling ourselves We should probably rethink that
; general
The reschedule is in the finally block no
; general
Yes which means that we reschedule in the face of an OOM ThreadDeath etc
; general
You should create a rst file out of this Not urgent but get back to that when you have time All docs should be reST Also have you linked to it from the docs Great job Henrik
; general
Ah it is a reST file But the file ending is missing
; general
No need for Tuple2
; general
No need for Tuple2
; general
Awesomeness Good job
; general
Ok Ill remove the Tuple2
; general
Removing callbyname will result in an allocation of the Event including a potential call to stringformat every invocation regardless if the logging level matches or not Id like to revert to callbyname for both notify methods
; general
For this method notifyevent Any there is no reason to use callbyname because there is no condition in the impl and it is evaluated directly anyway in notifyListenersHowever your point is valid for the other method notifyT  Event  ClassManifestevent  TI considered that but thought that the use case for it is very limited but sure we can put it back Callbyname parameters cant be used from Java so we need this event Event variant also and then we have the problem with overloaded methods will be considered to have same signatureI have done a fix for it please look at httpsgithubcomjbonerakkacommite8ee6b321a3e5ffff5615d9f37f802d19f4a4b2f
; general
You still have only one of them call by name Can you make both call bynameJonas BonrhttpscalablesolutionssehttpjonasbonercomhttpakkaiohttpletitcrashcomOn 7 Apr 2011 1251 patriknw replyreplygithubcomwrote For this method notifyevent Any there is no reason to use callbynamebecause there is no condition in the impl and it is evaluated directlyanyway in notifyListeners However your point is valid for the other method notifyT  Event ClassManifestevent  T I considered that but thought that the use case for it is very limitedbut sure we can put it back Callbyname parameters cant be used fromJava so we need this event Event variant also and then we have theproblem with overloaded methods will be considered to have same signature I have done a fix for it please look athttpsgithubcomjbonerakkacommite8ee6b321a3e5ffff5615d9f37f802d19f4a4b2f  Reply to this email directly or view it on GitHubhttpsgithubcomjbonerakkacommit35812951e2e2bb26a1d85b6830cf5a0ffae86946commitcomment332600
; general
It matters in both notify methods since notifyListeners is also call by nameso the event will not be evaluated if there are no listeners registeredIll look at the patchJonas BonrhttpscalablesolutionssehttpjonasbonercomhttpakkaiohttpletitcrashcomOn 7 Apr 2011 1251 patriknw replyreplygithubcomwrote For this method notifyevent Any there is no reason to use callbynamebecause there is no condition in the impl and it is evaluated directlyanyway in notifyListeners However your point is valid for the other method notifyT  Event ClassManifestevent  T I considered that but thought that the use case for it is very limitedbut sure we can put it back Callbyname parameters cant be used fromJava so we need this event Event variant also and then we have theproblem with overloaded methods will be considered to have same signature I have done a fix for it please look athttpsgithubcomjbonerakkacommite8ee6b321a3e5ffff5615d9f37f802d19f4a4b2f  Reply to this email directly or view it on GitHubhttpsgithubcomjbonerakkacommit35812951e2e2bb26a1d85b6830cf5a0ffae86946commitcomment332600
; general
I dont think it is necessary if you pass in an Any or something thatevaluates to Any it will use the methoddef notifyevent  Anydef notifyevent AnyThose have no conditional check of the level and will evaluate the functionimmediately anywayIt is problematic to adddef notifyevent  Anybecause of signature clash withdef notifyevent AnyPatrikOn Thu Apr 7 2011 at 117 PM jboner replyreplygithubcomwrote You still have only one of them call by name Can you make both call by name  Jonas Bonr httpscalablesolutionsse httpjonasbonercom httpakkaio httpletitcrashcom On 7 Apr 2011 1251 patriknw  replyreplygithubcom wrote  For this method notifyevent Any there is no reason to use callbyname because there is no condition in the impl and it is evaluated directly anyway in notifyListeners  However your point is valid for the other method notifyT  Event  ClassManifestevent  T  I considered that but thought that the use case for it is very limited but sure we can put it back Callbyname parameters cant be used from Java so we need this event Event variant also and then we have the problem with overloaded methods will be considered to have same signature   I have done a fix for it please look at httpsgithubcomjbonerakkacommite8ee6b321a3e5ffff5615d9f37f802d19f4a4b2f     Reply to this email directly or view it on GitHub  httpsgithubcomjbonerakkacommit35812951e2e2bb26a1d85b6830cf5a0ffae86946commitcomment332600  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkacommit35812951e2e2bb26a1d85b6830cf5a0ffae86946commitcomment332613
; general
But a system without listeners isnt a realityTherefore I actually changed it tonotifyListenersmessage AnyCorrect me if Im wrong but if the parameter is not a function there is anoverhead of using callbyname since the parameter will be wrapped in afunction0 object That will always be the case for JavaPatrikOn Thu Apr 7 2011 at 117 PM jboner replyreplygithubcomwrote It matters in both notify methods since notifyListeners is also call by name so the event will not be evaluated if there are no listeners registered Ill look at the patch  Jonas Bonr httpscalablesolutionsse httpjonasbonercom httpakkaio httpletitcrashcom On 7 Apr 2011 1251 patriknw  replyreplygithubcom wrote  For this method notifyevent Any there is no reason to use callbyname because there is no condition in the impl and it is evaluated directly anyway in notifyListeners  However your point is valid for the other method notifyT  Event  ClassManifestevent  T  I considered that but thought that the use case for it is very limited but sure we can put it back Callbyname parameters cant be used from Java so we need this event Event variant also and then we have the problem with overloaded methods will be considered to have same signature   I have done a fix for it please look at httpsgithubcomjbonerakkacommite8ee6b321a3e5ffff5615d9f37f802d19f4a4b2f     Reply to this email directly or view it on GitHub  httpsgithubcomjbonerakkacommit35812951e2e2bb26a1d85b6830cf5a0ffae86946commitcomment332600  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkacommit35812951e2e2bb26a1d85b6830cf5a0ffae86946commitcomment332614
; design
Im fine with the EventHandler change but you cant change thenotifyListeners method in ListenerManagementIt is used for much more than EventHandler I must be callbynamePlease change that backOn 7 April 2011 1330 patriknw replyreplygithubcomwrote But a system without listeners isnt a reality Therefore I actually changed it to notifyListenersmessage Any Correct me if Im wrong but if the parameter is not a function there is an overhead of using callbyname since the parameter will be wrapped in a function0 object That will always be the case for Java
; design
Ok I will change it back no problem Thanks for reviewPatrik7 apr 2011 kl 2126 skrev jbonerreplyreplygithubcom Im fine with the EventHandler change but you cant change the notifyListeners method in ListenerManagement It is used for much more than EventHandler I must be callbyname Please change that back  On 7 April 2011 1330 patriknw  replyreplygithubcomwrote  But a system without listeners isnt a reality Therefore I actually changed it to notifyListenersmessage Any  Correct me if Im wrong but if the parameter is not a function there is an overhead of using callbyname since the parameter will be wrapped in a function0 object That will always be the case for Java    Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkacommit35812951e2e2bb26a1d85b6830cf5a0ffae86946commitcomment333266
; design
Great Thanks a lotJonas BonrhttpscalablesolutionssehttpjonasbonercomhttpakkaiohttpletitcrashcomOn 7 Apr 2011 2136 patriknw replyreplygithubcomwrote Ok I will change it back no problem Thanks for review Patrik 7 apr 2011 kl 2126 skrev jbonerreplyreplygithubcom Im fine with the EventHandler change but you cant change the notifyListeners method in ListenerManagement It is used for much more than EventHandler I must be callbyname Please change that back On 7 April 2011 1330 patriknw  replyreplygithubcomwrote But a system without listeners isnt a reality Therefore I actually changed it to notifyListenersmessage Any Correct me if Im wrong but if the parameter is not a function there isan overhead of using callbyname since the parameter will be wrapped in a function0 object That will always be the case for Java  Reply to this email directly or view it on GitHubhttpsgithubcomjbonerakkacommit35812951e2e2bb26a1d85b6830cf5a0ffae86946commitcomment333266  Reply to this email directly or view it on GitHubhttpsgithubcomjbonerakkacommit35812951e2e2bb26a1d85b6830cf5a0ffae86946commitcomment333279
; design
Wicked dawg Could you sprinkle some ScalaDoc on that
; general
Great work Henrik
; general
Sauce coming straight upOn Wed Nov 23 2011 at 1114 viktorklang replyreplygithubcom wrote ScalaDoc sauce   Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkacommit7ca5a4161bb279d94dc1de1750cdfb966ca39151commitcomment740752
; general
You can make this more readable by using the implicit conversion available inimport akkautildurationThen you can write 50 milliseconds instead of Duration50 TimeUnitMILLISECONDS
; general
picky please dont use  when its not side effecting ie durationtoMillis
; general
wrong comment it is up to the user to decide unit it doesnt have to be millisecondsdescribe what a tick is instead
; general
Timeout is already a wrapped Duration so you should do tduration instead of creating new Duration
; general
Nice I love durations
; general
Is there anyway we can read 100ms or 30ns into a duration directly Right now I use thisval SchedulerTickDuration  DurationgetMillisecondsakkaschedulertickDuration TimeUnitMILLISECONDSThats the reason why I added the comment above
; general
This is a Java class so I guess its okay
; design
That is correct way of doing it If user specifiestickDuration  1syou will end up with SchedulerTickDuration  1000 milliseconds
; general
ah  sorry
; general
Cool Thx Ill remove the comment
; general
Did you add a bunch of binary files filebasedmailboxuserX
; general
Ah you removed them
; general
Yes for some douchy reason they are not excluded in the gitignore
; general
why break user code with this visibility change
; general
Having it protected doesnt provide any protection anyway thats what the ActorRef is for Also its needed to get the receiveblock out of the Actor instand and into the ActorCell the alternative would be to do contextbecomereceive in the Actor but that would complect the ActorCel code so if we can get away with this itd be preferrable
; design
wouldnt protected akkaactor solve the access issue without forcing user code to change
; design
protectedakkaactor would be public to Java and that would be a change from protected to public
; design
this nukes any usercreated stack from the constructor better use a Deque which initially holds a placeholder and switch that out under the other elements after newActor
; general
Awesome Great set of instructions
; general
Thanks I needed to spare the next poor schmuck from deciphering a late night chat transcript between you and Viktor
; design
You have our eternal gratitude
; general
Awesomely done Bjrn
; general
Fixed bug in FaultHandling and impoved the SupervisorHierarchySpec stress tests according to Rolands suggestions All tests green for me
; general
There is one thing I personally dislike the elevation of Failed into an Envelope and storing it in currentMessage Maybe there is a cleaner way
; general
Well there is a ticket for making Failed into a SystemMessage
; general
This is that ticket  This commit is my fix of Rolands branch But there is a hack where we behave like a Failed was received like a user message
; general
The fix in SupervisorHierarchySpec could be related to the elusive race in httpswwwassemblacomspacesakkatickets3037
; general
Would it make sense to encode the states as bits so you could dostatus  Suspendedstatus  Scheduledetc
; general
NiceIm a bit worried about the performance though since this will really be in the hot pathWith all those matches I suspect the JIT will have a hard time inlining this method thoughts
; general
Yes this is important
; general
Overall Great workIm a bit worried about performance though having everything encoded in one field means that the contention on the cacheline that holds the status will be greatly increased Also the inlineability of become is questionableWe should look into thisThanks for the hard work Roland
; general
Its not really in the hot path only registersuspendresume but I can also split it into three separate methods to get rid of the outer match and the inner match would go away by more cleverly encoding the bits as you suggest above Will investigate
; general
okay so Ill remove the TODO and vagueness from the comment
; general
We should measure performance instead of guessing  But FWIW my guess is that the Scheduled state changes by far outnumber suspendresume which means that this solution should have similar contention compared to the old dispatcherLock itself
; design
Can you add these to multijvm tests also
; general
Had to change our custom reporter slightly but now its done
; general
thanks very useful
; general
This will do a lookup in the systeminternal map for every invocation is this intentional
; general
changed to val
; general
It was simpler to get the existing tests to run that use mockito but I fixed it now not lazy anymore Not a big fan of mocking frameworks btw
; general
Personally I never use them
; general
Be careful though since there can be initialization ordering issues depending on mixin ordering
; general
You can replace all the latch actor etc by just sening the scheduled actor to the testActor and then do expectMsgtimeoutmsg
; design
We should consider having the TimerTasks just execute the runnables inside the main dispatcher in that way a blocking TimerTask wont mess up the Scheduler
; general
I think if   else  is the commonly used for on boolean patternmatch
; general
timeout is not a val and as such it is not safely published Make it a val
; general
On my system its py27 Can we use this    LOCALPACKAGESakkastylesegg
; general
or change it to LOCALPACKAGES as I am not sure how the asterisk would be interpreted in that location especially if nothing exists
; general
Sure Just LOCALPACKAGES sounds good
; general
So how can I use it now
; general
read akkadev or try startSystem in the REPL
; general
Got it Works like a charm
; general
in java it should be Classor just write Class everywhere
; design
above comment was meant for the java file of course
; general
in java I think it is systemeventStream
; general
yes good catch will fix
; general
yeah you could add new stuff like 1 second sleep easily now
; general
object later    implicit object laterConvert extends Classifierlatertype       type R  Later      class Laterd Duration         def applyf  Unit              def convertd Duration  new Laterd        10 seconds later       checkIt
; design
I like it I like it a lot
; general
I dont think now should be public Its not a real Duration
; design
It would make more sense to make it a Deadline instead and add  and  on that I instinctively did not do that because of the extra allocations but we are talking about a testing DSL here with views and type classes so I guess I need to readjust into nonparanoid mode when writing stuff like this
; general
DRY Move sender   out of every case
; design
While this is clearly badass I think we can do without it
; general
You dont say Bonus points for explaining why this can never ever be printed Hint youll have to read the mq sources which I have not done yet
; general
It never goes into poll timeout
; general
I dont understand the semantics of this method
; general
Should we really create an empty frame
; general
receive one message which may consist of several parts mq docs say that delivery of multipart message is allornothing which is why the ContinuePoll never happens at least Ive never seen it happen shall I remove it
; general
abused as poor mans option
; general
thats what the previous code did and I think empty frames can actually be transferred so yes we should
; general
Document with ScalaDoc and Java API
; general
Why not use your onestopshop here
; general
Quite the busy bee Mr Rocketscientist
; general
you mean on the secondary constructor in addition to on the class
; general
look at line 227
; general
Ah I thought it was you dont need to split Id and Extension into two
; general
this will make tests hang instead of fail because now it waits for an unbounded period of time I think we cannot keep the method with such a change in semantics
; general
same here this will trip up users
; general
Im not so sure about this the timeout should logically stop the AskActorRef but I dont wnat it to complete the future Ill take a stab at that
; general
as will be removed
; general
get will also be removed Ive started going from steppingstone to steppingstone to have stable points inside the refactoring
; general
ah yes of course
; general
ugh thats strange behavior by the compiler
; general
why add val if not needed
; general
nope its not strange it is documented and Martin doesnt like adding syntax for special things but Viktor have you really verified that this works for reference types at all I though only AnyVal could be constant  And even if String could work Stringintern is NOT a compiletime constant anyway
; design
for a constant value it needs to be     final val MessageExchangeId  MessageExchangeId
; general
Can you still write abcactor  If it should be default then the router should be direct not roundrobin
; general
Isnt 0000 only default on Mac OSX
; general
Does the new parser not support onoff Can we add that to it
; general
You should be able to use ConfigFactoryempty here instead of parseMapMap
; general
chaining withFallback like this unfortunately does not do the right thing right now I think I have to fix the API or implementation somehow since this is the obvious way to use it I wrote some docs explaining the problem yesterday see withFallback doc comment in ConfigMergeable Basically if you have in three configs foo foonull foo and you do firstwithFallbacksecondwithFallbackthird then the result of firstwithFallbacksecond is foo and then the foo in third gets merged in to the foo from first because when merging third the foonull has already gone away but really because of the foonull in second anything in third should have been ignored It is a minor corner case but youd use foonull if you wanted to clear an object found in a fallback Anyway I guess you dont need to change this I just need to make it work instead of documenting a crazy workaround  Ill fix it
; design
It would be nice if the parser in the Config lib were useful for durations here see ConfiggetMilliseconds but unfortunately it doesnt have the adjustable default time unit feature To support that I guess wed need some kind of ConfiggetDuration that would return a number along with either a TimeUnit or null and youd have to write a method that used that and plugged in the default time unit if none were specified in the file or something But it would be easy to accidentally use getMilliseconds which would not use the default time unit I dont know I guess another approach would be to have ConfigwithDefaultTimeUnit it would add an extra word of storage to every config object but may not be a big deal Let me know if you would use any feature along these lines or if I should leave it asis
; design
you could just use Some here rather than Option I think not that it matters a whole lot
; general
This file and the others in a propertieslike format should have worked without reformatting as far as I can see  reformatting it is fine but want to be sure you didnt reformat because the parser was upset about the original
; general
Yes in the application conf you will write appservicepingOk Ill change to direct
; general
0000 was the previous default value in the code ie what was usedI can change default to 127001
; general
It didnt Now it does Ill change back to onoff
; general
Thanks I read the docs and was puzzled because it is really this way we built up the config We even add the reference afterwards ie it is impossible to use the withFallbacks If you fix the issue I think you should remove withFallbacksMore realistic is foo a 1 withFallback foo b  2 with Fallback foo a  0 b  0 c  0 which should become foo a  1 b  2 c  0Clearing nulling isnt something I would have expect working at all
; design
Personally I think it is totally wrong to have the default time unit at all I think all durations should be specified with value and unit explicitly Everything else will only cause confusion Ill talk to the others about it
; general
Well if SystemgetPropertyakkaconfig is null then I immediately get a None and dont have to try parsing file null
; general
First I thought this format wasnt supported but it was another bug that tricked me After reformatting them I didnt revert that because I think this format is more nice
; general
I agree with Patrik here the default time unit is not that useful
; general
Thanks for supporting that I created tickethttpwwwassemblacomspacesakkatickets1363removedefaulttimeunitinconfigOn Fri Nov 18 2011 at 459 PM viktorklang replyreplygithubcom wrote I agree with Patrik here the default time unit is not that useful  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkacommit4b8f11ea92ab3fb4809e2ca84b11ac93771477bbcommitcomment730808 Patrik NordwallTypesafe httptypesafecom  EnterpriseGrade Scala from the ExpertsTwitter patriknw
; general
rethrowing the exception
; general
good point will add
; general
Yes resultOrException should be removed why this extra allocation which is thrown away immediately anyway Putting it in one place only is the right thing to do so it can be optimized away
; general
Im not so sure about the name sync though but I wanted something that would imply blockingsynchronization The alternative was onAndYield but it isnt sexy
; general
I agree the name sync is unclear I think Block communicates that everything there is blocking Suggestion Blockget
; general
get sounds cheap to me Id rather go with something like load
; general
Why not eval
; general
I thought we agreed on that dsl and DSL was a bad name
; general
We discussed that wrt the name of the Actor subclass which adds the internal DSL on which Philipp is working IIRC and there I still agree But all of those pieces will form something which in effect is a DSL for usingwriting actors so I started calling the object which you need to import ActorDSL The settings now are at akkaactordsl which also sounds fitting or do you disagree How else should it be named
; design
We came up with a better name didnt we I dont remember what it was But dsl is so vague does not really say anything what is it about
; general
youre thinking about the trait Act extends Actor I think this DSL thing here is one level up so to speak
; design
Right Ok Makes sense But Id still prefer a better name than dsl But I dont have one now so lets leave it for now
; general
but the name is immediately available for reuse
; general
the actual stop is always asynchronous also with ActorSystem the waiting is only for confirmation that the name is free again Actually I think this can be optimized but better to document as it is
; general
hmm then it is an implementation detail that users normally dont have tocare about since we do what is expectedI dont think we need to document that detailed in rst docs but it cansure be included in scala docsIs this correctActors are stopped by invoking the methstop method of aActorRefFactoryie ActorContext or ActorSystem Typically the context is used forstoppingchild actors and the system for stopping top level actors The actualtermination ofthe actor is performed asynchronously ie methstop may return beforethe actor isstoppedOn Wed Dec 14 2011 at 830 PM Roland Kuhn replyreplygithubcom wrote the actual stop is always asynchronous also with ActorSystem the waiting is only for confirmation that the name is free again Actually I think this can be optimized but better to document as it is  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkacommit7b2349c0d9292a90f3ec2aa1605426b5b9c42beccommitcomment794904 Patrik NordwallTypesafe httptypesafecom  EnterpriseGrade Scala from the ExpertsTwitter patriknw
; design
The important point is that immediate reuse of the childs name is only possible if stopping your own child or a toplevel actor via system Otherwise it is correct
; design
Okey the actorrst and untypedactorrst needs to be sprayed withinformation about the actor namepath That is much missing now We haveticket 1448 that should cover that I suggest that you do that partOn Wed Dec 14 2011 at 839 PM Roland Kuhn replyreplygithubcom wrote The important point is that immediate reuse of the childs name is only possible if stopping your own child or a toplevel actor via system Otherwise it is correct  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkacommit7b2349c0d9292a90f3ec2aa1605426b5b9c42beccommitcomment794937 Patrik NordwallTypesafe httptypesafecom  EnterpriseGrade Scala from the ExpertsTwitter patriknw
; design
these can probably go now
; general
Why this change I have a big aversion against new
; general
making them defs would allow these to be computed ondemand and this trait does not really need them to be stable right
; general
I can change it to use def instead of val
; general
That change is there because I removed all parameters from the VoteCountRouter and therefore could not keep it a case class Do you think I should do some other way This will be an example in the documentation so it is important that we all agree on what best practice is
; design
Create a companion object with an apply method
; design
why not just make it an objectalso case class A does work but why would one
; design
K Ill make it an object then
; design
I think this is going to be a source of many confusion since you need to remember to add new routers here and users cannot hook into this at all
; general
The alternative was to make routers in akkaactor remoteaware which is not nice at all Unless you have a better proposal
; general
In what way do they Routers need to know anything about remoting
; general
Well the remote routers need to handle the nodes setting which the local ones do not Hence there must be a translation between local and remote unless the RemoteDeployer would not use local parsing at all which is obviously even worse If that translation is part of the router interface so that the RemoteDeployer could do it generically then local routers need to know about their remote counterparts which is not possible due to cyclic dependencies between the packages
; general
What about having a RemoteRouterwrapper that handles the nodessetting and wraps the original local routerOr a rootpathprovider that gets put into the Router
; general
What about having a RemoteRouterwrapper that handles the nodessetting and wraps the original local routerI need to think about this but Im only taking a little time off now were on the move So itll have to wait until next week Care to open a ticket Or a rootpathprovider that gets put into the RouterIts not that easy And while were at it we should solve it in a way which fits seamlessly into clustering
; design
Im technically on vacation So no tickets
; general
Lol Me too
; general
when Im in that mood strange things may happen I created the ticket nonetheless
; general
Could you revert this formatting change
; general
Could you revert this formatting change
; general
Could you revert this formatting change
; general
Could you revert this formatting change
; general
Could you revert this formatting change
; general
Could you revert this formatting change
; general
Could you revert this formatting change
; general
ah so it bypassed the log level check but isnt that done for publish also but for the logger instead of stdout logger
; general
Yes it bypasses the check but the loggers are only subscribed to the right type of log events so they will not print the event if they shouldnt
; general
I see great
; general
Much cleaner thanks
; general
heh not as clean as Id like it to be I want to avoid entering the guard I should really open a ticket on redesigning the whole Dispatcher lifecycle management
; general
Doesnt SwitchswitchOn already protect against a race
; general
On Thu Apr 28 2011 at 444 PM derekjw replyreplygithubcomwrote Doesnt SwitchswitchOn already protect against a raceProblem is that we dont have the guard taken in dispatchFuture so forexampleif uuidsisEmpty  futuresget  0             active switchOff  Could get to here if we dont ensure wehave the guard prior to switchOn              shutdown  shut down in the dispatchers references is zero                        Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkacommite4a5fe9abd242639b207a1d976410491ce0bba74commitcomment360939 Viktor KlangDirector of Research and DevelopmentScalable Solutions httpwwwscalablesolutionsseCode   githubcomviktorklangFollow twittercomviktorklangRead   klangismtumblrcom
; general
Why do we want to make the user type more by removing all the methods from Actor So now he has to pollute his code with context everywhereI dont like that need some convincing here
; design
The user shouldnt pollute everything with context everywhere self is on Actor and if you dont use any of the contextthings theres no additional typing and if you want to have the full scope you simply do import contextIn this way we do not pollute the namespace on Actor by default we can add new methods to Context without accidentally breaking peoples Actors etc
; design
I am just worried that there is too much things going on The userneeds to learn when to use either of1 Actor API2 self3 contextIt is not simpleOn Tue Dec 6 2011 at 1146 AM viktorklangreplyreplygithubcomwrote The user shouldnt pollute everything with context everywhere self is on Actor and if you dont use any of the contextthings theres no additional typing and if you want to have the full scope you simply do import context In this way we do not pollute the namespace on Actor by default we can add new methods to Context without accidentally breaking peoples Actors etc  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkacommit3204269f6a0fb2aec94595f504e2c423d9344b5ccommitcomment771983 Jonas BonrCTOTypesafe  EnterpriseGrade Scala from the ExpertsPhone 46 733 777 123Twitter jboner
; design
I can understand your worries the current suggestion was the least of all evilsActor  The behaviorself     The identitycontext  The context
; general
I think its simple enough viewed like this for creating actors you need to know where to get them from that is what you mean by Actor API right for the typical things we have self and sender directly available as that covers probably 90 of the use cases if you want more special actor saucewhich is becomeunbecome and watchunwatch system and childrenthen its always close by just import context or better choose specifically
; design
I agree to this as the most important reason It gives us freedom to evolvethe api without breaking user codeOn Tue Dec 6 2011 at 1146 AM viktorklang replyreplygithubcom wrote The user shouldnt pollute everything with context everywhere self is on Actor and if you dont use any of the contextthings theres no additional typing and if you want to have the full scope you simply do import context In this way we do not pollute the namespace on Actor by default we can add new methods to Context without accidentally breaking peoples Actors etc  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkacommit3204269f6a0fb2aec94595f504e2c423d9344b5ccommitcomment771983 Patrik NordwallTypesafe httptypesafecom  EnterpriseGrade Scala from the ExpertsTwitter patriknw
; design
Might be the best overall choice But it needs to be very well documented In a way that makes sense and is easily remembered
; general
Welldocumented is Rolands middle name
; general
httpswwwassemblacomspacesakkatickets1438docdocumentthedifferencesbetweenactorapiselfandcontextOn Tue Dec 6 2011 at 136 PM viktorklangreplyreplygithubcomwrote Welldocumented is Rolands middle name  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkacommit3204269f6a0fb2aec94595f504e2c423d9344b5ccommitcomment772192 Jonas BonrCTOTypesafe  EnterpriseGrade Scala from the ExpertsPhone 46 733 777 123Twitter jboner
; general
yup my thought exactly
; general
A bit OT but Would it be possible to make actor suspend  resume accessible in the public API ActorRef I think that would be very useful in some scenarios eg making an actor wait for something without blocking a thread Or is this already possible in some way
; design
Definitely not from the outside and on the inside it doesnt make sensesince it cant resume itselfWhats the usecaseCheersVOn Jun 21 2012 1130 AM oschulz replyreplygithubcomwrote A bit OT but Would it be possible to make actor suspend  resume accessible in the public API ActorRef I think that would be very useful in some scenarios eg making an actor wait for something without blocking a thread Or is this already possible in some way  Reply to this email directly or view it on GitHub httpsgithubcomakkaakkacommit2e459f5f1d6b88472118b8c479f3eded3740926acommitcomment1486334
; design
Resume would have to be possible from outside of course The use case I was thinking of wasAn actor gets a message instructing it to do some longrunning operation The actor spaws a child or children to do all that stuff but until its finished for example some realworld interaction the primary actor should not react to new commands Of course this could also be solved with messagequeues Its just that when I saw this pullrequest I got the idea that an actor suspending itself and beeing resumed by the children doing the actual work would be an easy and elegant solution for such cases blocking an actor until something is done
; design
On Thu Jun 21 2012 at 214 PM oschulz replyreplygithubcom wrote Resume would have to be possible from outside of course The use case I was thinking of was An actor gets a message instructing it to do some longrunning operation The actor spaws a child or children to do all that stuff but until its finished for example some realworld interaction the primary actor should not react to new commandsWhat if the child dies Or the message never reaches the child What ifsomeone is sending messages at a high rate so blocking for 10 seconds willactually put millions of messages in the mailbox potentially putting thesystem in an OOME situation Of course this could also be solved with messagequeues Its just that when I saw this pullrequest I got the idea that an actor suspending itself and beeing resumed by the children doing the actual work would be an easy and elegant solution for such cases blocking an actor until something is doneIn this case just use become  Stash and you can accomplish the samething but without the dangers of suspendresumeCheers  Reply to this email directly or view it on GitHub httpsgithubcomakkaakkacommit2e459f5f1d6b88472118b8c479f3eded3740926acommitcomment1486891 Viktor KlangAkka Tech LeadTypesafe httpwwwtypesafecom  The software stack for applicationsthat scaleTwitter viktorklang
; design
What if the child diesThe child doing the actual work could be watched by an intermediate supervisor which would handle this case  i guess In this case just use become  Stash and you can accomplish the sameSure  Im not saying its necessary I was just wondering if it might be an easy alternative  What if someone is sending messages at a high rateThat also applies to become  Stash I guess Can one defend againt that using a bounded mailbox
; general
On Thu Jun 21 2012 at 500 PM oschulz replyreplygithubcom wrote  What if the child dies The child doing the actual work could be watched by an intermediate supervisor which would handle this case  i guessSuspension of a parent implies suspension of children as suspendresume isused exclusively for supervisionmanagement  In this case just use become  Stash and you can accomplish the same Sure  Im not saying its necessary I was just wondering if it might be an easy alternativeIm fairly sure that theres no easy alternative however it is a topicworth exploring more But handing out suspendresume as enduser API isntgoing to cut it  What if someone is sending messages at a high rate That also applies to become  Stash I guess Can one defend againt that using a bounded mailboxYup and it will lead to messages getting dropped which may or may not bewhat you want  Reply to this email directly or view it on GitHub httpsgithubcomakkaakkacommit2e459f5f1d6b88472118b8c479f3eded3740926acommitcomment1487693 Viktor KlangAkka Tech LeadTypesafe httpwwwtypesafecom  The software stack for applicationsthat scaleTwitter viktorklang
; design
Suspension of a parent implies suspension of childrenUhm yes this was originally about hierarchial suspension wasnt it Theres the flaw in my plan  just forget everything I said  sorry
; general
Does it really matter if its 1 or N errors
; general
yes for me it does I want to report as much and as early as possible otherwise users are annoyed
; general
I meant    sender  narrowCheckruchannelListTypeTagtpe tttpe match       case Nil  CheckTypeACK      case list  CheckTypeNAKlist mkString errorsn
; general
It should not say transparent remoting but location transparency
; general
We need to say something more about the serialization I think
; general
Good it is a start Surprisingly little But perhaps not needed to have more
; design
There is a ticket to document Serialization
; general
Thats good then I also see that the serialization stuff is removedfrom the config I mean Debasishs pluggable stuff WhyOn Thu Dec 15 2011 at 850 PM viktorklangreplyreplygithubcomwrote There is a ticket to document Serialization  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkacommit94017d8b7a8982a27cc977d3e61199b182902ccccommitcomment798525 Jonas BonrCTOTypesafe  EnterpriseGrade Scala from the ExpertsPhone 46 733 777 123Twitter jboner
; general
Because it doesnt exist anymoreHave a look at the Serialization Extension for the new serialization implementation
; general
Where is it
; general
Roland and I discussed it and came to the conclusion that this would be enough for now We probably need to add some example code for the real release though
; general
What do you meanakkaserializationSerializationSettings does use config  akkaactorserializers  akkaactorserializationbindingsOn Thu Dec 15 2011 at 900 PM viktorklang replyreplygithubcom wrote Because it doesnt exist anymore Have a look at the Serialization Extension for the new serialization implementation  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkacommit94017d8b7a8982a27cc977d3e61199b182902ccccommitcomment798576 Patrik NordwallTypesafe httptypesafecom  EnterpriseGrade Scala from the ExpertsTwitter patriknw
; design
Its not removed Is ithttpsgithubcomjbonerakkablobmasterakkaactorsrcmainresourcesreferenceconfL182On Thu Dec 15 2011 at 913 PM Patrik Nordwallpatriknordwallgmailcomwrote What do you mean akkaserializationSerializationSettings does use config   akkaactorserializers   akkaactorserializationbindings On Thu Dec 15 2011 at 900 PM viktorklang  replyreplygithubcom  wrote Because it doesnt exist anymore Have a look at the Serialization Extension for the new serialization implementation  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkacommit94017d8b7a8982a27cc977d3e61199b182902ccccommitcomment798576  Patrik Nordwall Typesafe httptypesafecom  EnterpriseGrade Scala from the Experts Twitter patriknw Patrik NordwallTypesafe httptypesafecom  EnterpriseGrade Scala from the ExpertsTwitter patriknw
; design
Sorry guys I expected it to be in akkaremote module andreferenceconf since that is where it was before
; general
Henrik can you link to this config snippet then Or better create a serialization document page and write that it will be documented soon but point to the config snippet how to configure serialization
; general
ok if we are anyway going to break this why not make a real scala setter also to support    receiveTimeout  10seconds
; general
Make it clear that this is Java I think we have usedv20 Java API
; general
no this does not break appearances may be deceiving this did not change from 20 having Scala setters would come at the price of ugly things in the Java autocomplete
; general
awesome dude So this is how we roll  got perf numbers
; general
Very cool Great job
; general
Ill run the bench before and after when I some low priority spare slotappears in my scheduleOn Mon Nov 21 2011 at 1111 PM viktorklang replyreplygithubcom wrote Thx buddy  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkacommit4fdf69861119f3f9883c2cbd8b4b1e3028a0b86acommitcomment736168 Patrik NordwallTypesafe httptypesafecom  EnterpriseGrade Scala from the ExpertsTwitter patriknw
; general
good that you work on this I just remembered someones wish about having source line information included in log messages which we currently dont support at all ISTR a ticket that the source information always shows SLF4Jscala Might be interesting to fix in a similar way if possible didnt look too closely into this it would be desirable to achieve it without taking full stack traces because that is so damn slow or configure it only above a certain log level so you get WARNING and ERROR with line info but DEBUGINFO without
; general
what they finally did that
; general
That is ticket httpwwwassemblacomspacesakkatickets857I think we have more core 20 stuff to do so I will not solve that nowOn Tue Nov 29 2011 at 822 AM Roland Kuhn replyreplygithubcom wrote good that you work on this I just remembered someones wish about having source line information included in log messages which we currently dont support at all ISTR a ticket that the source information always shows SLF4Jscala Might be interesting to fix in a similar way if possible didnt look too closely into this it would be desirable to achieve it without taking full stack traces because that is so damn slow or configure it only above a certain log level so you get WARNING and ERROR with line info but DEBUGINFO without  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkacommit19a78c0e58bf1ce4c2315da6407d39b4bc770d51commitcomment753050 Patrik NordwallTypesafe httptypesafecom  EnterpriseGrade Scala from the ExpertsTwitter patriknw
; general
Is this Scala Iterable or Java Iterable what is the Java API for this
; design
Is this Scala Iterable or Java Iterable what is the Java API for this
; design
Is this Scala Iterable or Java Iterable what is the Java API for this
; design
I think I prefer 1 version for Java Iterable and one for Scala Iterable wdyt
; general
What is think is that the Iterable should be completely removed from the interface of the Router It makes the composition to a nightmare So I would pick that up as soon as task httpswwwassemblacomspacesakkatickets1075routedactorrefclusteractorrefshouldusecomposition is doneAnother thing that should be looked at is to add some kind of mechanism to let the router know that the connections have changed This makes it possible they use their own internal so optimized for their needs collection structure for storing a snapshot of the existing connections and as soon as the connections change they can update their structure This will make a much more efficient routing possible
; design
httpsgithubcomjbonerakkacommit43031cb94be79aa6c7a4735bec68d6adfbca6459commitcomment514899On Thu Aug 4 2011 at 959 PM viktorklang replyreplygithubcomwrote I think I prefer 1 version for Java Iterable and one for Scala Iterable wdyt  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkacommit43031cb94be79aa6c7a4735bec68d6adfbca6459commitcomment513808
; general
use the systems ThreadFactory and make the tick interval configurable
; general
Whats the downside of having tighter settings for the default scheduler and just use the system scheduler
; general
Why do these need to be manually cancelled
; general
Do we need this check
; general
Isnt the min delay the tick interval
; general
nanoTime Perhaps use Deadline
; general
Why not just use a latch
; general
If there is a reason to cancel them manually I want to know why Who wants to maintain a codebase full of why not code I dont want to consider why notcode when I refactor do you
; general
LOLWhy not be sure that all resources you have created when starting up are released before you can call it a proper shut downYou mean that they will be shut down automatically By who
; general
Yeah I totally agree with that resource management being important but now when Patrik added a dedicated Scheduler he shuts that down on ActorSystem shutdown which should take care of everything scheduled on it
; general
Ah didnt know that That sounds like a better solution for sure
; design
The scheduler runs scheduled tasks on shutdown close which is something I dont want in this case Therefore I cancel them Ill add a comment about it here
; general
shutdown can be invoked onTermination or by user In the onTermination case the actors and guardian are already terminated and this prevents some error logging
; general
My thought was that the default scheduler is configurable by user for other purposes and we need better resolution here than might be needed for other things Ill do something in between if default scheduler has good enough resolution I use that otherwise I create a dedicated one Configureable by the tickDuration
; design
Alright that explains it things like that have to be commented so someone doesnt optimize it
; general
Guarding the stopping of something that might already be stopped shouldnt be an issue Waht kind of logging does this approach evade DeadLetters
; general
Yeah I just want to make sure that we dont create new Threads if we dont have to Ideally Id like to remove the ThreadFactory and only rely on a passed in ExecutionContext a man can dream cant he
; general
no it can be scheduled to the first bucket but I can use the minTick anyway if you think that makes sense
; general
yes definitely nanoTime thought about that 1 minute after pushed
; general
well it doesnt make a difference but I can rewrite to latch and then measure total time and assert the rate same thing but different
; general
sure I agree
; general
ERROR 06122012 120408911 ClusterSpecakkaactordefaultdispatcher6 ActorSystemClusterSpec Failed to run termination callback          due to sending to terminated ref breaks promises    akkapatternAskTimeoutException sending to terminated ref breaks promisesat akkapatternAskSupportclassaskAskSupportscala74at akkapatternpackageaskpackagescala43at akkapatternAskSupportAskableActorRefqmarkAskSupportscala151at akkaactorActorSystemImplstopActorSystemscala505at akkaclusterClustershutdownClusterscala536at akkaclusterClusteranonfun5applymcVspClusterscala465at akkaclusterClusteranonfun5applyClusterscala465at akkaclusterClusteranonfun5applyClusterscala465at akkaactorActorSystemImplanon4runActorSystemscala583at akkaactorActorSystemImplTerminationCallbacksanonfunrun1runNext1ActorSystemscala707at akkaactorActorSystemImplTerminationCallbacksanonfunrun1applymcVspActorSystemscala710at akkaactorActorSystemImplTerminationCallbacksanonfunrun1applyActorSystemscala703at akkaactorActorSystemImplTerminationCallbacksanonfunrun1applyActorSystemscala703at akkautilReentrantGuardwithGuardLockUtilscala15at akkaactorActorSystemImplTerminationCallbacksrunActorSystemscala703at akkaactorActorSystemImplanonfunterminationCallbacks1applyActorSystemscala580at akkaactorActorSystemImplanonfunterminationCallbacks1applyActorSystemscala580at akkadispatchDefaultPromiseakkadispatchDefaultPromisenotifyCompletedFuturescala920at akkadispatchDefaultPromiseanonfuntryComplete1anonfunapplymcVsp4applyFuturescala897at akkadispatchDefaultPromiseanonfuntryComplete1anonfunapplymcVsp4applyFuturescala897at scalacollectionLinearSeqOptimizedclassforeachLinearSeqOptimizedscala59at scalacollectionimmutableListforeachListscala76at akkadispatchDefaultPromiseanonfuntryComplete1applymcVspFuturescala897at akkadispatchFutureanon4anonfunrun1applymcVspFuturescala387at akkadispatchFutureanon4anonfunrun1applyFuturescala379at akkadispatchFutureanon4anonfunrun1applyFuturescala379at scalautilDynamicVariablewithValueDynamicVariablescala57at akkadispatchFutureanon4runFuturescala379at akkadispatchTaskInvocationrunAbstractDispatcherscala117at akkajsr166yForkJoinTaskAdaptedRunnableActionexecForkJoinTaskjava1381at akkajsr166yForkJoinTaskdoExecForkJoinTaskjava259at akkajsr166yForkJoinPoolWorkQueuerunTaskForkJoinPooljava974at akkajsr166yForkJoinPoolrunWorkerForkJoinPooljava1478at akkajsr166yForkJoinWorkerThreadrunForkJoinWorkerThreadjava104
; general
Ouch thats an ugly onedef stopactor ActorRef Unit      implicit val timeout  settingsCreationTimeout    val path  actorpath    val guard  guardianpath    val sys  systemGuardianpath    pathparent match       case guard  Awaitresultguardian  StopChildactor timeoutduration      case sys    AwaitresultsystemGuardian  StopChildactor timeoutduration      case         actorasInstanceOfInternalActorRefstop      I think we should fix the above
; general
ok but then you know the reason for the check
; general
Yup Ill open a ticket on the other thing Its unintuitive that stop might throw an exception to the caller
; general
Add a comment at the check with a FIXME link to httpwwwassemblacomspacesakkatickets2221actorsystemstopshouldntthrowexceptions
; general
This is rare Normally it is detected as unreachable and moved to the unreachable set as UP then moved to DOWN still in the set You can DOWN a node that is UP and healthy but normally you never do that I suppose Make this clear in the scala doc
; general
Ie a conflict
; general
Good that you added this Lets add to it along the way as things come up
; general
yes true my intention was to document the normal cases not this rare case
; general
Just a question where did you find the standardsguideline for adding examples to akka
; general
ZonkIs there another standard I missed
; general
No thats not what I meant havent added examples before it looked structured in a very specific way so I was wondering if that was described somewhere how it is done as part of the main tree with the numbers in the names etc It would be nice to do examples the same everywhere so maybe there is no standard for that
; general
Ah you are using the Memory Leak Pattern
; general
Yes I just found out right now Ill take out that daemonicon setting
; general
oops context fail I was thinking you were still commenting on the initialCommands stuff
; general
Thats Javas awesome syntax for when you write an anonymous constructor
; general
Great The Java testing API looks quite alright now
; design
Worth sending out an email to akkauser about this once its up in the docs
; general
I believe the correct parlance is instance initializer
; general
Really Ive never seen it Ok Thanks
; general
Thanks Just think how much of the boilerplate can go with Java 8
; general
As Connected is really Connecting renamed this may fail as the client may not yet be connected to the server In practice this means that the test may fail because the message is never received as the client has not yet connected I dont know whats a good approach to take this into account in the test case Ideas
; general
I think it would make sense to think about how failure is handled What kind of supervision strategy do you envision
; general
Oh what I mean is that the message is lost because of a race
; general
What is the test testing
; general
That the subscriber receives a message that the publisher has sent
; general
Is that guaranteed If so the test is rightfully failing since that guarantee doesnt exist in the code and if you only guarantee that some messages are received youll need to encode that in the test Makes sense
; general
Due to the race condition its not but once the client is connected delivery is guaranteed
; general
Then make the test statistical send messages at a rate with monotonically increasing values then in the subscriber test that after a certain period atleast one message was received and all messages that were received should have monotonically increasing values
; general
Why do you pass in an ActorSystem
; general
Why do you pass in Node What kind of Node is it is it the extension If so why do you pass it in
; general
Why this line
; general
override def unhandled
; general
actorOf is asynchronous that child might not exist at the time of your lookup
; general
Both of these is not needed I understand now Not used to Akka 2 yet Thanks
; design
Is it automatically inferred if I dont specify anything
; general
Right I realized that myself Have already changed it to def
; general
But I need to define a receive method so then I would need a dummy receive PLUS an unhandled handler Not that nice IMO
; general
Naturally otherwise youd have to define it always
; general
Ok Nice Thanks
; general
Still fewer Locdef receive  ActoremptyBehaviordef unhandledmsg Any Unit  logerrorsystemcluster can not respond to messages  received  unknown
; general
20 is really badass
; general
Ah ActoremptyBehavior is nice Fixing
; general
When I started thinking what is going to happen if there is an exception thrown in reciveAfterProduce I am leaning towards getting rid of sync optimisation It will be confusing for the user as the exception thrown in sync mode might be caught by camel async processor The same exception in async mode will be caught by akka dispatcher This might be really hard issue to detectWDYT
; general
Also I wonder what krasserm has to say about it
; general
Ill look at it tomorrow but you have a point there about the confusion that could happen
; general
piotrga good catch  drop the sync optimization as it will result in less confusing behavior under error conditions Need more time to think about alternative optimizations but we can also introduce them later without breaking public contracts
; design
Isnt merge quite performance sensitive
; general
Is this optimal
; general
its not done that frequent once per 3 secondits much more performant now than it was before
; general
Just curious when can a future be completed with NonLocalReturnControl
; general
You can merge this line with the last in match with case   source
; general
Good point Thanks
; general
It might makes sense yes
; general
Ok Maybe add comment which one is inbound and outbound
; general
Nice that you pulled inside
; general
Youve made it pure nice
; general
I pushed some improvements
; general
Nice work Patrik
; general
Do you prefer this tailrec version      tailrec    def resolvestack StackClass OptionSerializer  if stacknonEmpty       val c  stackhead      serializerMapgetcgetName match         case null           val stack2  if cgetSuperclass eq null stackpop else stackpoppushcgetSuperclass          val stack3  stack2pushAllcgetInterfaces          resolvestack3        case x  Somex           else       None    I dont think its a big difference since it manages the stack itself  but it is tailrec
; general
Hehe no its ok
; general
if you want to make it into M4 youll need to be quite fast now  But I dont see much harm because RC1 is not far out at all
; general
Very usefulWhat about Java API for UntypedActors
; design
If my comments are fixed today Ill include this in RC3
; general
I have verified with my little test app that it works Good
; general
Excellent So a review from Roland and then were golden
; general
Yes looks good
; general
I have added a commit for the validatepullrequest task here as well ticket 3558 One potential disadvantage with that approach is that it is not possible afaik to run the tasks in sequence for all projects to fail fast eg no tests are run before everything compilesIn the jenkins job we currently run clean cleanfiles update testcompile testWhat is cleanfiles good for Its a SettingsKey not a TaskKey It is not something that can be put in dependsOn
; general
This no longer merges
; general
Ok it does
; general
rkuhn pointed out that Propsnew Actor with Stash  def receive  ActoremptyBehavior  is not possible and I will document the limitation
; design
LGTM to the doc update
; general
Kitty is happy Merge
; general
Thanks for the quick update
; general
kittynotetoself ignore 23429803cat Synchronaising pray
; general
The ticket for this is in milestone 221 Should we merge and close the ticket
; general
well need to add such a task to release21 and release22 as well
; general
The title said forward port so I assumed that it is at least in release22 I will need to eventually close the ticket in milestone 221 that is why I asked
; general
It is in release22 I think it can be be done on demand in release21
; general
LGTM uncertain about the Inbox
; general
May I merge this Need to backport
; general
please fix the module abbreviation should be tes according to Patriks mail to akkadev
; general
Probably kit would be the nicest
; general
PLS SYNCHThe kitteh picked up the wrong jenkins job
; general
kittynotetoself ignore 23660292cat Synchronaising pray
; general
This will be split up into two separate pull requests
; general
You sure there was no correlation between the timeouts ie that they are chosen to be some distance from eachother
; general
Not that I could see I tried to look for that It doesnt test expected callTimeout failures
; general
Then it LGTM
; general
Fixed See commit comment for details
; general
Comments aside this is amazing work Patrik keep it up
; general
Fixed relevant review comments Anyone planning to review this more or shall I merge
; general
Looks great A lot nicer more readable and intuitive Cant believe you argued in favor of Either
; general
LGTM Reads very nice
; general
jboner I wasnt against Try as a standalone entity I was against baking it into Future
; general
niceI think there are some changes to public api which should be mentioned in migration guide
; design
patriknw Yes absolutely just wanted to get aconfirmation that this was the way to go first  Ill add migration
; general
given the lines counts I do understand why you of all people have picked this ticket  LGTM
; general
Any news here
; general
I am waiting for the pull request to be accepted on the scalazeromq bindinghttpsgithubcomvalotradingzeromqscalabindingpull15I didnt get any update for a while though If you have another solution to push the update feel free to proposeAlexandre
; design
HiSo my pull request has just been accepted on the ScalaZeroMQ project and they made a new release todayI am going to use this new version of the library now in Akka in my pull request see if everything work as expected make a rebase against the lastest Akka master branch and then I think the pull request will be readyDo you see anything else I should do to have it accepted Alexandre
; general
no sounds good but this will not go into 21 Id like to have this together with Viktors FrameByteString work on 22M1
; general
Ok do you have any idea on when is 22 to be released Would it be possible to have it included in a minor release also Alexandre
; general
The change is neither source nor binary compatible hence we cannot apply it during the 21x series The 22 cycle will be shorter than the 21 cycle for sure we are aiming for two months We will publish a 22M1 as soon as we have merged the bigger changes for the release though
; general
HiI just pushed something but its not good it does not compile I will have to do the rebase again maybe during the weekend
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator212
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator212
; general
something went wrong with this rebase rebasing across a merge with master can be problematic historywise in that case it might be best to get your branch into the shape you want the end result to be and have that committed then git reset soft to originmaster and commit which will leave you with a single commit rebased on top of master
; general
What is the status of this PR
; general
HiWe would still like to publish the change I need to find a bit of time to do the rebase properlyI was thinking of actually creating a new branch from master reintegrate the changes and push a new pull request as the amount of change on master since I originally created this one are significantI will try to do that as soon as possibleAlexandre
; general
thank as a headsup we are aiming for 22M1 next week
; general
It was getting complicated to do a rebase of couple of months of commits so I made a new branch with just one commit on top of current master There is another pull request for it You can close this oneThanksAlexandre
; general
Hi This pullrequest is closed and I didnt find fixes in master Does it mean that the problem with requestreply performance is resolved any other way Can I rely on akkazeromq and have reasonable performance
; general
I dont know the status but there is another open pull request by alexandreagular 1285
; general
Yes I closed this pull request because it was getting very old and I thought it would be simpler to get a fresh master branch and put the changes on themThere is another one indeed on which some comments have been made that I need to work on I will try to do that soon in my spare time
; general
Hey Have all contributors to the code signed the CLAtypesafecomcontributecla
; general
I havent done that yet I need to check it with my manager which wont be until monday
; general
Great let me know when youve signed or if you cannot sign Without CLA signature I cannot do anything with this PR but to close it
; general
HiJust committed a new version and added some more sample code the CLA signature should come soon
; general
Great Let us know when you have it signed
; general
I am Alexandres manager jacobkolind and I have just signed the CLA Are we good to go if he also signs the CLA
; general
Hi Jacobeveryone who has contributed to the PR has to sign the CLA However we have the possibility of issuing a corporate CLA for the company so that all employees contributions are covered by that is that something that would be interesting
; general
We discussed this with our CEO but he was of the opinion that he would rather that we signed the CLA individually The company has waived all rights to any IP that we contribute to Akka
; general
I have also signed the CLA so now everyone contributing to this pull request have signed the CLA Lets hope it can be used
; general
Excellent First of all could you split it up into logical chunks 1 PR for the performance fixes and one for the docs and samples
; general
HiI havent checked that thanks What is the minimal version of ZeroMQ that we should support I can make a fix for older versions but its not going to be as neat I would rather keep that one for the current and newest version of ZeroMQ and make the fix specifically for oldest versions Would that be acceptable
; general
Latest stable release is 22so that has to be supported
; general
So should I leave it as it is
; general
Please apply this change to ConcurrentSocketActorSpec so you can run the testsdef checkZeroMQInstallation     try       zmqversion match         case ZeroMQVersionx y  if x  3  x  2  y  2  Unit        case version                 invalidZeroMQVersionversion           catch       case e LinkageError  zeroMQNotInstalled
; general
So it doesnt work on 22 httpswwwassemblacomspacesakkatickets25380mqintegrationbrokenon22activityticket2538
; general
Ok I am going to check that and do the fix on checkZeroMQInstallation now
; general
HiSo I have found the problem it turns out that the setReceiveTimeout method is not working The reason is that the scalazeromq binding does not allow this setting with zeromq  300As this does not match the zeromq 22 spec I was thinking that the proper way to fix it would be to change the scalazeromq binding this file in particular httpsgithubcomvalotradingzeromqscalabindingblobmastersrcmainjavaorgzeromqZMQjavasee the setReceiveTimeout and setSendTimeout methodsAnd upgrade the required version for the scalazeromq binding in akkaDoes that sound acceptable to you The other solution we have is a duplicate implementation for zeromq  300 and  300 which wont be as neatAlexandre
; design
What happens if one uses the javazmqbinding
; general
I checked the implementation of javazmqbinding it seems correct we could use ithttpsgithubcomzeromqjzmqblobmastersrcorgzeromqZMQjavaline 586 you can see the requirement is 220
; design
Alright so I think your proposition is OK Fix it in the scalazeromqbindingWhen thats done we can then let users either use the scala or the java binding to their liking they will however have to upgrade to atleast 0mq 22How does that sound
; general
Ok that sounds good to meI will work on that and come back to you when I am done
; general
Sounds great thanks
; general
HiSo I fixed the problem on the scala binding I made a pull request for thathttpsgithubcomvalotradingzeromqscalabindingpull15I will probably fix other things I have noticed on it but that is not relevant for this pull requestIn my last commit I changed the required version for the scalazeromq binding to 008SNAPSHOT which you will have to download from my branch compile and publish locally to make it workWith all that plus a small fix I had to do the unit tests pass
; general
Alright We wont be able to do anything until the artifact is published with a stable identifier no SNAPSHOT deps allowedGreat work improving the binding btw
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator26
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator26
; general
I have no clue about this
; general
Not enough  You need to also publish to an ivy repository like this one httpwwwscalasbtorgcommunitypluginshtmlcommunityrepoI even know the company who provides that repo  I can hook you up
; general
Added the publishTo mod
; general
Needs docs but otherwise LGTM
; general
I changed the MultiNodeSpec to not depend on AkkaSpec or on a specific test framework and removed all dependencies to ScalaTest from the published artifactsThis means that we have to mix in STMultiNodeSpec in our MultiNodeSpec tests to get ScalaTest functionalityWould like a second review
; general
Good solution 1
; design
Aside from comments LGTM
; general
Do we have to change anywhere to make these published I thought someone said that akkacluster was not released as milestone but I cant find anything in build or release script
; general
Ive always excluded it manually but please consult AkkaBuildscala
; general
rkuhn did you also exclude akkacluster and akkaremotetests manually from the latest milestone release In that case everything is fine since we want them to be included now
; general
yes see b1768582910e3d8accc5532073282664cbc19e8f for the manual exclusion
; general
thanks that means that samples are published why
; general
because I just did whatever Viktor had done while Peter was watching thats all I know
; general
yeah it was just an observation Im not blaming you Ill create a ticket I see no reason to publish samples
; general
now the only thing missing is to add the possibility of a failure after creating children so that the new Creation logic is also tested
; general
The logic is tested by the minimal case I added but yes it should be stressed as well
; general
which is why I also dont expect more problems famous last words
; general
Nobody expects the Spanish Inquisition
; general
Thats what I get for using the Web UI on my iPhone on the bus
; general
awesome that you have nailed the bastardLGTM
; general
yup well possibly move real code into akkaincubator once that exists right
; design
Why not call it Patterns What about the Java side of things
; general
There are no summer of blog posts with Java I doublechecked
; general
But patterns are general Then we should at least link to them and say that the pattern applies but the code is in Scala for now and that they would have to translate We cant have the Java side be just void
; general
Didnt I write exactly that in the java section a few weeks agoPatrik10 sep 2012 kl 1805 skrev Jonas Bonr notificationsgithubcom But patterns are general Then we should at least link to them and say that the pattern applies but the code is in Scala for now and that they would have to translate We cant have the Java side be just void   Reply to this email directly or view it on GitHub
; general
You dont know If so then good if not then do it
; general
The Java section links to the scala section for the parts that are scalaonly code wise otherwise I see no point in completely replicating and have 2 files with essentially the exact same info
; general
It wasnt a question sorry LGTM httpdocakkaiodocsakkasnapshotjavahowtohtmlPatrik10 sep 2012 kl 1808 skrev Jonas Bonr notificationsgithubcom You dont know  If so then good if not then do it   Reply to this email directly or view it on GitHub
; general
Absolutely no need to copy paste Looks good Thanks
; general
I have incorporated all your awesome feedback I would appreciate if you take another look at the CAS impl in in updateConsistentHash so it match your suggestionsI dismissed Viktors suggestion about function to map msg  hashKey so if others have opinions so speak up I guess we can have both ways for super duper flexibilityShould I benchmark rangeImpl or do we consider it good enough as first impl Its only internals so it could easily be changedI will also convert the doc sample to Java
; general
Damn UI I mistakenly clicked closeI was about to say go with the rangeImpl since we can change it later No need to optimize that for RC1Shouldnt ConsistentHash be privateakka
; general
Why would a consistent hashing router always route to remote actorsI see a lot of usecases for having an inprocess consistenthashing router like if you have a partitioned datastore and you have an actor representing and manipulating each partition you want a router that sends the right messages to the right partition
; design
We had a discussion about the mapping of msg to hashKey and the conclusion was that there are valid arguments use cases for all three ways1 Envelope  sender knows the key2 Interface  key is part of the message and its convenient to define it together with the message definition3 function in router definition  makes the decision transparent for the sender
; general
Performance improvement for review
; general
More to review function to map message to hash key
; general
apart from those two nitpicks 1
; general
Java doc sample ready for review I dont know of anything more outstanding in this pull request so give me your final verdict
; general
Renamed a few things as agreed with jboner
; general
Congrats you earned 62 lines 1
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator672
; general
One conf setting should also be removed maxgossipmergerate
; general
Thanks Nice catch
; general
some minor commentsgreat work1 Thank you pvlugter for suggesting this
; general
LGTM after comments really nice work guys
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator672
; general
Rebased and fixed
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator680
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator680
; general
apart from the one thing I didnt fully penetrate LGTM
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator680
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator680
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator674
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator674 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator675
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator675 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
Apart from my comment LGTM This is a very useful change
; general
Are there any other actors in the remoting that needs special logging by default everything is logged as beforeAny chance that I swallow anything that should be logged EndpointDisassociatedException EndpointAssociationException
; general
I dont think so As all of the exceptions that lead to EndpointExceptions  are published as remoting events this should be correct And as I see you  log unexpected exceptions which is nice
; general
ok good Ill do some manual testing with the cluster sample also
; general
Fixed review comments and did some manual testing
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator681
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator681
; general
LGTM refining the usage of the new logging configurability will be an ongoing process
; general
I changed logremotelifecycleeventson as decided
; general
How to turn off logremotelifecycleevents was documented
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator678
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator678
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator677
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator677
; general
so the problem was that RoleName sorting was not compatible with Member sortingIn that case LGTM
; general
Yes that was the exact issue Joining nodes can not be the leader but they are sorted first
; general
Seems like a safe bet until we decide on things coming back from Unreachable I still think that Unreachable should be a terminal stateLGTM
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator679
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator679
; general
LGTM good reasoning
; general
Waiting for kitteh approval
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator686
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator686
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator685
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator685
; general
any more reviewers on this so it can be merged
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator684
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator684 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
seams to be same problem as in PR 1111maven plugin download Ill try to empty my cache to see if this is a too old plugin version
; general
ERROR   The project comtypesafeakkaakkasampledininghakkersparent220SNAPSHOT localhomejenkinsakkaworkspaceakkaprvalidatorakkasamplesakkasampleosgidininghakkerspomxml has 1 errorERROR     Unresolveable build extension Plugin orgapachefelixmavenbundleplugin237 or one of its dependencies could not be resolved Failed to collect dependencies for orgapachefelixmavenbundlepluginjar237  Failed to read artifact descriptor for orgapachefelixmavenbundlepluginjar237 Could not transfer artifact orgapachefelixmavenbundlepluginpom237 fromto moxieeverything httpsmoxietypesafecom8497nexuscontentgroupseverything Not authorized  Help 2ERROR ERROR To see the full stack trace of the errors rerun Maven with the e switchERROR Rerun Maven using the X switch to enable full debug loggingERROR ERROR For more information about the errors and possible solutions please read the following articlesERROR Help 1 httpcwikiapacheorgconfluencedisplayMAVENProjectBuildingExceptionERROR Help 2 httpcwikiapacheorgconfluencedisplayMAVENPluginResolutionException
; general
I have not yet been able to verify this but pulling it into my branch that maven download problem might need to be fixed in Lausanne will see
; general
Merging needed it seems
; design
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator683
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator683 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
What is required to make Faield a SystemMessage without any other changes Id like to have only those changes in a single commit so I can try some queue ideas out in isolation
; general
20130312 164650 dtumon Viktor Klang  notificationsgithubcom  rta What is required to make Faield a SystemMessage without any other   changes Id like to have only those changes in a single commit so I can   try some queue ideas out in isolationThe problem is that that commit came after the other changes but more or  less starts with commit 26daf42
; general
Alright that looks like a hassle to distill Ill try to implement a new SystemMessageQueue with stashing builtin
; general
You might look into Rolands original branch and my fix for that That  might be a better place to start for you
; general
Do you want the ticket as well
; general
Lol wellsee Im just tinkering atm Is everything present here wip2299FailedSysMsg I saw you made some commits to it
; general
Yes it has everything but you have to remove the stashlike  constructs My only commit to that is a bugfix that made the tests pass
; general
I do like this approach great work Endre The important part of confining the message stashingunstashingprocessing in one place is already done so if we want to replace the system message queue implementation that will be rather easy I see no reason not to go ahead with this irrespective of Viktors possible improvements
; design
Fixed comments and rebased it was a hellish rebase whew
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator713
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator713 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
Ah stupid me
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator714
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator714
; general
This can be merged as soon as one more thing is added a section in the message ordering guarantee docs that communication of failure does not obey the normal rules and a mention plus link in the actor restart docs for Java and Scala plus an info box in the supervisionrst that supervisionrelated parentchild communication uses messages of a special kind which cannot be influenced by the user
; design
Updated documentation added marker traits proposed by Roland
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator714
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator714
; general
Squashed rebased merged fixed Now waiting for kitteh
; general
PLS REBUILD ALL
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator739
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator739
; general
PLS REBUILD ALL
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator740
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator740
; general
LGTM with that one nitpick
; general
LGTM please backport to release22
; general
I need to add test case then backport
; general
kittynotetoself ignore 23005434cat Synchronaising pray
; general
Added test case
; general
I cant see the test case
; general
Now its really there
; general
use imperative present tense style for commit messages
; general
If the licensing on the fancy Mozilla logic is a problem there are other maybe less sophisticated heuristics eg the relatively simple one described here httpwwww3orgInternationalquestionsqaformsutf8enphp
; general
Thanks sirthias that is another option and of course simple ASCII detection might be enough I did this PoC as a discussion starter I changed quite a lot the java port of the Mozilla code but it is still derivative I think
; general
Btw I think the Mozilla code is simply a matcher state machine for the pattern described in the link you pasted
; general
I did sign your CLA btw although I dont think thats needed for a change like this
; design
Thank you for contributing As a side note I think we should provide a general section for throttling approaches since this is basically a variation on the StopandWait flow control mechanism
; general
1 for having a general section for throttling approaches Im not familiar with stopandwait but it sounds like its blocking The linked article discusses a couple of alternative approaches that mostly suffer from blocking
; general
No stopandwait is a family of flowcontrol protocols and also error recovery protocols  the two are closely related it has nothing to do with blocking It only means that the producer does not send a new messagework until the previous one has been acknowledgednew work has been requested
; general
Thanks for spreading the wordConcerning the CLA weve been asked to require a CLA for everything that shows up in the git history must be a lawyer thing
; general
Thankyou for your contribution  Would you mind signing our CLAhttpwwwtypesafecomcontributeclaunfortunately Im forced to ask you for this even though it is just a one character fix
; general
Signed itIf I didnt sign would it have legally prevented you from fixing the spelling mistake or could you have performed a cleanroom implementation of my patch Edit also whats the reason for the 10ms limit on Windows
; design
LGTMIm not sure how strict we should be with the commit comment syntaxhttpsgithubcomakkaakkablobmasterCONTRIBUTINGmd
; general
We use a special encoding for the commit messages as described in httpsgithubcomakkaakkablobmasterCONTRIBUTINGmdPlease update the commit message to    act Fix typo in scheduler error message
; general
Windows does strange things when you ask for sleeps 10ms and most of our tests run on Linux and MacOS so we stay clear of the strange places
; general
Thankyou for your contribution  Would you mind signing our CLAhttpwwwtypesafecomcontributeclaI know it feels unnecessary but otherwise I cant merge anything
; general
No pb Im currently in holidays but as soon as Im near a computer I willsign itCheersLe 7 aot 2013 0954 Roland Kuhn notificationsgithubcom a crit  Thankyou for your contribution Would you mind signing our CLA httpwwwtypesafecomcontributecla I know it feels unnecessary but otherwise I cant merge anything  Reply to this email directly or view it on GitHubhttpsgithubcomakkaakkapull1628issuecomment22235329
; general
OK now Im neer a computer and Im not sure I understand the processfor the CLADoes I really need to print the individual CLA and mail it to Typesafe With actual paper  Or does the complete the CLA signing with yourGitHub account is sufficient If its the first well its really a burden for just a poor correctionin some documentation not to say I wont do it but hell you justdont encourage user to contribute Why dont you use an online signingservice like httpswwwechosignadobecom  Ah just noticed theywere bought by adobeIf I misunderstood something and submitting the form where I herebyaccept is ok sorry for the noise  well in that case perhapsyou should add an explanation somewhere about what exactly we have to doto accept the CLA
; general
OK sorry for the noise in the midtime I received an email saying thatthe CLA is signed so I guess the form is sufficient
; general
LGTMThanks for contributingCLA sign verified
; general
We use a special encoding for the commit messages as described in httpsgithubcomakkaakkablobmasterCONTRIBUTINGmdPlease update the commit message to    doc Update ZeroMQ pubsub port mismatch between doc and code example
; general
nothing to be sorry about but you should actually forcepush your new commit
; general
Updated commit forcedpushed
; general
backported to release22
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator653
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator653
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator652
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator652
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator658
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator658
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator658
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator658
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator661
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator661 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
Rebased this I will merge it when Kitty is happy I have run this code many 30 times on build servers so I feel confident
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator661
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator661 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
Ticket 2930 timeout changing throttler mode makes Kitty sorry Unrelated to this so I will merge
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator660
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator660
; general
The build was a success so shall I merge Id like to get the snapshot docs published
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator656
; general
very good catch1
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator656
; general
Great work Bjrn This is indeed a nice catch and an impressive shortening of cluster convergence times
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator663
; general
Fixed based on review
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator663 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
The failure is in an accidentally pushed old test that was removed againPLS REBUILD ALL
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator664
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator664
; general
Looks great to me
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator668
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator668 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
So the test that failed normally takes around 41 seconds and this run it timed out at 5 seconds I think the timeout in the test is too tightPLS REBUILD ALL
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator669
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator669
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator659
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator659
; general
BTW I will add something to documentation also
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator671
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator671
; general
Apart from formatting LGTM
; general
I second that LGTM apart from the formatting
; general
Added documentation and fixed formatting
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator671
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator671
; general
Looks Great To Me
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator670
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator670
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator666
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator666
; general
perhaps time to merge this
; general
Thanks for the reminder
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator667
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator667
; general
fixed review comments
; general
gakesson please sign the CLA httpwwwtypesafecomcontributecla
; general
We use a special encoding for the commit messages as described in httpsgithubcomakkaakkablobmasterCONTRIBUTINGmdPlease create a ticket and update the commit message to    act ticketnumber Improve semantics for BoundedBlockingQueue
; general
patriknw Oh silly of me to believe you didnt have a process for these kind of things  I need to become a watcher shepherd like Jules in Pulp Fiction for the Akka space and the project owner can grant me this My assembla username is gakesson
; general
gakesson you should be able to become a watcher of the Akka space yourself
; general
So how is the process to close this issueAlso Im more familiar with Gerrit but I dont quite understand why the regtests dont run after each commit
; general
Yes I did and I signed it again to get twice the effect
; general
CLA verified then it needs a final approval by viktorklang
; general
Thanks for contribution gakesson
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator624
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator624
; general
The last commit was just to fix a typo in the commit message
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator625
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator625
; general
Apart from comments LGTM
; general
As Bjrn said LGTM
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator645
; general
Updated based on Bjrns comments Now includes deadlock report and a testFound a scalac bug too httpsissuesscalalangorgbrowseSI7203Deadlocks found for monitors and ownable synchronizersdeadlockthreada Id431 BLOCKED on javalangObject12e64ad7 owned by deadlockthreadb Id432at akkatestkitAkkaSpecCoronerSpecanonfun1anonfunapplymcVsp1anonfun2anon1recursiveSyncAkkaSpecCoronerSpecscala52  blocked on javalangObject12e64ad7at akkatestkitAkkaSpecCoronerSpecanonfun1anonfunapplymcVsp1anonfun2anon1recursiveSyncAkkaSpecCoronerSpecscala52at akkatestkitAkkaSpecCoronerSpecanonfun1anonfunapplymcVsp1anonfun2anon1runAkkaSpecCoronerSpecscala44at javalangThreadrunThreadjava722deadlockthreadb Id432 BLOCKED on javalangObject31aa6131 owned by deadlockthreada Id431at akkatestkitAkkaSpecCoronerSpecanonfun1anonfunapplymcVsp1anonfun2anon1recursiveSyncAkkaSpecCoronerSpecscala52  blocked on javalangObject31aa6131at akkatestkitAkkaSpecCoronerSpecanonfun1anonfunapplymcVsp1anonfun2anon1recursiveSyncAkkaSpecCoronerSpecscala52at akkatestkitAkkaSpecCoronerSpecanonfun1anonfunapplymcVsp1anonfun2anon1runAkkaSpecCoronerSpecscala44at javalangThreadrunThreadjava722
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator645 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
PLS REBUILD ALL
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator646
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator646
; general
Updated based on Rolands commentsId also be keen to know if my usage of javautilconcurrent objects CountDownLatchSemaphore is the best it can be I just did a quick skim of the package javadoc and picked what looked rightI am getting test failures on my local builds sampleclustertransformationTransformationSampleSpec akkaioTcpConnectionSpec but Im hoping theyre more to do with general build instability at the moment
; design
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator647
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator647
; general
I think it would be better if this was a trait that can be mixed in to various types of tests not only AkkaSpec For example MultiNodeSpec is not a AkkaSpec and it would be very useful for those tests as well
; general
yes I agree that making it a trait would be better I always forget that not every test suite somehow extends AkkaSpec
; general
Made into a separate object so it can be reused There wasnt a straightforward mixin I could make for tests because nonAkkaSpec tests have different beforeafter methods and its difficult to know which ones to overrideI looked at Timer and ScheduledThreadPool I wasnt sure that ScheduledThreadPool was an improvement over using a single thread since its not as simple as just scheduling the task and then possibly cancelling it Id need to shutdown the ScheduledThreadPool too to avoid leaking the thread right Timer has automatic thread cleanup but with some quirks that seem to make it undesirable
; design
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator647
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator647
; general
LGTM would you care to add it to MultiNodeClusterSpec also
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator657
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator657
; general
Made StressSpec duration configurable
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator676
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator676
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator627
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator627
; general
Thanks for the explanation LGTM
; general
Ah I was completely lost in the dungeon
; general
I might be missing something but somehow this feels like an awfully wide interface for something which conceptually just has two operations and offers some convenience methods on top
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator630
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator630 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
It doesnt compile
; general
Saw that Java code in akkadocsrstjavacodedocsagentAgentDocTestjava wasnt using the singletons factory methodDo we have a convention to use eg create for java interop here or should Java just stick to using apply
; design
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator634
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator634 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator635
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator635 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
Doesnt compile mate
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator635
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator635 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
Dont use the Build Kitteh as an IDE make it compile and pass test locally before pushing
; general
Something aint adding up hereThe triggering PR contains        AgentInteger agent  AgentcreateInteger5 ec        AgentInteger agent  Agentcreate5 ecBut Kitteh says    error AgentDocTestjava38  expected    error     AgentInteger agent  AgentcreateInteger5 ecHow can kitteh be erroring on the predelta version of the offending lines  It definitely builds cleanly on my local machine
; general
Seems weird try to rebase and squash commits
; general
Trying now not sure how happy github is about squashing alreadypushed commits though  If it all goes pearshaped Ill recreate the branch and send a fresh PR with everything in a single commit
; general
its your own branch so pushing f to squash shouldnt be an issue
; general
New ball of string for kitteh lets see if she plays nicely with it
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator638
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator638
; general
Yay Happy Kitteh wonder why she go so upset before
; general
Now that things worked out for the Kitteh I still wonder whether the interface Agent should have so many abstract methods Would it not make sense to do it more like Traversable where you implement foreach and get all the rest for free Here it would probably suffice to give get and alter one or both or those would it not
; general
Im not sure that theres much reuse to be had youre assuming that all Agents will be using STM directly In Kevins example he just wants to shim something on top of a SecretAgent right
; general
ah okay there were some missing pieces of information here so all is good now LGTM
; general
viktorklang build something on the Agent interface yes  Delegating to another instance  See here for the usecase httpsgistgithubcomkevinwright5038696
; general
1 I like the SecretAgent name
; general
aside from the comments LGTMand SecretAgent is alright since it is private Agent007 would be even more fun
; design
Patrik I knew there was a reason to ping everyone what would we do without you
; general
good copbad cop
; general
so theres one doc comment to fix and the migration docs to write it would be okay with me if you want to keep all the glory to yourself otherwise Ill pick it up and add one commit tomorrow
; general
Im happy to do the doc comment and make SecretAgent final but not sure where the migration docs go
; general
migration guide httpsgithubcomakkaakkablobmasterakkadocsrstprojectmigrationguide21x22xrstyou can just edit the existing section Brand new Agents
; general
Cool expect another commit then
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator638
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator638
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator629
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator629
; general
Updated with a new take on the problemIf this actors mailboxes are empty when we try to get the lock then we can back off since someone else has picked them up and processed them
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator632
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator632 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
Thats weird Out of diskspace on the jenkins Alert opsrelated
; general
Nope not out of disk space max 60 used on any volume Seems like a2 lost the mapping to home or some maybe some credential glitch Will restart the jenkins slave
; general
PLS REBUILD ALL
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator636
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator636 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
Very interesting failure
; general
Very interesting failures indeed
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator639
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator639 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
This is not ready for review Closing
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator641
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator641
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator649
; general
Cleaned up and rebased
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator649
; general
Great job This is a really nice improvement
; general
Any more comments Good to merge after fixing Rolands comment
; general
LGTM only style comments
; general
Fixed and squashed Waiting for validation
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator649
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator649
; general
LGTMImports are usually a very important part of Scala code and most documentation out there omits them
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator622
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator622
; general
LGTMFYI see also the related ticket suggesting implicitNotFound annotations httpswwwassemblacomspacesakkatickets3095
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator622
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator622
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator651
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator651
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator631
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator631
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator642
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator642
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator640
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator640
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator648
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator648
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator650
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator650 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
Preparing another attempt
; general
LGTM apart from my minor nitpick
; general
backported to release22
; general
I think the scenario is correct I had test runs with the increased timeout and it is OK now LGTM
; general
Great work drewhk and rkuhn
; general
Baaah sorry wrong button Reopened
; general
backported to release22
; general
unsealedshould be ready for merge and backport
; general
backported to release22
; general
I have worked through akkaactor now puh
; general
It was SupervisorHierarchySpec
; general
LGTM you mopped up quite a few warnings its a shame that we dont have the tools yet to ensure that the thicket does not grow back I hear SBT 013 has some handy features linking to other docs which might eventually allow us to have PR validation fail when breaking doc linksThis is the first step right Ie just ScalaDoc warning removal no significant improvements to content or did you not encounter old cruft  undocumented methods
; general
improvements of content mostly reduction of wrong content was done in the second commit httpsgithubcomakkaakkacommit0f25106b853b077f027995c804f9748b2cf079cabut it is only akkaactor so far
; general
backported to release22
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator610
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator610
; general
is there a ticket for fixing or removing stop writing in cases of backpressure and resume afterwardsapart from that LGTM
; general
1198 has been merged
; general
so can we merge this in
; general
Just a moment
; general
PLS REBUILD ALL
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator643
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator643
; general
Why We have to guarantee binary compatibility in all our dependencies
; general
I mean we dont expose any Netty API I know of
; design
Otherwise it looks correct but I am pretty surprised by this revert
; general
If the user has to upgrade Netty due to our upgrade and that breaks hisher usage of Netty then we are not BC We cannot change dependencies in a patch release unless those are BC as well
; general
Well fine for me
; general
Shouldnt this reported then as a known issue
; general
yes excellent point
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator609
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator609
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator606
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator606
; general
The rst docs must be changed also
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator611
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator611
; general
any reason for another syntax of the commit line I thought it was supposed to be    pro3488 update to config library 102
; general
I was trying out something this one works better in flowdock ie generates a clickable tag which will show you the whole history of this ticket number Do you see disadvantages
; general
I just wanted to know so that we all can use the same This is fine better
; general
backported to release22
; general
Could also mention We follow the imperative present tense style for commit messages more info herehttptbaggerycom20080419anoteaboutgitcommitmessageshtml
; general
yes sounds good will amend
; general
backported to release22
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator619
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator619
; general
ill push a dryd up version tomorrowAm 26022013 1819 schrieb drewhk notificationsgithubcom LGTM  Reply to this email directly or view it on GitHub
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator620
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator620
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator621
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator621
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator621
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator621
; general
LGTM once youve processed the other comments
; general
LGTM after processing the comments
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator623
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator623
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator616
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator616
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator617
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator617
; general
Nice catch LGTM
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator612
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator612
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator615
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator615
; general
LGTM apart from one minor comment
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator626
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator626
; general
Anytime rkuhn  Thanks for the review
; general
ah new policy please prefix the commit messages first line with pro 3019
; general
rkuhn is that correct
; general
LGTM but should there not also be a Java version
; general
use imperative present tense style for commit messages
; general
kittynotetoself ignore 23005454cat Synchronaising pray
; general
Can I merge this
; general
LGTM no need to backport
; general
It needs to be backported It is in the PR description
; general
ah then I think it deserves a ticket
; general
yes ticket  merge  backport
; general
Should we release the plugin with this patch or should we just make this switch regardless What are the implications
; general
Should the akkasbt plugin be cross published against 012x and 013 or do we only support the sbt version currently used by this akka version
; general
I dont know Is it difficult to cross publish the plugin I dont know how to do that
; general
I also dont know whether that is a good or bad idea lets ask harrah for his opinion
; general
If you use 012x for your build you can build against both 012 and 013  Youd apply or revert this patch as appropriate  It might be a good idea to build against both since there will be 012 users for a while  I dont think 013 can build against 012 at this time see this threadhttpsgroupsgooglecomdtopicsimplebuildtoolMGx7EN0uBGEdiscussion which I havent looked at yet
; general
Thanks for the info Would it be possible to integrate both plugin builds at the same time so we cannot forget I guess wed need some project duplication magic can we just make a new project which does the crossbuild and gets the source files from this unmodified project
; general
Yes I think that should work  def pluginProjectsbtVersion String scalaVersion String Project   and then use it once for each sbt version
; general
take a look at httpsgithubcomjrudolphsbtcrossbuilding its pretty easy to do builds for 012 and 013 with it
; general
Any news on this
; general
bantonsson will publish 221 version for sbt 013 and adjust the build for future cross publishing
; general
Currently only Scala will port to Java after the text is reviewed
; general
Looks great Port to Java squash and push please
; general
Updated added Java squashed fixed misdirected arrows in image
; general
backported to release22
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator748
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator748
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator744
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator744
; general
changed UdpPacket  Udp
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator744
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator744
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator750
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator750
; general
good name change
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator779
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator779
; general
1 I like the new names better
; general
Thanks I worked on an outdated branch and this change seem to have not survived the mergeLGTM
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator753
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator753
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator753
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator753
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator747
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator747
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator756
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator756
; general
Good work Endre
; general
PLS REBUILD ALL
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator829
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator829 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator829
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator829 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator856
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator856
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator755
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator755 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator755
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator755 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator757
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator757
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator759
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator759
; general
Fixed all remaining pieces will squash after final reviewWait a few FIXMEs that you can help me to decide what to do with Do we need to support temp actors That would require the SelectChildName dance in VirtualPathContainer also How to replace actorFor in camel ActorComponent How to replace actorFor in ActorTransportAdapter
; general
Of course we need to support temp actors otherwise you wont get any responses to ask that go to other JVMs amirite
; general
no AFAICS Patrik is only asking about systemactorSelectiontempblah and there Id say no
; general
yes it was about actorSelection and my vote is also no
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator797
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator797
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator797
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator797
; general
Fixed last set of review comments and squashedWill merge when kitty approves
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator804
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator804
; general
LGTM the arrows are not aligned though
; general
that is up to scalariform I think there is some limit when it skips aligning when the difference is too big
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator761
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator761
; general
kittynotetoself ignore 23145738cat Synchronaising pray
; general
great work looks much better this way
; general
Updated according to review
; general
LGTMnext time you dont have to close pull requestgit commit amendgit push f origin the branch
; general
LGTM for 22
; general
oakwhiz Thanks for contributing I will cherrypick to 22x
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator741
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator741
; general
LGTM what was it used for
; general
it is still used it just that the explicit configuration of the plugin is not neededmvn execjava is corresponds to sbt runmain
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator743
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator743
; general
Great work 100
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator745
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator745
; general
apart from nitpicks LGTM
; general
Fixes according to review
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator752
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator752 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
The failure was in an unrelated test akkaclusterSplitBrainWithFailureDetectorPuppet
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator752
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator752 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator784
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator784
; general
I guess you mean backport to release22 right
; general
yeah I mean 22
; general
reverted the rsync removal
; general
kittynotetoself ignore 23037693cat Synchronaising pray
; general
Tested on Windows it works 1
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator728
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator728
; general
epic  LGTM
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator727
; general
Great work Bjrn Apart from comments LGTM
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator727
; general
LGTM aside from the clusterView refresh
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator729
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator729
; general
apart from the isTerminated business it LGTM
; general
Cleaned up the isTerminated business by adding a watched ask to the ThrottlerManager
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator732
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator732
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator725
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator725
; general
No packets were harmed during the construction of this PR LGTM
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator724
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator724
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator738
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator738
; general
Updated based on feedback I reduced the wait time for expectNoMsg Id previously used a marker message like you suggested but sometimes the messages arrived out of order
; general
This checks oversize on write side only right Should we also check it on the read side Could protect somewhat against malicious clients
; general
I think this should be configurable If we were able to decode the  message then we might just be happy and deliver it My proposal would be that the policy should be configurable  takelog  droplog takenolog
; general
Configurable would be nice with default of droplogLGTM
; general
I would vote for the default to be takelog If we have a healthy decoded  message why would we drop it
; general
A malicious system could flood a system with oversized messages causing OOM
; general
A malicious system can totally ruin a system via remoting in many other  ways
; general
Yes so we should just add one more I think that the default should be symmetrical on send and receive
; general
I think we need to enforce the maximum frame length in both directions no exceptions ideally it would be done on the transport level leading to closing the stream if the length field is out of bounds
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator738
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator738
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator751
; general
Improved info in error messages Check payload size on read side discarding ovesized payloads and logging an errorI definitely agree with a default of drop because higher layers might make assumptions about the size of data that they receiveNot sure if I see a strong case for configurability given that the max payload size is already configurable eg If you set the max payload size to 10000 bytes why would you want to ignore that value in some cases The only thing I can think of is a use case for having different payload sizes for reading vs writing But perhaps we could wait for someone to actually request this feature
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator751
; general
Good point about the nested actor Ive changed thatIn the new version hopefully Ive got the meaning of localAddress and inbound correct Im assuming that when EndpointReader is created that handlelocalAddress  localAddress I tested with an assert I also capture the EndpointWriters value of inbound Hopefully thats correct
; design
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator754
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator754 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
PLS REBUILD ALL
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator766
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator766
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator734
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator734
; general
I have a slight feeling that it is not this simpleThe leader can have those statuses also for special cases when there is no member in UpCould this change result in convergence for those cases when it should notSee GossipleaderOf
; general
patriknw Ive been thinking a bit about this and since we only care about the convergence on the leader as of now to do the leader actions I dont think that its a problem
; general
Yes as I said it was just a feeling and I could not come up with a concrete scenario where it would be a problemGood that you thought it through
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator734
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator734
; general
500 threads really
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator731
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator731
; general
viktorklang I lied it peaked on my machine at 498 but then I only have 4 cores wink
; general
That is scary How could I have missed that1
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator730
; general
Cool  1
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator730
; general
the wonders of async events and sync testing LGTM
; general
Tricky stuff LGTM but my understanding is somewhat limited
; general
LGTM after fixing those two cases
; general
Good catch LGTM
; general
well rather embarrassing for me and all reviewers I blame vaccation
; general
I actually saw the error logged and made mental note of it  just forgot when chasing another bug  It is good to see it fixed
; general
yes indeed we should buy a set of brown paper bags LGTM
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator722
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator722
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator723
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator723
; general
apart from the two questions it LGTM
; general
PLS SYNCHkitteh is blind
; general
kittynotetoself ignore 23158986cat Synchronaising pray
; general
PLS REBUILD ALL
; general
kittynotetoself ignore 23248777cat Roger Rebuilding prvalidatorpercommit for 396e3104 e67ac3df c9cba183 rotatinglight
; general
kittynotetoself ignore 23330920cat Synchronaising pray
; general
Thanks for porting patriknw LGTM
; general
Please sign Typesafe CLA httpwwwtypesafecomcontributecla
; general
I have not completed the review I will continue tomorrow
; general
akara I think this will be a great contrib
; general
Typesafe CLA signed using github account
; general
Thanks for the updates You should create a ticket for this feature httpdocakkaiodocsakka221projectissuetrackinghtmlThen squash the commits into one and use our special commit message encoding which here would be something like    con ticketnr Aggregator contributionI will take care of cherrypick to master when review is completed
; general
Ticket created Please do one final review If all OK Ill squash the commits and use the proper commit message encoding
; general
Thanks for this submission having this code available will further the research for how to write these kinds of actors in a nicer way with less pitfallsPlease add one more commit addressing the two documentation issues and consider using an immutable persistent data structure instead of the mutable WorkList
; general
I think I have addressed all the comments except the use of Vector forreasons given in the comment Im ready to pack this into a single commitwith proper identification as Patrik requested Before I do so Id like todo one last check if all are OK with the current state of the pull requestWill finalize once OK received ThanksOn Tue Sep 10 2013 at 430 AM Bjrn Antonssonnotificationsgithubcomwrote LGTM  Reply to this email directly or view it on GitHubhttpsgithubcomakkaakkapull1676issuecomment24152816
; general
LGTM on further thought this WorkList is appropriate for highrate scenarios
; general
Thanks Will squish the commits and finalize with proper commit messageAkaraOn Wed Sep 11 2013 at 1013 AM Roland Kuhn notificationsgithubcomwrote LGTM on further thought this WorkList is appropriate for highrate scenarios  Reply to this email directly or view it on GitHubhttpsgithubcomakkaakkapull1676issuecomment24258195
; general
This pull request can be closed and replaced by httpsgithubcomakkaakkapull1728 which has the same contribution squashed into a single commit properly named according to Akka processes and requirementsThank you all for the great input and discussions on this pull request
; general
Has been superseded by 1728
; general
kittynotetoself ignore 23257862cat Synchronaising pray
; general
this is a heroic effort
; general
As the horse salesman said it is not blind it is brave
; general
I couldnt verify all details but it LGTM from a little distance great work Endre
; general
kittynotetoself ignore 23327286cat Synchronaising pray
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator720
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator720
; general
after the fix LGTM
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator711
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator711
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator721
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator721
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator717
; general
yes looks good Patrik will see how it works
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator717
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator706
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator706
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator703
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator703
; general
I need to merge this now since there is no genjavadoc 03 for 2101 the build failed
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator708
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator708
; general
Yes this looks good at first glance Since the whole thing is driven by the gossip I dont see a problem in adding dynamic changes here since eg the routers will respond correctly as it is Since this is the case we can defer the decision on that feature
; general
alright sounds good
; general
Pretty impressive Like
; general
Completed all subtasks Ready for final review
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator715
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator715
; general
some nitpicks and the cluster docs could probably use some beautification ie its  it is and friends but in general it LGTM
; general
Fixed review comments I will let jenkins test it once more before merging
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator715
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator715
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator707
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator707
; general
ouch you are right that ticket cannot go into 221
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator704
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator704
; general
joa Please sign the CLA httpwwwtypesafecomcontributeclaWe cant merge anything not even removal of 3 characters in the documentation without that in placeThanks
; general
We use a special encoding for the commit messages as described in httpsgithubcomakkaakkablobmasterCONTRIBUTINGmdPlease update the commit message to    doc Correct typo in cluster docs
; general
CLA has been signed and commit message changed
; general
LGTMThanks Signature Verified
; general
backported to release22
; general
Please just rebase on top of master and squash your commitsThank you
; general
Merged and squashed
; general
fixed incorrect call using noarg call
; general
LGTMThanks for contributingCLA signature verified
; general
Great Thank you
; general
We use a special encoding for the commit messages as described in httpsgithubcomakkaakkablobmasterCONTRIBUTINGmdPlease update the commit message to    act 3547 Resolve high contention on unsubscribeAddresssTermination
; general
Great work finding and fixing Welcome to the exclusive club of those who have contributed to the dungeon
; general
backported to release22
; general
Very unexpectedly When backported version will be released
; general
soon we aim at next week or the week after that
; general
Good news  Thank you
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator702
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator702
; general
I added the update to genjavadoc 04 on top of this seemed logical
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator702
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator702
; general
Thanks rkuhn exactly what I wanted to do once you checked it in
; general
So I would like to have some review of this one so I can merge and build the bits
; general
my review not the one youre looking for but LGTM
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator699
; general
Also a good question is if we should update the Scala version with this PR or we should do that separately It was just very hard to verify this change otherwise
; general
As of now it is easy to test it in release21 as well the alltest target is in AkkaBuild but I see no problem with updating the version since this was the only real issue
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator699
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator700
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator700
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator701
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator701
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator698
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator698
; general
LGTM thanks for this pull request Please sign the CLAhttptypesafecomcontributecla so we can merge it in
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator694
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator694
; general
I will also add a section about ActorRef equality and sending to remote actors in the migration guide
; general
Great work Patrik Apart from the DeathWatch thingy it looks solid
; general
See also my mailing list suggestion httpsgroupsgooglecomdmsgakkadevbXpaIEQCdEgqxbZgqW1ekJ
; general
I have changed DeathWatch optimized toString and fixed other minor thingsRemaining is to go through the documentation addressingrst and add to migration guide
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator712
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator712
; general
Added the migration guide section
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator716
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator716
; general
Can you take a look at this so we can merge it optimized toString documentation updates Im sure more clarifications and revisions are needed but we also have the related tickets for actorFor and Terminated changed toRawString to to toSerializationFormat
; design
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator716
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator716
; general
after fixing those few small things in the docs LGTM
; general
toString and toStringWithAddress now use same optimized string builderFixed the docsLet me know if you want to review more if I can squash and merge
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator733
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator733 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
thanks Kitty will fix
; general
added doc Ref vs Path
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator733
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator733 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
the second kitty failure was a hickup Same build number as the first one
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator736
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator736 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator737
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator737
; general
Can I merge this now
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator693
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator693 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
Wonder why that test didnt fail when I ran the tests locally But at least we found an issue in our own tests wink
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator697
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator697
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator691
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator691 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
Ah setting SOKEEPALIVE is problematic on Linux as well I should not have reenabled that test
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator692
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator692
; general
Aside from comments LGTM
; general
I dont know what it means but trust you LGTM
; general
LGTM incl 1 for Viktors comment
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator709
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator709
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator689
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator689
; general
inverted the doublenegative logic and prepended akka as per Bjrns suggestion
; general
is there any way we can force this to be always enabled when doing a release because that would mean that I could safely turn it off in my local dev without having to remember to use different sbt settings for release
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator690
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator690
; general
just use sbt Dakkagenjavadocenabledfalse when you start your sbt shell the release script will not do the same
; general
I still think this is a bad idea And we should do as we do for the scaladoc plugin
; general
That means that i have to have two different sbt alias It doesnt feelthat difficult to force it for release mode  I might create a pullrequestPatrikOn Mar 13 2013 at 1327 Roland Kuhn notificationsgithubcom wrotejust use sbt Dakkagenjavadocenabledfalse when you start your sbt shellthe release script will not do the sameReply to this email directly or view it onGitHubhttpsgithubcomakkaakkapull1241issuecomment14838283
; general
Okay Ill look into what that could mean But that will take some time
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator695
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator695
; general
Ive added Dakkagenjavadocenabledtrue to the akkadocs2akkanightly jobs on the slow jenkins and to akkanightlyakkamultinodenightly on moxie
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator688
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator688
; general
I should probably have made a bit more of an explicit description I have taken this across the SBT river as far as I can see now it would be great if Console experts could chime in
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator688
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator688
; general
LGTM great work Patrik and Endre
; general
I rebased and fixed the ResendState match
; general
kittynotetoself ignore 23110633cat Synchronaising pray
; general
Thanks a lot for contributingWe use a special encoding of the commit messages Please rewrite the commit message to    con Add a few more details to the cluster client docsCLA sign verified
; general
LGTMPlease squash the commits it is ok to force push to this branch to update the pull request
; general
PLS SYNCHThis is to make our pull request validator jump back into action
; general
kittynotetoself ignore 23005667cat Synchronaising pray
; general
taylorleese Thanks for contributing I will cherrypick to 22x
; general
Should be backported to 22
; general
LGTM for the code I see I cannot judge whether you missed some actors
; general
I searched for all actorOf and systemActorOf inside the remoting project  should be fine AFAIK
; general
By the way I think there are some future callbacks that should use this dispatcher as well NettyTransport has an  implicit executionContext that looks scary
; general
patriknw that is true but the Netty driver already has a dispatcher setting so it probably should use that one
; general
you mean usedispatcherforio setting I think that should be reserved for the pure io stuff
; general
Yes I referred to that setting I dont know The only reason we use another dispatcher and not the threadpool is that we use our nicer futures But the wrapped futures still run on the io threadpool I dont see any reason to use the remoting dispatcher here instead of th io one
; general
ok convinced use the io dispatcher there thenand check other usages of future callbacks or scheduled tasks or whatever that requires an ec
; general
You convinced me too so if dispatcherio is given it will use that if not it attempts to use the remoting dispatcher and only finally falls back to the default one
; general
makes sense LGTM
; general
kittynotetoself ignore 23005469cat Synchronaising pray
; general
So what were the symptoms We have this ticket httpswwwassemblacomspacesakkatickets3064 where the TcpConnectionSpec just freezes
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator589
; general
The symptom is that this test failshttpsgithubcomsprayakkacommitbbc7ae7132954d1c078fc908230e2c6112ac882eL0R48
; general
I dont think issue 3064 is related to this bug The problem fixed with this pull request is that the TcpListener does not send an AcceptInterest message to its selector if accepting of connections was not stopped by the configured BatchAcceptLimit
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator589
; general
Btw we accidentally fixed the same typos
; general
Damn I thought I can beat you guys to it
; general
drewhk could you do the merge
; general
Whats the status here
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator588
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator588
; general
I think you are weakening the test too much if you can add something like my comment then LGTM
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator588
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator588
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator590
; general
Wow weird LGTM
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator590
; general
great find LGTM
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator590
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator590
; general
I think this is in release21 alsoLGTM
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator596
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator596
; general
LGTMA slightly related question what is the sender when the supervisor strategy is invoked It would be convenient if it was the the failing child because then one could define different strategies for different children
; general
it is I might as well add this in here as well
; general
Yeah there is some code that uses that fact
; general
I also added a test case while I was at it so that it breaks in the obvious way if someone tries to make Failed a SystemMessage
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator592
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator592
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator591
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator591 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
Failure was in UnreachableNodeRejoinsClusterSpec
; general
high time that we nuke that feature and its test
; general
yes we shall nuke rejoin but all these failures in UnreachableNodeRejoinsClusterSpec is all about timeout changing throttler mode
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator604
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator604
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator603
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator603
; general
Do we want to permit null messages Usually logging works better when it includes a log message Can you change your commit message to match the usual Akka conventions httpdocakkaiodocsakkasnapshotdevdeveloperguidelineshtml
; general
I see now that null messages are in master already so ignore the first part of my comment
; general
Theres no need to delete any repos starting out at the head of your old branch    git reset HEAD    git commit am fix logging of null messages see 3086    git push f origin yourbranchnameIll merge it even though it has a slightly strange commit message
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator602
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator602
; general
Timing is the only issue What could have caused the timing difference to older versions
; general
drewhk 500 ms margin on the slow jenkins is not something I would trust
; general
That is true 1
; general
drewhk you made me think more about this The log show AskTimeoutException Shouldnt only Some or None be returned from these methods no exc Reopened the ticket Have fun
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator595
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator595
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator608
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator608
; general
LGTM apart from nitpick
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator607
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator607 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator605
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator605
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator605
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator605
; general
LGTM apart from the scaladoc for gracefulStop
; general
fineanother way of doing it that doesnt involve a global singleton is httpsgithubcomakkaakkapull1146 and that pattern is used at other places tooJust sayin
; general
Yes that is actually much nicer Ill rewrite it
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator555
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator555
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator556
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator558
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator558
; general
added more info
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator562
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator562
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator557
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator557
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator560
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator560 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
aside from the warning it looks great
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator573
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator573
; general
LGTM squerge squash  merge
; general
actually squergefp incl forwardport
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator563
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator563
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator566
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator566 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
pls rebuild all
; general
richdougherty I think that it has to be uppercase PLS REBUILD ALL
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator571
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator571
; general
looking great carry on
; general
Thanks I will apply all of your recommendations
; general
endre could you close this PR and squash your commits and rebase onto master and open a new PR
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator25
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator25
; general
Closing iteration 2 Preparing new PR
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator569
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator569 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
Looks good or does it hide something highly nonobvious to me
; general
Its basically a renamemovecleanup in the sbtmultijvm project according to what we decide at the conference and a publishing to scalasbtartifactoryonlinecomNo real code changes in the plugin compared to 020M5The branch has been tested on scalable1 and it pulled down the dependency from scalasbtartifactoryonlinecom without problems and ran all tests including multinode
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator568
; general
doesnt look bad but with SBT you never know unless you cut yourself  translation I trust you
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator568
; general
You shouldnt trust me rkuhn I think I just noticed a bug when doing this gist httpsgistgithubcombantonsson5004611I added it there if anybody gets an urge to test it out winkIt has all versions set to 211 which doesnt work yet of course so you have to change the akka versions to 210 and the plugin version to 21SNAPSHOT and publish the plugin locally
; general
Sorry about the confusion The fix is solid
; general
Great Good job But you need to provide Java versions of all samples as well
; general
Yes it should be java also eventually
; general
Good I knew I could trust you Is there a ticket for it So it is not forgotten
; general
eventually pop there it is httpswwwassemblacomspacesakkatickets2502javaversionofclusterusagedocumentationOn Fri Sep 14 2012 at 1158 AM Jonas Bonr notificationsgithubcomwrote Good I knew I could trust you  Is there a ticket for it So it is not forgotten  Reply to this email directly or view it on GitHubhttpsgithubcomakkaakkapull703issuecomment8556696 Patrik NordwallTypesafe httptypesafecom   The software stack for applications thatscaleTwitter patriknw
; general
I pushed the fix for LeaderChanged to this branch httpswwwassemblacomspacesakkatickets2518
; general
Wow TLDR  Superficial code review done LGTM
; general
I dont expect more review here so I merge this before continuing with next section
; general
Ah I knew I had forgotten something the casts are necessary right now because those operations are not optimally typed in Scala 2100M7 I have created httpswwwassemblacomspacesakkatickets2504removecaststofiniteduration so that the casts are removed once we update to the next milestoneRC
; general
Aside from comments LGTM
; general
Unless you object Ill take this to mean that after fixing the relative imports I can merge
; design
Nothing in cluster
; general
Nothing much in remoting either but Ill doublecheck the change is supposed to be very small so I wasnt surprised
; general
There wont be any more milestones AFAIK
; general
aside from my nitpicking it looks great
; general
Sorry about the Changes from PR commit message
; general
Patrik the updates are in
; general
DataStream duration  FiniteDuration is in Removed all Durations aside from this previously
; general
Looked at the diff once more Found a few minor things as you can see viktorklang will you take another look at it I think it is good enough to go in before RC1 Its low risk that it breaks anything else It can probably be improved a few more iterations but I think it will be natural to do that when we start building the routers on top of thisIn other words you got my 1 Lets see if Viktor thinks it should go in before or after RC1
; general
patriknw Alright Ill have a stab at it tmro morning
; general
Latest suggestions applied
; general
Looks gorgeousPlease squash all commits into one and merge that inExcellently done
; general
Congrats Awesome work HelenaOn Fri Sep 21 2012 at 208 PM Helena Edelson notificationsgithubcomwrote YaY  Reply to this email directly or view it on GitHubhttpsgithubcomakkaakkapull706issuecomment8762559 Patrik NordwallTypesafe httptypesafecom   The software stack for applications thatscaleTwitter patriknw
; general
Awesome to work on the cluster
; general
Great job Bjorn LGTM
; general
Great work Bjrn merge it
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator576
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator576
; general
Added a small fix so we only log log initialization errors directly to the StandardOutLogger
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator584
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator584
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator577
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator577
; general
LGTM after small fix
; general
LGTM and 1 for the fix
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator582
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator582
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator575
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator575
; general
Id like to keep the doc build warningfree so please leave the toc in either set the depth to one or zero need to try it out or move it to the bottom of the page
; design
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator574
; general
As we discussed the warning was because of the wrong link not the  absence of toctree so there are no warnings now  the toc can be  dropped safely
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator574
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator586
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator586
; general
I assume youre talking about httpdownloadjavanetmaven2comsunjerseycontribsjerseyscala110ea
; general
Yes Exactly as well as the jersey lift stuff Care to help out with that
; general
jerseyscala should be a 15 minute integration Ill do a readup on jerseylift and see whats needed I should probably have time during the weekend to try to integrate it
; design
Also the code in httpisgd1KjhI uses ThreadLocal Im assuming that it could be a problem for Actor usage We just need to make sure that were on the same Thread when we access the ThreadLocal
; design
jerseyscala integrated here httpsgithubcomviktorklangakkatreeI updated the Scala Sample Service as well
; general
Im giving up on jerseylift  I simply cannot get Grizzly to do the right thing ie initialize the LiftFilter properlyIll move onto try to integrate AtmosphereBut I guess the question is how its supposed to interact with the servicesPerhaps we should have a discussion about it
; design
Thanks for trying Lift integration out If its a problem with Grizzly we could perhaps move to embedded Jetty Grizzly was just the simplest thing that could work Regarding Atmosphere I was simply thinking binding an actor as a Comet actor by annotating it the same way as done with jaxrs Do you think there will be issues Write up your thoughts and ideas and Ill try to reply But I havent looked at Atmosphere impl yet Thanks a bunch for trying this out It would be a killer to have Akka actors comet enabled
; design
Check the latest commit
; general
is this a keeper
; general
okay all fixed merge
; general
Ive added ThreadLocalRandom from jsr166y into akkajsr166y
; general
Cool I switch to ThreadLocalRandom
; general
Ok Fixed some of the issues and some new ones
; general
Ok Can we merge now
; general
1 for merge22 C outside
; general
Cool Ill merge I meant we have 14 C inside Freezing our asses off
; general
Ledsen om jag lt lite grinigJonas BonrCTOTypesafe  The software stack for applications that scalePhone 46 733 777 123Twitter jbonerBlog letitcrashcom On Feb 5 2012 932 AM patriknw replyreplygithubcomwrote 1 for merge 22 C outside  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull297issuecomment3816318
; general
Hey man sorry for the delay could you sign the CLA online so I can accept the PRhttpwwwtypesafecomcontributecla
; general
I totally forgot about CLA  I just signed it
; general
Whats the point of the partial rename It should be either all or nothing but unless there is some very compelling reason Id side with nothing here because pipeTo is semantically clearer and more intuitive than the rather meaningless pipe
; general
pipeToab doesnt denote what gets piped to wherea pipeTo b does however
; general
pipea b is not clearer than pipeToa b and Id strongly prefer the names of the imports to be equal so that not two are needed What concerns the direction it doesnt make sense to pipe an actor to a future only the other way around so the types are what makes the prefix thing really clear Its exactly the same problem  solution as for ask
; design
If you see pipeab do do not see what is an actor or what is a future or if it has anything to do with either actors or futures You must agree that pipeToa b is nonsensical from a grammatical point of viewIf you want both methods to share name then you need to come up with something that works for bothOr come up with a better argument for your cause
; design
Well pipeToa b is exactly at the same level of nonsensical as a b What I mean to say is that it is quite common to make the transform between prefix and infix notation in Scala And the situation is exactly the same for ask Plus we are looking for a verb because the name shall designate an action and the only English sentences which begin with a verb are using the imperative form pipe A to BHey wait a minute pipea tob Problem solved Only one method needed add to to PipeToSupport This would even get rid of the stupid compiler warning I think we have a winner If you do that then please rename all occurrences including PipeToSupport Thinking about that PipeSupportpipeTo should probably be the only one which retains the prepositionOne thing I wondered all along why dont we also make forward a pattern and Im thinking it should be exactly like my proposal above forwardmsg toactor Or scrap it altogether and tell people to use reftellmsg sender
; design
If pipeTo was commutative as  then I wouldnt have a problem with itpipea tob  a pipeTo b Whats the added valueGood idea with forward I can definitely buy that
; general
Haha Im a bit daft this evening you meanpipea b and then have pipea tob instead of pipeTo
; general
The point of the currently in master pattern implementations pipefuture actorRef method was to allow optimizing away the hopefully HotSpotelided allocation of the PipeToSupportPipeableFuture object if someone wanted that It will probably much more common that the infix pipeTo is used because of the chaining possibilities and general easy on the eyes factor So I believe we need the explicit pipea b and the implicit apipeTob and the more DSLish pipea tob could be just thrown in for good measure if we like itSo rename the implicit def pipeTo also to pipe making it import akkapatternpipe for everything and possibly add a toactor method on the support class But oh my this would also allow the following    Future  doSomethingExpensive  to actorRef
; design
Ill take a stab at it tomorrow
; general
I reviewed the code and read your discussion and can only say that I was also confused of why the double imports pipe pipeTo
; general
Revised all this merge
; general
Alright last check before merge
; general
Looks great 1
; general
I concur looks good While youre in there could you update the Scaladoc for the concrete strategies to not claim to always restart but instead include something which mentions those directives
; general
Fixed the Scaladoc also
; general
I think this is ready but please take a look and especially is there any more place in Future that should be completed with ExecutionException
; general
Fixed review comments but the null actor That is something we will have to investigate further I guess
; design
yes Id say open a ticket for the null actor case and leave it alone in this ticket Looks good
; design
Created ticket for the null actor case httpwwwassemblacomspacesakkatickets1768actorcellactornullafterfatalerrorincreate
; design
looks good for me
; general
Ok Thanks guys Great reviewsOn Tue Jan 31 2012 at 321 PM viktorklangreplyreplygithubcomwrote 1 merge  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull281issuecomment3739750 Jonas BonrCTOTypesafe  The software stack for applications that scalePhone 46 733 777 123Twitter jboner
; general
Excellent work Roland no docs to update
; general
true true just wanted to push before drained battery forces me to go to sleep P
; general
Im fairly sure I removed those a couple of weeks back but 1 from me
; general
This is from master anyway So unless you removed them in a branch they are still there Ok Ill merge
; general
great thanks mate
; general
Awesome to get this in Cant wait to see it in action
; general
Committed fixes after review
; general
Just updated to latest sources from Doug and made it the default dispatcher
; general
1 Great job
; general
Great work Patrik
; general
What caused the problem
; general
Different call chains for pinned and threadpool so it was never done for pinned I moved the name adjustment to a place which is used by both
; general
ok if nobody has no comments I am intending to merge it tonight
; general
time is ticking anybody has some comments
; general
oops too late sorry I have been very busy I did look at it briefly not all and didnt see any major issues
; general
HiThanks for contributinghave youve signed the Akka CLA If not ping me at viktor dot klang at typesafe dot com and Ill send you the CLA for you to sign and send backAlso this fix is only partil it yet doesnt fix this httpsrawgithubcomjbonerakkamasterakkadocsjavaloggingrst
; general
Theres a new form for signing the CLA at httpwwwtypesafecomcontributecla we can merge this as soon as youve signed please add a comment here so we notice
; general
Hey man sorry for the delay could you sign the CLA online so I can accept the PRhttpwwwtypesafecomcontributecla
; general
Great work Patrik
; general
good change keeping the codebase clean after removing things which complicated other things is probably the most distinguishing feature of good development
; general
alright Ill do the additional improvements when Im done with the other thing I started
; general
Fixed as discussed
; general
PS I did sign the CLA
; general
Very nice catch sort of embarrassing that this slipped through reviews
; general
Thanks for merging
; general
Have you seen torvalds guidelines on writing good commit messagesThe body of the commit message can be several paragraphs andplease do proper wordwrap and keep columns shorter than about74 characters or so That way git log will show thingsnicely even when its indented
; general
aside from my comments LGTM
; general
Aside from the comments excellent work Eugene
; general
Great thanks Eugene
; general
wow that must have been exhausting
; general
Fixed after review comments
; general
I really like this sample because it is nontrivial We need more stuff like this
; general
Looks very cool nicely done Patrik
; general
Ping me when its merged Patrik so I can commence the release
; general
Merged I will do the Java equivalent in M4 ticket 1722On Tue Jan 24 2012 at 439 PM viktorklang replyreplygithubcom wrote Ping me when its merged Patrik so I can commence the release  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull257issuecomment3634268 Patrik NordwallTypesafe httptypesafecom   The software stack for applications thatscaleTwitter patriknw
; general
I dont see what broke the build no tests were modified I did run them prior to the push
; general
helena No Worries The failure is unrelated Ive created a tickethttpswwwassemblacomspacesakkatickets2582
; general
I introduced a bug in previous refactoring Ill update test and fix
; general
LGTM have you ran the test with timing tests turned on and verified that it works
; general
I kicked it on scalable1 successful
; general
Yes I verified itSent from my iPhoneOn Oct 7 2012 at 717 AM Viktor Klang  notificationsgithubcom wrote LGTM have you ran the test with timing tests turned on and verified that it works   Reply to this email directly or view it on GitHub
; general
ThanksSent from my iPhoneOn Oct 7 2012 at 843 AM Patrik Nordwall notificationsgithubcom wrote I kicked it on scalable1 successful   Reply to this email directly or view it on GitHub
; general
Im sorry for the delay just a headsup Ill look into this when I come back from vacation next week
; general
Again Im sorry it took a bit longer to get back to you Rick but I think this is nearly there After fixing the few little things I commented on please merge master into this branch and after you push make a comment on this pull request containing the text PLS REBUILD ALL to verify that it compiles and passes all tests
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator59
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator59
; general
Corrected and fixes pushed as commentedPLS REBUILD ALL
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator188
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator188
; general
fixed importsPLS REBUILD ALL
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator189
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator189
; general
The Build kitteh is not a replacement for compiling and testing locally Please compile and test locally before pushing
; general
Yeah I know But building locally with sbt doesnt show any errors Im not used to sbtSbt compile seems to compile only scala sourcesI dont know how to build the project then
; general
The build KITTEH actually merges your branch with master and builds the result there have been changes which you need to adapt your code to since your branch is quite old Please merge master into your branch start SBT anew and build again you should then see the same failures locally
; general
While checking your changes all looking good apart from the kitteh failure thank you I see that you already did that merge could you possibly have left SBT running without a reload
; general
In maven you say simply mvn clean install  thats allAs I noted I dont know sbt and documentation is very sparseBy accident I found something like buildreleaseWhat is the workflow to build akka with sbt
; general
see herehttpdocakkaiodocsakka204devbuildingakkahtmlBuildingAkka just sbt test would do it which runs ALL tests and takes half an hour or so You can select a closer scope by saying sbt akkadocstest since your work is only in that subproject
; general
Local tests passed Try againPLS REBUILD ALL
; general
Thanks the KITTEH will hopefully pick it up within the hour
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator190
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator190
; general
Thanks for submitting this The comments I made are meant to make it a bit more genericCould you please also sign the CLAhttptypesafecomcontributecla
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator24
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator24
; general
I have added Dakkatesttagsexcludelongrunningtiming to all akka jobs at jenkinstypesafecom so it is prepared for merge
; general
I sneaked in a fix of the remoteConfig for sbt console also RemoteActorRefProvider was not defined correctly
; general
You can wait with reviewing this There will be another change which will make this super awesome
; general
Thanks for the suggestion Roland Now it is super slick
; general
Very nice indeed Is this odcumented in the migration stuff
; general
yes I wrote a section int migration guide
; general
switched the settings to on in the docs
; general
change all off to on and add the refapart from that great with this summary
; general
Fixed both DEBUG and ref to testkit
; general
Apart from the one issue I think this sample is demonstrating a lot of good practices
; general
Aside from the comments it looks great thanks Patrik
; general
Closing this without merge Started new pull req rebased on master httpsgithubcomjbonerakkapull257After review I will convert to java
; general
The return value is only used in one place akkaactorsrcmainscalaakkaactordungeonChildrenscala line 195 where the whole bugfix originatedShould probably be removed to be symmetric with the other lifecycle calls
; general
It looks good to me but I cannot claim complete understanding of the context
; general
Is this ready guys
; general
I did one PR and then remembered seeing the akka dev guidelines about rebasing in git I ended up closing the other PR in an attempt to figure out how rebasing worksAlso I have applied the implementation changes you suggested
; design
The parameter list for nodeConfig is niceIm not sure if the advanced runOn and fNode syntax adds that much value Almost same as the more explicit    val ports  Mapsend  1991 receive  1992    runOnsend receive         systemsettingsconfiggetStringakkaremotenettyport must beportsmyself        By the way ifNode syntax should be improved httpswwwassemblacomspacesakkatickets2126
; general
so instead ofscalaifNodesend receive          1991                1993      youd favorscalaifisNodesend receive          1991       else         1993      I like the more advanced runOn syntax since I think that situation would come up fairly often  I agree that the isNode version of ifNode is preferable and my advanced ifNode syntax now seems like overkill to me and feels cleaner as a match statementscalaport  myself match      case send  1991     case receive  1992     case   1993 systemsettingsconfiggetStringakkaremotenettyport must beport
; general
I like isNode but we should be aware of that it can be written as    if Setsend receive contains myself 1991 else 1993
; general
the pattern match is also nice but remember backticks or name the role names with initial upper case
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator23
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator23
; general
rkuhn please comment we talked about this but Im not sure if we decided anything specificMy opinion vararg parameters to nodeConfig OK tuple params to runOn No remove ifNode add isNode
; general
patriknw I agree better remove all custom control structures and use normal if expressions the gain of the custom syntax is not worth its own cognitive weight
; general
Superseded by pull request 837
; general
When I look in the project I see ReliableProxySpec using blackhole as well but its not in the diffApart from that LGTM
; general
My PR job told me so also  Thanks for noticing Fixed
; general
Yes LGTM The only surprising thing is that so few tests needed to be changed
; design
nice work Nikolay and Roland
; general
Aside from my comments I think its cool
; general
okay fixed all nondisputed comments merging now
; general
looks good now I just should not forget to merge that into the remotecleanup branch
; general
Fixed everything that was commented
; general
Looks great to me
; general
Fixed everything you excellently commented Thats what I get for doing that way too late
; general
I must apologize  I did not read the Developer Guidelines until after I submitted this pull request  Ill redo this but I might not get to it until next week
; general
thanks for contributing but this test is not verifying very muchone should run more advanced things including remoting and stuff to be surereal applications are invaluable for testing this and jconsole to look at threads
; general
Agreed also with ticket 1693 theres a onestopshop for daemonicity
; general
Thanks for the responsivenessWDYT about something along these lines    diff git aakkaactorsrcmainscalaakkaactorSchedulerscala bakkaactorsrcmainscalaakkaactorSchedulerscala    index 02c67c6153c70a 100644     aakkaactorsrcmainscalaakkaactorSchedulerscala     bakkaactorsrcmainscalaakkaactorSchedulerscala     97 97  import akkautilinternal TimerTask HashedWheelTimer Timeout E28792 HWTimeout     import akkaeventLoggingAdapter     import akkadispatchMessageDispatcher     import javaioCloseable    import javautilconcurrentatomicAtomicReference    import javautilconcurrentatomic AtomicLong AtomicReference      import scalaannotationtailrec     import akkautilinternal     import concurrentExecutionContext     13714 13717  class DefaultSchedulerhashedWheelTimer HashedWheelTimer log LoggingAdapter         val continuousCancellable  new ContinuousCancellable         continuousCancellableinit           hashedWheelTimernewTimeout            new TimerTask with ContinuousScheduling             new AtomicLongSystemnanoTime  initialDelaytoNanos with TimerTask with ContinuousScheduling                def runtimeout HWTimeout                  executor execute new Runnable                    override def run                       receiver  message                      Check if the receiver is still alive and kicking before reschedule the task                     if receiverisTerminated logdebugCould not reschedule message to be sent because receiving actor  has been terminated receiver                    else scheduleNexttimeout delay continuousCancellable                    else                       val driftNanos  SystemnanoTime  getAndAdddelaytoNanos                      scheduleNexttimeout DurationfromNanosdelaytoNanos  driftNanos max 1 continuousCancellable                                                                            16211 16512  class DefaultSchedulerhashedWheelTimer HashedWheelTimer log LoggingAdapter         val continuousCancellable  new ContinuousCancellable         continuousCancellableinit           hashedWheelTimernewTimeout            new TimerTask with ContinuousScheduling             new AtomicLongSystemnanoTime  initialDelaytoNanos with TimerTask with ContinuousScheduling                override def runtimeout HWTimeout Unit  executorexecutenew Runnable                  override def run                     runnablerun                  scheduleNexttimeout delay continuousCancellable                  val driftNanos  SystemnanoTime  getAndAdddelaytoNanos                  scheduleNexttimeout DurationfromNanosdelaytoNanos  driftNanos max 1 continuousCancellable
; design
Be careful to prevent negative drift if the task is potentially longer than the scheduling period
; general
Patched with suggestion by Viktor TestedA negative drift is only possible when execution is ahead of schedule Its very unlikely because of the way wheel timer works Anyway if there is a negative drift then delay before the next execution will be longer delay  negativedrift This will take execution back to scheduleIf you mean negative delay not negative drift then the max 1 guards for negative delay in the expression delaytoNanos  driftNanos max 1 So delay will never be less than 1 nanosecondIve tested corner cases like frequency  tickduration It works fine
; general
I meant negative delay sorry I missed the max 1 statement Looks good to me
; general
I like this because it makes it possible to remove my implementation of it akkaclusterFixedRateTask I tried this new scheduler with akkaclusterFixedRateTaskSpec and it pass the test fine1
; design
Yupp there was implicit conversion Unfortunately FiniteDurationmax isnt an option as well since its return type is Duration not FiniteDuration and I dont want asInstanceOfI replaced it with Mathmax which will be inlined by JVMcomputation of delaytoNanos might also be optimized moved out of scheduling loop but I am unsure we want to sacrifice readability in sake of tiny bit of performance
; general
Durationmax is fixed in Scala but the fix is not part of 210M7 were waiting for RC1 to come out to get rid of some casts to FiniteDuration
; general
1 good job
; general
1 Good job
; general
Im assuming that all you guys currently working on the Camel stuff review eachothers code Im way too busy at the moment
; general
Great thanksWill haev more look next week prepping for M3 now docspree tomorrowcraploads of stuff to do
; general
Generally youll open a pull request per ticket
; general
And dont forget to remove the remote branch once the pull request is merged
; general
LBATM Looks BadAss To Me
; general
merged after fixing review comments
; general
This is ready to go in but I guess I wait until PR 725 is in since I refer to stuff there
; general
725 is in
; general
only genuine with the backing vocals of the Klang singing What is loveI trust that you have taught jenkins this new trick
; general
LGTM even though I cant hear the music
; general
The idea here is that since neither publish repo nor maven central is set it should publish to default and then rsynch like the others
; general
Aside from comments 1
; general
I wonder if we should have some kind of Gotchas section Thinking of non obvious things like dont shutdown the first node since that is the controller shutdown can only be done from the first node the controller dont ask for node address of a node that is shutdown grab the node before shutting down dont use playerconductor from other threads than the main test thread such as from inside an actor future scheduled task
; design
1 Perfect I will refer to this when completing the how to write cluster testhttpswwwassemblacomspacesakkatickets2437
; general
The gotcha section is an awesome idea Will add it after the sample
; general
please add a description of how to run a single test    multijvmtestonly samplemultinodeMultiNodeSampleSpec
; general
Sure its in the multijvm documentation but it never hurts to repeat it
; general
All review comments have now been addressed
; general
pull request is still not automatically mergeable have youve based it on the wipcamel branch
; general
Its finally done nowThank you git for being so simpleNOT   And thank you documentation writers for adding all these comprehensive examples of how to do thinks in gitsarcasm
; general
Git is extremely simple which is not the same thing as being easy
; general
Alright for me to be able to merge this into master it needs documentation both rst docs and ScalaDocIs it featurecomplete otherwise
; general
Please note that were going to attempt to ship M3 tomorrow evening so were in a bit of a hurry if this is going to make it in there which Id love
; general
I think its feature completeI dont know if Im able to make it with the documentation by tomorrow evening thoughIll copy what was there for 13 and change it to be correct for the rstintellij really needs a gen doc refactoring
; general
Dont forget ScalaDoc
; general
Nicely done Ivan hope to see you again at ScalaDays
; general
Ive copied most of the docs from the zeromq api docs they had far more inspiration than I didBut scaladocs and rst docs are present now
; design
And they are correct no rest for the wicked
; general
yes they should be correct AFAIKFor the rst document I changed what was in the 13 branch
; general
You mean release13
; general
Very high code quality all over great work
; general
while this looks good shouldnt we also change the referenceconf default or did I miss that one
; general
I vote for changing referenceconf sizemax  4096tosizemax  64Still good to have rather big sizefactor since I would guess that many use IO
; general
1 for using max 64 by defaultthink the size factor should be more like 3
; general
I changed referenceconf All fine with the new values
; general
1  merge
; general
Apart from question LGTM
; general
have you checked pluginssbt it might be correct just asking
; general
Yeah nothing too bad there it also doesnt affect the generated poms of our artifacts
; general
LGTM19 sep 2012 kl 1621 skrev Viktor Klang  notificationsgithubcom Yeah nothing too bad there it also doesnt affect the generated poms of our artifacts   Reply to this email directly or view it on GitHub
; general
What are the prerequisites to using schoir
; general
Having N machines with ssh access to the outside world and that are able to communicate to each other on any port
; general
Works on Windows
; general
Also git and sbt should be running
; general
I tested the master on cygwin but the actual slaves only on linux
; general
The docs should probably include setup instructions Viktor KlangAkka Tech LeadTypesafe httpwwwtypesafecom  The software stack for applicationsthat scaleTwitter viktorklang
; general
Theres not much to setup but Ill add what is required
; general
Great thanks its just going to be less hassle on the ML if its clear inthe docs
; general
Btw did you see this httpwwwassemblacomspacesakkatickets1468
; general
Yes did you see my comment
; general
Commented on the ticket
; general
Please create tickets for the different things that needs to be done as weve talked about in the comments Prefix the name with CAMEL
; general
Alright so heres what I think should be done Create a branch jbonerakka named wipcamel based on current master then redo the pull request onto that branch then merge the pull request into thatThen when the Camel stuff is ready for testing by users and all junk is removed and theres rudimentary docs we merge it into masterWere going to release M3 real soon and by the number of open ticket for Camel my guess is that it wont make it but Id gladly be proven otherwiseWDYT WorkableWho of you guy dont have any commitrights to jbonerakka Piotr and Nene
; general
Re timeline As far as untyped actor goes it looks to me that if the producer part is ready then the rest should be cosmetics So there is a chance Raymond Dhananjay how far are you with your tickets Do you need a handViktor what happens if we miss it Whats the next dateRe commitrights I dont have them yetRe branch could you please create one for me in the meantime Ill redo the pull request
; design
Ive created and pushed the branch and emailed Jonas to add you guys
; general
Ive just sent a pull request to wipcamel
; general
I have commit rights on jbonerakka
; general
Ill wait for the pull request to finish and then break up my work in tickets and do pull requests per ticket on wipcamel Is that correct guys Im going to have a lot of time tomorrow to do this so let me tell you how it goes end of tomorrow about the M3 release
; general
Ray Yes that sounds like a good plan
; general
Added you guys
; general
I love you man
; general
Ive changed the semantics to cascade only failures
; general
Can I merge now plz
; general
u can haz me smiley
; general
Looks like something youre really enjoying 1 from me
; general
well I certainly enjoy good debug output when encountering bugs
; general
okay feedback was good also necessary and incorporated send smileys my way
; general
is one  enough for merge
; general
Not all s are created equal
; general
Aside from my comments all looks fine
; general
ok to merge
; general
See my latest comment httpsgithubcomjbonerakkapull170
; general
Fun to see this take shape for 20
; general
How are things going here guys Id love to be able to ship this with 20M3 that is due at the end of this week will it be ready
; general
I addressed all issues except for the restarting of a concurrent socket actor The documentation for 13 is wrong too because the restart of the socket loses all configuration for that socket as they are all added through sending messages So to fix that it will need to change to be a constructor parameter I guessI did make the last changes on a different branch I rebased on master out of habit but I think that messes with the history of this pull requesthttpsgithubcomcasualjimakkatree20zeromqivan
; design
This is ready for a second round of review
; general
any thumbs up or down here
; general
Y U NO LEADER
; general
merge with current master and pushso we can just skip the mem verification I take it
; general
I think I misread the JMX docs regarding a heap mem max assertion in relation to used and committed by reading an and to be a plus So the change relects that with the addition of I had not seen it proved otherwise in my env
; general
Build is back to normal again
; general
Sorry about that
; general
Shouldnt there be something in the rst docs also A separate directory An index file listing the contribs and similar description as in the READMEmd
; general
I think experimentalindexrst should be adjusted also Remove the last sentence starting with Another reason for marking a module That was written with contribs in mind
; general
Added a fullfledged pattern impl to akkacontrib and integrated with the latest and greatest sbtsite plugin not yet published need to clone and publishlocal to make this branch runPlease review
; general
Ill review the pattern tomorrow
; general
Great I like itThe pattern solves a specific problem in a nice wayWe should just remember that it doesnt solve endtoend guaranteed delivery and that is clearly stated That should be done at the application level
; general
When I tried out the branch it looked like the akkacontrib tests werent compiled by the normal testcompile Is that intentionalThere was also an error scalariform for akkacamel during testcompileOtherwise great example LGTM
; general
no good catch
; general
I redid the branch because there was some weirdness going on those camel commits were not supposed to be in there for one forcepushedThe comments should all have been addressed now this needs to wait until sbtsite is published
; general
Rebased and all tests run A dryrun release done Change jenkins akkadocs job to sphinxgenerate instead of sphinxMerging
; general
I have done some changes based on review feedback Please review again Dont want to mess up the Guardian
; general
even though we have some implicit checks it would be nice to add a direct test case which exercises this logic especially since the implicit check does not lead to a failed test result
; general
I think I added such a test in ClusterDeathWatch see PR 749
; general
that only tests the AddressTerminated business but not the code which is supposed to properly terminate the remotedeployed children when the remote system is shutdown
; general
got it I will add a test for ordinary shutdown
; general
Fixed review comments lock for removeChild test for shutdown test for Switch
; general
LGTMGreat with a test even though the verifyShutdown flag isnt that clean No idea how to solve it otherwise
; general
Several LGTM Does that mean that I can merge or do you need more time to review it
; general
Its about as dirty as it gets
; general
All fixed Merge or more review
; general
Go ahead and merge 1
; general
First thanks for your great feedback and this contribution I and others will review it with great interestSecond have you signed the Akka CLA We need that to be able to accept contributions
; general
No how do I sign the CLA
; general
Great work You mentioned other obligations hence my question shall I take it from here or do you want to polish and merge it
; general
Please feel freeI just sent the signed CLA to Patrick I saw there are quite a bit of comments If it was left to me I could not get to this until this or next weekendNikolay From Roland Kuhn replyreplygithubcomTo Nikolay Botev bono8106yahoocom Sent Monday January 9 2012 427 AMSubject Re akka Ask 2 201 Great work You mentioned other obligations hence my question shall I take it from here or do you want to polish and merge it Reply to this email directly or view it on GitHubhttpsgithubcomjbonerakkapull201issuecomment3410745
; general
Okay pulled into my own clone will push to akka repo once Im done with a few finishing touches and will then open a new pull request
; general
No comments makes me sad
; general
What does it solve What is the ticket
; general
httpswwwassemblacomspacesakkatickets1612But only by accident what it really does is that it clears up some accidental complexity within the active remote client
; general
Ok I have nothing to add Looks goodOn Tue Jan 10 2012 at 957 AM viktorklang replyreplygithubcom wrote httpswwwassemblacomspacesakkatickets1612 But only by accident what it really does is that it clears up some accidental complexity within the active remote client  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull205issuecomment3427014 Patrik NordwallTypesafe httptypesafecom  EnterpriseGrade Scala from the ExpertsTwitter patriknw
; general
Needs a squash to remove all those mergeson your branch dogit pullgit merge originmastergit reset originmastergit add Agit commit m Wonderful message about how this is the cluster metricsgit push origin nameofyourbranchThat should do the trick
; general
Never refactored a file name after removing the ClusterMetricsCollector trait Refactoring now
; general
info MetricsCollector info  must not raise errors when attempting reflective code in apply 1 millisecondINFO 09242012 213133557 pool6thread8 MetricsCollectorSpecakkaMetricsCollectorSpec Hyperic SIGAR was not found on the classpath or not installed properly Metrics will be retreived from MBeans and may be incorrect on some platforms To increase metric accuracy add the sigarjar to the classpath and the appropriateplatformspecific native libary to javalibrarypathinfo  collect accurate metrics for a node  FAILED  11 millisecondsinfo   1489316104 was not less than or equal to 954466304 MetricsCollectorSpecscala100info   orgscalatestexceptionsTestFailedExceptioninfo   at orgscalatestmatchersMatchersclassnewTestFailedExceptionMatchersscala155info   at akkatestkitAkkaSpecnewTestFailedExceptionAkkaSpecscala54info   at orgscalatestmatchersMustMatchersMustMethodHelpermustMatcherMustMatchersscala884info   at orgscalatestmatchersMustMatchersLongMustWrappermustMustMatchersscala1278info   at akkaclusterMetricsCollectorSpecanonfun2anonfunapplymcVsp6anonfunapplymcVsp10applyOrElseMetricsCollectorSpecscala100info   at akkaclusterMetricsCollectorSpecanonfun2anonfunapplymcVsp6anonfunapplymcVsp10applyOrElseMetricsCollectorSpecscala85info   at scalaruntimeAbstractPartialFunctionapplyAbstractPartialFunctionscala37info   at scalacollectionTraversableLikeanonfuncollect1applyTraversableLikescala283info   at scalacollectionimmutableHashSetHashSet1foreachHashSetscala130info   at scalacollectionimmutableHashSetHashTrieSetforeachHashSetscala286info   at scalacollectionTraversableLikeclasscollectTraversableLikescala283info   at scalacollectionAbstractTraversablecollectTraversablescala105info   at akkaclusterMetricsCollectorSpecanonfun2anonfunapplymcVsp6applymcVspMetricsCollectorSpecscala85info   at akkaclusterMetricsCollectorSpecanonfun2anonfunapplymcVsp6applyMetricsCollectorSpecscala79info   at akkaclusterMetricsCollectorSpecanonfun2anonfunapplymcVsp6applyMetricsCollectorSpecscala79info   at orgscalatestWordSpecanon2applyWordSpecscala2179info   at orgscalatestSuiteclasswithFixtureSuitescala1974info   at akkatestkitAkkaSpecwithFixtureAkkaSpecscala54info   at orgscalatestWordSpecclassinvokeWithFixture1WordSpecscala2176info   at orgscalatestWordSpecanonfunrunTest1applyWordSpecscala2185info   at orgscalatestWordSpecanonfunrunTest1applyWordSpecscala2185info   at orgscalatestSuperEnginerunTestImplEnginescala198info   at orgscalatestWordSpecclassrunTestWordSpecscala2185info   at akkatestkitAkkaSpecrunTestAkkaSpecscala54info   at orgscalatestWordSpecanonfunrunTests1applyWordSpecscala2250info   at orgscalatestWordSpecanonfunrunTests1applyWordSpecscala2250info   at orgscalatestSuperEngineanonfunorgscalatestSuperEnginerunTestsInBranch1applyEnginescala260info   at orgscalatestSuperEngineanonfunorgscalatestSuperEnginerunTestsInBranch1applyEnginescala249info   at scalacollectionimmutableListforeachListscala309info   at orgscalatestSuperEngineorgscalatestSuperEnginerunTestsInBranchEnginescala249info   at orgscalatestSuperEngineanonfunorgscalatestSuperEnginerunTestsInBranch1applyEnginescala265info   at orgscalatestSuperEngineanonfunorgscalatestSuperEnginerunTestsInBranch1applyEnginescala249info   at scalacollectionimmutableListforeachListscala309info   at orgscalatestSuperEngineorgscalatestSuperEnginerunTestsInBranchEnginescala249info   at orgscalatestSuperEnginerunTestsImplEnginescala326info   at orgscalatestWordSpecclassrunTestsWordSpecscala2250info   at akkatestkitAkkaSpecrunTestsAkkaSpecscala54info   at orgscalatestSuiteclassrunSuitescala2303info   at akkatestkitAkkaSpecorgscalatestWordSpecsuperrunAkkaSpecscala54info   at orgscalatestWordSpecanonfunrun1applyWordSpecscala2297info   at orgscalatestWordSpecanonfunrun1applyWordSpecscala2297info   at orgscalatestSuperEnginerunImplEnginescala362info   at orgscalatestWordSpecclassrunWordSpecscala2297info   at akkatestkitAkkaSpecorgscalatestBeforeAndAfterAllsuperrunAkkaSpecscala54info   at orgscalatestBeforeAndAfterAllclassrunBeforeAndAfterAllscala213info   at akkatestkitAkkaSpecrunAkkaSpecscala54info   at orgscalatesttoolsScalaTestFrameworkScalaTestRunnerrunScalaTestFrameworkscala180info   at orgscalatoolstestingRunner2runRunner2java16info   at sbtTestRunnerdelegateRunTestFrameworkscala57info   at sbtTestRunnerrunTestFrameworkscala51info   at sbtTestRunnerrunTest1TestFrameworkscala71info   at sbtTestRunnerrunTestFrameworkscala80info   at sbtTestFrameworkanonfun6anonfunapply8anonfun7anonfunapply9applyTestFrameworkscala178info   at sbtTestFrameworkanonfun6anonfunapply8anonfun7anonfunapply9applyTestFrameworkscala178info   at sbtTestFrameworksbtTestFrameworkwithContextLoaderTestFrameworkscala190info   at sbtTestFrameworkanonfun6anonfunapply8anonfun7applyTestFrameworkscala178info   at sbtTestFrameworkanonfun6anonfunapply8anonfun7applyTestFrameworkscala178info   at sbtTestsanonfunmakeSerial1anonfunapply8applyTestsscala121info   at sbtTestsanonfunmakeSerial1anonfunapply8applyTestsscala121info   at scalacollectionTraversableLikeanonfunmap1applyTraversableLikescala233info   at scalacollectionTraversableLikeanonfunmap1applyTraversableLikescala233info   at scalacollectionLinearSeqOptimizedclassforeachLinearSeqOptimizedscala59info   at scalacollectionimmutableListforeachListscala76info   at scalacollectionTraversableLikeclassmapTraversableLikescala233info   at scalacollectionimmutableListmapListscala76info   at sbtTestsanonfunmakeSerial1applyTestsscala121info   at sbtTestsanonfunmakeSerial1applyTestsscala121info   at sbtstdTransformanon3anonfunapply2applySystemscala47info   at sbtstdTransformanon3anonfunapply2applySystemscala47info   at sbtstdTransformanon5workSystemscala71info   at sbtExecuteanonfunsubmit1anonfunapply1applyExecutescala232info   at sbtExecuteanonfunsubmit1anonfunapply1applyExecutescala232info   at sbtErrorHandlingwideConvertErrorHandlingscala18info   at sbtExecuteworkExecutescala238info   at sbtExecuteanonfunsubmit1applyExecutescala232info   at sbtExecuteanonfunsubmit1applyExecutescala232info   at sbtConcurrentRestrictionsanon4anonfun1applyConcurrentRestrictionsscala159info   at sbtCompletionServiceanon2callCompletionServicescala30info   at javautilconcurrentFutureTaskSyncinnerRunFutureTaskjava334info   at javautilconcurrentFutureTaskrunFutureTaskjava166info   at javautilconcurrentExecutorsRunnableAdaptercallExecutorsjava471info   at javautilconcurrentFutureTaskSyncinnerRunFutureTaskjava334info   at javautilconcurrentFutureTaskrunFutureTaskjava166info   at javautilconcurrentThreadPoolExecutorrunWorkerThreadPoolExecutorjava1110info   at javautilconcurrentThreadPoolExecutorWorkerrunThreadPoolExecutorjava603info   at javalangThreadrunThreadjava679
; general
Ticket created httpswwwassemblacomspacesakkatickets2546
; general
Not fixed yet
; general
Added more failing tests and fixed them Not too proud of the solution The whole SubclassifiedIndex and the cache should probably be cleaned uprewritten
; design
diff git aakkaactorsrcmainscalaakkaeventEventBusscala bakkaactorsrcmainscalaakkaeventEventBusscalaindex 07c49f9e61f1d3 100644 aakkaactorsrcmainscalaakkaeventEventBusscala bakkaactorsrcmainscalaakkaeventEventBusscala 1597 1597  trait SubchannelClassification  this EventBus        private def removeFromCachechanges SeqClassifier SetSubscriber     cache  changesmap  case c s  if cachecontainsc c cachec  s else c SetemptySubscriber     cache  changes map  case c s  c cachegetOrElsec SetemptySubscriber  s
; design
As part of this ticket we should also fix the issue with remote deployed routees see the ticket httpswwwassemblacomspacesakkatickets2535comment168349053comment168349053
; general
We solve the other pieces as separate tickets so merging this
; general
Another try in a few moments
; general
This is horrible cant you searchreplace rn  n
; general
what do you mean the r in there is the whole point of the change Or is that not necessary anymore on certain broken platforms
; general
perhaps I have misunderstood the problemI thought the r was added by multiline string at compile time on windows and similar to stripMargin we could add a replace so that the code is maintainable
; general
no the multiline string picks up whatever source file encoding the last editor used whereas the current solution fixes things in a really obvious way
; design
perhaps I have misunderstood the problem I thought the r was added by multiline string at compile time on windows and similar to stripMargin we could add a replace so that the code is maintainableThe problem was that on Windows r was added on the nix script and on nix the r was omitted on the Windows batch file Now it is ugly but generates the correct output no matter what We can probably find a better solution though
; design
ok I still think that sreplaceAllrn n and sreplaceAlln rn is more obvious than all the  encoding in the string anyway  you have a release to cut
; general
ok I still think that sreplaceAllrn n and sreplaceAlln rn is more obvious than all the  encoding in the string anyway  you have a release to cutExcept the replace should be platform dependent since the multiline string will not contain rn on nix and will not contain lonely n on Windows So we need some fixLineEndingsstringToFix isInputWindows isOutputWindows that fixes all four cases
; general
Aside from missing test LGTM
; general
I did not mean to close this It just happened somehow
; general
LGTM nice with a simple bug for once
; general
Yes thank you for the help Patrik
; general
nice one  LGTM
; general
Nice Maybe a few words in the RST docs
; general
LGTMjust to make it appear in the issues page
; general
LGTM please backport to release22
; general
regarding the RST docs the changed code samples are shown in rst I think that is enough
; general
This is ready for merge and backport to release22
; general
backported to release22
; general
LGTM only reds  freakin awesome
; general
Yes thanks to Bjrn who spent all the greens on this
; general
LGTM please backport to release22
; general
LGTM I would have forgotten that other file again
; general
This is ready for merge and backport to release22
; general
Included ticket number in commit Now it is ready for merge and backport to release22
; general
does this want to be backported to rephrase does the 220 release process benefit from this
; general
it is not needed it can wait
; design
in that please merge and add a ticket for backport to 221
; general
ok backport ticket created
; general
All code in docs must be compiled and imported into the text see the other rst files for info on how it works
; general
code extracted  ready to roll
; general
Coolio will have a look tmro morningThanks
; general
Would love to merge it in but is not possible could you catch up with master Thanks
; general
Excellent cleanup and bugfix patriknw
; general
LGTM nice boyscouting Please backport to release22
; general
This is ready for merge and backport to release22
; general
backported to release22
; general
what do you think about also describing how to change the default mailbox to the MPSC mailbox and there also highlight its limitations
; general
LGTM after alignment of scalajava docscreate separate ticket for how to change default mailbox
; general
patriknw but theres docs for both java and scala here
; general
yes but they dont look the same for no reason You added for example Configuration name bullets to the java docs only
; general
backported to release22
; general
in principle LGTM but lacking docs RST and referenceconf
; general
please use the correct commit message encoding
; general
Wicked  Thanks
; general
I like extending the sbt prompt but I also think prompt changes are better in your own globalsbt  works across all sbt projects and can be customised per user
; general
How about having this one as the official Akka prompt and then one can override it in hisher own globalsbt
; general
Sure Sounds good
; general
Somehow I like your version better than the current so Ill base my upcoming fix on this instead of on master
; general
I added the LARS fix to this pull request
; general
Dont forget to remove the unused shift variable at line 513 or wherever it ended up now
; general
This means that we will always log AssociationErrorEvent RemotingErrorEventCould that be too much How does it look like if you run the simple cluster sample and dont start the first seed node immediately
; general
Here is another example of logging that can be annoying httpstackoverflowcomquestions17360303akkaremotesystemshutdownleadstoendpointdisassociatedexceptionMy opinion is that we should log the serialization and oversize messages but not life cycle events at error level unless logremotelifecycleeventson default
; general
That kind of logging should not happen now since the SHUTDOWN reason is sent with the Disassociate message
; general
what about deserialization errors in the EndpointReader Otherwise LGTM
; general
What about them
; general
they are not handled symmetrically with serialization errors in the EndpointWriter a missing deserializer or a missing message class will be published as association error and fail the whole thing but that seems like wielding a really large hammer to me
; design
It was a decision before that we terminate associations in case of serialization errors
; general
thinking more about this any possible change of the readers error handling would be too large for 220 so if you do something along those lines please open a new PR for that
; general
So you want to finegrain deserialization errors
; general
serialization errors are called transient and ignored but logged while deserialization errors are currently fatal
; general
Originally all serialization errors were fatal but the team wanted the serialization case to be transient The case of deserialization is different since if it is caused by framing errors then that association is completely broken and can be only recovered by reassociating
; general
my assumption is that below serialization we still have framing actually multiple layers since deserialization errors ending up in that spot occur after having decoded the out protobuf message envelope already meaning that the failure is transient more likely than not but we should not worry about that right now please create a ticket on Rollins to revisit thisSummary this one LGTM
; general
No if a framing header is corrupted bitflip then the framing still decodes the frames but with incorrect length and every subsequent frame will have incorrect length  causing for example ProtoBuf to choke on each and every message after Also finegraining the deserialization errors is problematic since the exceptions can be Serializer specific without any preliminary knowledge
; general
But in any case we should sit down and decide on what should be logged at what level under what conditions and what should be published as an event what should cause association abort and what should not what should be logged during startupshutdown what is considered transient what is considered fatal what should be configured and to what extent And document all this
; design
which is why I usual favor a magic word in combination with enforced message size limits giving enough redundancy to make framing reliable enough and yes we should sit down after the vacation period and properly talk all this through
; general
I definitely think reassociating and therefore resynching framing fits the reliable enough criteria
; general
nope you didnt get my point deserialization errors may well be due to wrong but correctly transferred content where reassociation is neither necessary nor beneficial
; general
How do you define wrong but correctly transferred content What kind of exception from a Serializer counts as wrong but correctly transferred content
; general
All of them that is my point What you are proposing amounts to a layering violation the transport is responsible for transporting the bytes the Akka layer is responsible for serializationdeserialization
; general
Ok but then we need to add some kind of error detection code to the akka protocol That is doable of course
; general
could you create a ticket so we dont forget
; general
Tickets were created this one is ok to backport and merge
; general
backported to release22
; general
Hey man Ill give this a final review tomorrow before I merge it inThanks
; general
Great  thanks ViktorThe next thing Id like to add to the ByteString classes is a custom iterator also changing a few other things to remove boxingunboxing for many operations no API changes but maybe some additions I have something similar in my current project and Ive done some comparisons with ByteString  if all goes well this will speed up some things by almost an order of magnitude I was waiting whether CompactByteString will be accepted in principle so I know what code to base it on This will be a new branch and merge request of course hope I can show a prototype next week or so
; design
the Java side of things might also want to get this treatment otherwise LGTM
; general
The Java doc did not mention mailbox config What should I add there
; general
the feature is the same so the docs should also be the same that they were not to begin with is something that is covered by the boyscout rule
; general
The language is not the same
; general
So I compared the two and all the differences were language specific except the note that I added to scala Since that note mentioned a marker trait I watered down that description in the Java docs
; general
looks good could you squash so I can merge  pick
; general
backported to release22
; general
adjusted according to suggestion
; general
This is ready for merge and backport to release22
; general
backported to release22
; general
LGTM backport to release22
; general
This is ready for merge and backport to release22
; general
backported to release22
; general
as usual backport to release22
; general
fixed the info box note
; general
This is ready for merge and backport to release22
; general
backported to release22
; general
Sorry manI can agree on having sideeffecting methods have parensI sort of let the previous PullReq slide since impact was low and its not our own method currenttimeMillisbut youll have to sell me the idea that we should treat referential opaqueness as sideeffecting
; general
I dont care about whether being not referentially transparent should be called sideeffecting or not What bothers me is the fact that a def without parentheses looks like a val This is misleading Didnt you already see issues with passing the sender should be sender along to some computation that might happen in the future andor in another threadTo speak with Daniel S who shares my point here In my opinion not using parentheses is just wrongBy the way If you look at the Akka code you will see that some occurrences of the methods I fixed already used parentheses You should at least be consistent
; general
Youll be able to use it without parenthesis no matter if it is declared with or without parenthesis
; general
Sure this is a little annoying Hence it is even more important to be consistent on the definition sideWhats the best documentation Code While the majority of the Akka code shows excellent style it offers poor documentation in this regardAlso look at autocompletion in IDEs If you use the parentheses they will show up in the autocomplete preview at least in the latest Scala IDE for Eclipse
; general
The problem is that it will offer no help whatsoever since you do not immediately understand when youre closing over this or not IMHO the problem of capturing this needs to be solved by some other means than sprinkling parens and hoping people understand the consequencesI do however agree that we should strive for uniformity no matter which side of the fence we are on
; design
Yes we need better protection if possible But using the parens is not useless It is a convention like so many others It will make at least some users like me aware of the issue
; general
I prefer having parens for a slightly different reason it reduces breakage if you replace the def with a val returning a Function0 Ideally there shouldnt be a difference between a method and a function in Scala and so I try to make my code reflect that although I do break this rule often it isnt on purpose
; general
Another disadvantage of not having parentheses at definition side Some users like me would like to use parentheses on call site This is not possible with the current noparens style
; general
That on the other hand is a very valid argument
; general
All right if this is a valid argument then lets merge this one
; general
Didnt Josh say that the semantics of  had changed
; general
He is wrong nothing changed You can try yourselftmp scala210Welcome to Scala version 2100201204201915283c9c18ddcc Java HotSpotTM 64Bit Server VM Java 16031Type in expressions to have them evaluatedType help for more informationscala def foo  foo Unitscala fooscala fooscala def bar  bar Unitscala barscala barconsole9 error Unit does not take parameters              bar
; general
Having carefully danced around Walters still image I must confess that I did not find any obvious deficiencies Apart from the spiritual one ie allowing instance reuse at all But as you say there may be use cases
; general
Can we do something to get rid of the ridiculously slowness of  akkaclusterAccrualFailureDetectorSpec It also fails intermittently on my machineinfo  mark node as available if it starts heartbeat again after being marked dead due to detection of failure  FAILED info   true was not false AccrualFailureDetectorSpecscala90info   orgscalatestTestFailedExceptioninfo   at orgscalatestmatchersMatchersclassnewTestFailedExceptionMatchersscala150info   at akkatestkitAkkaSpecnewTestFailedExceptionAkkaSpecscala56info   at orgscalatestmatchersMustMatchersMustMethodHelpermustMatcherMustMatchersscala873info   at orgscalatestmatchersMustMatchersAnyMustWrappermustMustMatchersscala901info   at akkaclusterAccrualFailureDetectorSpecanonfun1anonfunapplymcVsp5applymcVspAccrualFailureDetectorSpecscala90info   at akkaclusterAccrualFailureDetectorSpecanonfun1anonfunapplymcVsp5applyAccrualFailureDetectorSpecscala76info   at akkaclusterAccrualFailureDetectorSpecanonfun1anonfunapplymcVsp5applyAccrualFailureDetectorSpecscala76info   at orgscalatestWordSpecanon2applyWordSpecscala2161info   at orgscalatestSuiteclasswithFixtureSuitescala1968info   at akkatestkitAkkaSpecwithFixtureAkkaSpecscala56info   at orgscalatestWordSpecclassinvokeWithFixture1WordSpecscala2158info   at orgscalatestWordSpecanonfunrunTest1applyWordSpecscala2167info   at orgscalatestWordSpecanonfunrunTest1applyWordSpecscala2167info   at orgscalatestSuperEnginerunTestImplEnginescala168info   at orgscalatestWordSpecclassrunTestWordSpecscala2167info   at akkatestkitAkkaSpecrunTestAkkaSpecscala56info   at orgscalatestWordSpecanonfunrunTests1applyWordSpecscala2232info   at orgscalatestWordSpecanonfunrunTests1applyWordSpecscala2232info   at orgscalatestSuperEngineanonfunorgscalatestSuperEnginerunTestsInBranch1applyEnginescala226info   at orgscalatestSuperEngineanonfunorgscalatestSuperEnginerunTestsInBranch1applyEnginescala215info   at scalacollectionLinearSeqOptimizedclassforeachLinearSeqOptimizedscala59info   at scalacollectionimmutableListforeachListscala76info   at orgscalatestSuperEngineorgscalatestSuperEnginerunTestsInBranchEnginescala215info   at orgscalatestSuperEngineanonfunorgscalatestSuperEnginerunTestsInBranch1applyEnginescala231info   at orgscalatestSuperEngineanonfunorgscalatestSuperEnginerunTestsInBranch1applyEnginescala215info   at scalacollectionLinearSeqOptimizedclassforeachLinearSeqOptimizedscala59info   at scalacollectionimmutableListforeachListscala76info   at orgscalatestSuperEngineorgscalatestSuperEnginerunTestsInBranchEnginescala215info   at orgscalatestSuperEnginerunTestsImplEnginescala282info   at orgscalatestWordSpecclassrunTestsWordSpecscala2232info   at akkatestkitAkkaSpecrunTestsAkkaSpecscala56info   at orgscalatestSuiteclassrunSuitescala2286info   at akkatestkitAkkaSpecorgscalatestWordSpecsuperrunAkkaSpecscala56info   at orgscalatestWordSpecanonfunrun1applyWordSpecscala2279info   at orgscalatestWordSpecanonfunrun1applyWordSpecscala2279info   at orgscalatestSuperEnginerunImplEnginescala318info   at orgscalatestWordSpecclassrunWordSpecscala2279info   at akkatestkitAkkaSpecorgscalatestBeforeAndAfterAllsuperrunAkkaSpecscala56info   at orgscalatestBeforeAndAfterAllclassrunBeforeAndAfterAllscala213info   at akkatestkitAkkaSpecrunAkkaSpecscala56info   at orgscalatesttoolsScalaTestFrameworkScalaTestRunnerrunScalaTestFrameworkscala148info   at sbtTestRunnerdelegateRunTestFrameworkscala61info   at sbtTestRunnerrunTestFrameworkscala55info   at sbtTestRunnerrunTest1TestFrameworkscala75info   at sbtTestRunnerrunTestFrameworkscala84info   at sbtTestFrameworkanonfun6anonfunapply8anonfun7anonfunapply9applyTestFrameworkscala183info   at sbtTestFrameworkanonfun6anonfunapply8anonfun7anonfunapply9applyTestFrameworkscala183info   at sbtTestFrameworksbtTestFrameworkwithContextLoaderTestFrameworkscala195info   at sbtTestFrameworkanonfun6anonfunapply8anonfun7applyTestFrameworkscala183info   at sbtTestFrameworkanonfun6anonfunapply8anonfun7applyTestFrameworkscala183info   at sbtTestsanonfunmakeSerial1anonfunapply8applyTestsscala115info   at sbtTestsanonfunmakeSerial1anonfunapply8applyTestsscala115info   at scalacollectionTraversableLikeanonfunmap1applyTraversableLikescala194info   at scalacollectionTraversableLikeanonfunmap1applyTraversableLikescala194info   at scalacollectionLinearSeqOptimizedclassforeachLinearSeqOptimizedscala59info   at scalacollectionimmutableListforeachListscala45info   at scalacollectionTraversableLikeclassmapTraversableLikescala194info   at scalacollectionimmutableListmapListscala45info   at sbtTestsanonfunmakeSerial1applyTestsscala115info   at sbtTestsanonfunmakeSerial1applyTestsscala115info   at sbtstdTransformanon3anonfunapply2applySystemscala47info   at sbtstdTransformanon3anonfunapply2applySystemscala47info   at sbtstdTransformanon5workSystemscala67info   at sbtExecuteanonfunsubmit1anonfunapply1applyExecutescala221info   at sbtExecuteanonfunsubmit1anonfunapply1applyExecutescala221info   at sbtErrorHandlingwideConvertErrorHandlingscala18info   at sbtExecuteworkExecutescala227info   at sbtExecuteanonfunsubmit1applyExecutescala221info   at sbtExecuteanonfunsubmit1applyExecutescala221info   at sbtCompletionServiceanon1anon2callCompletionServicescala26info   at javautilconcurrentFutureTaskSyncinnerRunFutureTaskjava303info   at javautilconcurrentFutureTaskrunFutureTaskjava138info   at javautilconcurrentExecutorsRunnableAdaptercallExecutorsjava441info   at javautilconcurrentFutureTaskSyncinnerRunFutureTaskjava303info   at javautilconcurrentFutureTaskrunFutureTaskjava138info   at javautilconcurrentThreadPoolExecutorWorkerrunTaskThreadPoolExecutorjava886info   at javautilconcurrentThreadPoolExecutorWorkerrunThreadPoolExecutorjava908info   at javalangThreadrunThreadjava680
; general
I get strange errors from time to timeHere is what happened when I wanted to testakkacluster  testinfo Formatting 2 Scala sources filedata3projectsscalaprojectsakkaakkaclustertest info Formatting 2 Scala sources filedata3projectsscalaprojectsakkaakkaclustercompile info Formatting 1 Scala source filedata3projectsscalaprojectsakkaakkatestkitcompile info Formatting 4 Scala sources filedata3projectsscalaprojectsakkaakkaremotecompile info Formatting 1 Scala source filedata3projectsscalaprojectsakkaakkatestkittest info Formatting 5 Scala sources filedata3projectsscalaprojectsakkaakkaactorcompile info Formatting 3 Scala sources filedata3projectsscalaprojectsakkaakkaactorteststest info Compiling 5 Scala sources to data3projectsscalaprojectsakkaakkaactortargetclasseserror data3projectsscalaprojectsakkaakkaactorsrcmainscalaakkapatternPipeToSupportscala4 class file needed by package is missingerror reference type PipeToSupport of package akkapattern refers to nonexisting symbolerror package akkapatternerror              error one error founderror filedata3projectsscalaprojectsakkaakkaactorcompilecompile Compilation failederror Total time 9 s completed Apr 24 2012 65118 PMAny idea
; design
do a clean and a recompile
; general
Ok great I could run the tests again but I dont get any test failure except some transient exceptionsThe lineinfo true was not false AccrualFailureDetectorSpecscala90in your log does not appear at my machine when I run the test
; general
Slowness of AccrualFailureDetectorSpec tests are mainly due to several Threadsleep which is totally around  18 s
; general
Yup so can we get rid of them
; general
getting rid of them  deleting the testsI havent written the tests so maybe it is better to ask jboner
; general
Hey you touch you own
; general
This reminds me of you recent tweet hAkking  Eye of the tiger or something like that
; general
I think it is hard to cut it down much The FailureDetectors actionno action is based upon heartbeat vs timing However we could and should tag it as LongRunningTest so it is excluded in regular sbt test Can you fix that
; general
Cant we seed the FailureDetector with a Clock and then seed it with aTestClock that runs faster than the normal one
; general
jboner yes absolutely Ill fix itviktorklang that would be a work around of course But I think it can violate the Failure Detector behavior if we have for some reason byzantine actors that feed the Failure Detector with wrong clocks What do you think
; general
It is not that easy It is possible to reduce the threshold to get a quicker detection of failure But when I did that some time ago the tests became very unstable Simply too small error margin to run on a nonrealtime OS and VM I suppose Feel free to change it but I would prefer slow and correct compared to fast and perhaps wrong
; general
So then I assume that my Clock proposal wont workCant we simulate input and output to the FailureDetector
; general
I would of course work if we rewrite the FD to not work with real time but fake time that we manage the ticking for Currently it is controlled by the newTimestamp function which currently only is currentTimeMillis All we need is a Long So it should be possible to fake it Abstract it to allow passing in the clock from the outside Open a ticket if you think it is worth spending time on
; general
The more tests we can run quickly on our dev boxes the shorter the time from change to feedback so instead of having to wait for a lot of longrunning tests to run before we know if something breaks we get instant feedback I think this is a worthy cause Especially in this case
; general
So the decision is to abstract the time and fake it for tests Can you create a ticket and assign it to me Viktor
; general
Createdhttpwwwassemblacomspacesakkatickets2021abstractovertimeforaccrualfailuredetectorI couldnt find you in the list on Assembla can you assign it to yourselfThanks
; general
I agree it would be nice Best would be if we could do it for the real clustermembership tests as well Lets think about it
; general
Absolutely Or atleast have as much as possible as normal tests and onlythe ones we cannot make faster as longRunning
; general
Good ideas I agree Lets start hAkking it
; general
Thanks Amir You are already making yourself indispensable
; general
Does this really help in the case of load
; general
I assume that it will help if other actors are busy using all threads of the default dispatcher
; general
I did a test with clusterStressSpec Changed masternode1workers maxnrofinstancespernode  from 1 to 8That change doesnt increase the number of messages just number of actors processing themThen must use routers with normal throughput fails with UNREACHABLE detectedAdded this dispatcher config and it it is fine
; general
We might want a setting to use an isolated dispatcher for remoting if needed
; general
Yes that is needed I created a ticket for that the other day
; design
This is ready for merge and backport to release22
; general
backported to release22
; general
Just a question why is this not a default
; general
Cluster in itself doesnt consume much resources so it can normally run on default dispatcher sharing threads with others but if you run many actors or blocking oh no on default disp this is a possibility to isolate I might change opinion after real world feedback
; general
Would that not be true for many system level instead of user level actors
; general
adjusted according to comments
; general
This is ready for merge and backport to release22
; general
backported to release22
; general
backported to release22
; general
Very cool Does it work
; general
Wow great work
; general
It was originally your idea Viktor
; general
Scchhhh Im donating credit here
; general
LGTM we have a winner then
; general
Agreed thanks for the comments
; general
backported to release22
; general
thanks 2beaucoup fixed
; general
this should go into 211
; general
I think this should rather go into 221  But it still needs that fix which currently separates it from my LGTM
; general
yeah 221 it isactually I verified the primitive type from java but you are right that in scala it is not correct and isPrimitive is better    scala val i Int  0    i Int  0    scala igetClassisInstanceOfAnyRef    res0 Boolean  true    scala igetClassisPrimitive    res1 Boolean  true
; general
changed to foundisPrimitive
; general
if you want to test the case you just fixed youd have to make the constructor choice ambiguous scaladef thisi Int  def thisx AnyRef  Then passing null should successfully find the second one where your previous code would have found both and bailed out
; general
good suggestion I will add something like that to the test
; general
added some more combinations in the test
; general
backported to release22
; general
Good cleanup nraychaudhuri we can merge this when you have signed the CLA httpwwwtypesafecomcontributeclaThanks for contributing
; general
As a Typesafe employee I thought I am already good there SignedOn Fri Jul 5 2013 at 305 AM Roland Kuhn notificationsgithubcomwrote LGTM  Reply to this email directly or view it on GitHubhttpsgithubcomakkaakkapull1594issuecomment20503910
; general
no special treatment for nonLegends  Legends get to sign on paper and are free to choose the type of ink
; general
backported to release22
; general
I switched to using tryComplete instead of successfailure as you suggestedDo you think there is value to having trySuccesstryFailure methods on Promise or would that crowd the API too much
; design
trySuccess and tryFailure is already available in SIP141 so theyll be there when we migrate 1 httpdocsscalalangorgsipspendingfuturespromiseshtml
; general
I thought I remembered reading it in the SIPSo is object Future staying in Akka along with this pull request or will it be migrated as well
; design
That is currently undecided
; general
Ill close this here this method should be discussed on the scalasips mailinglist so if it is added its added to scalaconcurrentFuture
; general
ready for merge and backport
; general
backported to release22
; general
Thanks Viktor this is great feedback  appreciate your timeI need to brush up a bit to get the implicit working within DurableMessageQueue but that shouldnt be a problemFollowing the point about openAsOf will move failure count and the semaphore to their respective states as well
; design
Thanks a lot for taking a stab at this I believe this type of functionality would greatly enhance the reliability of the durable mailboxes Please take my comments as the constructive critique I tried to conveyPlease dont hesitate to ask if you think Im wrong or if something is unclearCheers
; general
Great contribution Very much needed
; general
I think Ive incorporated all the feedback so far  Let me know what else needs done or if ive misunderstoodAlso something to think about does it make sense to age off the failures in closed state so infrequent failures dont cause the breaker to openThanks for your time guys
; general
Have incorporated latest round of feedback  thanks for that ViktorHave added configurability and async handling  its fairly simple but I think it should work  It seemed to integrate well with the mongo durable mailbox for exampleHave also injected the logic into the existing durable implementations  Id like to get a system test running before I say these are done  but put them in the push for discussion
; general
Just realized that the async impl only tracks the state but doesnt apply the behavior  So thats incomplete and ill take a stab at that tonight
; general
Great Im currently in London will get back to you next week
; general
Added async behavior impl and async timeout tracking  Havent done system test yet  planning on putting together a simple system using durable mailboxes and then turning off eg mongo redis etcAs I was implementing the async timeout tracking it made me think the timeout tracking shouldnt be at the instance level  rather there should be some mapping of an instance of the call to a deadline with some kind of handback token for the asyncSuccess and asyncFailure calls although not sure if thats overkill
; general
Convinced myself that the timeout tracking should be at the call level implemented that and got the test coverage of the async side up
; general
Doing some basic stability testing has me wondering if I have the circuit breaker in the right place  What im doing is sending messages to a local actor on a schedule and restarting the external system responsible for the mailbox eg redis or mongo  Heres a gist httpsgistgithubcom2622718From what im seeing and the code seems to back this up it looks like on the first failure the dispatcher thread croaks and theres no recovery attempt  I need to add more logging to be absolutely since im not seeing enough errors in the logs with my simple case  What I am seeing is that the actor stops writing messages to the log and in some cases im seeing a Systemexit1 although I havent located where thats coming from yet  Ive tried putting a parent actor in to act as a broadcaster and drive that with the scheduler vs what I was doing before which is driving the individual actors with the scheduler  I guess im used to supervision of actors  theres really no supervision of dispatchers right  In any case this seems to make the circuit breaker not very useful since theres never an opportunity to transition statesFor durable mailboxes since IMO they should be treated as unstable external systems  is dispatcher supervision a missing concept  Or am I missing something  I dont have an OTP background but am researching this now  Am also going to see if I can adapt a nodejs tcp proxy to test timeout behaviors
; design
More logging cleared up my understanding of what is going on its not the dispatchers that are crashing  Its specific mailbox implementations that become unresponsiveBeanstalk mbox Doesnt recover from a restart of the serviceMongo mbox Occasionally recovers depending on when I restart mongo very noisy even on happy path with an apparently irrelevant exception on every single message processedZK mbox Does recover hammers away while it tries to reconnect no backoff apparentRedis mbox Doesnt recover and causes a Systemexit1 due to a heap space OutOfMemoryErrorMore info on the Redis issuehttpsgistgithubcom2625351No matter what im not seeing a lot of value from the circuit breaker at this point am thinking the mbox impls need shored up a bit first
; general
I found the NetworkFailureTest trait and was able to find a similar function in Linux tc to simulate delays dropped packets etc  Also my actor hierarchy was not set up correctly to restart the receiving actors which I fixed in the latest version  All the mailboxes are significantly more resilient to timeouts and dropped packets than service restarts  For what its worth now im seeing a lot more use from the circuit breakersSo ive gotten a bit ahead am happy to go whatever direction makes sense  Look forward to some more feedbackThanks
; design
Sorry for the delay in review lots of things going on right now will check ASAP
; general
No worries  I appreciate all the time youve been able to put in so far
; general
Crap sorry for the delay here Ill get someone on top of this ASAP Apologize for the delay
; general
Im on this We have an idea of using Futures for the async circuit breaker Ill let you know as soon as I have something working
; general
Looking forward to it Patrik You guys may want to think about upgrading the redis driver sooner rather than later due to the unfriendly crash behavior that I covered above on redis server restartcrash  I can open a new ticket if that helps
; general
Based on your work I have done a proposal that integrates the async part with akka Futures see httpsgithubcomakkaakkapull459To motivate addition to akka it should support the async case as you started and I have rewritten it be integrated with akka Futures The synchronous case is still there as a convenienceThanks for you great work Looking forward to comments
; general
Redis and several of the other durable mailboxes have been removed from akka but we encourage to continue them as separate community open source projectsPatrik16 maj 2012 kl 1815 skrev scullxbonesreplyreplygithubcom Looking forward to it Patrik   You guys may want to think about upgrading the redis driver sooner rather than later due to the unfriendly crash behavior that I covered above on redis server restartcrash  I can open a new ticket if that helps   Reply to this email directly or view it on GitHub httpsgithubcomakkaakkapull427issuecomment5744971
; general
Got it  Some feedback for you guys do with it what you will Communicate more  if you know someone is working on something and decide you are cutting it loose from maintenance let them know  While the decision to cut support makes a lot of sense to me  it would have been nice to know what was coming  I now see Viktors post in akkauser and the removal of everything but filebased on 58  which again based on my experience on this task as documented above is a good call to make Id be lying if I said the thanks well take it from here approach doesnt sting a bit  Use that sparingly because it is discouraging as a contributor  I appreciate the attempt to soften the blow and I do like Patriks use of Future without Await  Im sure there were good reasons why to take that road rather than steer me a different direction On the positive side overall it has been a good experience for me and ive learned quite a bit in the process  I appreciate you guys working with me on thisGiven where were at  do you still need a signed CLA asked for one on the ML never heard back  If so please email the form to me  I can get it back to you as early as Saturday when im within reach of a scannerLet me know if there is any reason to leave this pull request open otherwise will close it outThanksBrian
; general
Thanks for the feedback BrianThe removal of the mailboxes doesnt really affect your work at all this CircuitBreaker will be a very important tool for anybody who is implementing a mailbox of their own or for the already established ones So you should definitely not take this as something discouraging its completely the opposite In fact I like it so much I want to put it in akkautil so we can use this for more stuff than merely mailboxesAlso thanks were taking it from here was not meant to be like that at all I asked Patrik to take over the review since Im currently overworked and felt really bad for not being as responsive to your changes as Id liked to A quick informal handover yesterday led to an idea to use Futures for this as to add even more cohesiveness to the API Patrik ran with it to see if it was feasible and it actually turned out pretty well But only because we had the chance to stand on your shoulders hereSo please see this as positive your work has improved Akka and for that we are very thankfulThe only thing thats left is the CLA which you can sign online here wwwtypesafecomcontributecla
; design
One suggestion you may want to mention Brians work in the commit thenhttpsgithubcomakkaakkacommita35cc848df0c22f85d8d9604ab73528f05459c42Its a nice gesture to give credit where credit is due
; general
Well of course we will and also in the release notes We use Pull Requests for code reviews
; general
As you can see in httpsgithubcomakkaakkapull459Proposal of CircuitBreaker that integrates with Futures based on scullxbones pull request httpsgithubcomakkaakkapull427I need to add some documentation and use it in durable mailboxesNot sure where to place it now in akkaactor
; general
Thanks for feedback Brian Its exactly as Viktor said your work was a great foundation I dont think I would have been able to steer you in this this direction without writing the code I was not confident that it would work until I tried with all your excellent testsI dont think we are in more hurry than that you can complete the work and do the merge in your name There are a few things left that we can discuss solutions to one and only one attempt in open state which was an oversight from me thanks for pointing out  race in transitions integrate with file based durable mailbox some docsPatrik17 maj 2012 kl 1424 skrev viktorklangreplyreplygithubcom Thanks for the feedback Brian  The removal of the mailboxes doesnt really affect your work at all this CircuitBreaker will be a very important tool for anybody who is implementing a mailbox of their own or for the already established ones So you should definitely not take this as something discouraging its completely the opposite In fact I like it so much I want to put it in akkautil so we can use this for more stuff than merely mailboxes  Also thanks were taking it from here was not meant to be like that at all I asked Patrik to take over the review since Im currently overworked and felt really bad for not being as responsive to your changes as Id liked to A quick informal handover yesterday led to an idea to use Futures for this as to add even more cohesiveness to the API Patrik ran with it to see if it was feasible and it actually turned out pretty well But only because we had the chance to stand on your shoulders here  So please do not see this as positive your work has improved Akka and for that we are very thankful  The only thing thats left is the CLA which you can sign online here wwwtypesafecomcontributecla   Reply to this email directly or view it on GitHub httpsgithubcomakkaakkapull427issuecomment5762976
; design
Thank you very much for the clarification Viktor  its much appreciated  Im definitely encouraged to contribute more in the futureCLA signedPR closed
; general
Sorry missed your comment Patrik  Please let me know what I can do to help out with the remaining itemsDoes it make sense to clone your wip branch and hack on that
; general
17 maj 2012 kl 1523 skrev scullxbonesreplyreplygithubcom Sorry missed your comment Patrik  Please let me know what I can do to help out with the remaining itemsGreat much appreciatedIll get back to you tomorrow In forrest right now public holiday  Does it make sense to clone your wip branch and hack on thatWhatever you find convenient Copy the text from the two files are just fine by me   Reply to this email directly or view it on GitHub httpsgithubcomakkaakkapull427issuecomment5763877
; design
I have commented on httpsgithubcomakkaakkapull459 so there youfind some outstanding issues you can help withThen you can integrate it with with file based durable mailbox includingconfig settingsIm not sure if it should be part of the durable mailbox base class but itshould be easy to add to the concreate durable mailbox implementationsDocumentation Scaladoc and rst doc in the durable mailbox chapter I haveanother pull request for that documentation outstanding Will let you knowwhen that has been mergedLets make this an awesome contribution to AkkaOn Thu May 17 2012 at 331 PM Patrik Nordwallpatriknordwallgmailcomwrote 17 maj 2012 kl 1523 skrev scullxbones replyreplygithubcom   Sorry missed your comment Patrik  Please let me know what I can do to help out with the remaining items Great much appreciated Ill get back to you tomorrow In forrest right now public holiday   Does it make sense to clone your wip branch and hack on that Whatever you find convenient Copy the text from the two files are just fine by me     Reply to this email directly or view it on GitHub  httpsgithubcomakkaakkapull427issuecomment5763877 Patrik NordwallTypesafe httptypesafecom   The software stack for applications thatscaleTwitter patriknw
; design
The ticket mentions fixing the start scripts is that something which was incorrectly reported or does it still need to be doneThese changes LGTM but depending on the previous question they might be incomplete
; general
I have tested the instructions in the documentation with a fresh akka dist and the bash start script is fine I couldnt see anything wrong with the bat script The wildcard classpath is documented to be supported httpdocsoraclecomjavase6docstechnotestoolswindowsclasspathhtml
; general
in that case please document your findings in the ticket thanks
; general
backported to release22
; general
It seems that proguard likes breaking classes by removing constructors this is probably not limited to the case shown here Can you switch that off If that does not fix it please open a ticket at assembla
; general
Yes that fixed the issue well after a lot of other unfound methods For reference my proguard settings httpsgistgithubcomMHOOO37ec130f6b09193c7ec5Now however Im getting a different errorISystemout25506 ERROR 07032013 010922056 MobileControllerakkaremotewriterdispatcher12 akkaMobileControllersystemendpointManagerreliableEndpointWriterakkatcp3A2F2FCuboidGameSystem401270113A25521endpointWriter AssociationError akkatcpMobileController19216811362553  akkatcpCuboidGameSystem1270112552 Error key not found 6 ISystemout25506 javautilNoSuchElementException key not found 6ISystemout25506    at scalacollectionMapLikeclassdefaultMapLikescala228ISystemout25506    at scalacollectionAbstractMapdefaultMapscala58ISystemout25506    at scalacollectionMapLikeclassapplyMapLikescala141ISystemout25506    at scalacollectionAbstractMapapplyMapscala58ISystemout25506    at akkaserializationSerializationanonfundeserialize1applySerializationscala98ISystemout25506    at scalautilTryapplyTryscala161ISystemout25506    at akkaserializationSerializationdeserializeSerializationscala98ISystemout25506    at akkaremoteMessageSerializerdeserializeMessageSerializerscala23ISystemout25506    at akkaremoteDefaultMessageDispatcherpayloadlzycompute1Endpointscala56ISystemout25506    at akkaremoteDefaultMessageDispatcherpayload1Endpointscala56ISystemout25506    at akkaremoteDefaultMessageDispatcherdispatchEndpointscala74ISystemout25506    at akkaremoteEndpointReaderanonfunreceive2applyOrElseEndpointscala704ISystemout25506    at akkaactorActorCellreceiveMessageActorCellscala498ISystemout25506    at akkaactorActorCellinvokeActorCellscala456ISystemout25506    at akkadispatchMailboxprocessMailboxMailboxscala237ISystemout25506    at akkadispatchMailboxrunMailboxscala219ISystemout25506    at akkadispatchForkJoinExecutorConfiguratorAkkaForkJoinTaskexecAbstractDispatcherscala386ISystemout25506    at scalaconcurrentforkjoinForkJoinTaskdoExecForkJoinTaskjava262ISystemout25506    at scalaconcurrentforkjoinForkJoinPoolWorkQueuerunTaskForkJoinPooljava975ISystemout25506    at scalaconcurrentforkjoinForkJoinPoolrunWorkerForkJoinPooljava1478ISystemout25506    at scalaconcurrentforkjoinForkJoinWorkerThreadrunForkJoinWorkerThreadjava104ISystemout25506 Any idea what this could be all about Apparently serialization is the problem but I have no idea what key this is all about Im only sending strings
; design
We dont use github issues for bug tracking please see httpdocakkaiodocsakkacurrentprojectissuetrackinghtml
; general
20130703 011615 dtumon Thomas Karolski notificationsgithubcom rta Yes that fixed the issue well after a lot of other unfound methods For reference my proguard settings httpsgistgithubcomMHOOO37ec130f6b09193c7ec5 Now however Im getting a different error  ISystemout25506 ERROR 07032013 010922056 MobileControllerakkaremotewriterdispatcher12 akkaMobileControllersystemendpointManagerreliableEndpointWriterakkatcp3A2F2FCuboidGameSystem401270113A25521endpointWriter AssociationError akkatcpMobileController19216811362553  akkatcpCuboidGameSystem1270112552 Error key not found 6  ISystemout25506 javautilNoSuchElementException key not found 6It means that the receiver side has no loaded serializer with id 6 The referenceconf in the remoting module defines these explicitly     serializers        akkacontainers  akkaremoteserializationMessageContainerSerializer       proto  akkaremoteserializationProtobufSerializer       daemoncreate  akkaremoteserializationDaemonMsgCreateSerializer     I am not really familiar with ProGuard so I dont know what could be the exact problem but it seems that akkaremoteserializationMessageContainerSerializer is not available Basically you need everything under akkaremoteserializationThe error message is not very helpful though so I created a tickethttpswwwassemblacomspacesddEDvgVAKr3QrUeJe5aVNrtickets3487activityticketEndre
; design
drewhk You are right I was missing the serializers values I assume this happened because I only copied the remote part of the config from the online manual and not the actor partThanks for answering hererkuhn sorry for not using assembla I can see why youd want to use it as it is from what I glanced so far far superior to issues on github But I rather not register for yet another bug tracking system  only to file my first and probably last bug report Thanks for helping anyway
; design
We can use an even later sl4j see httpswwwassemblacomspacesakkatickets2615I will update this PR
; general
Cant say yes or no will yield
; general
ok merging this its just boy scouting the real problem with the barriers remains see ticket 2583
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator471
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator471
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator473
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator474
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator474
; general
nice addition 1
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator480
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator480
; general
This is not everything Search the file system and you will see more references to akkaremotetestsexperimental
; general
Are you sure that you are looking at my branch I cannot find anything
; general
I cant see that you have touched multinodelogreplacesh which contains reference to akkaremotetestsexperimental
; design
oh directories starting with s were under the radar for me until now thanks for catching this
; general
yeah why would someone care about s directoriesthen LGTM
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator479
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator479
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator446
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator446
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator453
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator453 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
looking at the sad kitteh it seems that an OSGi import is missing for the ServiceTracker class and the maven setup seems to want to publish things which is not allowed on our jenkins setup For the latter I know too little about the maven plugins used to comment meaningfully
; design
I havent see the log about ServiceTracker but I add a star for the commandimportpackage the tests either maven or sbt built are going well hereIt seams the sbtprocess calling the shell is not allowed or buggy This is the tiny fix I used to launch the maven integration tests I just modify a little bit the command and push If the shell script is not allowed we will need to find another way to run the test in maven
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator455
; general
Great work you two I guess that getting this sample verified successfully by the Build Kitteh will possibly also fix some outstanding bugs  Itll take us some time to digest everything in there especially how the test is set up so that we will then be in a position to react to jenkins failures in the futureThanks again for devoting your time and effort to this contribution
; general
thanks for all your remarks and compliment Youre pointing some parts I didnt develop myself but Ill try to fix as much as possible
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator455 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
thanks for that point I wanted to be certain this may not be sbt that cause this problem Im going to try a fresh build to test it again
; general
So I didnt get error on integration test but did not succeed in correcting the TestProbe problem
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator457
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator457 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
thanks Jamie for your correctionsrkuhn  About the maven integration test I added a test for maven to check if its installed just to be sure
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator459
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator459 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
So not a problem of maven not found sorry I really wanted to be sure of this point Im trying to find other possibilities and find help maybe tomorrow
; general
Ive just stored the log in the akkasamplesakkasampleosgidininghakkersakkaosgisamplelog is it possible to get it as its not shown in the kitty logsConcerning the logs I get slf4j warning about multiple bindings Im not logging expert at all httpwwwslf4jorgcodeshtmlmultiplebindings
; general
It may be fool but I replaced the mvn clean install by a mvn clean package which should not cause errors as not deploying jarsI tried after having clean the supposed maven repo and it worked
; design
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator460
; general
ouch the feature is based on maven repo and loads comtypesafeakkaapicorecommanduncommonsIm going to correct this to install does in akkasample directory
; general
sorry this means th current jenkins job will fail as those artifact may not have been installed
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator460 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
Ive changed groupID to avoid deploying in m2comtypesafeakka but in m2comtypesafeakkaakkasampleakkasampleosgidinninghakkers lets hope this was just a permission problem at least this is more clear now
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator461
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator461 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
I thing redirecting mvn outputs in a file was not a great idea finally I think maven is now publishing in comtypesafeakkaakkasampleakkasampleosgi directory Might it still be a permission issue
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator462
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator462 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
So Maven structure leads us to deploy the feature and other bundles on the local maven repository Ive see its possible to load jar directly in pax exam and Im planning to do it and I would like to do it without maven if its possible to be continue
; general
rkuhn the problem with akkaosgiaries tests should be fixed this was a modification of the blueprint version back to 032 Ive also reduced the length of the integration test artifacts as those throw fs exception longer than expected
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator644
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator644 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
ERROR   The project comtypesafeakkaakkasampledininghakkersparent220SNAPSHOT localhomejenkinsakkaworkspaceakkaprvalidatorakkasamplesakkasampleosgidininghakkerspomxml has 1 errorERROR     Unresolveable build extension Plugin orgapachefelixmavenbundleplugin237 or one of its dependencies could not be resolved Failed to collect dependencies for orgapachefelixmavenbundlepluginjar237  Failed to read artifact descriptor for orgapachefelixmavenbundlepluginjar237 Could not transfer artifact orgapachefelixmavenbundlepluginpom237 fromto moxieeverything httpsmoxietypesafecom8497nexuscontentgroupseverything Not authorized  Help 2Might it means you should allow some maven plugin in your moxie
; general
found one wrong password in the m2settingsxmlPLS REBUILD ALL
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator809
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator809 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
See httpsgroupsgooglecomdmsgakkadevYKWCxQwvgIo4JqLifaIJ fixed branch at httpsgithubcomvivosysakkacommitsakkaosgisample
; general
Submitted new pull 1310  with the fixes
; general
closing this PR in favor of the new one
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator463
; general
I think the code does what you say it should but I think we need a separate ticket and some discussionbrainstorming around why the LeaderChanged didnt get publishedhandledLGTM
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator463
; general
The missing LeaderChanged event can be explained by the the same reason as we discussed for the member transitions It doesnt have to be convergence on all nodes for each transition For the member events we solved it by buffering all intermediate events Same thing must be done for leader changes
; design
Fixed the missing LeaderChanged problem also
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator466
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator466 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
its a real failure related to this I will investigate
; general
the failure was correct my bad to not run all tests it would have been solved as expected given some more time
; design
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator467
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator467
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator464
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator464
; general
handleInvokeFailure currently throws InterruptedException looking at the call sites I am pretty certain that that is a bad idea see eg systemInvoke which will then lose its todo Comparing with processAllSystemMessages shows that there we make sure to process all of them and just store interruptions for later after processing has finished I think this is the right thing to do so please investigate what would break if FaultHandlingscala179182 would be thrown out Then InterruptedException would also need to be caught on line 186 followed by emergency stop
; general
ActorCellcreate might also want to catch IE wrap it in the rethrown AIE and set Threadinterrupt
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator486
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator486
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator489
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator489
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator491
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator491
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator469
; general
Why do we need a Polish API Isnt English good enough
; design
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator469
; general
You cleaned up the woods around the camp site too LVGTM
; general
LGTM yeah trying to set system properties afterwards is always doomed
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator470
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator470
; general
Well done I hope this nails that sucker for good
; general
Does this mean that one of Endres earlier nonblocking solutions can be used New ticket for later
; general
Bjrn this is great 100 patriknw yes I think it worth a try and it is not hard to implement either
; general
yes lets run that throughout the day
; general
SPURIOUS ABORT  PLS REBUILDprvalidatorpercommit5fb904fb38f5abb1ab52a2289309042e99605e84
; general
kittynotetoself ignore 18667179cat Roger Rebuilding prvalidatorpercommit for 5fb904fb rotatinglight
; general
Any objections if I close this without merging
; general
ok we will keep the test I have changed the loop count Will merge when kitty says yes
; general
Is this related to ticket httpswwwassemblacomspacesakkasimpleplannerticket3404
; general
yes if we can just replace it by something much simpler then why would we not do that
; general
what was the reason for writing this was it something with getSimpleName not working
; general
Yes as the title of the Pull says Make AkkaSpec getCallerName work on J9
; general
okay LGTM merge away
; general
you could make RoutedActorCell final
; general
harmonized props factories and moved the Deploy inside the factory at 2 places
; design
fixed the long line
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator440
; general
about the Corba question at least in karaf it is exported with version 000 so no problem to import it as it is currently
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator440 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
so I guess we can close this one due to EOL
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator441
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator441 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
fixed the build failure and acted upon Viktors suggestion
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator442
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator442
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator438
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator438
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator439
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator439
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator444
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator444 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
PLS REBUILD ALL
; general
it seems to be a real failure at least the throttler which didnt throttle indicates some kind of messup
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator445
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator445 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
Yup the failure is legit
; general
Here is a failure run with extra debug logginghttpsjenkinsakkaio8498jobakkamultinoderepeat1155consoleFullAs suspected there is a mix of a4local36299 and 100123436299 in the ThrottlerManagerThis will require some more thought
; general
The underlying idea of the design is to use whatever the user had configured literally character by character as the actor systems host part Give the user full control and dont ever touch it I had come to the conclusion that that would be the only sane solution for us so that we dont have to work around broken local setups because the users can do that themselvesIt would be an immense shame if that were impossible to write down without triggering DNS lookups but then it would not surprise me that much given how broken the JDK tends to be in such matters of practicality
; design
I think I have found a workable solution Take a look
; design
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator445
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator445 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
Apart from that one thing I dont get LGTMWhich means that the throttler failure needs fixing
; general
alright Ill look into the failure I thought I had solved it
; design
then it is probably an issue with DNSjenkins vs DNSyourMac which is what I meant with that broken assumption earlier good luck
; general
but the last failure is referring to the same job 445 that was the first failure hmmI have run this successfully 4 times in another jobPLS REBUILD ALL
; general
ah sorry youre right that something felt wrong when I looked at the errors being too similar
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator458
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator458
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator436
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator436
; general
LGTM apart from that Id like to understand that one minor point
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator450
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator450
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator430
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator430
; general
I have added a clarifying comment explaining the exact nature of the race
; general
So now Im certain the getbucket synchronizeswith the setbucket Empty or null in the timer thread which happens after the currentBucket  1 which means that the current  currentBucket is properly synchronized with that earlier write as in there is a transitively established happensbefore relation between the two Therefore it is covered by the JMM and is not allowed to fail on J9 knocks wood
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator431
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator431
; general
rkuhn yes as far as I can see the getbucket in schedule and the setbucket Empty or null in the timer thread keeps current  currentBucket safeAnd the InitialRepeatMarker dance is to guard us from overwriting when the timer thread have already run the first initial one right
; general
I dont know LARS in person yet so I can only say I trust you
; general
bantonsson yes precisely
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator432
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator432 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
Thanks kitty fixed it
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator435
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator435
; general
Wow this is a huge thing  but thorough AFAICS  Great workNow the only thing Im uncertain of is whether you have hidden a test case somewhere in there which verifies that the old stuff still works
; general
I thought that would be overkill I tested both deprecated properties before changing all tests I can of course add a test if we think its that important
; general
Id prefer a test so we dont accidentally break it
; general
Added the test
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator437
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator437
; general
yup thanks LGTM
; general
Could you also expose this as a command line option to the release script Ive had the problem of running it and failing at a later stage and then being unable to run it again because the plugin was already publishedOtherwise it LGTM
; design
Excellent idea Will do
; general
wow great we must remember the two links from akkaionice icons
; general
A lot of good cleanup and I agree with the Terminated change but the PoisonPill change makes me a bit scared How do we know that it doesnt damage anything I would like to hear Endres opinion
; general
I agree patriknw I wasnt 100 sure either but the tests pass locally so I dont know what to say All I can say is that I think there might have been a race between the context stop reader and the disassociate the disassociate would have let more messages be processed but the stop would be the next processed message Wdyt
; general
Unfortunately we dont have test coverage for all race conditions  they often show up after extensive testing in different environments eg EC2 I dont know which also means that my vote is not worth much
; general
Do we have any easy way to continuously test this branch until tomorrow morning on scalable1
; general
ok I have setup the job at scalable1
; general
Awesome thanks Patrik
; general
Just realized that this doesnt solve the problem However it should not abruptly kill the reader anyway
; general
Changed the PR to only do Endpointscala cleanup
; general
Really nice LGTM
; general
deferring this after 220
; general
after rebase this can go into master but please add a ticket for backporting to 22x milestone to keep the code bases closer together we can wait some time until we backport so that possible fallout is dealt with before that
; general
rkuhn did you see the compilation error
; general
when I fixed it github was down and then I forgot to push it thanks for the reminder
; general
is it good
; general
LGTM apart from the restarted Throwable
; general
please add the explanation I gave on the ticket to the commit message for later reference
; general
LGTM after that
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator511
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator511
; general
Added Java versions of docs now actually ready for review
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator513
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator513
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator508
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator508 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator515
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator515
; general
LGTMPlease sign the CLA httpwwwtypesafecomcontributecla
; general
Thanks Ive signed the CLA
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator281
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator281
; general
Udpated according to review comments
; general
Udpated changed forward to tell
; general
Can I merge
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator512
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator512
; general
LGTM apart from the one thing that starting the cluster now may take one SeedNodeTimeout longer than before unless I missed something it should be documented that all seed nodes should be started simultaneously to avoid this waiting period
; general
yes its a correct observation that the tradeoff is that it might take SeedNodeTimeout longer if the other seed nodes are not started
; general
Instead of sending the InitJoin message to the other seed nodes only once in preStart it can schedule to do this once per second and that would reduce the startup time of the first seed node if the others are started slightly afterwardsWDYT
; general
yes that sounds reasonable also in case of network failures
; general
however that would mean that I cant use watch to detect that the other seed nodes are not started
; general
Aside from comments lgtm
; general
sorry it was too long time since I did this the observation about longer startup time is not correcteither it immediately receives Terminated or it receives Nack or Ack from the other seed nodes so it should not be any delay
; general
but the Terminated from the watch is racy as we discussed today you cannot reliably watch something which you have not talked to
; general
ok so you are saying that I should not base the solution on actorFor watch alright I thought we would have an replacement for that but that is true that would involve some kind of echo messagealright Ill change to retries
; design
Revised according to comments Changed to use retry and timeout instead of actorFor  watch
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator581
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator581 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
failure was in UdpConnIntegrationSpec created ticket for it
; general
merging now so that it can be verified by the nightly tests also
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator280
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator280
; general
Im not so certain about the style change the version with default arguments actually looked clearer to me unless Im missing something
; general
fixed review comments
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator501
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator501
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator502
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator502
; general
Looks OK to me
; general
drewhk could you take a look at the     whenWaitModeAndUpstreamListener         case Eventlistener HandleEventListener mode ThrottleMode  I didnt change that but it is changing the inboundThrottleMode  mode
; general
I fixed the review comments and also the aggregated statusPromise at two places see statusPromise completeWith Futurefold
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator283
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator283
; general
alright we consider the prvalidator failure 3 second timeout as a temporary timing glitch for now it will be seen again if its a real problem
; general
aside from missing explicit return types LGTM
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator507
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator507
; general
what is the failure mechanism without this change
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator284
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator284
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator505
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator505
; general
A few more things to cleanup if not already done add internal api scaladoc marker on privateio and privateakka explicit return type on all public methods make UdpConnManager TcpOutgoingConnection privateio wrong copyright in SelectionHandler
; design
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator506
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator506 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator506
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator506 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator510
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator510 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator286
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator286
; general
I have changed the signature of managementCommand and some additional boy scouting
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator285
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator285
; general
LGTMWe also have  2012 Typesafe Inc in the footer of rst docs and akkaio and these must be changed in other projects I suggest that you initiate those changes also
; general
I dont know the implications here you changed 2012 into 2013 in a few cases but my intuition would have been to make that 20122013 Which is correctneeded
; general
Does your replacement script check if the file was edited in 2013
; general
I just edited it And its 2013
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator287
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator287
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator516
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator516
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator514
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator514
; general
Isnt it problematic to put the dispatcher and mailboxtype in the LocalActorRef since it will prevent collection if the ActorRef is held past the death of the ActorCell
; general
barring scalac bugs no additional fields have been introduced in LocalActorRef
; general
LGTM that was a lot and at this point it should make us nervous but I think we have good test coverage for this akkalocalrepeat has been running on this branch over night without failures 10 full builds
; general
So the issue was that we never removed from the children collection and kept picking dead children when choosing which one to fail Apart from the CodeCache of course
; general
ok if you say so
; general
Nice since what protobuf returns is also immutable
; general
I feel that this should get into 22 WDYT
; general
Yes I think so
; general
Yes I will I just dumped early
; general
Dont worry about the first commit failure
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator496
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator496
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator490
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator490
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator488
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator488
; general
I dont get everything about this PR in particular why it didnt fail very obviously in the tests but it LGTM
; general
what do you mean there were no real referenceconf tests all tests that were using ssl had defined all ssl conf inside the test class
; general
It didnt fail because the tests that are using SSL set everything they needed in their own config and there was no test for the general config
; design
hmm so we should add a ticket to add a test which tests the pure referenceconf
; general
Patrik added those tests as part of this pull wink
; general
Im a good boy scout you know httpsgithubcomakkaakkapull1124filesL5R62
; general
Oh I should have looked at that file in full not only diff thought system would be the configured one Sorry for doubting you
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator487
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator487
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator485
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator485
; general
Improved based on Viktors feedbackAdded fix for ticket 3031 here aslo because they are related     Problem may occur when joining member with same hostnameport again      after downing     Reproduced with StressSpec exerciseJoinRemove with fixed port that      joins and shutdown several times     Real solution for this will be covered by ticket 2788 by adding      uid to member identifier but as first step we need to support      this scenario with current design     Use unique node identifier for vector clock to avoid mixup of      old and new member instance     Support transition from Down to Joining in Gossip merge     Dont gossip to unknown or unreachable members
; design
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator495
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator495
; general
AwesomeAfter review please squash to one commit and include the ticket number in the commit commentThanks
; general
squashed commits and moved the HashedWheelTimer tests into SchedulerSpec
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator290
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator290
; general
So heres what happens when scheduling an integer multiple of the wheel duration into the future the relative offset will be zero and the remaining rounds greater zero which means that it will be put into the current bucket The next tick will look at the next bucket which means that when the wheel has turned around once it will find our dear timeout with the initial remaining rounds eg 1 in the test case and delay it by one more round than calculated The correct fix would therefore be to decrease the remaining rounds by one if the relative offset is zeroHowever scheduling something by an integer multiple of the tick duration into the future means that the calculated bucket will always find this timeout to have slipped since by definition the current bucket was emptied in the past This means that the difference between this PR and the correct solution is just whether it will slip by one or two buckets which makes no difference  mergingand Im heavily pondering writing a Scala implementation completely without locks
; design
did you check for other occurrences of this bugLGTM
; general
rkuhn I did search for where DeadLetter is created and I think that should be alright replaced earlier Do you think it could be any problem with these occurrences BoundedMessageQueueSemantics BoundedDequeBasedMessageQueueSemantics deadLetterQueue in ActorSystem SystemGuardian Guardian send in RemoteClient
; general
The problem is more in the  or tell implementations than in the places which create DeadLetters if you checked the above then theyre fine I just checked all things extending MinimalActorRef and found only one offender theOneWhoWalksTheBubblesOfSpaceTime If you manage to send to that one youll get an NPE if you have no sender
; general
in theOneWhoWalksTheBubblesOfSpaceTime the only use of sender is guarded by if sender ne null
; general
You are right of course please disregard So I conclude that were good
; general
time will tell
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator292
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator292
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator482
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator482
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator484
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator484
; general
Yes that looks nicer Thanks for the feedback
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator492
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator492
; general
please forwardport to master also
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator481
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator481
; general
looks good apart from one small comment
; general
yup looking good The only thing Im uncomfortable with apart from that the commits need some squashing is that there is no test and I have no setup to just try it out
; general
good point Ill add test probably next week and then squash the commits
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator289
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator289
; general
So did some squashing my first time I hope this is fine and included patriknw remarks I havent added test but used the osgisample  to test it nb to test it you may stop and start the log service in karaf its ususally bundle 3
; general
thanks for contributing sorry for nitpicking  I hope you see it as a positive learning exercise
; general
Thanks sorry some errors are due to the fact Im testing several modifications and not always correctly commit change before switching I really enjoy learning and contributing
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator349
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator349 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
jenkins failures are not related to this ticket AFAICT
; general
So do I think
; general
Hi Christophecurrently the merge button is not green which keeps me from merging this in Could you please rebase on top of current masterThanksRoland
; general
aside from the wrong header and the rebase this looks good
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator349
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator349 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
again a stress test on the cluster part I havent seen anything about akkaosgi in the reported error
; general
yes OSGi seems fine
; general
Looks great We might need to generalize it somewhat when implementations other than TCP are added
; general
Looks great thanks for making the language clearer Apart from the few nitpicks LGTM
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator288
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator295
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator295
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator499
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator499
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator497
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator497
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator498
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator498
; general
LGTM but I cannot check the CLA right signature right now
; general
Unfortunately we cannot merge this without a signed CLAhttpwwwtypesafecomcontributecla I know it sounds stupid for a onecharacter documentation change but that is how it is
; general
LOL Signed it
; general
backported to release22
; general
Note  I stumbled on this issue by using ClusterActorRefProvider initially but to reproduce on 21 I had to use RemoteActorRefProvider insteadPlease make sure if you fix it to test it also with ClusterActorRefProvider on 22
; general
Note  I am on Windows 7 64 bits A colleague could not reproduce it on a Linux box
; general
I have the same configuration as Michel and I have just reproduced this regression
; general
Thanks a lot for reporting but please file the ticket in Assembla httpdocakkaiodocsakkacurrentprojectissuetrackinghtml
; general
I think this is a regression on Windows I have created ticket httpswwwassemblacomspacesakkasimpleplannerticket3450
; general
I confirm that this is fixed in 22RC2 Thanks
; general
Thanks for trying itPatrikOn Fri Jun 28 2013 at 338 PM Michel Daviot notificationsgithubcomwrote I confirm that this is fixed in 22RC2 Thanks  Reply to this email directly or view it on GitHubhttpsgithubcomakkaakkaissues1533issuecomment20188448  Patrik NordwallTypesafe httptypesafecom   Reactive apps on the JVMTwitter patriknw
; general
LGTM after some renaming
; general
deferred will review once 220RC2 is out
; general
next try after 220
; general
Thinking about Viktors comments I realize that this patch might indeed take us down the wrong pathFlexible and optionally deep logging is a key requirement for quite a few of our users and we need a proper solution rather than a large number of fragmented little patches like this oneIt seems to me that the time has come to start work on a dedicated aspectweaving tool for stats gathering and deep logging Is there already something in your drawers something that could serve as a starting point Otherwise well just start from scratch and approach you for feedback when a first cut is doneRegarding this patch If we assume we can rely on an aspectwoven tool for inspecting the exceptions in the future the additional exception level breaking the stacktrace chain as recommended by Viktor appears to be the best shortterm solution WDYT
; design
I dont know if I was misunderstood but just to clarify NoStackTrace can be disabled via system property httpsgithubcomscalascalablobv2102srclibraryscalasysSystemPropertiesscalaL80So my proposition solves the problem and its tunable what the user wants to see
; general
In my opinion the IO layer should not issue any log output above DEBUG level NIO also does not print to the console Whether or not a logged exception includes a stack trace at that level should be determined by whether or not the message itself uniquely identifies the source location and call stack already That said nothing at all should be logged for events which are signaled to the handler for the connection and without having checked the code at this point Id like to assume that that applies to the case for connection reset by peer Whether or not to add tracing of failures is a more general question that we should discuss outside of this pull request
; general
Thanks for the clarification and feedback gentlemen and sorry for not catching your drift earlier Viktor Ive got you now I really shouldnt be doing this stuff on the weekend with my son on the lapI agree with the no logging above DEBUG during normal operation policy and will update this PR with a respective fix ASAP
; general
Perfect Have a great weekend Mathias
; general
Ok gentlemen here comes take 2Up to now IOExceptions during reading writing or connecting were treated as fatal actor errors crashing the connection actor and thus producing ERROR level log messages This patch treats such exceptions as expected during normal operation and prevents them from crashing the actor Rather they are logged at DEBUG level and the actor is actively and cleanly stopped
; design
LGTM apart from nitpicks
; general
Ok feedback incorporated
; general
also posted here httpsgroupsgooglecomforumfromgroupstopicsparkdevelopers8AlvmcVHPi8
; general
HiVery easy for me to fix on my network I was thinking of others reallyThe problem seems to exist in several places in akka and spark so I am not going to tackle this for now This is my first two days on akka and spark and only a week or two into scalaNames with colons are a bit duff but that is the default with the router I have BT  UK so I guess a lot of people will hit this problemAlso when we do move onto IPv6 the IP addresses will have the same problem and I expect any autogenerated namesBut for now I will leave this Up to you if you want to keep it open as a low priority bug or colse it
; design
HiPlease open an issue in our issue tracker httpdocakkaiodocsakka220RC1projectissuetrackinghtmlThanks
; general
Sorry  created the user therealnb logged in and didnt have permission to create the ticketFrom Viktor Klang  notificationsgithubcommailtonotificationsgithubcomReplyTo akkaakka replyreplygithubcommailtoreplyreplygithubcomDate Friday 14 June 2013 1236To akkaakka akkanoreplygithubcommailtoakkanoreplygithubcomCc Nigel Brown nigelbrownguavuscommailtonigelbrownguavuscomSubject Re akka machine name containing colon throws exception in examples 1534HiPlease open an issue in our issue tracker httpdocakkaiodocsakka220RC1projectissuetrackinghtmlThanksXReply to this email directly or view it on GitHubhttpsgithubcomakkaakkaissues1534issuecomment19452240
; general
HiAs the link to the documentation says  you need to watch the Akka space to be able to open ticketsCheers
; general
HiI should really read the instructionsKI created a ticketRegardsFrom Viktor Klang  notificationsgithubcommailtonotificationsgithubcomReplyTo akkaakka replyreplygithubcommailtoreplyreplygithubcomDate Friday 14 June 2013 1254To akkaakka akkanoreplygithubcommailtoakkanoreplygithubcomCc Nigel Brown nigelbrownguavuscommailtonigelbrownguavuscomSubject Re akka machine name containing colon throws exception in examples 1534HiAs the link to the documentation says X you need to watch the Akka space to be able to open ticketsCheersXReply to this email directly or view it on GitHubhttpsgithubcomakkaakkaissues1534issuecomment19452883
; general
Updated according to comments and added some further optimizations based on a patch from viktorklang
; general
And the performance numbers are now 5ms for same by removing the GC triggered outliers and 6ms for merge by skipping the exists and only doing forall in the VectorClocktryCompareTo
; general
Whats the current perf compared to master
; general
The last two changes didnt account for enough object allocations to affect the running times Its still 5ms for same and 6ms for merge
; design
Ok And were sure that we havent changed semantics in an adverse way
; general
I cant see that it changes any semantics All tests are green VectorClock Gossip Cluster and the stress test replay of cluster messages have the same number of neweroldersamemergeIll kick off a repeat job on the branch
; general
Excellent Great work Bjrn
; general
Cleaned up according to commentsMade VectorClock be privatecluster and changed Node into a String Also made VectorClock not extend PartiallyOrderedVectorClock so we now return something more specific than OptionInt
; general
LGTM I like the red
; general
LGTM apart from the nitpicks
; general
Made changes according to the last round of comments and squashed Awaiting Kitteh and then Ill merge
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator534
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator534
; general
fixed review comments
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator534
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator534
; general
Apart from test comment LGTM
; general
this changes semantics of a method within BC compatible branch see comment in 1021  sorry for screwing this up I should have closed this ticket when I closed the old PR
; general
ok reverted here 1167 Changing semantics of misbehavior is normally fine though and from the ticket I read that it was not working as intendeddocumented
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator299
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator299
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator300
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator300
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator298
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator298
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator535
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator535
; general
Some updates to the PR  added introduction  added obstructionfreedom  fixed typos and minor stuffBeware I have not yet changed debated sections Unfortunately GitHub marks some of those comments as outdated but they are important so please read them
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator535
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator535
; general
a code example in each section would be goodillustrate how it can look like in Akka land actors futures
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator559
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator559
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator539
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator539
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator301
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator301
; general
Excellent stuff Roland
; general
LGTM Looks Great To Me
; general
LGTM and its a great to make it pluggable
; general
pong ie it is done
; general
I cant see the difference between the old commit and the new what was changed or should I go through it all again
; general
Since I moved things around to get that clock thingy working you would not have seen much anyway since the rest has been redone more or less completely Plus I fixed some things in the core algorithm the nullEmpty thing and during shutdownSo in this case Id like to ask you to look it all over again
; general
Ok will do
; general
Looks awesome great work RolandWould be nice if we could deprecate the HashishWheelOfTimer
; general
merging it in now Ill prepare a PR for removing HashedWheelTimer afterwards
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator537
; general
LGTM if you guys say that it solves the problem
; general
Well looking at it with some tool cannot hurt
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator537
; general
I actually verified before pushing the fix that without it we got threads that are not from the dispatchers and not normal worker threads hanging around for a while after running the remote tests and with the fix they shut down directly
; general
LGTM just to be sure
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator294
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator294
; general
Apart from the toSortedSet I have incorporated all feedback in 1027 Im not sure whether this PR should be merged for sure it should not be backported since someone might rely on the old behavior of always getting isCancelled  true after calling cancel it breaks at least one of our tests If the new AkkaTimer is just better in all regards then we should scrap the HWT and then there would be no point in fixing itComments
; general
closing as per my last comment
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator549
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator549
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator549
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator549
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator293
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator293
; general
ok it looks like it could be the reason to the failure1
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator541
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator541
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator297
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator297
; general
Oops I broke the tests Fixing
; general
Closing until fixed
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator296
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator296
; general
Did this fix the SSL handshake
; general
I dont know because it has not failed on my machine nor on the job I have on jenkinstypesafecom But there are other tickets related to updating Netty
; general
Ok then lets merge and observe
; general
I am the surface worker so I will be the first one to file the failure  anyway
; general
Patrik you are great
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator303
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator303
; general
Fixed the hash collision problemFeedback handledFound the regression detected by StressSpec
; general
You are amazing Patrik
; general
yes very true me not so much because Im guilty of not having reviewed this PR yet
; general
thanks but this was real team work  great ideas
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator306
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator306
; general
Fixed things from last review round Ill squash when thumbs up
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator309
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator309
; general
apart from the debug method layout of def senders above LGTM
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator302
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator302
; general
Updated according to comments
; general
apart from comments LGTM
; general
Great one Patrik
; general
Please sign Typesafe CLA httpwwwtypesafecomcontributecla
; general
LGTM after signing the CLA
; general
Done Thanks MikeOn Jun 20 2013 at 202 AM Patrik Nordwall notificationsgithubcomwrotePlease sign Typesafe CLA httpwwwtypesafecomcontributeclaReply to this email directly or view it onGitHubhttpsgithubcomakkaakkapull1541issuecomment19732541
; general
LGTM thanks I have verified CLA
; general
Hmm Im pretty sure I tried this out locally and it worked the change LGTM anyway
; general
theres a regression test added in the PR so Im pretty sure that it didnt work without it
; general
I must have done something wrong obviously
; general
Or the STATIC flag works differently on different Java versions for toplevel classes
; general
Well in any case its all gud nao
; general
no additional test
; general
LGTM but I have only a vague understanding of this
; general
I have run full builds on this branch 9 times tonight No failureshttpsjenkinsakkaio8498jobakkalocalrepeat
; general
Thanks a lot20 jun 2013 kl 0826 skrev Patrik Nordwall I have run full builds on this branch 9 times tonight No failures httpsjenkinsakkaio8498jobakkalocalrepeat   Reply to this email directly or view it on GitHub scaladebate on 2009102Viktor Klang When will the days of numerical overflow be goneRicky Clarkson One second after 031407 UTC on Tuesday 19 January 2038
; general
I would like to see some of the relevant scheduler tests running with tickduration10ms
; general
added the actual fix for the problem doh and a test which verifies it drewhk would you please rerun the test on Windows
; general
Windoz Kitteh aksept job
; general
U CAN MERGE NAO
; general
Nice No test
; general
Thanks for the cleanup
; general
some small fixes needed otherwise LGTM
; design
fixed the mistakes
; general
I dont think this should be backported to 20Fw port to master of courseCurrent ticket strategy if I havent missed something doesnt mandate a separate ticket for each version Set the milestone to the lowest version in which it was fixed and then its assumed to be fixed in master later versions also
; general
OK Ill close all the forwardbackport tickets I made Ill wait to close the main ticket until the fix is on both 21 and master
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator527
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator527
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator542
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator542
; general
Apart from comments LGTM
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator530
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator530
; general
Changed based on review
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator530
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator530
; general
aside from the test shutdown thing LGTM
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator536
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator536
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator538
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator538
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator323
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator323
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator522
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator522 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
also create ticket httpswwwassemblacomspacesakkaticketsnewand refer to the ticket number in the commit message makes it easier to track for cherrypicks etc
; general
well thats the last time I CP from viktorklang PIm getting access denied when trying to log in to assembla with my google account
; general
patriknw I dont have permissions to create a new ticket at assembla Ive updated the patch
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator583
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator583
; general
fommil have you tried the instructions here httpdocakkaiodocsakkasnapshotprojectissuetrackinghtmlCreatingticketsFor now I have created the ticket for you httpswwwassemblacomspacesakkatickets3086
; general
LGTM please squash into one commit and include the ticket number 3086 in the commit messageThanks for contributing
; general
LGTM after squashing
; general
patriknw thanks Im a watcher now I also have a non3G connection now so Ill be able to do this all properly I dont know how to squash commits so Ill have to do some research on that
; general
great you squash with git rebase interactive or simply git reset to the commit before your commits and then commit again Thereafter git push force to this same branch and the pull request will be updated
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator517
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator517
; general
Updated according to Viktors comments thanks I am a bit unsure about the error handling on the receive side please review it
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator521
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator521
; general
aside from the minor comments LGTM
; general
drewhk Could you please add a test for messageframesize as well The code also fixes 3038 I marked it as a duplicate of thisAside from that LGTM
; general
Are you sure this fixes that one tooWell the test will tell
; general
As far as I can see we set up the frame size in a LengthFieldBasedFrameDecoder in the netty pipeline and it will throw a TooLongFrameException during encode if the payload doesnt fit
; general
Isnt that a separate pipeline stage than the ProtobufCodec I hooked into
; general
PLS REBUILD ALL
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator521
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator521
; general
Added reporting for oversized messages so channels are not closed
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator529
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator529 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
I broke the durable mailbox test will fix
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator529
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator529 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
Kitteh reported the previous build
; general
This seems to be the correct build httpsjenkinsakkaio8498jobakkaprvalidator533parameters
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator546
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator546
; general
Updated akkording    to Patriks comments
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator547
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator547
; general
Great work Bjrn
; general
looking good although Id like to understand those PoisonPills good catch with the TestConductor
; general
Added better comments for the PoisonPill cleanup in the tests
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator320
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator320
; general
LGTM merge away
; general
great even though I think the PoisonPill stuff was undry
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator319
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator319
; general
Sorry this looks massive because Ive not merged yet I cant do it on this machine at the moment The only bit of relevance is the final commit
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator518
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator518 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
drewhk I think itll become a separate PR once I merge upstream changes into my repo Github isnt able to auto merge and Im currently in a low bandwidth connection and unable to do this locally viktorklang that was what I did the first time but I thought it looked messy You sure you want it as a oneliner
; general
Ping us with a comment when there is a fresh pull request with one commitIs there a ticket for this
; general
patriknw arent pull requests also tickets on github That has actually always annoyed me slightly
; general
fommil might be but Akka tickets are in Assembla httpswwwassemblacomspacesakkaticketsnew
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator318
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator318
; general
Oops  You are right
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator327
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator327
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator519
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator519 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
LGTMIs it important Backport to 21
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator315
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator315
; general
Passing the envelope through looks good ThanksBut Monsieur Chartreuse there is a failing testTest failure is probably that the envelope creation is no longer wrapped in a tryeventStreampublish
; general
Im sorry thats what I get for pushing while running the tests Will fix asap tomorrow
; general
PLS REBUILD ALL
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator316
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator316
; general
PLS REBUILD ALL
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator317
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator317
; general
PLS REBUILD ALL
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator324
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator324
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator525
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator525
; general
I am not sure about this style I liked when we had the ifs on the first line But it seems that I am the minority
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator310
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator310
; general
I like this styleLGTM apart from the unnecessary line wraps and arrow misalignment that viktorklang already pointed out
; general
an improvement in every single case even the ones I commented upon LGTM
; general
The extra line breaks introduced by scalariform in eclipse can be avoided by using braces as suggested by rkuhn
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator524
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator524
; general
Hmm dunno what I did wrong back then I tried it out in the REPL But good to have a test
; general
ok closing this and will add the test to LoggerSpec when 1162 has been merged
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator308
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator308
; general
Are we sure we have removed it all now
; general
There is only config related stuff remaining there I remove them in the  next round and unify the configuration
; general
Please double check RemoteTransport because I removed quite a lot of  stuff from that class that is deprecated ie not used in the new  remoting I want to be sure that everyone agrees on the changes
; design
I assume we have the same tests in the new remoting btw
; general
Yes and many more The new config does not have a test yet but that obviously needs the refurbished new config first
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator307
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator307
; general
LGTM did only a brief scan
; general
Failed It seems It seems I messed up something in my branch Fixing
; general
PLS REBUILD ALL
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator311
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator311
; general
Buffer overflow strikes again
; general
PLS REBUILD ALL
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator321
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator321
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator523
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator523
; general
1 fw port to master if needed
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator526
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator544
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator544
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator545
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator545
; general
oh good one LGTM
; general
Great work Bjrn
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator326
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator326
; general
Please sign Typesafe CLA httpwwwtypesafecomcontributecla
; general
LGTM after CLA
; general
I completely understand the need for a CLA but respectfully refusing to sign at this point
; general
lgtm Thank you
; general
LGTM nice test
; general
When is it going to be merged
; general
I assume we want this cherried into release22 as well
; general
no Ill move release22 branch onto master when everything is merged holding off on the one thing that shall not go in
; design
Excellent thanks Roland
; general
Has this been verified somehow
; general
I have made things a bit slower by inserting small pauses in the AkkaProtocolTransport and it reliably fails Thats the only thing that I could think of
; general
how much slower did you have to make it until it started failingin any case LGTM
; general
Well obviously the total time had to approach 3 seconds but in total around 2 seconds scattered around the different steps that localhost machine is really fast at responding
; general
spinning off on a tangent We could repeat on scalable1 with random delays and measure the correlation between total delay and failure plot the failure density as a function of the delay and then estimate the expected failure rate at delay0 if that matches the observation of the previous two weeks then were golden Long story short looks good
; general
LGTM have you tested it
; general
I played around a little is there some test suite for it
; general
Good playing around with the simple sample was what I had in mind
; general
I dont really know how it works so I trust you here
; general
that is a lot of changes we should place this under heavy testing
; general
Yes but they look more scary than they are actually I did a lot of test runs and also increased the pressure on stress tests
; general
heavy testing never hurts  and if it does then we want that
; general
I never said do not heavy test it DBtw dont mind the first failure above the second commit is supposed to fix that I have not squashed yet so the two commits can be viewed separately
; general
The last build was successful just the Kitteh is lazy
; general
LGTM keep it as it is
; general
jenkins run was successful
; general
Apart from removing the spinning part
; general
Now wait for a final kitteh run
; general
LGTM I have run at least 4 full builds of this branch in akkalocalrepeat
; general
Kitteh was happy
; general
Rebased and squashed I will wait for the next Kitteh round before merge  since it comes for free
; general
Rebased and force pushed
; general
I have also created an uptodate version of our message protocol charthttpsdldropboxcomu4493646Tcp20Message20ProtocolsvgThe thing is done with OmniGraffle and consists of a series of small charts that should be well suited for the dev docsDo you have a preferred way to get this integrated
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator304
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator304
; general
Whats your usual workflow to fix things discussed here I would just add small commits fixing details is that the usual way
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator305
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator305
; general
Really great stuff I like the test harnessOne thing just crossed my mind does it support binding to port zero and then getting the real local port number back
; general
I implemented a completely new strategy how to use direct buffers in 7d89aefb634e6dd2c31ed8f13b6963be4f338352 The thread locals now have gone and we now have a simple pool which connection actors tries to give back its unused buffers to The pool has both an upper limit of free entries as well as an upper number of bytes in a buffer which it will reuse Bigger buffers can be created but wont be pooled and reusedThe major advantage of this approach is that when writing we can now copy data into a direct buffer exactly once and keep this buffer which has always big enough size until all data is writtenWDYT
; general
Theres no limit on the number or size of buffers you can get just a limit of how much free buffers it keeps for reusing which I now set to 128KiB  1000  128MiB per default
; general
So if I want virtually unlimited number of buffers I just put a large number in there
; general
Ok I guess the description of the flag is misleading You could put in there a very large number if you never want to free them again why would you want this On the other hand you could set it to zero and still everyone who wants would get a buffer However no buffer would get reusedSo what you specify by the product of maxdirectbufferpoolsize and directbuffersize is the maximum number of bytes wasted by currently unused buffersOf course theres a spectrum of possibilities of how to grow and shrink a pool depending on the current usage Its hard to say which is the best strategy for different use cases Maybe we could make the pool implementation itself configurable
; design
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator312
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator312
; general
Beautiful tests great work
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator314
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator314
; general
Awesome progress here So great to collaborate with you guys
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator325
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator325
; general
I pushed a new version of the DirectByteBufferPool which keeps soft references to a fixed number of fixed sized buffers If the pool is full a buffer offered wont be reused but will have to be garbage collectedIs that what you had in mind
; general
Yes thats the simple approach that I would likeA quick comment on the code The new DirectByteBufferPool will not take into account that any one of the occupied slots can be freed by the garbage collector not only the topmost This could lead to the pool being full even though its mostly emptyYou could add your SoftReference to ReferenceQueue and then have a scavenger thread that removes those freed entries from the pool or simply try to compact the pool on every Nth acquirerelease operation
; general
I suggest keeping things simple and avoid complicating things with SoftReference ReferenceQueues manual GC and compaction
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator332
; general
Fine viktorklang Youre probably right As long as we document the implications of tuning those pool settings wrt the XXMaxDirectMemorySize flag
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator332
; general
I dont have to keep the SoftReferences When thinking about it again now and including the comment from bantonsson I dont think they will pull their weight
; general
Yep lets optimizetweak this later there are probably tons of dimensions to this yet to be considered
; general
Ok Ive reverted the change regarding SoftReferences
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator335
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator335
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator338
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator338
; general
Ok guys I think we are ready for the next round of reviewsIn our eyes we are feature complete with an ok initial test coverageBring it on
; general
I have also updated the message protocol diagramshttpsdldropboxcomu4493646Tcp20Message20Protocolsvg according to the latest implementation
; general
Great work guys this starts looking awesome Id like to click that green button rather sooner than later so we can start working on the SPI and trying it out while implementing UDP so that this can actually go into 22M1sirthias could you commit the flow charts as individual files so we can embed them in the docs Thanks a lot
; general
Starting to look awesome Its been sparkling with awesomeness for ages
; general
No problem Where do you want themWhere should I put the omnigraffle file
; general
Hmm they show all the details but Im still leaning towards including them in the userlevel documentation for Tcp which means that they should go in akkadocsrstimages and will be referred to from rstscalaiorst and rstjavaiorst
; general
Yes what I meant is that even relative to the starting level of really good it now becomes awesome  It is a delight working with sirthias and jrudolph23 jan 2013 kl 1520 skrev Viktor Klang  Starting to look awesome Its been sparkling with awesomeness for ages
; general
Awesome thanks a lot for all of your comments and for being as rigorous as you were
; general
I think this might just be the pinnacle of OSS collaboration
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator520
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator520
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator329
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator329
; general
Please add a comment about why the line stays in finishTerminate it is due to the emergency exit path taken from handleInvokeFailure squash the commits and then I think we can merge the very first external contribution to the dungeon
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator333
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator333
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator328
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator328
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator340
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator340
; general
Ive skimmed it once will have to redo once you declare it done
; general
Ready for final review Everything including documentation completed
; general
This is awesome Great work Patrik And you get bonus points for extra boyscouting
; general
thanks mate  yeah it was a major effort to cleanup after you FSM rocks
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator340
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator340
; general
This is so cool Have nothing to add LGTM
; general
Thanks I will fix the minor comments and the collect of handOverData in Leader and WasLeader states after lunch then I will merge this Nice to have it done this week
; general
nice indeedverr najs
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator34
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator34
; general
also cherrypicked to release21
; general
wait something was lost when will update
; general
fixed please review
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator35
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator35
; general
Just skimmed it will review it later Could remote deployed actors cause a problem I am thinking of name mangling
; general
Thats a valid point I dont know if its a problem and I dont think it is a scenario we need to supportHow would you setup such routerscreate some remote deployed actors outside the router pass their references to routees constructor parameter of several routers on different nodes  think that is rather artificial
; general
Merge We can discuss the other mechanics I was talking about later
; general
great I will merge and cherrypick this tomorrow morningI will change so that the toString is not a valthen we can consider Viktors idea in Coltrane
; general
cherrypicked to release21
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator36
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator36
; general
great I will merge and cherrypick this tomorrow morning
; general
cherrypicked to release21
; general
Excellently done Bjrn
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator37
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator37
; general
LGTM Very nice catch I will port it to the new netty driver as soon as this is merged
; general
Merge and backport to release21
; general
LGTM Awesome that you found this
; general
And even greater that we learned something Btw do we plan to file a ticket for nssldap The buffer overflow is still not nice
; general
Yes Ill file a ticket for the nssldap lib
; general
Nice Tested the links LGTM
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator38
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator38
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator330
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator330
; general
Sure Ill cherrypick
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator336
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator336
; general
Updated Refactored from promise passing and onComplete juggling to future composition
; general
FYI going with the inertia I split TCP and UDP into separate drivers as well I wont commit it here but as a separate PR
; general
PLS REBUILD ALL
; general
yes great work LGTM
; general
PLS REBUILD ALL
; general
Kitteh is down What should be the course of action here
; general
PLS REBUILD ALL
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator334
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator334
; general
yes this design looks good great work EndreI only reviewed the config file and skimmed the rest assuming that that are just fixes for the resulting fallout
; design
I did a clean build test because the kitteh is out for a stroll Proceeding with merge be the Jenkins gods with us
; general
LGTM Merge into master and release21 please
; general
cherrypicked to release21 done
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator337
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator337
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator339
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator339
; general
LGTMThe failure is unrelated to the change Ticket created
; general
Backport or not
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator31
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator31
; general
Applied review feedback
; general
Can you add an example with the pattern pipe to the section Use with Actors
; general
Thanks Have not reviewed it yet will look into it later
; general
Oh it closed
; general
Opened a new squashed one
; general
I like it 1
; general
Now users of requiring will get inlining if they compile with optimize I compiled the cluster module with optimize to verify thisI couldnt compile all of Akka with optimize due to a Scala bug I added a commenthttpsissuesscalalangorgbrowseSI5322focusedCommentId62298pagecomatlassianjirapluginsystemissuetabpanelscommenttabpanelcomment62298 to the relevant ticket
; general
Apart from comments LGTM
; general
Very nice work Rich
; general
Just as a thought a macrobased solution would get around the inlining  optimize issues right away no
; design
well AFAICS this is only used while parsing configuration settings which should not really be a hot path
; general
If we do the change from ConfigurationException to IAE then there is nothing that is configurationspecificAnd since this is a sexy addition I and others too Im sure would like to use it in our own nonconfig and possibly hot code as well
; general
aaaaah I seeeeeee
; general
Added comments removed methods without message textThinking about it do we even need the method that takes a cond Boolean Wed probably only ever use the cond A  Boolean methodA macro sounds like fun but it might take quite a bit of work
; general
Thinking about it do we even need the method that takes a cond Boolean Wed probably only ever use the cond A  Boolean methodWhen you need to reference the value more than once in your predicate the first variant can be a bit shorter    d requiring 0  d  d  10 d must be  0 and  10versus    d requiring x  0  x  x  10 d must be  0 and  10So depending on style it might add value
; design
Here is the macrobased solution    object Helpers       implicit class RequiringAval value A extends AnyVal         def requiringcond Boolean msg Any A  macro HelpersMacrosrequiring0A        def requiringcond A  Boolean msg Any A  macro HelpersMacrosrequiring1A              object HelpersMacros       type RequiringContextA  MacroContext  type PrefixType  HelpersRequiringA       def requiring0Ac RequiringContextAcond cExprBoolean msg cExprAny cExprA          import cuniverse        val cExprApply args  cprefix        val value  cExprargshead        reify           if condsplice valuesplice          else throw new IllegalArgumentExceptionmsgsplicetoString                    def requiring1Ac RequiringContextAcond cExprA  Boolean msg cExprAny cExprA          import cuniverse        val cExprApply args  cprefix        val value  cExprargshead        reify           val v  valuesplice          if condsplicev v          else throw new IllegalArgumentExceptionmsgsplicetoString                  It inlines everything directly without boxing and without thunk creation for the condition or message
; design
yes the macro is a simple one but we would not be able to use it without major surgery because then wed need to make a new project with it and akkaactor depending on it and then merging the JARs  so I think well go with the inlining for now
; general
well leave the Nat0 glitch in to lure someone else into contributing a small fix later
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator30
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator30
; general
I personally like the use of foreach in the Scala examples but isnt easier to understand for beginners if onSuccess is used as in the Java examples WDYTOtherwise LGTM
; general
I think a Scala programmer will understand foreach
; general
Sooner or later yes At the beginning it may be confusing It is your  choice though I am happy either way
; general
and one more class down the drain Excellent LGTM
; design
aside for the hashCodeequals in HashedWheelTimeout 1
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator33
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator33
; general
LGTMBackport to release21
; general
LGTMLike this one a lot better than the last fix
; general
also cherrypicked to release21
; general
Regarding remState  attach thats a remnant from when remState didnt call attach good call Attach is a conditional construct required for guaranteeing invariants so it should most definitely be in remState remState is also private so it is under control Thanks for reviewing Rich Ill add tests to both the EC impl and the java API of Agent Docs for Agents also needs rewriting
; design
Rewrote Agent docs and added some more tests will commence writing some tests for the new ExecutionContext
; general
Added tests for the new EC
; general
Addressed Richs nice catches
; general
Yes I like it now and you know what that means
; general
Added suspension test
; general
ah I cant take it the SUSPENSEnow it only need migration docs
; general
As soon as everyone has OKed this change in Agents Ill add migration docs
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator347
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator347
; general
LGTM Really like the SerializedSuspendableExecutionContext
; general
Oh I almost forgot The doc doesnt build KITTEH PLS COME BACK
; general
Thanks Bjrn Currently fixing the docs
; general
LGTM merge after KITTEH has approved
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator347
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator347
; general
Great work thanks for these fixes Please adapt the two places I commented upon squash it into one commit and repush with f to this branch then we can merge it
; general
okay heres how Ive done it    rkakka rkuhn git co pr1050    Note checking out pr1050        You are in detached HEAD state You can look around make experimental    changes and commit them and you can discard any commits you make in this    state without impacting any branches by performing another checkout        If you want to create a new branch to retain commits you create you may    do so now or later by using b with the checkout command again Example          git checkout b newbranchname    HEAD is now at 9c240cd Update akkadocsrstgeneraladdressingrst    rkakka rkuhn git co b tmp    Switched to a new branch tmp    rkakka rkuhn git log oneline masterHEAD    9c240cd Update akkadocsrstgeneraladdressingrst    52a6f20 Update akkadocsrstgeneraladdressingrst    b3290e1 Update akkadocsrstgeneraladdressingrst    2aaec94 Update akkadocsrstgeneraladdressingrst    45a69cc Update akkadocsrstgeneraladdressingrst    d5eef86 Update akkadocsrstgeneraladdressingrst    a207ce5 Update akkadocsrstgeneraladdressingrst    ab192e4 Update akkadocsrstgeneralsupervisionrst    0e1cb63 Update akkadocsrstgeneralsupervisionrst    68c8706 Update akkadocsrstgeneralsupervisionrst    1e684e3 Update akkadocsrstgeneralactorsrst    rkakka rkuhn git rebase i 1e684e3    detached HEAD 4848e82 various doc fixes spelling wrong words clarity     Author Derek Mahar derekmahargmailcom     3 files changed 36 insertions 35 deletions    Successfully rebased and updated refsheadstmp
; general
PLS REBUILD ALL
; general
I dont have merge rights so after the kitteh says ok PLZ MERGE
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator60
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator60
; general
Not merge yet there is one mistake sorry
; general
I didnt say remove it I said set it to 0
; general
Updated according to Viktors recommendations
; general
Apart from comments LGTM
; general
apart from the Exception LGTMThanks
; general
Fixed according to comments
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator22
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator22
; general
Should we backport this to release21
; general
I dont think it is critical but it is up to you
; general
Alright could you squash this into 1 commit so if we want to cherrypick it into release21 its a onestopshop
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator29
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator29
; general
Guys is this ready to go or not
; general
Ill fix according to Rolands comments squash it and update the PR Any other comments or change requests
; general
No further comments LGTM
; general
Updated PR according to Rolands comments
; general
Should this be backported to release21 once merged
; general
should be backported into release21 as well right
; general
Yes will do when passed review18 okt 2012 kl 1812 skrev Viktor Klang  notificationsgithubcom should be backported into release21 as well right   Reply to this email directly or view it on GitHub
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator21
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator21
; general
no something much more serious is going on here closing this PR see httpswwwassemblacomspacesakkatickets2630
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator346
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator346 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
same failure as in the other one
; general
Are we sure that wipIO built correctly after the original PR I just looked again and it seems the last time jenkins ran on it it failed httpsgithubcomakkaakkapull1030issuecomment12512118
; general
right you are so it was always wrong
; general
Ill fix the test and send a PR for that first
; general
PLS REBUILD ALL
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator346
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator346 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
This didnt work but I suspect because it didnt include the fix from the other PR If you look into the log the merge was      Updating 93fc9f144d6102but 93fc9f1 is the version preceding the fix
; general
yes it seems that the KITTEH is not always picking up the latest Im currently trying to figure out why that is thanks for staying on top of this
; general
I rebased this pull request on the current wipIO so the tests should now succeed
; general
PLS REBUILD ALL
; general
Yes indeed the test did succeed though I had to trigger it manually since the KITTEH is sleepy againThanks for this addition
; general
drewhk do you want to transport to your config change manually or is it better to rebase on top of your branch
; general
No I will rebase mine
; general
sounds good thanks
; general
I think this can be merged
; general
this PR must be based on wrong branch or somethingthe config version range fix should be merged to master and release21
; general
Thanks for the reportHowever your PR doesnt go the full way Ive opened another PR with the correct new version rangeThanks for reporting thisAny other problems with OSGi
; general
Hi Victor  thanks for catching that version range thing didnt see thatIll be playing with Akka and OSGi in the next few days especially remoteactors and Ill let you know if I find anythingCheers DaveOn Thu Oct 18 2012 at 637 AM Viktor Klang notificationsgithubcomwrote Thanks for the report However your PR doesnt go the full way Ive opened another PR with the correct new version range Thanks for reporting this Any other problems with OSGi  Reply to this email directly or view it on GitHubhttpsgithubcomakkaakkapull811issuecomment9564494 Dave LeBlanc davidleblancgmailcom
; general
Thanks Dave Looking forward to more feedback on the OSGi support I really appreciate thatCheers
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator344
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator344 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
closing of connections seems broken by this patch
; general
PLS REBUILD ALL
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator352
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator352 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
Thinking about the security implications there is no precedent for anything being secure at the moment each actor can send whatever to every other So I tend to think sending the filename would probably be fine The configurable dispatcher to run the actual sending on is one way to do it another could be to wrap the transferTo call in blockingRight now the PR does not merge cleanly anymore
; design
I had no time yet to look over it again and make it merge cleanly again and fix the remaining issues I will try to get it done this week
; general
Ill have to recreate the pull request to target the right branch
; general
Superseded by 1321
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator846
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator846 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator345
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator345 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
the jenkins failure seams to rely on git merge error am I true
; general
Yes this failure was because the branch cant be merged cleanly onto master You have to make your branch merge cleanly either by rebase or merge of master to make the build kitteh happy
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator345
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator345 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
Im not expert in Jenkins Ive just rebased this commit on akkamaster but did not succeed As this may conflict with the previous PR please tell me if I need wait to rebase on akkamaster
; general
hmm not sure whats wrong here on the PR page the button is green but the KITTEH does not agree will investigate
; general
PLS REBUILD ALL
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator355
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator355 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
ah okay now you have something to work with
; general
thanks sorry for that mistake bad rebasing I think lets hope this time will be the good one
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator355
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator355 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
maybe master is moving to fast for me Ive just rebased
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator355
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator355 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator359
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator359 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
PLS REBUILD ALL
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator367
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator367 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
you forgot to adapt things in akkaosgiaries
; general
Sorry for that point its actually strange as I gave default value for OsgiActorSystemFactoryconfigAnyway corrected in BlueprintActorSystemFactory
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator367
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator367 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
so there are 3 files in this commit and it does not seam to be taken into account in this jenkins job So sorry but I dont know
; general
hmm no idea but the current state of this branch is not what was tested thats true and the merge button is also not green which is also true
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator367
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator367 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
So tried to create a branch directly on akkamaster without debasing
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator379
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator379 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
the failure was not yours merging now sorry for the KITTEH disturbances I dont know why it dislikes you so much
; general
now if only we had a build KITTEH LGTM
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator342
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator342
; general
no changes to rst docs is covered by another ticketI understand why we have the divergence but we must get them in sync asapno changes to samplesaside from that which you I guess you will address in another PR 1
; general
Yes they are the next PRs I delayed them until all the changes are in  place
; general
PLS REBUILD ALL
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator342
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator342
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator343
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator343 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator351
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator351
; general
Apart from comment about ThreadLocal LGTM
; general
Should also be backportedcherrypicked for release21
; general
fixed all comments
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator364
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator364 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator364
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator364 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
hmm one more failure as noted in the ticket
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator377
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator377 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator401
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator401 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
PLS REBUILD ALL
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator407
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator407
; general
Thanks for the preview comments
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator365
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator365
; general
Thanks for the comments Rich you are my hero
; general
After the changes proposed by richdougherty LGTM
; general
I trust you guys LGTM
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator365
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator365
; general
Ummm this doesnt really seem like it fixes 2618 but perhaps youre adding that flag preferIPv4Stack somewhere else
; general
Yes dont close the ticket This is only an enabler for the workaround as I wrote in the PR Doesnt solve ticket 2618 but makes it possible to use the workaround and is useful in general
; general
Alright I blame jetlag Great work Patrik
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator341
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator341
; general
Thanks Patrik looking good I checked the BC questions and the affected classes are privateakka so they only need to keep working not keep being subclassable by external parties This means that this PR does not violate BC AFAICSThis is the last cluster update for 21x right Could you please send me a summary of the changes so they can then be listed in the 211 release notes when that comes out
; general
Ill give you the list of tickets Should the ticket milestone be changed or should I just post a comment on each ticket
; general
ClusterDeathWatch is not failing on jenkins httpsjenkinsakkaio8498jobakkarelease21git bisect helped me track down the failing commit for ClusterDeathWatch    081611 patrikfastlane Userspatrikdevakka     git bisect good de420ec38a05928d5ee3b2ca9ff28e0c2dd22f2e    Bisecting 162 revisions left to test after this roughly 7 steps    c5be2096e3e93ff9bf1efdd4f1de2ffd8d12b013 MatchError in RemoteDaemon case AddressTerminated see 2660 cherry picked from commit 06199e3f8f6b27e63895495b9b358aee140d0239    081636 patrikfastlane Userspatrikdevakka     go c5be2096e3e93ff9bf1efdd4f1de2ffd8d12b013    HEAD is now at c5be209 MatchError in RemoteDaemon case AddressTerminated see 2660 cherry picked from commit 06199e3f8f6b27e63895495b9b358aee140d0239    081705 patrikfastlane Userspatrikdevakka     git bisect bad    Bisecting 82 revisions left to test after this roughly 6 steps    91f6c5a94dad08a481ffaea24d3ba55b7edec1ef Adjust barrierschecks in LeaderElectionSpec see 2583    082222 patrikfastlane Userspatrikdevakka     go 91f6c5a94dad08a481ffaea24d3ba55b7edec1ef    HEAD is now at 91f6c5a Adjust barrierschecks in LeaderElectionSpec see 2583    082228 patrikfastlane Userspatrikdevakka     git bisect bad    Bisecting 39 revisions left to test after this roughly 5 steps    972f669c87fbe1586bd5682916ee6866a75f803b Adding addressTerminated to UntrustedSpec    082732 patrikfastlane Userspatrikdevakka     go 972f669c87fbe1586bd5682916ee6866a75f803b    HEAD is now at 972f669 Adding addressTerminated to UntrustedSpec    082743 patrikfastlane Userspatrikdevakka     git bisect good    Bisecting 20 revisions left to test after this roughly 4 steps    a471545eecc01222f7c154507fd07e0f06882a1d Merge pull request 779 from akkawip2586testconductortransportpatriknw    083707 patrikfastlane Userspatrikdevakka     go a471545eecc01222f7c154507fd07e0f06882a1d    HEAD is now at a471545 Merge pull request 779 from akkawip2586testconductortransportpatriknw    083717 patrikfastlane Userspatrikdevakka     git bisect good    Bisecting 9 revisions left to test after this roughly 3 steps    73ad31baa4331b44927e1b669740aa1ebc1ee0bb Merge pull request 789 from akkawip2600tagsoptoutpatriknw    083849 patrikfastlane Userspatrikdevakka     go 73ad31baa4331b44927e1b669740aa1ebc1ee0bb    HEAD is now at 73ad31b Merge pull request 789 from akkawip2600tagsoptoutpatriknw    083857 patrikfastlane Userspatrikdevakka     git bisect bad    Bisecting 4 revisions left to test after this roughly 3 steps    5b0a2ec7ee44ab82f60dda8ccd5fa0114c00d38f Merge pull request 782 from akkawipnullisnottasty    084449 patrikfastlane Userspatrikdevakka     go 5b0a2ec7ee44ab82f60dda8ccd5fa0114c00d38f    HEAD is now at 5b0a2ec Merge pull request 782 from akkawipnullisnottasty    084454 patrikfastlane Userspatrikdevakka     git bisect bad    Bisecting 2 revisions left to test after this roughly 2 steps    64d50f7001df811f9966a5cedbe1fa07470c178e fix link to CLA    084641 patrikfastlane Userspatrikdevakka     go 64d50f7001df811f9966a5cedbe1fa07470c178e    HEAD is now at 64d50f7 fix link to CLA    084647 patrikfastlane Userspatrikdevakka     git bisect good    Bisecting 0 revisions left to test after this roughly 1 step    4787c12a29a9af502bd2d7dc735c74d70fd1578c Fixing a typo in the ScalaDoc for ActornoSender and clarifying that it is indeed the famous null being used here    090010 patrikfastlane Userspatrikdevakka     go 4787c12a29a9af502bd2d7dc735c74d70fd1578c    HEAD is now at 4787c12 Fixing a typo in the ScalaDoc for ActornoSender and clarifying that it is indeed the famous null being used here    090016 patrikfastlane Userspatrikdevakka     git bisect good    5b0a2ec7ee44ab82f60dda8ccd5fa0114c00d38f is the first bad commit    090904 patrikfastlane Userspatrikdevakka     git show 5b0a2ec7ee44ab82f60dda8ccd5fa0114c00d38f    commit 5b0a2ec7ee44ab82f60dda8ccd5fa0114c00d38f    Merge 64d50f7 4787c12    Author Viktor Klang  viktorklanggmailcom    Date   Sun Oct 7 220237 2012 0700        Merge pull request 782 from akkawipnullisnottasty                Changing the default sender of  to be ActornoSender to keep null in on
; general
Hmm in this case it would make sense to move the tickets to the 211 milestone so the list will automatically be taken care of What Id like to have is a twoline summary of the new features plus an implied   and lots of small fixes and improvements Thinking about it that would fit well into the description of this PR
; design
bisect is lying
; general
The mystery with ClusterDeathWatchSpec found to be due to long timeout of unresolved host on my new network Increased the test within timeout Same thing in master but there shadowed by another error wrong protocol in the test
; general
great that you found it
; general
I have updated the PR description with executive summary I will move all tickets to 211 milestone
; design
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator341
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator341
; general
Cherrypicked and adjusted sample conf cluster singleton actor pattern 2895 also
; design
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator341
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator341
; general
Totally awesome that you nailed it
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator353
; general
Very good job Bjrn that was a tough one
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator353
; general
yes LGTM forwardport and merge
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator353
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator353
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator357
; general
LGTM lets see whether the KITTEH agrees
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator357
; general
thanks Johannes now Ill trigger the other two PRs to rebuild
; general
I should have added this is also a good example for what the boyscout rule means keep it up
; general
LGTM but I have one questionShouldnt we declare a serialVersionUID for the messages Im just not sure that the compiled case classes will be identical in field and member layout internally in the future even though their serialized form will be compatible
; general
oh I had assumed that would already have been the case thanks Bjrn for catching it
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator358
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator358
; general
Bjrn Patrik Good points about serialVersionUID Actually just adding with Serializable to the SystemMessage trait made the automatic uids different Ive added annotations to preserve the uids and tests to check we continue to produce the exact same bytes when serializing system messages Hopefully that will keep us compatible We could test byte compatibility for other objects too if we wantReduced boilerplateRead in actual referenceconf for testing
; general
aside for the referenceconf 1
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator358
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator358
; general
Looks good Thanks
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator372
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator372 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
failure was in SerializationCompatibilitySpec
; general
I think all timeouts for this test should be looked through
; general
I still find the use of remaining to mean SingleExpectDefaultTimeout a bit confusing
; general
Constructive criticism please I do not know what would be less confusing
; general
I agree with Bjrn please use SingleExpectDefaultTimeout explicitlyI cannot judge the correctness of the fix right now so Ill trust you guys
; general
No other test in the entire codebase uses SingleExpectDefaultTimeout
; general
Yes that is true But abusing remaining to mean 3secondsdilated is not as obvious as it could be What about exposing this as defaultTimeout in TestKit
; general
No I literally mean only wait as long as this test has left to run ie  remaining
; general
Apart from the timeouts discussion LGTM
; general
Test cahnged to use within and ticket to fix remaining has been opened httpswwwassemblacomspacesakkatickets2971maketestkitremainingthrowanassertionerrororsimilarifusedoutsideof6060within6060activityticket
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator374
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator374 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
this is already forwardported onto PR 1068
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator375
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator375 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
now with 100 more awesomized DRYness
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator375
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator375 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
Rebased and merged with conflicting changes
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator366
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator366
; general
yes merge it
; general
If you are sure this is the problem then LGTM
; general
wow more than five secondsdo we know where the time is spent
; general
Im not sure Do you think 5 seconds is beyond all doubt a safe timeout for starting netty
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator382
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator382
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator382
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator382 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator382 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
I can only say that it is mostly instantaneous for me in the REPL starting a thread pool and binding to a port should not take many seconds Have we seen this more than once Maybe it should only be changed for the MultiJVM testsCiaoRolandOn 28 jan 2013 at 1840 Patrik Nordwall notificationsgithubcom wrote Im not sure Do you think 5 seconds is beyond all doubt a safe timeout for starting netty   Reply to this email directly or view it on GitHub
; general
Do we know why it is taking over 5 seconds to start Is it just because the test server is loadedAnd Roland why are you awake
; general
Closing without merging as we dont want to change the startup timeout based on one single data point
; general
We now have more data points and theyre all on the slow jenkins instance
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator369
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator369
; general
PLS REBUILD ALL
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator369
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator369
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator381
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator381
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator381
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator381 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator381 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
PLS REBUILD ALL
; general
I think you merge right away failure was in SerializationCompatibilitySpec
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator394
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator394 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
It was the LightArrayRevolverSchedulerSpec that failed Will merge anyway
; general
yes that failure was a known one fixed in 1068
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator370
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator370
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator370 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
Net negative Viktor will like it   LGTM
; general
The build KITTEH was wrong SerializationCompatibilitySpec was long fixed Merge away
; general
I tested this branch in akkalocalrepleat and StressSpec failed a few times Ill have to look at those failures before merging The problem is that we had failures in StessSpec before this also
; general
Fixed the regression I will run it in repeat a few times before I merge
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator383
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator383 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
that was Crossversion serialization compatibilitywasnt that fixed is kitty so far behind
; general
There was a bug in the prvalidator job git fetch origin should have been git fetch origin mergebranch fixed that this morningI have no idea why the comment was made just now BTW since the job was actually started yesterday evening
; general
Will the git fetch origin mergebranch really solve things Dont you have merge into the local branch even if its just a fast forward
; general
feel free to review the script I restructured it a little but the recent runs I observed did the right thing now
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator403
; general
I rebased and got success from jenkins so I merge this now
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator403 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
the kitty failure was LARS
; general
LARS is not a cat person
; general
nice one LGTM
; general
Looks fabulous to me
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator385
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator385
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator385 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator385 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
PLS REBUILD ALL
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator385
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator385 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
merge failure was in SerializationCompatibilitySpec
; general
I dont think this test is useful right now so Ive submitted an alternative pull request to remove the it entirely 1083
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator386
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator386
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator386
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator386
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator387
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator387
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator387
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator387
; general
Apart from the missing else LGTM
; general
Changed it to use a mix of quick failing calls followed by awaitCond
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator387
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator387
; general
LGTM this supersedes httpsgithubcomakkaakkapull1081
; general
Me and Rich decided to go with 1081
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator390
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator390
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator390 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator390 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
Ill delete the FakeThrowable just wrapping up the compilation
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator392
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator392
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator392
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator392
; general
LGTM cant really see what is changed except the ignore
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator391
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator391
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator391
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator391
; general
please create a ticket for it so we have it in the release notes
; general
Check the branch name
; general
oh yeah right  sorry
; general
ticket number somehow in the commit message would be awesome next time
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator391
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator391
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator399
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator399 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
apart from comment LGTM
; general
fixed review comments and rebased
; general
What is your opinion about sharing the config using failuredetector  akkaremotefailuredetector or notIts not that much reuse and we have tests for both so I starting to think they should be separated for the documentation convenience of the user
; general
I think it is better to leave it more explicit and accept some duplication
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator399
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator399 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
kitty is sorry for httpswwwassemblacomspacesakkasimpleplannerticket2930
; general
Did the final touch of the reference conf its not shared between remote and cluster
; design
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator404
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator404 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
does not seam to be linked to this change
; general
rkuhn you are true the comment was false and I misunderstood bnd work It is not importing akkaactor package as they are in the CP They need to be either exported or private to be contained in the bundle
; design
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator412
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator412 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
still problems with akkacluster tests
; general
yes but not for you to worry
; general
Good news Akka still can be successfully built on Travishttptravisciorggildegomaakkabuilds1113361I investigate how to tune the testing script sequence to get a 100sure recipeAcutally the troubles come if following warnings appears during compilationOpenJDK Client VM warning CodeCache is full Compiler has been disabledOpenJDK Client VM warning Try increasing the code cache size using XXReservedCodeCacheSizeI guess that fixing this JVM option should be enough Ill give some feedbacks
; general
Memory problem is fixed and by the way I improved the build time by running the tests in parallel as explained in httpdocakkaiodocsakkasnapshotdevbuildingakkahtml now the whole run lasts 1517 minutes instead of 2027 when executed sequentiallyI reworded the original description of this pull request preamble removed I think that now everything is ready for integration if Akka Team wish it
; general
feature branch rebased to fit in a single commit as required in httpdocakkaiodocsakkasnapshotdevdeveloperguidelineshtml
; general
I dont understand this pull request
; general
pull request closed since Assembla issue has been rejected
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator409
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator409
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator409
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator409
; general
LGTM please squash so we can merge
; general
Squashed  Thanks
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator429
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator429
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator410
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator410 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator405
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator405
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator416
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator416 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
yes looking good but needs more cow bell
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator416
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator416 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator433
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator433
; general
yes apart from the two comments and your remaining TODOs in there LGTM
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator472
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator472
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator483
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator483
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator483
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator483
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator418
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator418 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator413
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator413 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator413
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator413 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator415
; general
after removal of manual check 1
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator415
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator414
; general
So isnt there a similar problem in autoReceiveMessage in ActorCell It uses the same check for addressTerminated on the Terminated message
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator414
; general
The replacement for removeChildWhenToAddressTerminated works fineHere is the ticket httpswwwassemblacomspacesakkasimpleplannerticket2993Please adjust if you think I missed something
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator414
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator414
; general
LGTMIncredible detective job
; general
that was old stuff1
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator425
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator425
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator421
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator421 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
Very cool Now we want to find the SPI that would allow us to reuse a lot of this code between UDP and TCP
; general
Kitteh failure was SupervisorHierarchySpec The origin of this branch is pretty old this might have been fixed since but someone should take a look
; general
The Selectors for UDP and TCP are almost identical If you diff the two most of the changes are removed code in the UDP version and some minor differences
; general
that is precisely what Im looking at right now there is obvious room for reuse
; general
And I dont see too much difference in internals when it comes to the connect based UDP API More interesting will be ZeroMQ
; design
Precisely can you start by factoring out the Selector into a generic trait leaving registration up to the specific impl My intuition is that zeromq will reuse only the philosophy but none of the code
; general
On Thu Jan 31 2013 at 534 PM Roland Kuhn notificationsgithubcomwrote Precisely can you start by factoring out the Selector into a generic trait leaving registration up to the specific impl My intuition is that zeromq will reuse only the philosophy but none of the codeYeah something liketrait SPItrait SelectorBasedSPI extends SPITCP extends SelectorBasedSPIUPD extends SelectorBasedSPI0MQ extends SPI   Reply to this email directly or view it on GitHubhttpsgithubcomakkaakkapull1098issuecomment12951173 Viktor KlangDirector of EngineeringTypesafe httpwwwtypesafecom  The software stack for applicationsthat scaleTwitter viktorklang
; general
Hmm lets see whether that applies we are going to share basically only the structure manager selector connection not so much the code That trait would probably only require methods giving three kinds of Props and starting the manager itself
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator421
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator421 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
yes this is going into the right direction
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator447
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator447
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator448
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator448 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator449
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator449 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator451
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator451 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator456
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator456 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator465
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator465 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
info TcpConnectionSpecinfo An outgoing connection info  must set socket options before connecting 26 millisecondsinfo  must set socket options after connecting  IGNORED info  must send incoming data to the connection handler 41 millisecondsinfo  must bundle incoming Received messages as long as more data is available 1 second 37 millisecondsinfo  must receive data directly when the connection is established 25 millisecondsinfo  must write data to network and acknowledge 546 millisecondsinfo  must write data after not acknowledged data 545 millisecondsinfo  stop writing in cases of backpressure and resume afterwards  FAILED  3 seconds 48 millisecondsinfo   javalangAssertionError assertion failed timeout 3 seconds during expectMsg while waiting for WriteInterestinfo   at scalaPredefassertPredefscala179info   at akkatestkitTestKitBaseclassexpectMsginternalTestKitscala294info   at akkatestkitTestKitBaseclassexpectMsgTestKitscala281info   at akkatestkitTestKitexpectMsgTestKitscala641info   at akkaioTcpConnectionSpecanonfun1anonfunapplymcVsp8anonfun5applyTcpConnectionSpecscala191info   at akkaioTcpConnectionSpecanonfun1anonfunapplymcVsp8anonfun5applyTcpConnectionSpecscala171info   at akkaioTcpConnectionSpecanonfunwithEstablishedConnection2applyTcpConnectionSpecscala670info   at akkaioTcpConnectionSpecanonfunwithEstablishedConnection2applyTcpConnectionSpecscala655info   at akkaioTcpConnectionSpecanonfunwithUnacceptedConnection1applyTcpConnectionSpecscala644info   at akkaioTcpConnectionSpecanonfunwithUnacceptedConnection1applyTcpConnectionSpecscala636info   at akkaioTcpConnectionSpecwithLocalServerTcpConnectionSpecscala509info   at akkaioTcpConnectionSpecwithUnacceptedConnectionTcpConnectionSpecscala636info   at akkaioTcpConnectionSpecwithEstablishedConnectionTcpConnectionSpecscala655info   at akkaioTcpConnectionSpecanonfun1anonfunapplymcVsp8applymcVspTcpConnectionSpecscala171info   at akkaioTcpConnectionSpecanonfun1anonfunapplymcVsp8applyTcpConnectionSpecscala171info   at akkaioTcpConnectionSpecanonfun1anonfunapplymcVsp8applyTcpConnectionSpecscala171info   at orgscalatestWordSpecanon2applyWordSpecscala2179info   at orgscalatestSuiteclasswithFixtureSuitescala1974info   at akkatestkitAkkaSpecwithFixtureAkkaSpecscala54info   at orgscalatestWordSpecclassinvokeWithFixture1WordSpecscala2176info   at orgscalatestWordSpecanonfunrunTest1applyWordSpecscala2185info   at orgscalatestWordSpecanonfunrunTest1applyWordSpecscala2185info   at orgscalatestSuperEnginerunTestImplEnginescala198info   at orgscalatestWordSpecclassrunTestWordSpecscala2185info   at akkatestkitAkkaSpecrunTestAkkaSpecscala54info   at orgscalatestWordSpecanonfunrunTests1applyWordSpecscala2250info   at orgscalatestWordSpecanonfunrunTests1applyWordSpecscala2250info   at orgscalatestSuperEngineanonfunorgscalatestSuperEnginerunTestsInBranch1applyEnginescala260info   at orgscalatestSuperEngineanonfunorgscalatestSuperEnginerunTestsInBranch1applyEnginescala249info   at scalacollectionimmutableListforeachListscala309info   at orgscalatestSuperEngineorgscalatestSuperEnginerunTestsInBranchEnginescala249info   at orgscalatestSuperEngineanonfunorgscalatestSuperEnginerunTestsInBranch1applyEnginescala265info   at orgscalatestSuperEngineanonfunorgscalatestSuperEnginerunTestsInBranch1applyEnginescala249info   at scalacollectionimmutableListforeachListscala309info   at orgscalatestSuperEngineorgscalatestSuperEnginerunTestsInBranchEnginescala249info   at orgscalatestSuperEnginerunTestsImplEnginescala326info   at orgscalatestWordSpecclassrunTestsWordSpecscala2250info   at akkatestkitAkkaSpecrunTestsAkkaSpecscala54info   at orgscalatestSuiteclassrunSuitescala2303info   at akkatestkitAkkaSpecorgscalatestWordSpecsuperrunAkkaSpecscala54info   at orgscalatestWordSpecanonfunrun1applyWordSpecscala2297info   at orgscalatestWordSpecanonfunrun1applyWordSpecscala2297info   at orgscalatestSuperEnginerunImplEnginescala362info   at orgscalatestWordSpecclassrunWordSpecscala2297info   at akkatestkitAkkaSpecorgscalatestBeforeAndAfterAllsuperrunAkkaSpecscala54info   at orgscalatestBeforeAndAfterAllclassrunBeforeAndAfterAllscala213info   at akkatestkitAkkaSpecrunAkkaSpecscala54info   at orgscalatesttoolsScalaTestFrameworkScalaTestRunnerrunScalaTestFrameworkscala214info   at orgscalatoolstestingRunner2runRunner2java16info   at sbtTestRunnerdelegateRunTestFrameworkscala57info   at sbtTestRunnerrunTestFrameworkscala51info   at sbtTestRunnerrunTest1TestFrameworkscala71info   at sbtTestRunnerrunTestFrameworkscala80info   at sbtTestFrameworkanonfun6anonfunapply8anonfun7anonfunapply9applyTestFrameworkscala178info   at sbtTestFrameworkanonfun6anonfunapply8anonfun7anonfunapply9applyTestFrameworkscala178info   at sbtTestFrameworksbtTestFrameworkwithContextLoaderTestFrameworkscala190info   at sbtTestFrameworkanonfun6anonfunapply8anonfun7applyTestFrameworkscala178info   at sbtTestFrameworkanonfun6anonfunapply8anonfun7applyTestFrameworkscala178info   at sbtTestsanonfunmakeSerial1anonfunapply8applyTestsscala121info   at sbtTestsanonfunmakeSerial1anonfunapply8applyTestsscala121info   at scalacollectionTraversableLikeanonfunmap1applyTraversableLikescala233info   at scalacollectionTraversableLikeanonfunmap1applyTraversableLikescala233info   at scalacollectionLinearSeqOptimizedclassforeachLinearSeqOptimizedscala59info   at scalacollectionimmutableListforeachListscala76info   at scalacollectionTraversableLikeclassmapTraversableLikescala233info   at scalacollectionimmutableListmapListscala76info   at sbtTestsanonfunmakeSerial1applyTestsscala121info   at sbtTestsanonfunmakeSerial1applyTestsscala121info   at sbtstdTransformanon3anonfunapply2applySystemscala47info   at sbtstdTransformanon3anonfunapply2applySystemscala47info   at sbtstdTransformanon5workSystemscala71info   at sbtExecuteanonfunsubmit1anonfunapply1applyExecutescala232info   at sbtExecuteanonfunsubmit1anonfunapply1applyExecutescala232info   at sbtErrorHandlingwideConvertErrorHandlingscala18info   at sbtExecuteworkExecutescala238info   at sbtExecuteanonfunsubmit1applyExecutescala232info   at sbtExecuteanonfunsubmit1applyExecutescala232info   at sbtConcurrentRestrictionsanon4anonfun1applyConcurrentRestrictionsscala159info   at sbtCompletionServiceanon2callCompletionServicescala30info   at javautilconcurrentFutureTaskSyncinnerRunFutureTaskjava334info   at javautilconcurrentFutureTaskrunFutureTaskjava166info   at javautilconcurrentExecutorsRunnableAdaptercallExecutorsjava471info   at javautilconcurrentFutureTaskSyncinnerRunFutureTaskjava334info   at javautilconcurrentFutureTaskrunFutureTaskjava166info   at javautilconcurrentThreadPoolExecutorrunWorkerThreadPoolExecutorjava1110info   at javautilconcurrentThreadPoolExecutorWorkerrunThreadPoolExecutorjava603info   at javalangThreadrunThreadjava679
; general
The test failure seems to be related to SOSNDBUF again Did this test pass in the original branch on Linux It seems that the OS could allocate more buffer than it was actually requested and the write can just go through without having backpressure in the test
; general
skimmed it and apart from comments LGTM
; general
Awesome workThe SelectionHandler looks usable for any kind of Selector nowLGTM
; general
PLS REBUILD ALL
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator468
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator468 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
info TcpConnectionSpecinfo An outgoing connection info  must set socket options before connecting 52 millisecondsinfo  must set socket options after connecting  IGNORED info  must send incoming data to the connection handler 54 millisecondsinfo  must bundle incoming Received messages as long as more data is available 1 second 39 millisecondsinfo  must receive data directly when the connection is established 24 millisecondsinfo  must write data to network and acknowledge 549 millisecondsinfo  must write data after not acknowledged data 544 millisecondsinfo  stop writing in cases of backpressure and resume afterwards  FAILED  3 seconds 53 millisecondsinfo   javalangAssertionError assertion failed timeout 3 seconds during expectMsg while waiting for WriteInterestinfo   at scalaPredefassertPredefscala179info   at akkatestkitTestKitBaseclassexpectMsginternalTestKitscala294info   at akkatestkitTestKitBaseclassexpectMsgTestKitscala281info   at akkatestkitTestKitexpectMsgTestKitscala641info   at akkaioTcpConnectionSpecanonfun1anonfunapplymcVsp8anonfun5applyTcpConnectionSpecscala191info   at akkaioTcpConnectionSpecanonfun1anonfunapplymcVsp8anonfun5applyTcpConnectionSpecscala171info   at akkaioTcpConnectionSpecanonfunwithEstablishedConnection2applyTcpConnectionSpecscala670info   at akkaioTcpConnectionSpecanonfunwithEstablishedConnection2applyTcpConnectionSpecscala655info   at akkaioTcpConnectionSpecanonfunwithUnacceptedConnection1applyTcpConnectionSpecscala644info   at akkaioTcpConnectionSpecanonfunwithUnacceptedConnection1applyTcpConnectionSpecscala636info   at akkaioTcpConnectionSpecwithLocalServerTcpConnectionSpecscala509info   at akkaioTcpConnectionSpecwithUnacceptedConnectionTcpConnectionSpecscala636info   at akkaioTcpConnectionSpecwithEstablishedConnectionTcpConnectionSpecscala655info   at akkaioTcpConnectionSpecanonfun1anonfunapplymcVsp8applymcVspTcpConnectionSpecscala171info   at akkaioTcpConnectionSpecanonfun1anonfunapplymcVsp8applyTcpConnectionSpecscala171info   at akkaioTcpConnectionSpecanonfun1anonfunapplymcVsp8applyTcpConnectionSpecscala171info   at orgscalatestWordSpecanon2applyWordSpecscala2179info   at orgscalatestSuiteclasswithFixtureSuitescala1974info   at akkatestkitAkkaSpecwithFixtureAkkaSpecscala54info   at orgscalatestWordSpecclassinvokeWithFixture1WordSpecscala2176info   at orgscalatestWordSpecanonfunrunTest1applyWordSpecscala2185info   at orgscalatestWordSpecanonfunrunTest1applyWordSpecscala2185info   at orgscalatestSuperEnginerunTestImplEnginescala198info   at orgscalatestWordSpecclassrunTestWordSpecscala2185info   at akkatestkitAkkaSpecrunTestAkkaSpecscala54info   at orgscalatestWordSpecanonfunrunTests1applyWordSpecscala2250info   at orgscalatestWordSpecanonfunrunTests1applyWordSpecscala2250info   at orgscalatestSuperEngineanonfunorgscalatestSuperEnginerunTestsInBranch1applyEnginescala260info   at orgscalatestSuperEngineanonfunorgscalatestSuperEnginerunTestsInBranch1applyEnginescala249info   at scalacollectionimmutableListforeachListscala309info   at orgscalatestSuperEngineorgscalatestSuperEnginerunTestsInBranchEnginescala249info   at orgscalatestSuperEngineanonfunorgscalatestSuperEnginerunTestsInBranch1applyEnginescala265info   at orgscalatestSuperEngineanonfunorgscalatestSuperEnginerunTestsInBranch1applyEnginescala249info   at scalacollectionimmutableListforeachListscala309info   at orgscalatestSuperEngineorgscalatestSuperEnginerunTestsInBranchEnginescala249info   at orgscalatestSuperEnginerunTestsImplEnginescala326info   at orgscalatestWordSpecclassrunTestsWordSpecscala2250info   at akkatestkitAkkaSpecrunTestsAkkaSpecscala54info   at orgscalatestSuiteclassrunSuitescala2303info   at akkatestkitAkkaSpecorgscalatestWordSpecsuperrunAkkaSpecscala54info   at orgscalatestWordSpecanonfunrun1applyWordSpecscala2297info   at orgscalatestWordSpecanonfunrun1applyWordSpecscala2297info   at orgscalatestSuperEnginerunImplEnginescala362info   at orgscalatestWordSpecclassrunWordSpecscala2297info   at akkatestkitAkkaSpecorgscalatestBeforeAndAfterAllsuperrunAkkaSpecscala54info   at orgscalatestBeforeAndAfterAllclassrunBeforeAndAfterAllscala213info   at akkatestkitAkkaSpecrunAkkaSpecscala54info   at orgscalatesttoolsScalaTestFrameworkScalaTestRunnerrunScalaTestFrameworkscala214info   at orgscalatoolstestingRunner2runRunner2java16info   at sbtTestRunnerdelegateRunTestFrameworkscala57info   at sbtTestRunnerrunTestFrameworkscala51info   at sbtTestRunnerrunTest1TestFrameworkscala71info   at sbtTestRunnerrunTestFrameworkscala80info   at sbtTestFrameworkanonfun6anonfunapply8anonfun7anonfunapply9applyTestFrameworkscala178info   at sbtTestFrameworkanonfun6anonfunapply8anonfun7anonfunapply9applyTestFrameworkscala178info   at sbtTestFrameworksbtTestFrameworkwithContextLoaderTestFrameworkscala190info   at sbtTestFrameworkanonfun6anonfunapply8anonfun7applyTestFrameworkscala178info   at sbtTestFrameworkanonfun6anonfunapply8anonfun7applyTestFrameworkscala178info   at sbtTestsanonfunmakeSerial1anonfunapply8applyTestsscala121info   at sbtTestsanonfunmakeSerial1anonfunapply8applyTestsscala121info   at scalacollectionTraversableLikeanonfunmap1applyTraversableLikescala233info   at scalacollectionTraversableLikeanonfunmap1applyTraversableLikescala233info   at scalacollectionLinearSeqOptimizedclassforeachLinearSeqOptimizedscala59info   at scalacollectionimmutableListforeachListscala76info   at scalacollectionTraversableLikeclassmapTraversableLikescala233info   at scalacollectionimmutableListmapListscala76info   at sbtTestsanonfunmakeSerial1applyTestsscala121info   at sbtTestsanonfunmakeSerial1applyTestsscala121info   at sbtstdTransformanon3anonfunapply2applySystemscala47info   at sbtstdTransformanon3anonfunapply2applySystemscala47info   at sbtstdTransformanon5workSystemscala71info   at sbtExecuteanonfunsubmit1anonfunapply1applyExecutescala232info   at sbtExecuteanonfunsubmit1anonfunapply1applyExecutescala232info   at sbtErrorHandlingwideConvertErrorHandlingscala18info   at sbtExecuteworkExecutescala238info   at sbtExecuteanonfunsubmit1applyExecutescala232info   at sbtExecuteanonfunsubmit1applyExecutescala232info   at sbtConcurrentRestrictionsanon4anonfun1applyConcurrentRestrictionsscala159info   at sbtCompletionServiceanon2callCompletionServicescala30info   at javautilconcurrentFutureTaskSyncinnerRunFutureTaskjava334info   at javautilconcurrentFutureTaskrunFutureTaskjava166info   at javautilconcurrentExecutorsRunnableAdaptercallExecutorsjava471info   at javautilconcurrentFutureTaskSyncinnerRunFutureTaskjava334info   at javautilconcurrentFutureTaskrunFutureTaskjava166info   at javautilconcurrentThreadPoolExecutorrunWorkerThreadPoolExecutorjava1110info   at javautilconcurrentThreadPoolExecutorWorkerrunThreadPoolExecutorjava603info   at javalangThreadrunThreadjava679
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator475
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator475
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator476
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator476
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator478
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator478
; general
Just reviewed the docs since the rest was already done LGTM apart from that the samples should be pulled out into compiled code
; general
The docs LGTM 1 for samples in compiled code
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator494
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator494
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator420
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator420 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator420
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator420 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
okay fixed comments and merged master in lets wait for KITTEHs verdict
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator428
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator428
; general
converted all todos from the description into separate tickets
; general
I have read the documentation and sample I like it Looking forward to try it out on something realIll study the impl laterGreat work Roland
; general
thanks for the review
; general
Great thanks John Ill have a look as soon as I can
; general
Have a look at the ExampleSessionscala class  Ive used a Promise based channel callback to handle producerconsumer channel prerestarts  Let me know what you think  Id like to nail down this lifecycle stuff
; design
I think you forgot to push
; general
pushed  thanks
; general
Great thanksIm technically on vacation the coming 2 weeks but Ill cheat and give you feedback tonight Just dont tell anyone
; general
Cool  Enjoy your vacation  Im going to bombard you with a few questions on your comments above so I have enough to carry me through
; general
Did another push with latest work  I think the next round will be a bit longer since Im going to tackle the Channel issues and  generally LetItCrashtm more
; general
Should go into both master and release20
; general
Merged into master auto manually merged into release20 targeting 201
; general
Great can you merge it into both master and release20
; general
I dont have write access to push stuff  it merges with no conflicts to current master though
; general
I dont trust people named Havoc jkIll handle it Thanks buddy
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator131
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator131
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator132
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator132
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator135
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator135
; general
HOLY CRAP Great find D
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator134
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator134
; general
Forwardported as well
; general
YesI commented in the ticket but yes we should comment here as well when we dont do a pull for it
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator136
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator136
; general
Im gonna merge this in 10 if I dont hear anything
; general
have youve added the caching here as well
; general
No I was trying to go with the most conservative minimum fix but if you want the caching its just cherry picking the next patch from typesafehubconfig master
; general
Do I want the caching
; general
it kinda depends on how deep freeze the release is if youre really risk averse dont take any of this pull at all and fix in a point release if you want the min fix the caching probably doesnt matter much its only saving time at startup or reload not very important  if youre feeling more adventurous the caching is nice and the caching patch has tests and ought to work finally if there were several weeks to release you could pull the entire master branch instead of cherry picking but one of the fixes on master is a pretty big patch that could conceivably break stuff thats why Ive been picking around it Im just not really looped into the release freeze rules and stuff thats why Im giving info instead of conclusions but my default would be to just take this pull req as is and then jump to master post release
; general
Alright fair enough Will pull in for RC4 tomorrow Weve got one final change we need to get in before final
; general
This shouldnt be checked in akkakernelsrcmaindistlibcmdlinejmxclient0103jar
; general
I agree Should I add it by source It is just a single file httpcrawlerarchiveorgcmdlinejmxclientxreforgarchivejmxClienthtmlElse we need to add it to Typesafe Maven repo
; general
It has to be an executable JAR so I cant embed it as source Then we have to add it to the Typesafe Maven Repo
; general
Add it by source its GNU Lesser Public License LGPL
; design
Ok then publish it to the typesafe repo and add it as a dep
; general
Is this ready to be merged
; general
Yes It is just merged with master
; general
Alright So all thats missing now is tests Create a couple of multijvm tests to make sure it works
; general
Heres the ticket for this httpwwwassemblacomspacesakkatickets1552natfirewallforremoteactorslastcomment
; general
Cool thanks Viktor will create some tests
; general
Hey Viktor First pass at testingthoughtshttpsgithubcomticktockakkacommit0d28ad31be9c7d87d8dd10965fbfeb0feacf84c1
; general
Hey ScottI thought about this some more and I think I might have gotten carried away hereWouldnt we be able to solve the problem by just defining a global address and a local address So you bind to the local address and you receive things going both to the local and the global address
; general
Or is there a case where youd need multiple public addresses And what about the promiscuous mode does that make sense in a realworld setting accepting any inbound message
; design
Clsoing this pull request since Scott  I agreed this could be solved by having the notion of a global and a local address but it needs to be carefully implemented so that it covers all bases Addresses are tricky beasts to say the least
; design
Hi ScottThanks for the pull request great that someone is stepping up and takes a stab at thisThere are some minor stuff to work out and in the end I hope we can ship this either in 20x or in 21Thanks again
; general
Thanks Viktor I will make those tweaksSo on the subject of empty whitelist  allow all In many environments like the one I am using    the routing can change dynamically at runtime and just allowing all addresses is easier than dynamically updating a routing table at runtimeSo that is the reason for the seperate natfriendly flag natfriendly  false  no natnatfriendly  true  natwhitelist  empty  allow allnatfriendly  true  non empty whitelist  consult the whitelistBetter  Cleaner way to express this
; general
Split it intonatfirewall  blacklist  whitelistnatfirewalladdresses  blacklist   no addresses  all allowedwhitelist  no addresses  none allowed defaultwhitelist  addresses  only allow listedblacklist  addresses  do not allow listed
; general
Nice willdoOn Fri Apr 6 2012 at 259 PM viktorklang replyreplygithubcom wrote Split it into natfirewall  blacklist  whitelist natfirewalladdresses   blacklist   no addresses  all allowed whitelist  no addresses  none allowed default whitelist  addresses  only allow listed blacklist  addresses  do not allow listed  Reply to this email directly or view it on GitHub httpsgithubcomakkaakkapull394issuecomment5003288
; general
You should also change the wrong documentation in ActorRefProviderrootPathApart from that 1
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator120
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator120
; general
1 Will merge into my branch
; general
oops that cleanup git alias was a bit overeager
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator115
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator115
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator116
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator116
; general
So I assume that this is for ticket 2675 Failure in RoutingSpec on jenkinstypesafecom
; general
Apart from my comments it looks goodIm not sure if we should backport to 21 It looks like right thing but should be field tested If we backport we should run all tests repeatedly for some time
; general
Hmm Im not sure about the backporting part We dont know if it actually fixes something right so Id vote for backporting once we have actually understood the issue and also solved the problem with the CallingThreadDispatcher
; design
1 for waiting with the back port
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator128
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator128
; general
Alright I consider this ready for merge What should be backported to 21 We cant ship with the routing bug for sure
; general
PLS REBUILD ALL
; general
Okay apart from one comment change which Ill do I think this is ready for backporting into 21 Speak soon or forever hold your piece
; general
A quick question RoutedActorCell still calls initstart inside the constructor which is called from newCell Is that really okOtherwise 1 Nice way to circumvent the hairy startup issues
; general
Thanks Bjrn good catch The symptom is unfortunately just a thread leak no visible test errors
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator140
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator140
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator118
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator118
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator117
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator117
; general
Why the need to deregister in the first place restart should be transient right
; general
The connection to the camel objects is lost the producer gets the camel objects at startup from the registry where the camel objects are kept separate from the producer of course When the producer restarts a new actor instance the register has no effect cause the producerRegistry thinks its a double registration and the producer does not receive camel objectsderegister has the probably nice effect that if something was wrong with the camel objects you now have new onesNow that Im writing this down I guess I could have also solved the problem by always sending the camel objects at register request but just not really reregister the double request in idempotent fashion
; design
Any downsides in making the registration be idempotent
; general
hehe yeah I just thought of that as well Im already trying it out
; general
Downside is that if a camel endpoint would be stuck in some bad state you will have to live with it foreverBut you can always terminate your producer and create a new one on terminationChanged to idempotent is probably best
; general
Yeah thats where you have the restart strategy  death watch
; general
I changed it dont know if you saw the added commit Let me know if everything is cool
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator129
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator129
; general
Should be fine now
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator130
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator130
; general
Hey Ray could you squash the commits
; general
Sure doneOn Sun Nov 25 2012 at 1249 PM Viktor Klang  notificationsgithubcom wrote Hey Ray could you squash the commits  Reply to this email directly or view it on GitHubhttpsgithubcomakkaakkapull893issuecomment10692609 Raymond Roestenburgcode httpgithubcomRayRoestenburgblog httproestenburgagilesquadcomtwtr RayRoestenburg
; general
Aside from last batch of comments LGTM
; general
Oh I didnt see the last batch of comments will fixOn Sun Nov 25 2012 at 205 PM Viktor Klang notificationsgithubcomwrote Thanks Ray  Reply to this email directly or view it on GitHubhttpsgithubcomakkaakkapull893issuecomment10693219 Raymond Roestenburgcode httpgithubcomRayRoestenburgblog httproestenburgagilesquadcomtwtr RayRoestenburg
; general
fixedOn Sun Nov 25 2012 at 208 PM Raymond Roestenburg raymondroestenburggmailcom wrote Oh I didnt see the last batch of comments will fix On Sun Nov 25 2012 at 205 PM Viktor Klang   notificationsgithubcom wrote Thanks Ray  Reply to this email directly or view it on GitHubhttpsgithubcomakkaakkapull893issuecomment10693219  Raymond Roestenburg code httpgithubcomRayRoestenburg blog httproestenburgagilesquadcom twtr RayRoestenburg Raymond Roestenburgcode httpgithubcomRayRoestenburgblog httproestenburgagilesquadcomtwtr RayRoestenburg
; general
I will take care of merging and backporting this now
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator125
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator125
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator137
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator137
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator123
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator123
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator124
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator124
; general
Looks good as far as I can tell However it is still not binary compatible strictly speaking one method removed and signature changed on ForkJoinPoolWorkQueue This is not supposed to be used externally I guess but it is not clearly marked as such
; design
That method signature change is package protected so its not reachable
; design
Merging into master and release20
; general
Have you signed the Typesafe CLA
; general
Bad joke if it was not obvious
; general
What do we do about the transitive dependencies3rd party deps that arent published to Maven Central
; general
We are planning on doing this for Akka 21 Getting rid of some of the deps and embedding others
; general
Hey guys anything you want me to have a look at
; general
Do you want to merge itAs far as I am concerned we just need to update the online documentation to reflect the API changesI can have a look at it after ScaladaysPiotr GabryanczykBlog httpblogscala4javacomTwitter piotrgaOn 13 Apr 2012 at 1748 viktorklang wrote Hey guys anything you want me to have a look at    Reply to this email directly or view it on GitHub httpsgithubcomakkaakkapull385issuecomment5118758
; design
Can merge when commets are addressed
; general
comments are addressed apart from Any  AnyRef problem in javaCan we merge it please I promise Ill fix this issue as a priorityI care about this pull request because the scala days demo contains references to this code and it will get people confused if its not there
; general
Just make the 2 changes I proposed and Ill mergeThanks
; general
pushed now IntelliJ plays tricks on me with git
; general
All suggestions eventually applied
; general
Ill merge and fix manually Thanks Piotr
; general
REBUILD ALL PLS
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator104
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator104
; general
StatsService ruining the day can we fix it
; general
PLS REBUILD ALL
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator105
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator105
; general
apart from nitpicks 1
; general
Fixed review comments Merging
; general
PLS REBUILD ALL
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator106
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator106
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator109
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator109
; general
No info in ticket and jenkins log is gone If the issue was to remove the exponential backoff then LGTM
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator111
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator111
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator97
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator97
; general
Does it only take that long on the slow jenkins or also elsewhereFor the change itself 1
; general
its normally pretty quick but it fails with the new values Id be more sure that there is something else that is wrong
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator98
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator98
; general
Alright added shuffling
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator99
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator99
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator100
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator100
; general
I think a proper fix is to be able to pass in a ClassLoader to createActorSystem it shouldnt default to classOfActorSystemgetClassLoader this overrides ThreadgetContextClassloader etc
; general
Agreed that should be supported  I can update the pull request for that but I do think the default behavior of createActorSystemname OptionString should use the akkaactor classloader as the fallback classloader  The actorSystemConfig method uses the akkaactor config as the default config reference and hence any classes that are loaded dynamically as a result of that config need to be accessible to any bundle that uses the default configIn this case the issue can be worked around in at least two ways  either by avoiding use of OsgiActorSystemFactory entirely and just manually loading configuration and constructing an actor system directly using a proper bridged class loader or by manually importing akkaevent packageSo overall I think the 2 createActorSystem methods should be modified to include an OptionClassLoader parameter thats used as the fallback classloader in the BundleDelegatingClassLoader  In both cases the default value of the OptionClassLoader param should be SomeclassOfActorSystemgetClassLoader  Or alternatively pass the fallback OptionClassLoader as a constructor argumentThoughts
; design
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator107
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator107
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator108
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator108
; general
LGTM Do we have a ticket for this
; general
I didnt create an issue sorry  Will do so now
; general
Ticket 2727 httpswwwassemblacomspacesakkatickets2727actorsystemscreatedviaosgiactorsystemfactoryctxcreateactorsystemfailtoloadakkaeventclactivityticket
; general
thanks for contributing I will merge this now and cherrypick to master
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator112
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator112
; general
Fixed review comments merging
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator114
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator114
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator113
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator113
; general
better safe than sorry 1
; general
Thanks Irmo However I find it a bit odd that you are working in secret on this when you know that John is also working on it and is close to ready for merge Why not help him out instead Open Source is all about collaboration We cant have two competing AMQP modules So what I would like to do is to have John decide if there is anything in your work that is missing in Johns and if so merge those parts into his branch Ie this branch will not be merged in asisAre you up for that JohnThanks Jonas
; general
Hi JonasThis is not in secret but all in cooperation with John
; general
Good to hear Then it is all good I misunderstood since you wrote that it was done silently and you pushed in a complete impl So then you will both work trying to get this into a single branchThank you
; general
Silently was maybe not the right word there We needed an updated library in our company that gave more functionality and more stability but I didnt want to waste time on the additional opensource related work and make it stable and reliable inhouse firstNoticed later that John was working on a new module for 20 so I first send him my code for reference Now he sort of ran into the same problems I did with the 1x module which I solved in my new version so we decided together that I would start a new branch based on my version and when John has signed the CLA we continue together from there
; design
That is very good Thank you The only bad thing is that none except Viktor in the whole team knew about this Lets try to be more transparent in the future We have akkadev for that
; general
Made some additional changes  going out for the weekend so wont be looking at comments until next week
; general
moved to community projects
; general
The events need to be private and should not be exposed They are for internal use only Users can use awaitActivation methods from Activation trait
; design
Thinking about it Ill make it private to not confuse users Its just that other internal events are published in akka as public classes
; design
We discussed it some time ago And we reached the agreement that it is dangerous as they are internals and we are not prepared to expose them as they are exposing the internals of implementation and break encapsulation
; design
Ive made them internal again
; design
ah right minimize exposure
; general
As a general point implementing a lazy path helps certain use cases but as soon as somebody puts the ref into a HashMap or compares it to another ref it will be forced This is kind of natural because hashCodeequalscompareTo are implemented in terms of path It might be interesting to look into overriding those as well and adding another state name allocated but not registered
; general
Yes I thought of that as well but wanted to do one step at a timeI think most cases are the simple local ones that wouldnt benefit from such an additional optimizationAnd the complexity would probably be cranked up quite a bit more
; general
Alright thanks for your great commentsMaybe go for round two of the reviewSince Ive moved the PromiseActorRef class out of the AskSupport trait the diff of the last commit as shown by Github is a bit hard to read you might want to look at the actual filehttpsgithubcomsprayakkablob8fc66ce044672603164ccacb73548bd1476939eeakkaactorsrcmainscalaakkapatternAskSupportscala insteadAll tests are passing just as before speedup over the previous version is not really measurably with my crude benchmark
; design
Apart from the one glitch this looks good in the sense that my sleepy eyes dont catch anything that sets off warning bells anymore   I need to play with it next week probably writing a few new remoting  lookup tests etc There have been some really subtle bugs while developing that stuff a few months back and we had to pull out one optimization literally at the last minute so forgive me that Im not in the Hooray state quite yet
; general
No problem Roland its late here as well And it wouldnt even be a big thing if the team decided to not bring this change into the Akka codebase at allJust trying to get it done made me learn enough about the Akka core to have a pretty good idea of how to advance our own codebase And Victors and your comments really have been most valuableSo thank you in any case and have a good night
; general
One more comment before I forgetThere is one change in behavior from the current eager version to this lazy oneBefore the ref was unregistered after future completion but not during a stop call Now its already unregistered during a stop Somehow the new version makes more sense to me but as Victor also hinted at already Im unsure about the actual semantics of calling stop on a PromiseActorRef and its relation to the state of the underlying FutureJust a comment to maybe support you in focusing the further testing of this thing
; general
Applied Viktors suggestions plus a few smaller thingsOne thing I noticedIn my testing I once and nondeterministicly got this test failure        info ResizerSpec    info DefaultResizer         info  resize when busy  FAILED     info   2 was not equal to 3 ResizerSpecscala155    info   orgscalatestTestFailedException    info   at orgscalatestmatchersMatchersclassnewTestFailedExceptionMatchersscala150    info   at akkatestkitAkkaSpecnewTestFailedExceptionAkkaSpecscala56    info   at orgscalatestmatchersMustMatchersMustMethodHelpermustMatcherMustMatchersscala873    info   at orgscalatestmatchersMustMatchersIntMustWrappermustMustMatchersscala1305    info   at akkaroutingResizerSpecanonfun1anonfunapplymcVsp6applymcVspResizerSpecscala155    info   at akkaroutingResizerSpecanonfun1anonfunapplymcVsp6applyResizerSpecscala131    info   at akkaroutingResizerSpecanonfun1anonfunapplymcVsp6applyResizerSpecscala131    info   at orgscalatestWordSpecanon2applyWordSpecscala2161    At first glance it appears to be unrelated to the PromiseActorRef implementationIs this something you have seen before
; general
That test is timing sensitive
; general
One more thing I noticedPromiseActorRef currently caches providerDeathWatch as well as providertempContainer as override val getParentIt seems to me that the memory footprint of PromiseActorRef could be reduced by at least the DeathWatch val since accessing providerDeathWatch rather than thisdeathWatch shouldnt really be much slower And if the getParent call is not frequent enough to make the synchronisation on the lazy val of the providertempContainer matter we might even be able to replace the override val getParent with override def getParent  providertempContainer
; general
I think this is a fair observation Check if that would work Thanks
; general
Thanks for this effort In order to merge this wed need you to sign the CLA at httpwwwtypesafecomcontributecla
; general
Roland I already signed this some time ago for some other pathCheersMathias
; general
ah right sorry I looked in the wrong directory
; general
Currently I am using the opts files to manually set the IP address of the router to test with  I am wondering if I should instead use the method suggested in this stackoverflow questionhttpstackoverflowcomquestions2939218gettingtheexternalipaddressinjava to retrieve the external IP address And then use the opts files to override that IP when they exist
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator82
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator82
; general
This branch hasnt successfully built in 13 days wont make it into RC3
; general
Ok  I will try to take a look at it tonight and get it working so it can make a future release  Looking at the jenkins log I think part of it just needs to be updated to work with the import duration changes between scalaM7 and scalaRC1
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator143
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator143
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator144
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator144
; general
Jenkins is now compiling this properly  However it is failing because the routerNAT settings need to be set manually  Im not sure if I should rework this disable it by default or if I should be running a simpler test see the end of my big comment above        Cause javalangException multinodenatrouter property must be set to Router IP
; general
Looking through all pull requests this feature looks like it is very limited in scope ie it only practically works with UPnP since the ActorSystem will need to know its external address and only if no local connections shall be made ie NATonly You could also implement it without changing Akka by subclassing NettyRemoteTransport to override the createServer method and use that to create your own subclass of Server which will unconditionally bind to 0000 Since that should solve your problem without touching Akka source I would prefer thatIt might be nice to show the resulting code in a blog post on letitcrashhttpletitcrashcom so that others can copy it if desiredOne headsup notice the knowledge of which influenced my reasoning the remote transport will be completely replaced by a purely actorbased one in 22 which would make your code obsolete in our repository again drewhk how would someone solve this problem in the new remoting
; general
That looks like an excellent solution  It may be a little while before I have some time to try it out but once it is working Ill definitely put something together for a post on letitcrash
; design
Thanks looking forward to that So Im closing this pull request but you can of course keep it bookmarked
; general
Updated with configuration defaults that better mimic the default Netty behavior so we dont change how things work OOTB
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator83
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator83
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator84
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator84
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator94
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator94
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator89
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator89
; general
Apart from comments Looks Godd To Me
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator81
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator81
; general
It wont matter  if the Bootable setting is set to empty string there will be just the space added thats now between the two ss of main class and Bootable I have not tested this yet though I will verify this when I get to edit the sample application Do I have to publishlocal for this or is the sample build configuration pick up the plugin from the source automagically
; design
LGTM but I think it would be better to not introduce the extra space for the default case
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator95
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator95
; general
wookietreiber have you signed the Typesafe CLA httpwwwtypesafecomcontributeclaAfter that I will merge this and cherrypick to master
; general
wookietreiber we can not merge this until you have have you signed the Typesafe CLA It will probably not make it into 21 if you dont sign now httpwwwtypesafecomcontributecla
; general
I did sign the old akkaonly CLA a while back but didnt commit anything Is that not valid anymore
; general
ok verified thanks merging
; general
I will cherrypick this to master
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator93
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator93
; general
what about BSONSerialization and filequeue  Im a bit nervous about putting logging in paths which might potentially be used by logging  especially nice if the loop only happens once in a blue moon in production believe me
; general
What if we introduce a TL to signal that were already doing logging
; general
Thats the beauty with actor logging you dont need to get the loop on the same stack
; general
Yes I think that is the way to do it Other places In the ticket there was some comment about TypedActor
; general
TypedActors is hard what we could do is to check httpdocsoraclecomjavase150docsapijavalangreflectMethodhtmlgetExceptionTypes and decide whether we wrap or not Or we let people add the throwsclause themselves The only clean solution otherwise is to always wrap in a RuntimeException
; design
Timeout stuff looks good
; general
Ill review in the morning
; general
Ive had a rundown of the code sorry if I missed something way too tired at the moment
; general
Let me know if I can push this now
; general
So added systemcluster toplevel supervisor for all cluster daemons Better I think Thanks for feedback
; general
So is it ready to go
; general
No I could
; general
If you are confident about the changes then merge it in technically no one can review anything but code style until weve sat down and handed things off to the core team
; general
As confident as I can be It is hard stuff Im sure there are bugs But Ive done my best in the little time Ive had and all tests are passing Now it needs hardening That is the next sprint Id be more than happy to walk you through the code tomorrow or any time but make sure you understand the first half of the cluster spec first
; general
Alright merge We will have to plan 21 this week Thanks
; general
Alright Thank you Will do tomorrow Too tired now
; general
You have to take care of yourself man dont make me force you to take time off
; general
Thanks Ill take it slow the rest of the week Been very hectic up till today 1400 CET
; general
Youve done an awesome job Chillax
; general
Great stuffI need your email so you can sign the Akka CLA before I can merge it in
; general
Ive sent you an email directly
; general
Thanks Bruce I appreciate it
; general
Should be backported to 21
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator92
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator92
; general
after reducing the flow density this should be fine 1
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator96
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator96
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator70
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator70
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator69
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator69
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator75
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator75
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator72
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator72
; general
failure was in cluster statsFaade so Ill assume that this PR is okay
; general
Are you going to merge this I would like to be set to build as soon as all dependencies are available
; general
Merged to master and backported and merged into 21
; general
I dont see it but could have sworn I had AdaptiveLoadBalancingRouter in there perhaps as the AdaptiveLoadBalancingRouterLike  Regardless 1 AdaptiveLoadBalancingRouter name
; general
I will definitely review this tomorrow
; general
I have addressed almost all review comments so far some of the triggered some more major refactoring See the above commits I will continue the work on the actual router next week
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator87
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator87
; general
Ready for final review I squashed all changes since previous review into one commit so if you dont want to review it from the scratch you can look at dcde7d3This is what has been done in the second round Refactoring of standard metrics extractors and data structures Removed optional value in Metric simplified a lot Configuration of EWMA by using halflife duration Renamed DataStream to EWMA Incorporate review feedback Use binarySearch for selecting weighted routees More metrics selectors for the router Removed network metrics since not supported on linux Configuration of router Rename to AdaptiveLoadBalancingRouter Remove total cores metrics since its the same as jmx getAvailableProcessors  tested on intel 24 core server and amd 48 core server and MBP API cleanup Java API additions Documentation of metrics and AdaptiveLoadBalancingRouter New cluster sample to illustrate metrics in the documentation  and play around with factorial
; design
Im once through looking good as a start I mean that later a learning algorithm with feedback would be interesting to explore just a few questions about sigar is it okay to distribute those native libraries should we have really prominent warnings somewhere that we dont support sigar itself we dont have many of those platforms
; general
rkuhn regarding sigar distribution I only included them in the sample to make it more fun and convenientWe dont publish sample binaries Im not sure if its a problem with the download dist sigar 164 is ApacheV2 and is the same version as we distribute with Atmos which can be importantApart from the sample there is no dependency and its also the reason for the reflective usage
; general
I have incorporated feedback in 5eec693 case object and case class for MixMetricsSelector Rename decayhalflifeduration to movingaveragehalflife Clarification of decayhalflifeduration and collectinterval Removed Fields Java compatibility issue Adapt foryield variables Comment metrics collector constructor that takes system param Dont copy EWMA if not needed LogOf2 constant 069315 Dont use mapValues Remove RichInt conversion sigar version replace tag in docs createDeployer factory method to make it possible to override  deployer in subclass Improve readability of MetricsListener in sample Better startup of factorial sample no sleep Many minor enhancements and cleanups
; design
PLS REBUILD ALL
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator101
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator101
; general
Ok I finished reviewing this Very nice job I want to try this out very soon LGTM
; general
Thanks drewhk I have pushed changes based on your latest commentsIt would in fact be super awesome if you can try the factorial sample so we know that it works with sigar on windows
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator102
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator102
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator103
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator103
; general
Damn this is what I call a PR Great job 8ball
; general
drewhk I have done the changes to AdaptiveLoadBalancingRouterSpec please try again on your machine
; general
PLS REBUILD ALL
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator126
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator126
; general
Ok I will do that
; general
I run AdaptiveLoadBalancingRouterSpec 5 times on my Windows machine and it all passed
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator127
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator127
; general
Patrik this is awesome Thanks so much for taking the original nugget to what it is now looks really great Id have added more comments along the way but swamped with work
; general
I have completed the refactoring to simplify MetricsGossip and NodeMetrics mergeCan I merge this to master now
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator133
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator133
; general
If its up to me Id say remove it But Jonas might have a usecase for it
; general
Here is the alternative httpsgithubcomjbonerakkapull322
; general
We picked httpsgithubcomjbonerakkapull322
; general
okay heres what Ive got so farI found it odd that so many buddies are left in the ConcurrentSkipListSet when only one child had not yet terminated hence I put assertions around the register and unregister activities and found that sometimes buddiesremove failsDetour I thought hard about what could make it fail and came across a SO question which mentions in passing that SystemidentityHashCodex does not need to be unique which would make our IdentityHashComparator incompatible with ActorCellequals Replacing it with a selfpathbased comparator did not make it go away but we might want to keep this in mindFinally I saw that the Create message is dispatched before the ActorCell is attached to the dispatcher which means that during that crazy test it is well possible that termination happens before registration Which could possibly explain a whole lot Now I need to think long and hard whether inverting the order does not break something elseOf course this does not fix the BD by itself we still need to find the right way to wake up buddies but that is part two as far as Im concerned
; general
So I think that should fix it Please have a look If found okay Ill remove the scaffolding
; general
its okay now from my perspective shall I merge
; general
Excellent work Patrik 1
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator65
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator65
; general
backport to 21
; general
yesOn Mon Nov 5 2012 at 1015 PM Roland Kuhn notificationsgithubcomwrote backport to 21  Reply to this email directly or view it on GitHubhttpsgithubcomakkaakkapull845issuecomment10088222 Viktor KlangAkka Tech LeadTypesafe httpwwwtypesafecom  The software stack for applicationsthat scaleTwitter viktorklang
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator64
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator64
; general
Metric has an isDefined method Wouldnt it be nicer that when the loadaverage is not available on the OS then leave the metric undefined instead of a negative value What if someone just blindly averages with systems where loadaverage is defined
; general
I like that suggestion I will update
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator61
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator61
; general
Changed to undefined as suggested by drewhk
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator61
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator61
; general
Im sure there is a reason for representing the load average as BigDecimal LGTM
; general
If these metrics are exposed to ordinary devs then BigDecimal is the way to save them from themselves If we use it internally and performance is a problem we can use methods like Kahan summation httpenwikipediaorgwikiKahansummation or other numerically stable algorithms
; design
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator58
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator58
; general
I guess this is backport material for 21
; general
I vote for backport Dont want this to fail in 21 for no reason
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator52
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator52
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator52
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator52
; general
PLS REBUILD ALL
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator56
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator56
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator53
; general
ok I can understand that old is wrong but I have no clue what is the preferred right thing to do   feels scary in this caseLooking at latest sbteclipse and its instruction is simply    addSbtPlugincomtypesafesbteclipse  sbteclipseplugin  210and it is published here I thinkhttprepotypesafecomtypesafereleasescomtypesafesbteclipsesbteclipsepluginscala292sbt012210jars
; general
You should only need to set the scala version to 292 the version used by sbt 012 and leave the binary version setting as before  otherwise it will use the global setting for this For sbt 011 use scala 291
; general
I can take a look at this later today
; general
As discussed with Josh I think its a huge bug that SBT doesnt error out if a setting is known to be invalid
; general
Closing this one New pull request in 846
; general
cherrypicked to release21
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator50
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator50
; general
The PR Validator job broke Ill look into it
; general
Lets see if this works PLS REBUILD ALL
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator50
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator50
; general
ummm looks like its trying to use https
; general
Ignore build 50 Dont know why kitteh posted that one again Build 51 seems to be building fine and thats the new one
; general
So build 51 went fine after I wiped the workspace on the Jenkins slave machine Seems like there was a glitch after I switched the git repo from http to git
; general
Forgot to say LGTM
; general
Hey John Thanks for this hard work Ive gone through the code not tests or docs yet since theyll depend on the refactorings suggested by the comments of the codePlease dont hesitate to ask if anything I commented is unclear looking forward to see this into 20Cheers
; general
Hey John could you refresh the pull request to be synched with your latest changesThanks
; general
Sure  Will do later tonight when i get homeSent from my Verizon Wireless PhoneOriginal messageFrom viktorklang  replyi334912222f2160e50d7b0d8e3df380d4bcb862c5b75d022787382replygithub comTo jxstanford jxstanfordgmailcomSent Sun Feb 26 2012 172540 GMT0000Subject Re akka Retrofit of the akkaamqp module to 20RC1 350Hey John could you refresh the pull request to be synched with your latest  changesThanks Reply to this email directly or view it on GitHubhttpsgithubcomjbonerakkapull350issuecomment4182759
; general
Ping me when theres more to review
; general
CommentedThis pull request has become quite unmanageable though way too much things in the diff that shouldnt be thereDid you merge in release20 and then the pullrequest is targeting master
; general
yeah thats what I did  If it makes sense I can dump this pull request do a new fork off akkaakka make a branch off the v20 commit put my changes back in then do a new pull request  does that seem about right
; general
I recommend basing it off of release20 since youll have to open the new pull request against it release20Thatd be great thanks
; design
the release20 branch is still versioned as 20SNAPSHOT  The v20 tag commit 6b0f0b080dd844479be239c686a57c451d884e6e appears to be the official release  Would it be better to base a new pull request off the v20 tag commit
; general
Open the new pull request as we discussedKeep up the good work
; general
Seems a bit dangerous to me I think it can go in for now but in the future it might make sense to think about a cleaner way of FSM composition
; design
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator66
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator66
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator67
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator67
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator68
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator68
; general
Thanks guys Ill need to see the espresso machine before diving into this
; general
Skipped the machine and chewed on pure coffee beans during that rebase
; general
Alright halfway through taking a lunch break to reload
; general
AlrightIm done with my first rough rundown of the pullrequest over all very nice readI am a bit concerned by the lack of concurrency related tests for the CamelExtensionCheck my comments and ping me when youre done with themAwesome stuff
; general
Ping me when I am needed
; general
Hi Viktor only saw your comment now thanks for the review Ill get started and let you know
; general
Weird I didnt get any notification either  And my comments which should explain some of Victors questions are squashed at the end Does anybody know what happened
; general
no idea strange
; general
Ping me when theres more to review
; general
will do that dmn dayjob is getting in the way
; general
Hey Ray just ping me as soon as Im needed
; general
Will do hopefully I get some work done on it todayRaymond Roestenburgcode httpgithubcomRayRoestenburgblog httproestenburgagilesquadcomtwtr RayRoestenburgOn Mar 15 2012 at 008 viktorklangreplyreplygithubcom wrote Hey Ray just ping me as soon as Im needed    Reply to this email directly or view it on GitHub httpsgithubcomakkaakkapull344issuecomment4510455
; design
A lot of it is done but there are some tasks left hopefully this weekend I can get a lot done will let you know thanks for keeping in touch
; general
Just want to let you know that we care about this awesomeness
; general
It has to be awesome because Ill be talking about it on ScalaDays 2012  they accepted my submission at last
; general
Better get to work then Im going rogue for 2 weeks need to recharge after a 10m long crunch
; general
Then awesome it will be On Fri Mar 16 2012 at 615 PM Piotr Gabryanczyk replyreplygithubcom wrote It has to be awesome because Ill be talking about it on ScalaDays 2012  they accepted my submission at last   Reply to this email directly or view it on GitHub httpsgithubcomakkaakkapull344issuecomment4543958 Raymond Roestenburgcode httpgithubcomRayRoestenburgblog httproestenburgagilesquadcomtwtr RayRoestenburg
; general
Viktor when will you disappear of the grid for your recharge
; general
At midnight I turn back into a pumpkin and will stay that way the coming 2 weeksThat said I have plenty of colleagues at the office so just email akkadev and theyll help you out
; general
hehe ok cool have a an awesome break
; general
Finally got to process all the comments Ive separated some of the work into tickets which I will continue with so the next pull request will be far less big bang and easier to process You can check wipcamel to see what changes I made I have rebased all the review changes into one change on top of the last commit Let me know if anything more is needed to get this pull request merged
; design
This looks good and I agree with the plan to fix the remaining tickets after the merge Great work guys Assuming that all tests pass go ahead with the merge
; general
Tests pass MergedThanks Roland
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator42
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator42
; general
1 merge and backport
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator41
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator41
; general
Ill take a look when Im back from vacation next week
; general
Cool Ill be available for followup changes Enjoy your vacation
; general
Great stuff Even with picture
; general
The new code with the bug fix is available here httpsgithubcomhbfakkacommit4917680f7348d9abf4962f860f25b71cde75af17
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator45
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator45
; general
Akka guys theres just one very little comment outstanding from my side on this could you please also review Thanks
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator62
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator62
; general
Looks great Consider the timing sensitivity in the tests
; general
I merged this into master and am in the process of backporting to release21 expect new PR shortly
; general
Hm not being a Scala expert I see in the testScala  override def afterAll     systemshutdown  Isnt there a  missing Why does it work at all
; general
def x   is called procedure style it is shorthand fordef x Unit
; general
Appreciated Viktor thanksI have added this to Stackoverflow httpstackoverflowcomquestions13300038 so hopefully your answer helps others too
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator45
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator45
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator43
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator43
; general
1 merge D
; general
Great stuff Im through once and I think it would make most sense if you keep this branch as your new master and generate changes as pull requests into this one to not let the reviewing efforts grow out of hand
; general
Great work drewhk
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator119
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator119
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator230
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator230
; general
PLS REBUILD ALL
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator233
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator233
; general
PLS REBUILD ALL
; general
We definitely need to do something about that test output 30MB of text
; general
Yes it looks like there are a lot of stack traces logged nowThe raw log is only 56 MB
; general
one obvious improvement is to remove the stack traces ie extend NoStackTrace making sure that actor paths and exception messages are unique by themselves in the longer term which might mean medium this might also force us into finally tackling the issue of configuring logging based on actor paths
; design
also consider if ERROR is the correct log level eg    Disassociated    959695030b1e404ab18da1f3e3b6b570akkaremoteEndpointException Disassociated    at akkaremoteEndpointWriteranonfun7applyOrElseEndpointscala208    at akkaremoteEndpointWriteranonfun7applyOrElseEndpointscala207
; general
Is Dissociated an Exceptional occurrence
; general
That is precisely what I meant actor restarts are treated always as errors but that is not really true more so the more you drink the supervisor hierarchy koolaid There were infrequent complaints on the mailing list I think well see this increase in urgency Another case of being driven to improve the taste of the dog food
; design
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator234
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator234
; general
akkacontribmultijvmtest reliably fails on my machine you do not need to wait for Kitteh to get this feedback
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator39
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator39
; general
Youre using Java7 APIs dude Use Java 6 to build and test on
; general
Yay I havent realized Will fix Thanks kitteh
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator44
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator44
; general
Automatic merge failure I need to merge some of the new stuff in RARP
; general
Woot going to review now
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator40
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator40
; general
Its failing due to this httpswwwassemblacomspacesakkatickets2649
; general
ok but I guess it doesnt solve the problem so why is the ticket changed to Test
; general
The problem isnt reproducible with this fix the problem will be easier to debug if it manifests again
; general
I think the idea was that the reason to have AllForOne is that the children are intricately related and one cannot exist without the other I think the behavior asis is correct and the correct solution is to spawn one child that handles the temporariesWDYT
; design
With my proposed change it would be quite easy to achieve a onedeathkillsall just watch your children and youre done The opposite would require subclassing AllForOneStrategy which looks much less nice to me I am in the process of adding OneForOne vs AllForOne to generalsupervisionrst in terms of describing their general semantics and will add some generic scenarios for how to set up things in different cases WDYT
; general
docs added Id consider this solved
; general
Looks badass but I dont recall where it was requested
; general
was requested by my aesthetics checker on the bug picture we have equivalent functionality on all terminatable entities Plus the infrastructure is there by necessity but it would look buttugly rolling your own on top of awaitTermination
; general
Ok merge pls
; general
Ill take that as a yes
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator48
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator48
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator46
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator46
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator49
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator49
; general
Should we merge this into master
; general
Squashing big commits is great before merging to master but during review its hard to see what was done without redoing the whole review
; general
So how do you guys like this
; general
for my part I like it
; general
Overall I think it looks greatNOW you should also add migration guide for 22
; general
Is this ready to be merged
; general
Added migration guide for 21 to 22 and added the immutable stuff in there as well all good
; general
PLS REBUILD ALL
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator88
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator88
; general
PLS REBUILD ALL
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator90
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator90
; general
sry Kitteh I make beter nao
; general
PLS REBUILD ALL
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator91
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator91
; general
Sounds like OK to me
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator47
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator47
; general
Oh boy I will reserve some time to review this tomorrow
; general
No other comments LGTM
; general
alright sad story great job Viktorwe should define some idioms import scalacollectionimmutable and explicit immutableSeq vs import scalacollectionimmutableSeq  toimmutableSeq vs toList vs toList immutableSeqfoo vs Listfoo
; general
do we have same problem with Iterable any other    scala val i IterableInt  a    i IterableInt  WrappedArray2    scala i    res14 IterableInt  WrappedArray2    scala i foreach println    2    scala a    res17 ArrayInt  Array2    scala a0  3    scala i foreach println    3
; general
Heres what I thinkimport scalacollectionimmutable  Its unfortunate but until Scala fixed PredefSeq I think its crucialtoimmutableIndexedSeq  if iteration performance and memory is dear to youtoimmutableSeq  For known small thingsx match  case is immutableSeq   case other  othertoimmutableIndexedSeq   To avoid wasteful copiesuse List or Vector as appropriate instead of immutableSeq immutableIndexedSeq or Seq
; general
1I think those are good guidelines
; general
Sorry for not reviewing this today I lost myself in bughunting land Totally exhausted now first thing tomorrow will be this
; general
caution based on another topic branch by accidentcan open a new pull req for merging after review is done
; general
Theres one huge drawback here and thats the extra level of indirection thats going to have cache effects
; general
yes but is it right to sacrifice separation of concerns for an unmeasured difference in microperformance Why cant I use my nice PrioMailbox with a BalancingDispatcher
; general
Overall I like the separation but I think we should retain the methods on Mailbox and delegate to MessageQueue as to avoid changing too much at this stage
; general
I could put back the enqueue dequeue and hasMessages but implementing MessageQueue would be awkward to the point of being unsafe On the other hand the compiler verified my changes for me So tell me what to do and I will do it today
; general
I think Id go for implementing MessageQueue and delegate to the internal oneThis also lessens the overall impact of the changeYou can then rename the durable mailboxen to MessageQueue but keep the MailboxTypes intact WDYT
; design
MessageQueue has the cleanUpowner deadLetters method which should really not be called on a Mailbox which is why I would prefer to partially delegate without implementing the interfaceThe proposal for renaming only the actual MessageQueue implementations is a good one will do
; general
I was just trying to avoid breakage at this hour
; general
Me too Mailbox is privateakka I might overlook something but it seems to me that it should not have any impact whether it nominally or structurally implements MessageQueue the parts the make sense anyway
; design
Do what you feel is best I trust your judgement
; general
One more thing if someone built their custom MailboxType with preRC2 they would not get a compiler error if Mailbox keeps extending MessageQueue I think this tips the scale my way we just need to mention this in the release notes
; general
Alright make it happenThanks
; general
Do it No review
; general
merged into master not automatically closed because was based on a different branch
; general
You forgot BoundedMessageQueueSemantics did only the Deque one and I would feel more confident that we wont break it if there were a test for it
; general
Added test and fixed the other bounded mailbox semantics And improved the testing facilities of mailboxes
; general
Good to go in
; general
I realize I should have tested against 22 and squashed  sorry about that
; general
kittynotetoself ignore 17795549cat Synchronaising pray
; general
we have a ticket for putting the pgp plugin directly into the akka build now is as good a time as any
; general
LGTM removing my global sbt plugin
; general
kittynotetoself ignore 17805454cat Synchronaising pray
; general
The commit validator succeeded but kitteh has not updated for some reason
; general
Nice JobIn the future we might want to rename Leaving and Exiting to something like ExitProposed and ExitAccepted
; general
thanks yes I have seen that in my repeat job for this branch as well
; general
Alright I found the bug My changes to the gossip merge was not good so I have reverted them
; general
Im glad that I finally found the bug It was fatal and embarrassing I leave it as an exercise to the reviewer to spot it
; general
20 successful full runs of this branch in repeat jobs during the nightPlease review
; general
I give up trying to spot the bug LGTM apart from minor comments
; general
Great simplification it is good to see the code become simpler in incremental steps and more resilient at the same time but we need to keep working in that direction there is still too much going on under the covers from which only our great test suite keeps us safe
; general
Updates after feedback Take a look at e3cec72I did some major refactoring of the leaderActions method
; general
fixed the additional adjustments and rebasedI will merge after kitty confirmation
; general
yes looks good
; general
I will try with these settings    netty connectiontimeout  15s    retrywindow  60s    maximumretriesinwindow  3
; general
20130510 113149 dtumon Patrik Nordwall notificationsgithubcom  rta I will try with these settings     netty connectiontimeout  15s     retrywindow  60s     maximumretriesinwindow  3Seems fine
; general
LGTM though it took me a while to penetrate it maybe add a comment
; general
I have added the change to the connectiontimeout and retry window as we tested in EC2
; general
rkuhn Its just a suggestion I thought the best way to do it was via PRAn even better approach would be to have akka fail at runtime ideally compile time but I guess thats harder if the linked library is not yet supported
; general
Well really its about the capabilities of zeromqscalabinding so if you use a version of that that works with 0mq 3x then it will workCheers
; general
See it for a second from the developers point of view1 Grab the latest stable akkazeromq2 Grab the latest stable zeromq 3x3 It doesnt work because of some obscure error httpsgistgithubcomfernandezpablo8555501024 Double check the zeromq docs on akkaio theres no mention about version incompatibility actually do a CTRLF on that page for version just for the fun of it5 Dive through the akkauser mailing list archive to find that some users got their problem solved by reverting to ZMQ 2x do that and solve the issueAgreed that this PR may not be the best solution but am I the only one that thinks this is suboptimal Shouldnt people be warned earlier
; design
Perhaps I should have been more explicit I think your patch is a good one but without the second part of the sentence
; general
closing for inactivity Ill put warnings in the docs myself
; general
Oops sorry for that rkuhn missed your reply Its not a matter of who puts the warning as long as its there  thanks for taking care of it
; general
no worries your input still has improved Akka
; general
Fine to merge
; general
So this is more about dont publish when metric gossip received
; general
yes it was kind of published to often
; general
ah is that period of the notification task configurable
; general
yes collectinterval  3s
; general
okay I see thanks
; general
Can someone review I want to merge it in
; general
Im reviewing now
; general
1 for merging thisI have run the tests of it on jenkins  scalable1  success
; general
Thanks Patrik Added comment now Will merge
; general
Awesome just what I need Been debug printing the roles myself and doing some replacement in Emacs
; general
yeah I got tired of that On Mon Jun 4 2012 at 920 AM Bjrn Antonsson replyreplygithubcom wrote Awesome just what I need Been debug printing the roles myself and doing some replacement in Emacs  Reply to this email directly or view it on GitHub httpsgithubcomakkaakkapull508issuecomment6093677 Patrik NordwallTypesafe httptypesafecom   The software stack for applications thatscaleTwitter patriknw
; general
Ah awesome Love you Add a bash script to scripts to make it easier to run
; general
Would be nice to have Jenkins run this one automatically
; general
Added scriptsmultinodelogreplaceshTook a look at how to run it on the console out in jenkins Didnt find an immediate solution to how to run and save it in jenkins Merging this now We can improve later Perhaps doing it as a logger would be better but then we loose the original logging
; design
Ok Did you open a ticket for integrating this with Jenkins later Good job This is awesome
; general
ok did that nowhttpwwwassemblacomspacesakkatickets2176loggerforlogrolereplaceOn Mon Jun 4 2012 at 154 PM Jonas Bonr replyreplygithubcom wrote Ok Did you open a ticket for integrating this with Jenkins later Good job This is awesome  Reply to this email directly or view it on GitHub httpsgithubcomakkaakkapull508issuecomment6097285 Patrik NordwallTypesafe httptypesafecom   The software stack for applications thatscaleTwitter patriknw
; general
I cannot really comment on the OSGi part so Ill leave that to others What I am a bit concerned about is what else you need to do to get the sunmiscUnsafe stuff working etc And is the classloader you pass into ActorSystemapply capable of loading all necessary stuff like remote transports and the like from different artifacts
; general
Hi RolandThanks for your initial feedback  youre right about a lot of you codelevel remarks obviously but thats still very much workinprogress my main goal for starting this very premature pull request was to sollicit feedback on whether or not theres actually any interest at all for an akkaosgi modules that provides these two things  a base activator and support for BlueprintIm working on httpsissuesapacheorgjirabrowseSMX41141 Add support for Akka to ServiceMix 4 so Ill probably have to do this work anyway but I would prefer adding it to Akka directly instead of doing it at the Apache ServiceMix project because I think it actually belongs hereIn a previous pull request we added OSGi headers to all Akka modules so they all install fine now inside an OSGi container provided that boot delegation is configured for sunmisc cfr httpdocakkaiodocsakkasnapshotadditionalosgihtml  for both Apache Karaf and Apache ServiceMix however that is already set by defaultUp to now I have only been testing with akkaactor akkaslf4j and akkacamel adding examples to the ServiceMix distributions to showcase this new Akka support  The classloader Im passing into the ActorSystemapply corresponds to the bundle from which the ActorSystem is being started which should allow users to configure whats visible inside this classloader by adding imports to that bundle  Not sure this covers all use cases we can imagine I can only say that the use cases I tested were working fine with this  I guess we can always add extra magic afterwards if people experience limitations with the current approachRegardsGert Vanthienen
; general
How much more is needed to have this useable
; design
LSThese additional commits clean up the code and are adding PojoSRbased unit tests to the proposed akkaosgi module  With these changes the new module should be useable  theres a service reference leak that I would like to get fixed tonight or tomorrow but other than that it should be a good starting point for improving Akkas OSGi supportRegardsGert
; design
With these additional commits service registration no longer happens automatically but theres a convenience method available for users to do this themselves and unregistration is being handled properly now
; general
With this additional commit the user no longer has to import akkaosgiblueprint when using the namespace handler  If theres anything you want me to change in here just let me now but as far as Im concerned this is good to go
; general
Hey GertSorry for the delay and silence I wanted some of our people who are more OSGisavvy to have a look at this but theyve so far been unavailableIll try to get them to review it again
; general
GertDo I read the code correctly and there is a 11 relation between a bundle and an actor system Isnt this too restricted Wouldnt it be nice to have an actor system that spans multiple bundles Or even multiple actor systems per bundle I would like to better understand the various scenarios possibilities and restrictions before approving a generalpurpose OSGi module I think a three pages design document would be helpfulA more specific issue I see is that you are mixing POO plain old OSGi with Aries I think the aries support should be moved to a separate module akkaosgiariesWrt coding style I suggest you provide type annotations for all public methodsCheersHeiko
; design
Heiko VictorThanks for the feedback  If you only look at the ActorSystemActivator that one is meant as a convenient way for setting up a single ActorSystem for getting started with Akka in OSGi It does offer a convenience method for registering the ActorSystem in the OSGi Service Registry allowing you to reuse the same instance across multiple bundles but if you want to create multiple ActorSystems in one go you probably dont want to use this oneHowever all the classloader tinkering or the extra code that is necessary to use Akka inside OSGi has been centralized in the OsgiActorSystemFactory class so if people want to do a more advanced setup with multiple systems in the same bundle they can easily reuse that class from whatever it is theyre using to create their application custom Activator class Spring DM Blueprint SCR For the namespace handler you can create as many akkaactorsystem instances from a single blueprint file as you want and Blueprint itself has everything to register those as services and to be able to reuse them across bundles already by defaultI can try writing this out in more detail in some kind of design document probably over the weekend or something though  Do you guys have an example of the kind of format you expect or a preferred location for storing these documentsFor the code changes the current akkaosgi module has the import for the orgapachearies marked as optional so theres no runtime dependency preventing this from working in a plain OSGi environment but I can obviously separate that into a new module as well if you prefer  And I can obviously make the changes to the public methods as wellOne more question from my end assuming I can get all of this done in the next few days do you guys have a roadmap or planning for getting these bits released  Ive finished up my akkacamel example for Apache ServiceMix for inclusion into the 450 release but we would need something like a milestone release at least to be able to actually ship itRegardsGert Vanthienen
; design
Ifwhen its merged in itd be scheduled for the M1 of Akka 21 which is slated to be released within the coming weeks depending on the stability of 2100M4 and the releases of Akka deps against it
; general
Adding another set of commits to split up the akkaosgi and akkaosgiaries modules as requested  I also added the return types to the public API methods and improved the Scaladocs a bit to better explain about the different use cases handled by the ActorSystemActivator OsgiActorSystemFactory and the namespace handler
; design
GertThanks for the changes I added some minor coding style related comments I vote for merging after those have been appliedHeiko
; general
HeikoThanks for the review  code style changes have been added to the pull request nowRegardsGert
; general
viktorklang I vote for merging this pull request
; general
Great stuff GertI commented on some codeconformity things that needs to be addressed before I can merge it infunctionalitywise everything is greatLooking forward to merging this in
; general
VictorRefactored the activator itself to get an API that works for both Java and Scala users of Akka and I think I also addressed your other concerns  be sure to let me know if anything else needs changingRegardsGert
; design
Excellent Merging in
; general
Hi GertThe docs didnt compile for OSGi in master so I had to do some emergency fixes to get it to compile please review my fixes so I havent broken anythingCheers
; general
VictorYour changes look good to me  even includes a few more nice code style improvementsSorry for the inconvenienceGert
; general
Thanks for the review Dont want to mess it up
; general
Still needs a signed CLA
; general
Eric what is the status on this Have you signed the CLA
; general
Closing due to no response
; general
Hi Ericplease sign the CLA typesafecomcontributeclacheers
; general
Still needs a signed CLA
; general
Eric what is the status on this Have you signed the CLA
; general
Closing due to no response
; general
Sorry guys I was just cleaning up my GitHub account and I realized I didnt see the notifications about this pull request I have now signed the CLA so you might want to reopen the request Thanks
; general
The dependency on specs2 has been removed in order to lessen the pain of living close to scala master it would be great if you could check the plain text documentation and make that as good as possible instead thanks
; general
What happened here I cant see that this is merged to master but the pull request is closed Now I dont want it to be merged to master yet because we have a regression in jenkins that I would like to sort out first I hope that is due to a know problem we have ticket 2137 but I cant be sure until that is fixed
; general
I merged or closed by mistake Then I tried to revert it by opening it again but that didnt work so I closed it again Now you are saying that the merge was reverted anyway but the pull request is closed I dont understand Sorry if I messed up
; general
So I made all the JUnit tests that ran with both JUnit and ScalaTest run with JUnit only since ScalaTest doesnt call the Rule and ClassRule before and after methods correctly making some tests null pointer if JUnit ran the test before ScalaTest
; general
LGTM does this explain the previously mentioned strange invocations with uninitialized classes
; general
Yes it explains the strange invocations Now there is only normal reuse of the static resources which happens sometimes
; general
You are fixing this ticket as well httpswwwassemblacomspacesakkasimpleplannerticket3201
; general
patriknw I trust that you take care of your last comment about StressSpec Im merging this one in since it is a good change in any case
; general
Ok I willPatrik9 maj 2013 kl 0956 skrev Roland Kuhn notificationsgithubcompatriknw httpsgithubcompatriknw I trust that you take care of yourlast comment about StressSpec Im merging this one in since it is a goodchange in any caseReply to this email directly or view it onGitHubhttpsgithubcomakkaakkapull1410issuecomment17653590
; general
kittynotetoself ignore 17505423cat Roger Rebuilding prvalidatorpercommit for 676eb459 rotatinglight
; general
PLS REBUILD ALL
; general
kittynotetoself ignore 17508722cat Roger Rebuilding prvalidatorpercommit for eb4bd78c 85a4ebf6 676eb459 rotatinglight
; general
LGTM great stuff
; general
I trust youPatrik8 maj 2013 kl 0904 skrev Roland Kuhn notificationsgithubcommore reviewsReply to this email directly or view it onGitHubhttpsgithubcomakkaakkapull1406issuecomment17589959
; general
Ok I see the point now LGTM Do you have benchmark data for the original and the new impl
; general
We are still working on the benchmarks Turns out its not at all trivial to produce reliable numbersCurrently we are in the process of optimizing for simple HTTP requestresponse benchmarks see httpwwwtechempowercombenchmarks and for these types of load the message dispatch we save with this patch is not in the critical path I suspect this change only becomes significant for many concurrent connections with a lot of interest settings which only happens with messages that are larger than the sendreceive buffers not the case in our HTTP pingpong cases
; general
Ok all feedback so far incorporated and rebased onto current master
; general
The two failures are known and external to the PRs code so Im merging it in Thanks again Mathias
; general
failures were in DelimiterFramingSpec and ClusterSingletonManager
; general
merging to make the kitty a little less unhappy
; general
the failure was in the unrelated RemoteNodeDeathWatch fast test
; general
Now with more cowbell
; general
I have not tried to follow what this code does but LGTM
; general
LGTM apart from the small nitpicks
; general
Thanks for noticing Ive uploaded the paper to httpdocakkaiodocsmiscsmlitr9429pdf it might be a safer bet to link to that location instead
; general
Ill update this later today to point to the akka mirror
; general
Ok updated rebased and push fd  should be good to go
; general
yup looking good
; general
The failure was in TestTimeSpec created ticket 3317
; general
this is much simpler indeed
; general
The failure was akkaremoteRemoteNodeDeathWatchFast
; general
LGTMWhat is the purpose of prepare
; general
It gives the ExecutionContext the chance to do any setup which might be necessary eg gathering up some values out of ThreadLocals We do this already for Futures and their callbacks and the normal ECs just return this
; general
ok thanks for explaining
; general
ah forgot to mention Im aware of the missing docs update will do that tomorrow
; general
great that you do this
; general
pushed review fixes is it good to go
; general
1 but I think you need to merge with master first
; general
apart from my comment the section in dispatchersrst it looks good
; general
You need to run the tests before submitting the PR it doesnt pass
; general
Sorry Added a patch that fixes it for me Also learned in the process that you can call become in initialization Very nice
; general
What about it not sure what youre getting at
; general
I think something like this is needed have a look httpsgithubcomakkaakkapull538files
; design
Its semantically different but I cant think why that semantic couldnt be fine Looks good
; general
closed due to 538
; general
fixed comments including the scheduler
; general
Fixed Use dedicated cluster scheduler only when default scheduler resolution isnt good enough Config properties for scheduler Commented shutdown considerations Use nanoTime in FixedRateTask Rewrote test to use latch and assert rate instead
; general
fixed log and wrapped scheduler
; general
Looks ok Have you tested it
; general
Yup but I cant add any test for it
; general
I know Good 1
; general
Also removed all usages of immutableStack
; general
ThanksPlease sign the CLA so I can merge this in  httptypesafecomcontributecla
; general
Done Please use my contribution for Good not Evil Im just joking DOn 12 June 2012 1520 viktorklang replyreplygithubcom wrote Thanks Please sign the CLA so I can merge this in   httptypesafecomcontributecla  Reply to this email directly or view it on GitHub httpsgithubcomakkaakkapull535issuecomment6270099
; general
1 and backport to 203
; general
On hold awaiting more awesome commits not ready for merge
; general
This is going to take a bit longer foundand unfortunately openedsome barrels of worms
; general
thank God it isnt Silos of worms
; general
I think suspendresume has now assumed the status of unmaintainable its just waay too complex to understand the intricacies involved Time to take a step back and revise it fully
; general
Following discussions and whiteboard sessions and an emergency session of the EU council I have split up ActorCell into a cake to separate the different concerns it handles While doing so I also fixed the review comments and a few other bugs A few of the good ol names also bit the dust to be replaced by awfully descriptive ones That last one clearly lies in the eye of the beholder so fire away with the comments
; general
Hey manjust finished a runthrough of this PR Lemme know if you have any followup questions
; general
Now I would say its finished I found and fixed that bug which caused BalancingDispatcherModelSpec not to terminate correctly which was an actual bug and also independent of the BalancingDispatcher There is one test which consistently fails in akkacamel though but that was the case even before I started this branch at least on my machine
; general
So ready to merge
; general
nobody gave a 1 yet
; general
Alright Ill read through everything tomorrow and give the final verdict
; general
Awesomely done Roland I really love the new tests
; general
Want me to merge it in
; general
Coolio Have youve signed our CLAhttptypesafecomcontributecla
; general
Yes I have signed it just now
; general
Thanks great work
; general
Hey MikeI cant find you amongst our CLAs can you sign it here please httpwwwtypesafecomcontributecla
; general
In what situation did you get the send returning false
; general
Hi MikeIve given this some thought and I think your patch only solves half of the problemThe thing is that send returns false when EAGAIN is requested which essentially means that you should try again laterIve implemented this in the following PR httpsgithubcomakkaakkapull548
; general
I tested with Akka latestintegration just now on Ubuntu 1110 and verified that the Akka build had your modifications I used zeromqscalabinding291  006 and got this errorStarting AkkaRunning Akka 202Deploying filehomemslinnworktestPubSubKernelssubKerneltargetsubscriberdistdeployminimalsubscriberkernel002jarStarting up comxpubsubSubscriberKernelSuccessfully started AkkaERROR 06212012 194211830 default1 akkadefaultuserzeromqa no more frames available while sockethasReceivedMoretruejavalangIllegalStateException no more frames available while sockethasReceivedMoretrue        at akkazeromqConcurrentSocketActorreceiveMessageConcurrentSocketActorscala200        at akkazeromqConcurrentSocketActorakkazeromqConcurrentSocketActordoPollConcurrentSocketActorscala183        at akkazeromqConcurrentSocketActoranonfunreceive1applyConcurrentSocketActorscala40        at akkazeromqConcurrentSocketActoranonfunreceive1applyConcurrentSocketActorscala39        at akkaactorActorclassapplyActorscala318        at akkazeromqConcurrentSocketActorapplyConcurrentSocketActorscala24        at akkaactorActorCellinvokeActorCellscala626        at akkadispatchMailboxprocessMailboxMailboxscala197        at akkadispatchMailboxrunMailboxscala179        at javautilconcurrentThreadPoolExecutorrunWorkerThreadPoolExecutorjava1110        at javautilconcurrentThreadPoolExecutorWorkerrunThreadPoolExecutorjava603        at javalangThreadrunThreadjava636You can find the short test publisher kernel and subscriber kernel programs here httpsgithubcommslinntestPubSubKernels
; general
Hi MikeCreate a minimal testcase according to the Akka guidelines and open a ticket so I can verify httpdocakkaiodocsakka202projectissuetrackinghtmlissuetracking
; general
Id comply except that this problem manifests when run under the akka kernel
; general
If I cannot automate the test then I cannot know that it wont regress I see no reason why it shouldnt be possible to reproduce in a normal unit test the akkakernel is just executing bytecode
; general
I need something which reproduces the problem reliably so I can add aunit test against it
; general
Ive committed something that might help but as I cannot test against itIm stabbing in the darkCheck out the latest master Viktor KlangAkka Tech LeadTypesafe httpwwwtypesafecom  The software stack for applicationsthat scaleTwitter viktorklang
; general
Pushed some additional changes Test with latest master
; general
After some discussion my client has decided to have me repurpose the pubsub code I wrote so it uses Akka remoting instead of ZeroMQ I wont be spending more time with ZeroMQ unless another client asks me to or this client changes their mind
; general
On Tue Jun 26 2012 at 1138 PM Mike Slinn replyreplygithubcom wrote After some discussion my client has decided to have me repurpose the pubsub code I wrote so it uses Akka remoting instead of ZeroMQ I wont be spending more time with ZeroMQ unless another client asks me to or this client changes their mindSo I conclude that the bug is fixed until proven otherwise  Reply to this email directly or view it on GitHub httpsgithubcomakkaakkapull544issuecomment6588630 Viktor KlangAkka Tech LeadTypesafe httpwwwtypesafecom  The software stack for applicationsthat scaleTwitter viktorklang
; general
If a bug lives in a forest with noone to bite does it exist
; general
I have changed the tests to use less vals of addresses
; general
The cache revealed a race in TransitionSpec Fixed with extra needed barrier
; design
This is ready but Im holding back merge waiting for some other pull requests from jboner and bantonsson to be merged first to not put the burden on them to handle the merge conflicts this probably will introduce
; general
Wouldnt it make sense to include the checks in ActorClassification since its publish method would also throw NPE otherwise
; general
I think that can mess things up as it assumes that false return values means something else
; general
No I meant throwing NPE upon subscribe instead of in publish
; general
Nice work Will try using it right away
; general
This will work with aggregate projects but not with a project with dependencies specified using dependsOnPlease take a look at httpsgithubcomszabolcsbereczfreezingninjablobmasterprojectXBuildscalaL24 Running dist on project probe will create a proper distribution package because all the required projects are aggregated by this project It wont work with project backend though because akkasbtplugin doesnt track project dependenciesAll this means that you need to have an aggregate project for each project which you want to create a dist package for Also the dependencies must be maintained by hand in two places at the project definitions and in the aggregate projectsbtassembly handles project dependencies correctly and I think it would be a huge win to incorporate this feature
; design
sbtassembly handles project dependencies correctly and I think it would be a huge win to incorporate this featureWhat is this feature in that contextPlease feel free to create a pull request with the suggested improvement my SBTfu stretches just about as far as this pull request
; general
Closing this PR as invalid
; general
this feature sbtassembly finds out the dependencies based on ProjectdependsOn and not the aggregate By what magic it achieves this I dont knowI will give it a try but Im not familiar with SBT either
; general
yes this looks good
; general
Fixed all issues and some other stuff Check it out httpsgithubcomakkaakkacommit391fed65941c29aa7d139011b0a97fb7c37f768e
; general
Ill kick tests on scalable1 for this branch
; general
tests sucessful Merge 1
; general
Nice Thanks for verifying
; general
Im overwhelmed by the comments D
; general
you wanted comments you got them  apart from that it looks good 1
; general
Awesome Great to have unit tests now
; general
good to merge
; general
Looks good to me
; general
Good to go
; general
Looks good I guess the failure detector interface harmonization is part of 2215
; general
Ignore that comment I need to refresh before commenting
; general
Ok Changed all tests now to use both FDs Good to push
; general
Yes 111 jun 2012 kl 1654 skrev Jonas Bonrreplyreplygithubcom Ok Changed all tests now to use both FDs Good to push   Reply to this email directly or view it on GitHub httpsgithubcomakkaakkapull530issuecomment6246510
; general
Im loving it
; general
D Just had to make this a pull req so it doesnt go unnoticed It was introduced waaay back when LocalActorRef had some notion of replicationStorage if you get my drift
; general
hehe golden days
; general
Good Push so I can test it
; general
You can already test it doesnt need to go into master until the reviews is done just checkout wip2182unreachablepatriknw
; general
Sure I can But Im lazy
; general
Laziness shouldnt be a reason to merge things into master
; general
First virtue of a programmer is LazinessSecond virtue of a programmer is ImpatienceAccording to Larry Wall httpwwwhhhhorgwimlvirtueshtml
; general
tested on jenkins on scalable1 merging
; general
I am the Heimdall of akka master thats the 3rd virtue hubris
; general
Damn right you are P
; general
Did I say that this shaves off 1 minute of the ordinary build on MBP and 6 minutes on jenkinstypesafecom
; general
badass Can you merge and remove the branch Patrik Thanks
; general
What is the status
; general
Sorry for the delay Didnt had the energy Job I took was pretty intense Now it is quieting downIve implemented Viktors suggestions except for the Proxy Class Loader will add comment in that section
; design
Should I sync with Master Thoughts
; general
Id hold off until the Scala 210 support has been merged into master sinceits a lot of changesCheers Viktor KlangAkka Tech LeadTypesafe httpwwwtypesafecom  The software stack for applicationsthat scaleTwitter viktorklang
; general
Looking forward to see the changes Let me know what and when you need from me
; general
avrecko So I assume that you are not planning to finish this If so well close the request as invalid
; general
Id like to finish this Like I might have mentioned I am currently focused on nonprogramming things I can make an exception and spare some time for this now Ideally Id resume this in October as Id like to take a break from programming for nowBut in any case I need you guys to tell me what to do Again Let me know what and when you need from me That was my comment that apparently goes unnoticedI just dont have the energy to keep syncing the rcl code with the akka master code flux
; general
Great work guys LGTM
; general
Increasing duration its a stresstest
; general
yes not all machines are as fast as a macbook
; general
I wonder how much this will add to the running time on slow jenkins wink
; general
kittynotetoself ignore 18553347cat Synchronaising pray
; general
we can reduce the number of messages but then it will be less reliable
; general
Reduced the number of messages and using dilation
; general
kittynotetoself ignore 18555815cat Synchronaising pray
; general
this test takes 9 seconds on a0 I happened to have a git clone there The other a machines should be slightly faster I recommend that you set the within to 20 seconds when using 2000000 messages
; design
I changed it to 30 seconds
; general
So incoming heartbeat requests will go to dead letters
; general
drewhk yes the request is sent to the other guys sender which isnt there until welcome is received
; general
rebased on top of master merge failed in the job
; general
kittynotetoself ignore 18508532cat Synchronaising pray
; general
LGTM apart from some formatting
; general
indentationbraces fixed Ready
; general
Thanks for reading this patch directly from my brain and dumping it to github for me  and as such it naturally LGTM
; general
Yes well done The one remark with returning false is only relevant for printing the warning message that things were lost is that correct
; general
LGTM I compared with my attempt and I was pretty close but I never got all pieces correctGreat work
; general
Yes but I changed that already will commit after you finished review
; general
LGTMOn a side note should the reference configuration for cluster be in the configurationrst file
; design
bantonsson I guess it should and so should akkacamel I have added both
; general
Looks GREAT to me
; general
No mention of the default resolution in the scheduler docs We might want to fix that could you verify Thanks
; general
Schedulerrst containsThe default implementation of Scheduler used by Akka is based on job buckets which are emptied according to a fixed schedule It does not execute tasks at the exact time but on every tick it will run everything that is overdue The accuracy of the default Scheduler can be modified by the akkaschedulertickduration configuration propertyand I thought that was still valid without adjustments
; design
Yes it is still valid which made me wonder why we do not mention the default value directly in there Since I dont think we will change this value very frequently I think it would be good to tell people about it up front
; general
I think we should stick to the plan to only define the default value in referenceconf and all those default values are easily accessible from the docs
; general
I dont see the code that completely disables all outbound attempts Is that the change in the EndpointWriter
; general
No that is in EndpointManger L501
; general
but that was not changed so outbound was not getting through
; general
This was changed else createAndRegisterWritingEndpointSomeuid  s toelse extendedSystemdeadLetters  s
; general
ah you are right thanks for clarifying
; general
No failures so far in 80 runs on the repeat job Praying
; general
fingers crossed it would be an awesome way to end this week
; general
Passed 200 runs on Jenkins Merging
; general
not mergeable yet there is a problem with unidoc and akkasbtplugin
; general
now it should work
; general
Now Await free
; general
Anybody else care to comment
; general
I dont see any bad stuff right now but it would take me a while to fully penetrate it drewhk your LGTM would be good enough for mine as well
; general
Ah I actually reviewed it just forgot to LGTM at the end
; general
then it is good to merge
; general
One more thought can we fix things for Java by somehow determining whether the Creator or UntypedActorFactory is a static class or not If that is possible then we could retain the methods nondeprecated and just print warnings and error out in 23 when someone does it wrong
; design
Dont you need to change the constructor for FailureDetectorPuppet to take an EventStream as well
; general
you have to update the documentation in the referenceconf files as well
; general
aside from the minor things LGTM
; general
The failure for the second commit was davyJones
; general
I assume that adding the INTERNAL API marker will not break the build so I will merge to have this in the next nightly build Then I can update httpsgithubcomakkaappspull2 tomorrow
; design
merging right away since it broke all builds  sorry guys
; general
Hurray for davyJones
; general
Yeah I should not have messed with him
; general
thanks for contributing
; general
Do you mean we should leave it as is
; general
In case someone wonder this fixes the failing test No failures in 40 runsbut we should of course fix the flushing also
; general
Great work guys makes me proud
; general
My spideysense is tingling its waay too much indirection and were also introducing a completely new concept I think we should be focusing on simplifications and unifications instead of fragmentation
; general
Yes the guys in the same room can confirm that I did grimace when writing this codeThe problem is that the internals of the routers need a major overhaul and that must be planned for It takes at least one week to get them in shapeThis does solve a serious problem Otherwise we will have to answer question on mailing list with you must start  first That kind of answers are failureIm open to alternatives excluding the major overhaul
; general
Okay seeing what this quest turned into Im inclined to not touch Routers for 22 at all ie let them rot That sounds tough but I dont think we have much choice your patch demonstrates one thing namely that the whole design conflates at least two very different kinds of routers in the same piece of code requiring you to add all those layers of boxing and uglinessWhat we should do after 22 is to start freshWe have the basis in good shape ie I dont think we need to work much on RoutedActorRefCell it is only the userfacing API which is broken Hence we must deprecate the whole thing Then we will introduce a loosely coupled toolbox of  routing strategies  pluggable routee management which allows for either creation or lookup  prefabricated actors as a substrate to replace the current offeringThis will allow us to avoid mixing lookup routers which are about external services with independent lifecycle and scaleup routers which are about creating worker actorspossibly on demandAnd since all this will take a lot more time than we have until we want to ship 22 Id say shelf it for now I might be wrong on this last point but that is what my currently very cluttered assembla view leads me to believe
; design
Nice LGTM  and later we should optimize the hell out of it
; general
LGTM it even decompresses the Welcome message
; general
yes the Welcome message contains the full Gossip state
; general
Updated with a minor fix so we dont try to serialize the constructor
; general
LGTM when the ordering is fixed
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator141
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator141
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator145
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator145
; general
Seems OK to me Checked the commit that added that resize line I think it is safe to remove it
; general
I changed tell in RoutedActorCell to handle the different cases in a more unified way Careful review please
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator147
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator147
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator148
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator148
; general
Cleanup based on comments
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator151
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator151
; general
I looked at the last part tests also Looks good
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator159
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator159
; general
PLS REBUILD ALL
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator172
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator172
; general
PLS REBUILD ALL
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator176
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator176
; general
Bjrn I think youll need to fix this
; general
Yes I already know and Im planning to When I get back to work
; general
LGTM as soon as the bothOldbothNew thing is fixed the UNREACHABLE comment will be a different ticket
; general
bantonsson I thought of one thing check all usage of things similar to     clustersubscribeself classOfMemberEventthat expected receive of MemberUnreachable but now that is not a MemberEventnote that it not always match exactly on MemberUnreachable it can be things like    case other MemberEvent        other events means that it is no longer interesting such as       MemberJoined MemberLeft MemberExited MemberUnreachable MemberRemovedCheck samples also
; general
Yes I realized that this friday There are a couple of places that doesnt match on UnreachableMember The event previously known as MemberUnreachable but expect to get it as part of the other member events and act on it
; general
please add a ticket for backporting this to release 211 ie not the current release21 branch
; general
All comments have been addressed Should be picked up by the Kitteh
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator194
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator194
; general
the bothOldbothNew replacement LGTM
; general
This needs to go into 21 Is that the plan
; general
There is a ticket for back porting to 211httpswwwassemblacomspacesakkatickets2785
; general
Why not 21 The current behavior is just so wrong
; general
That is more of a time and release management question
; general
I agree with Jonas we still have the opportunity to cut more RCs and not have Scala have to issue another RC
; general
We have hopefully cut and published the final RC for 21 already which is why it will probably have to go into 211 we can release that one very soon after 210
; general
Well I disagree with that We could cut a new one today This is in my view a critical flaw User is currently geting spammed with completely uninteresting events And will have to change his implementation between 21 and 211 Pretty bad But it is your call
; design
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator198
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator198
; general
PLS REBUILD ALL
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator205
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator205
; general
Whats the status here
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator146
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator146
; general
Added explanation that names cannot be partially matched
; general
Never seen this Compiles fine on my Mac and Win boxI know several others building fine  Are you running Java 6 That is a req I am traveling during the weekend Can look at it on Monday
; general
Hey JonasAhhhh i didnt realize that  do you need open JDK on mac then of course the default JDK on mac is only 15 guess I could just download the binariesCheers tim
; general
No JDK 6 is available for all 64bit Intel Macs Change the default JDK here ApplicationsUtilitiesJava Preferences
; general
And the compiler warnings are generated when arguncheckedarg is supplied in the POM Scala 28 will probably rewrite case t  T into case t if tisInstanceofT
; general
viktor  Ill be damned you learn something everyday I didnt know about that
; general
Hey Tim Did you resolve the issues If so could you close the issueThanks
; general
Yes thanks Jonas  all sorted now
; general
Im assuming from our previous discussion that were talking about something like CassidyAre there any hard requirements or do we make them up as we go
; general
New Thrift API    public ListColumn getslicebynamesString keyspace String key ColumnParent columnparent Listbyte columnnames int consistencylevel throws InvalidRequestException NotFoundException TException    public ListColumn getsliceString keyspace String key ColumnParent columnparent byte start byte finish boolean isascending int count int consistencylevel throws InvalidRequestException NotFoundException TException    public Column getcolumnString keyspace String key ColumnPath columnpath int consistencylevel throws InvalidRequestException NotFoundException TException    public int getcolumncountString keyspace String key ColumnParent columnparent int consistencylevel throws InvalidRequestException TException    public void insertString keyspace String key ColumnPath columnpath byte value long timestamp int consistencylevel throws InvalidRequestException UnavailableException TException    public void batchinsertString keyspace BatchMutation batchmutation int consistencylevel throws InvalidRequestException UnavailableException TException    public void removeString keyspace String key ColumnPathOrParent columnpathorparent long timestamp int consistencylevel throws InvalidRequestException UnavailableException TException    public ListSuperColumn getslicesuperString keyspace String key String columnfamily byte start byte finish boolean isascending int count int consistencylevel throws InvalidRequestException TException    public ListSuperColumn getslicesuperbynamesString keyspace String key String columnfamily Listbyte supercolumnnames int consistencylevel throws InvalidRequestException TException    public SuperColumn getsupercolumnString keyspace String key SuperColumnPath supercolumnpath int consistencylevel throws InvalidRequestException NotFoundException TException    public void batchinsertsupercolumnString keyspace BatchMutationSuper batchmutationsuper int consistencylevel throws InvalidRequestException UnavailableException TException    public ListString getkeyrangeString keyspace String columnfamily String start String finish int count throws InvalidRequestException TException    public String getstringpropertyString property throws TException    public ListString getstringlistpropertyString property throws TException    public MapStringMapStringString describekeyspaceString keyspace throws NotFoundException TException    public CqlResult executequeryString query throws TException
; design
I have started to hack this Need to make it work with new thrift API see prev comment Do you want to own this task If so I can just push my branch
; design
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator167
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator167
; general
Yes this is a good one LGTM
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator168
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator168
; general
Update migration guide alsoAside from that 1
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator169
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator169
; general
LLMTM  Looks Like Magic To ME dancer
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator170
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator170
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator177
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator177
; general
yes very good
; general
please backport to release21 branch
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator171
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator171
; general
Looks good If you think that it would be a good idea to create a script for changing the scalaVersion then create a ticket Im squarely on the fence
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator173
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator173
; general
apart from the nitpick LGTMcould you do the same for ThreadPoolBuilderconf and TypedActorMethodCallreturns
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator179
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator179
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator174
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator174
; general
PLS REBUILD ALL
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator180
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator180
; general
Is she a keeper
; general
I think so the design feels right i would like to take another look at the detailsMigration guide is also needed
; design
Yep check the details first Ill write migration guide once we agree this is what we wanna do
; general
Yes LGTM Well ship it with 22M1 then including possibly some of the lowhanging fruit I pointed out Would you please create tickets if you agree
; general
LGTM after some additional cleanup
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator196
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator196
; general
Alright cleanup done Want me to write the migration docs and then merge
; general
yup sounds good
; general
Migration docs added
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator209
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator209
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator175
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator175
; general
Very nice Im always pleasantly surprised by how neat those cluster tests are Good job
; general
Indeed And they were invaluable to find bugs in the new remoting
; general
fixed review comments
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator178
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator178
; general
activity every other year implies that Ill close this now
; general
If you want to run mvn install then you should check out the sources from github The 05 dist should be used asis But it is very old I suggest checking out the sources 06 is coming in 4 weeks
; general
Also please file issues to assemblacomspacesakka instead
; general
Ok mvn install fails tooFWIW I am on OS X Java 15019 and Maven 221Known issues BTW clean m2repository grows to 37M at the end of mvn scaladoc and mvn install
; general
The akkakernel and akkajavautil are build during mvn install Have you invoked mvn install from the rootYou need Java 6 to build it  mvn scaladoc fails for me as well Ill look into it Thank
; general
Updates1 mvn install goes through with Java 16 yayAnd therefore akka might want to use mavenenforcerplugin httpbitlyeMYG6 and enforce Java Version In OS X Maven has affinity for Java 15 unless JAVAHOME is set explicitly2 mvn scaladoc is successful after a successful mvn install because both the jars become subsequently available in local repo
; general
Ill look into the plugin Thanksmvn scaladoc do work for me as well Thanks for trying Akka out
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator150
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator150
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator149
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator149
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator166
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator166
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator161
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator161
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator165
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator165
; general
richdougherty you can merge this
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator162
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator162
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator153
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator153
; general
It doesnt pass the tests httpsjenkinsakkaio8498jobakkaprvalidator153console
; general
Correction it didnt compile
; general
Note  there is a small race condition possibility in the tests cases Sometimes if the machine is running really slowly the log message emitted by the logging system itself will be picked up by the tests ie after the before method runs but before the specsThe same race condition exists for the SLF4J tests
; general
viktorklang thats probably the test cases my build system isnt set up to let me compilerun it with SBT What command should I issue and from which directory to be able to buildrun just my code and test dependencies
; general
error localhomejenkinsakkaworkspaceakkaprvalidatorakkacontribsrcmainscalaakkacontribjulJulEventHandlerscala89 value getStackTraceDepth is not a member of sunmiscJavaLangAccesserror     val depth  accessgetStackTraceDepththrowableerror                        error localhomejenkinsakkaworkspaceakkaprvalidatorakkacontribsrcmainscalaakkacontribjulJulEventHandlerscala92 value getStackTraceElement is not a member of sunmiscJavaLangAccesserror       val frame  accessgetStackTraceElementthrowable i
; general
Interesting the error is actuallygetStackTraceDepth is not a member of sunmiscJavaLangAccessI suppose Ill have to find a solution that doesnt use sun
; design
to run tests type test in the sbt repl
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator154
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator154
; general
Still doesnt compile Please hold off pushing until tests to complete locally first
; general
ok this is what I expected its the Specifications vs AkkaSpecs thing I know how to fix it but I just need to get my dev environment workingI dont understand it but typing run within sbt seems to behave as expected but sbt run did notBugger sorry didnt mean to push that last one
; general
you shouldnt type run you should type test
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator155
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator155
; general
ok that fixes it sorry meant test in the last commentA big stacktrace is dumped out when we simulate the error If that causes problems I could look into it further and provide a loggingproperties file which will stop this It will involve passing a parameter to the jvm
; general
ok Ill make that change and also I realised that I wanted the LoggerAdapter as the log field in JavaLogging doh So making that change too Will probably push tomorrow
; general
viktorklang Im not really sure how to do this without the LBQ I need to be able to pick up the LogRecords at their final delivery point and this is the only way I can think to do itCompare it with the SLF4J spec which actually gathers the output from a ByteOutputStreamhttpsgithubcomakkaakkablobmasterakkaslf4jsrctestscalaakkaeventslf4jSlf4jEventHandlerSpecscala
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator156
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator156
; general
fommil move the adding of the handler into the class constructor and instead of putting into the queue do testActor  logrecord then in the test instead of pulling the queue use expectMsg
; design
OK that was trivial There is also no console output of the tests
; general
Cool Now did you try to change so that the LoggingAdapter creates the LogRecord and sends it to the EventStream wrapped in a LogEvent Debug
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator157
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator157
; general
I only cast a casual glance for today will look more into it tomorrow One thing is that we dont do author tags instead you should put your name into the docs for this feature hint hint
; general
OK many comments addressed viktorklang  Id like to hear your response to my note above
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator158
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator158
; general
Sorry still didnt get around to do a proper linebyline review but concerning the strategy JavaLoggingEventHandler is desirable and it is also inline with the modularity of the logging in Akka JavaLoggingAdapter will probably never be interesting for Akka proper but I think it makes sense in the contrib area since it does provide a way to abstract syncasync logging under the Akka faade might be useful to pull into some projects JavaLogging is so simple and straightforward that it does not pull its weight unification does not buy much here
; general
rkuhn indeed JavaLoggingEventHandler is the real meat of this contributionRegarding JavaLoggingAdapterJavaLogging these are only useful for unification purposes They are so small that I would never actually create an OSS project just to distribute them akkacontrib is perfect for them My workaround if JavaLogging is not accepted is to simply continue using the following trait I have in every projectscalatrait J2SELogging   transient lazy protected val log  loggingLoggergetLoggergetClassgetNamebut mentally noting that this exposes the jul Logger and not the Akka Logging API which really only matters when Exception logging
; design
Just talked to Patrik and while we agree that the JavaLoggingAdapter is not something we ever want to support officially because it is synchronous we have decided that it should be merged on a provisional basis imagine voice of Jack Bauer But before I can actually do that Ill have to ask you to sign the CLA see CONTRIBUTINGmd
; general
rkuhn what if I always do the logging in a Future using the system ExecutionContext making it asynchronous
; general
Wrapping blocking things in Futures is not a silver bullet and especially so for logging since Futures may be run in any order at some unspecified later time As I said it may make sense to use the JavaLoggingAdapter in certain specific scenarios its just that we dont want to support it officially with all the bells and whistles hence akkacontrib material Ill merge it today could you help me remember that by creating a ticket and it would also reduce the effort for backporting it to release21 if you could squash the commits and repush this branch mentioning the ticket number in the commit message Thanks
; general
Im doing the squashing and merging now and have created the ticket httpswwwassemblacomspacesakkatickets2805
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator160
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator160
; general
I run tests on scalable1 and this failed again so there is something else that is wrong
; general
the previous failure on scalable1 was because default await timeout 3 seconds was too short I have increased the within for the test
; general
PLS REBUILD ALL
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator163
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator163
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator197
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator197
; general
Great stuff Patrik
; general
pushed todays work
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator202
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator202
; general
Added some more stuff especially the interesting joinremove repeat testThis could be the first version of this test which could go into master and we can add tickets for more stuffFor example I would like that we add something that tests a large actor tree hierarchy creating and using many actorsThen we have all the throttling and drop messages part but that cant be done until we have reliable system messagesBy the way Im running this test periodically in moxie cluster
; design
great to hear unfortunately Ill have to defer scrutinizing it until later
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator207
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator207
; general
Added the test of many actors in tree structure alsoSquashed commits
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator218
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator218
; general
Im unable to understand each line at this point but it looks good nevertheless
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator242
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator242
; general
The last commit looks reasonable but I dont completely get it It looks like your change basically makes the heartbeat sender aware of a removed node a little earlier than before but why should the sender care
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator246
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator246
; general
Alright I have been running this with new remoting a few times on jenkinsakkaio and it failure rate is 50 so we should not merge it in now I dont have more time today to investigate the failures They are here httpsjenkinsakkaio8498jobakkamultinoderepeat2Apart from the test the commit contains fixes for 3 issues Avoid adding back members when downed in ClusterHeartbeatSender Avoid duplicate close of ClusterReadView Add back the publish of AddressTerminated when MemberDownedRemoved  it was lost in merge of publish on convergence
; general
Which ones are the failures If you find something fishy please send me Ill try to investigate
; general
look at build 111 and thereafterhttpsjenkinsakkaio8498jobakkamultinoderepeat2that job is weird it shows blue bullets even though it fails so you have to look at the log
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator271
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator271
; general
Merging Remove LargeClusterSpec since StressSpec can be used for that as well
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator199
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator199
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator200
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator200
; general
aside from style comments LGTM
; general
Cleaned up based on comments
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator203
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator203
; general
So this failure seems weird Ive created a ticket httpswwwassemblacomspacesakkatickets2801Jenkins has been running the multinode cluster tests on this branch every 15 minutes during the nigh 35 times without a single failure
; general
PLS REBUILD ALL
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator204
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator204
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator201
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator201
; general
I am overwhelmed by the interest and amazing feedback
; general
aside from the missing serialVersionUID LGTM
; general
Alright added a comment to set SerialVersionUID for 21 and 22
; general
Note that this PR targes release20
; general
Yeah FP sounds good FP to release21 as well
; general
yes Im currently debating with myself whether to put it into RC6
; general
If were having an RC6 I think it should go in Otehrwise I think it needs to go into 211
; general
The change looks good but I have one question If this whole dance is because null is not a valid message then why do we have that restriction
; general
bantonsson Read the description of the PR
; general
The restriction was documented since before I learned about akka and it never came up meaning nobody ever asked about it or wanted to have it changed In Scala pattern matches youll have to explicitly match it or have a wildcard match otherwise null will be unhandled anyway And I do have a hazy recollection of thinking along the lines of is this okay ah yes msg can never be null but I cannot remember where exactly that was Plus I think it is nice to not have the billion dollar mistake in our actor world The point is that if we want to change it then it should be done in a proper way with ticket and research and so on instead of as a shot from the hip in response to some other problem I do realize that this was not what you asked
; design
So the consensus is that TypedActors pay for nulls but no one else
; general
viktorklang Yes I did that and then I read some remoting code and the only limitation I found is that we explicitly disallow null as a message and Im asking why The value null can travel just fine over the wire if you let it
; general
bantonsson I think using null as a message is a bug the only reason it poses a problem for TypedActors is that they live in another dimension where Java code returns null at times
; general
rkuhn viktorklang Thanks I agree that sending null is not a good thingLGTM
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator208
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator208
; general
PLS REBUILD ALL
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator211
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator211
; general
PLS REBUILD ALL
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator213
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator213
; general
PLS REBUILD ALL
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator210
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator210
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator215
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator215
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator214
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator214
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator216
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator216
; general
1  thanksPlease sign the Typesafe CLA httpwwwtypesafecomcontributecla
; general
All set Thanks On Dec 17 2012 at 110 AM Patrik Nordwall notificationsgithubcom wrote  thanks Please sign the Typesafe CLA httpwwwtypesafecomcontributecla   Reply to this email directly or view it on GitHub
; general
verified CLA all good
; general
Updated after comments
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator217
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator217
; general
LGTM the reason for not being an implicit class is the import
; design
Yeah and you cant put it inside a trait doesnt work
; general
Great ThanksJonas BonrhttpscalablesolutionssehttpjonasbonercomhttpakkaiohttpletitcrashcomOn 28 Mar 2011 1604 hseeberger replyreplygithubcomwrote Could successfully build Tested by installing akkaactor into Felix OSGicontainer  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull78
; general
Thanks Heiko I updated to 101 on the wip290 branch yesterday Thanks for testing it Will be merged into master soonhttpsgithubcomjbonerakkacommit4548671ef7dd99da512c951f8df2bc0bfd18e7af
; general
Great thank youSent from my iPhoneOn 28032011 at 2213 pvlugterreplyreplygithubcom wrote Thanks Heiko I updated to 101 on the wip290 branch yesterday Thanks for testing it Will be merged into master soon  httpsgithubcomjbonerakkacommit4548671ef7dd99da512c951f8df2bc0bfd18e7af    Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull78issuecomment927833
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator182
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator182
; general
Needed an excuse to try out the new GitHub online patch tool
; design
shouldnt this be closed
; general
Yeah close it
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator184
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator184
; general
LGTM I think this might want to be backported could you open another PR against release21 Thanks
; general
BTW the jenkins failure was a spurious timeout
; general
Ah right I never even checked what master was on Ill open a pr againstrelease21On Fri Dec 7 2012 at 522 PM Roland Kuhn notificationsgithubcomwrote LGTM I think this might want to be backported could you open another PR against release21 Thanks  Reply to this email directly or view it on GitHubhttpsgithubcomakkaakkapull933issuecomment11135888 Raymond Roestenburgcode httpgithubcomRayRoestenburgblog httproestenburgagilesquadcomtwtr RayRoestenburgbook httpmanningcomroestenburg
; general
PR DoneOn Fri Dec 7 2012 at 522 PM Roland Kuhn notificationsgithubcomwrote LGTM I think this might want to be backported could you open another PR against release21 Thanks  Reply to this email directly or view it on GitHubhttpsgithubcomakkaakkapull933issuecomment11135888 Raymond Roestenburgcode httpgithubcomRayRoestenburgblog httproestenburgagilesquadcomtwtr RayRoestenburgbook httpmanningcomroestenburg
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator186
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator186
; general
I would like to see better commit messages
; general
merged manually after adding more verbose commit message
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator185
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator185
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator187
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator187
; general
merging manually in order to expand the commit log a little
; general
merged into release21
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator181
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator181
; general
same as master LGTM
; general
Thats a bit racy to check mailboxIsEmpty inside of the actor itself Imnot so keen on adding this patchOn Fri Jun 3 2011 at 743 AM chicofranchico replyreplygithubcomwrote Hello Hakkers We are contemplating changing our worker infrastructure to akka For that we have performed some tests and that required the possibility to check for emptiness of an actor mailbox Our use case currently requires the processing inside an actor to be performed only when its mailbox is empty Since checking for the mailbox size is expensive we thought this would be a nice addition to the use case I hope this makes sense and the changes are useful for everyone  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull81 Viktor KlangAkka Tech LeadTypesafe httpwwwtypesafecom  EnterpriseGrade Scala from theExpertsTwitter viktorklang
; design
Well the thing is that if I do check mailboxSize all the time wouldnt that also cause a race conditionIf instead of checking for emptiness using this patch we do on the size the performance is more than 10x slower than our implementation
; general
Yes checking the mailbox size also causes racesIf you need fast size you can always change the backing mailbox to aLinkedBlockingQueuenew ExecutorBasedEventDrivenDispatcher   override def createMailboxactorRef ActorRef AnyRef  mailboxType match    case UnboundedMailbox  new LinkedBlockingQueue withUnboundedMessageQueueSemantics with ExecutableMailbox    case   supercreateMailboxactorRef  On Sat Jun 4 2011 at 1249 AM chicofranchico replyreplygithubcomwrote Well the thing is that if I do check mailboxSize all the time would that also cause a race condition If instead of checking for emptiness using this patch we do on the size the performance is more than 10x slower than our implementation  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull81issuecomment1300987 Viktor KlangAkka Tech LeadTypesafe httpwwwtypesafecom  EnterpriseGrade Scala from theExpertsTwitter viktorklang
; design
I need to test that for performance Im using akka 20snapshot Could you tell me please what would be the exact code Im trying the following but it doesnt workaRefdispatcher  new PinnedDispatcheraRef   override def createMailboxactorRef ActorRef AnyRef  mailboxType match      case b UnboundedMailbox  new LinkedBlockingQueueMessageInvocation with UnboundedMessageQueueSemantics with ExecutableMailbox    case   supercreateMailboxactorRef  object creation impossible since method dispatcher in trait ExecutableMailbox of type  akkadispatchDispatcher is not defined
; design
Trynew PinnedDispatcheraRef   override def createMailboxactorRef ActorRef AnyRef  mailboxType match     case b UnboundedMailbox  new LinkedBlockingQueue MessageInvocation with UnboundedMessageQueueSemantics with ExecutableMailbox                def dispatcher  PinnedDispatcherthis     case   supercreateMailboxactorRef
; general
Weird error Never seen this popup beforePinnedDispatcher is not an enclosing class
; general
Oh its because youre creating an anon inner classdoval self  thisoverride def createMailbox      def dispatcher  self
; general
oh right Thanks a lot for the help Im gonna run some benchmarks and get back on thatI just still think that size has the same problems whatever the problem of isEmpty But isEmpty is much more efficient depending on the mailbox type used I think if size makes sense so should isEmpty And we have a use case for thatMy worry is only because if we need to use the event dispatcher with a thread pool sharing the queue then the ConcurrentLinkedQueue would make more sense right Or would I still be able to change the mailbox type without affecting performance for such a dispatcher Makes sense
; general
Size on LinkedBlockingQueue is an AtomicIntegerget onConcurrentLinkedQueue its a full iteration of the queue Viktor KlangAkka Tech LeadTypesafe httpwwwtypesafecom  EnterpriseGrade Scala from theExpertsTwitter viktorklang
; general
Hi Viktorso Im still making up a case for the isEmpty feature and maybe if you could consider the microbenchmark belowhttpsgithubcomchicofranchicoakkamicrobenchmarkIt tests the ReceiveTimeout feature that makes use of the mailbox size in the message invocation invoke in the actorWhile profiling the microbenchmark gets stuck in this method when using the receivetimeout featureprotectedakka def checkReceiveTimeout    cancelReceiveTimeout   if receiveTimeoutisDefined  dispatchermailboxSizethis  0  Only reschedule if desired and there are currently no more messages to be processed     futureTimeout  SomeSchedulerscheduleOncethis ReceiveTimeout receiveTimeoutget TimeUnitMILLISECONDS    By using the isEmpty feature and default configuration the performance increases by a whopping factor of 173 which is the same as when not using the receive timeout feature on the unpatched version ie without this commit Please accept this pull request we really need that extra performance and the flexibility to use any queue Thank you so much again for taking the time
; general
Hi again Ive made some changes in both the benchmark description and in the commit comments to become more clear what the problem is exactly I hope this helps
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator193
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator193
; general
Changed so that AddressTerminated is published when MemberRemoved also Added a comment about MemberRemoved and MemberDowned in ticket httpswwwassemblacomspacesakkasimpleplannerticket2788
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator192
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator192
; general
minnrofmembers LGTM memberUpFuture FutureCurrentClusterState would be good to have in the way your last comment suggests wouldnt call it onX if it returns a Future which obtains its value once X happens because it would sound a little weird to say onMemberUp onComplete blah
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator195
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator195
; general
Does any of this need to be mentioned in the migration guide
; general
Better to have too much in the guide than to little Saves us time
; general
Deprecation warnings are emitted by the compiler and the messages display how to migrate
; general
When I deprecated timerActive I mentioned it in the migration guidehttpdocakkaiodocsakkasnapshotprojectmigrationguide21x22xhtmlAPIchangestoFSMandTestFSMRef I guess we should decide whether or not we want to list all deprecations or whether we want to list none at all
; general
I view the deprecation warning as the migration guide
; general
PLS REBUILD ALL
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator206
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator206
; general
I am not sure whether it is a good idea to add sbteclipse to individual projects Maybe it is better to just add it to the global plugins project sbtplugins
; general
Sounds good  Ill close the request  Thanks Heiko
; general
Looking at the current plugins for Akka it looks like these are needed for the offline build But sbteclipse is just for Eclipse users therefore it should go into the individual users local global plugin projectBut as I said I am not sure Therefore I would like to hear other opinions
; design
I agree better to use global plugins for sbteclipse Similar with sbtidea
; general
He Brendanthanks for the great workA few question since Im not completely in touch of the exact semantics ofdurable mailboxes How often is something persisted to mongo Is that onevery puttake or can this be configured I can imagine that in somesituation message loss would be acceptable while in others it would not beI see that some asynchronous communication is going on But do you get theguarantee that if you return from a put message on mailbox that the newlyadded item is persisted so is made durable Or could it be the new mailsare pending somewhere and could get lost on system failureOn Tue Jul 12 2011 at 706 PM bwmcadams replyreplygithubcomwrote I neglected to do this before forgot that Wiki has been replaced with Sphinx This is documentation for the Durable Mailboxes page about how to use the new MongoDB Durable Mailboxes I test built Sphinx and everything renders correctly  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull86
; general
Im using the SAFE write semantics so the enqueue method will ensure that the commit is being persisted to MongoDB  I am not using fire and forget write at all as Im aware of the durability concernsThe MongoDB interface library is asynchronous but because I use SAFE semantics MongoDB will reply to me once it attempts to write the data  If the write succeeds the callback is invoked with RIGHT and I complete the future with a true value  If the write fails for any reason network down write timeout etc the callback is invoked with LEFT and I complete the future with an Exception which should signal to the layer above that the write failedThere are more durable semantics available with MongoDB writes which long term may be worth recommending recommending users run with journaling enabled and set JOURNALSAFE instead of safe which guarantees that mongoDB puts the write into the group commit log which guarantees crash recovery Running with Replica Sets and ensuring writes replicate out to a certain  of nodes
; general
On Tue Jul 12 2011 at 959 PM bwmcadams replyreplygithubcomwrote Im using the SAFE write semantics so the enqueue method will ensure that the commit is being persisted to MongoDB  I am not using fire and forget write at all as Im aware of the durability concernsIm not familiair with the SAFE write semantics Could you give a pointerto some documentation The MongoDB interface library is asynchronous but because I use SAFE semantics MongoDB will reply to me once it attempts to write the data  If the write succeeds the callback is invoked with RIGHT and I complete the future with a true value  If the write fails for any reason network down write timeout etc the callback is invoked with LEFT and I complete the future with an Exception which should signal to the layer above that the write failedBut could it be that the write completed but you do get an error Eg youget the timeout but also at that moment the write completes Probably notan issue since you can also get that in a normal situation you know if youreturned that it is durable but if it has become durable the returndoesnt need to have finished There are more durable semantics available with MongoDB writes which long term may be worth recommending  recommending users run with journaling enabled and set JOURNALSAFE instead of safe which guarantees that mongoDB puts the write into the group commit log which guarantees crash recovery  Running with Replica Sets and ensuring writes replicate out to a certain  of nodesOne of the things Im very interested in long term is how we are going todeal with all kinds ACID like subsystems inside an actor based applicationand reason about certain correctness properties Even reasoning about abusiness transaction spanning 2 different SQL databases can be extremelychallenging  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull86issuecomment1556770
; design
On Tue Jul 12 2011 at 349 PM pveentjer replyreplygithubcomwrote On Tue Jul 12 2011 at 959 PM bwmcadams  replyreplygithubcomwrote  Im using the SAFE write semantics so the enqueue method will ensure that  the commit is being persisted to MongoDB  I am not using fire and forget  write at all as Im aware of the durability concerns  Im not familiair with the SAFE write semantics Could you give a pointer to some documentationSAFE implies calling getLastError In CasbahMongoJavaHammersmith SAFEalso calls it with w 1 httpwwwmongodborgdisplayDOCSgetLastErrorCommandhttpwwwmongodborgdisplayDOCSgetLastErrorCommandEssentially allMongoDB writes are asynchronous regardless of client library  InvokinggetLastError will block until the last write on that connection succeeds With Hammersmith because of the fun of a nonblocking API you cannot callgetLastError out of band  Instead there is an implicit WriteConcern thatcan be set or explicitly passed to a write operation which says how tohandle the writeIf WriteConcern is set we write a combined packet to MongoDB that iswrite opgetLastError to ensure we invoke getLastError on the samewrite op In which case well wait around for the answer to getLastErrorbefore invoking the callback with the result of getLastError if you dontset a writeConcern your callback gets called immediatelyWriteConcern is just a wrapper around the values of getLastError   The MongoDB interface library is asynchronous but because I use SAFE  semantics MongoDB will reply to me once it attempts to write the data  If  the write succeeds the callback is invoked with RIGHT and I complete the  future with a true value  If the write fails for any reason network  down write timeout etc the callback is invoked with LEFT and I complete  the future with an Exception which should signal to the layer above that the  write failed  But could it be that the write completed but you do get an error Eg you get the timeout but also at that moment the write completes Probably not an issue since you can also get that in a normal situation you know if you returned that it is durable but if it has become durable the return doesnt need to have finishedIf w is set to  1 MongoDB will report any errors that occur in thewrite  HOWEVER  it is possible with the current code that timeoutscould be fickle  We should discuss how to better handle this  Id sayhonestly that Write Timeout should be entirely driven by WriteConcernswtimeout value but I dont think Akka allows blocking foreverAt the least I need to completeWithException if we timeout on the AkkafutureThoughts  There are more durable semantics available with MongoDB writes which long  term may be worth recommending    recommending users run with journaling enabled and set JOURNALSAFE  instead of safe which guarantees that mongoDB puts the write into the group  commit log which guarantees crash recovery   Running with Replica Sets and ensuring writes replicate out to a certain   of nodes  One of the things Im very interested in long term is how we are going to deal with all kinds ACID like subsystems inside an actor based application and reason about certain correctness properties Even reasoning about a business transaction spanning 2 different SQL databases can be extremely challengingThis is I think a problem all around all I can really guarantee is thatwe follow appropriate semantics within MongoDB itself  Any othertransactional type operations are beyond the scope of things that MongoDBdoesOne thing important to note  the dequeue semantic that is usedfindAndModify is atomic and guaranteed to be all or nothing  THat is tosay if we remove the document or modify it we guarantee we dont give it tosomeone else etc
; design
This is I think a problem all around all I can really guarantee is that we follow appropriate semantics within MongoDB itself  Any other transactional type operations are beyond the scope of things that MongoDB doesI have no problem with providing certain guarantees But what all thesenosql solutionsdo is to push concurrency control back from the database to the developerThe questionnow is how can I as developer deal with ACID problems that otherwise wouldhave beentaken care of at the cost of performancescalabilityflexibility etc One thing important to note  the dequeue semantic that is used findAndModify is atomic and guaranteed to be all or nothing  THat is to say if we remove the document or modify it we guarantee we dont give it to someone else etcVery cool I love atomic nature of some basic operations Makes it possibleto create higher level operations on top of them    Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull86issuecomment1557310
; general
I think this is a useful addition would you care to include a patch to akkadocs Also do you have signed a CLA for Scala or Akka
; general
I have signed a CLA for scala under my real name Christian KrauseWhat guidelines are there for akkadocs What file should I patch  generaleventhandlerrst
; general
Unfortunately Scala and Akka are different things still so please contact me at rolandkuhntypesafecom for the Akka CLAConcerning the docs yes you found the right file Just add one example and a short paragraph for letting people know that the extractor exists It might be best to open a new pull request afterwards because your addition collides with the only change to that functionality within months just done by Viktor
; general
I added two examples to generaleventhandlerrst I hope the format is ok if not please let me know
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator245
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator245
; general
I removed completely the Status trait
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator247
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator247
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator248
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator248
; general
Updated with fixes for reviews and fixed a threading bug in ThrottlerTransportAdapter
; general
LGETM good enough will properly review later
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator252
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator252
; general
Fixed in master credit given where credit is due
; general
Cool thx Viktor
; general
Youre most welcome
; general
I think this is interesting and a clean way of doing it Would it be possible to do it in a separate trait extending Actor instead of placing it in Actor
; design
You could separate it but it would add code youd have something like first the separate traitscalatrait ActorWithWhenBecoming extends Actor   def whenBecomingbehavior Receive Receiveand then in actor cell or wherever the behavior stack ends up a switch on actor typescalaprivate def wrapBecomingbehavior Receive Receive  actor match   case a ActorWithWhenBecoming  awhenBecomingbehavior  case   behaviordef pushBehaviorbehavior Receive Unit  behaviorStackpushwrapBecomingbehaviorIm not sure this wins us much it just adds source and bytecode Do you see an advantage
; design
Im not saying that it is a bad idea to place it in ActorTwo reasons why I ask1 Interesting to see if we miss something in Actor to enable this kind ofthing to be written in pure user code2 This could potentially be an optional addon placed in akkapattern tokeep Actor minimalisticAs I understand it from your answer it is not possible to do in user codeat the momentOn Tue May 22 2012 at 303 PM Havoc Pennington replyreplygithubcom wrote You could separate it but it would add code youd have something like first the separate trait scala trait ActorWithWhenBecoming extends Actor   def whenBecomingbehavior Receive Receive   and then in actor cell or wherever the behavior stack ends up a switch on actor type scala private def wrapBecomingbehavior Receive Receive  actor match   case a ActorWithWhenBecoming  awhenBecomingbehavior  case   behavior  def pushBehaviorbehavior Receive Unit  behaviorStackpushwrapBecomingbehavior  Im not sure this wins us much it just adds source and bytecode Do you see an advantage  Reply to this email directly or view it on GitHub httpsgithubcomakkaakkapull467issuecomment5846335 Patrik NordwallTypesafe httptypesafecom   The software stack for applications thatscaleTwitter patriknw
; design
Right you can do something like it in user code now but its messy1 you have to rename receive in some idiosyncratic way especially unpleasant in a library since other libs or apps may not use the same convention2 you cant keep your customizations after a become no way to hook in to become the only hook is to override receive3 people feel compelled to make receive final when doing this because overriding receive again would break the mixin but that keeps you from having more than one mixin at onceSo whenBecoming adds a hook let me modify any new behavior the actor gets and documents a chainup convention to support mixing in multiple modificationsI think the nicest thing here is that the mixin is completely transparent to the subtype doing the mixingin all people have to do is add with MyMixin and not make any other changes and the mixin will work its magic
; design
Thanks for clarification I like it
; general
Moved to httpsgithubcomakkaakkapull492  rebased with rename back to aroundReceive pending discussion at Viktors request
; general
good Im observing this
; general
Looks really cool guys I think the resulting impl would be way cleaner if the ExecutionContext would go in the Breaker constructor instead on every method signature
; general
We would probably want to have java api of this alsoWould this work    def onOpencallback Runnable Unit    withCircuitBreakerTbody CallableFutureT executor ExecutionContext FutureT    withSyncCircuitBreakerTbody CallableT T
; design
Ok for the suggested Java API am having a type inference compilation error thats not obvious to me  Addingscala  def withCircuitBreakerTbody CallableFutureT FutureT      withCircuitBreakerbodycall  Giveserror FprojectsakkaakkaactorsrcmainscalaakkapatternCircuitBreakerscala116 type mismatcherror  found    akkadispatchPromise  Terror  required akkadispatchFuture1in method withSyncCircuitBreaker where type 1in method withSyncCircuitBreaker  Terror       try Promisesuccessfulbody catch error       error one error founderror fileFprojectsakkaakkaactorcompilecompile Compilation failederror Total time 1 s completed May 20 2012 42348 PMI think the clue is in 1in method withSyncCircuitBreaker   will keep researchingFor referencescala  def withSyncCircuitBreakerTbody  T T      import CircuitBreakersyncExecutionContext     execute the body in callers thread    implicit val executor  syncExecutionContext    AwaitresultwithCircuitBreaker      try Promisesuccessfulbody catch       Failing here        case NonFatalt  Promisefailedt            DurationZero
; design
The pull request for the documentation of the durable mailboxes has been merged to master nowakkadocsmodulesdurablemailboxrstakkadocsmodulescodeakkadocsactormailboxDurableMailboxDocSpecscalaAdd description of how to use circuit breaker together with durable mailbox and add it to the example MyMessageQueue in DurableMailboxDocSpecscalaThanks
; general
Optimizing performance matters a lot but only for code where it matters to optimize performance and dont tell me it matters everywhere because it doesnt In all other areas we should optimize for developer speed and productivityIt is not black or white It is a balance
; general
On the Unsafe  is backing off to ARFU a good compromise or should I being using AR
; general
patriknw will start looking at the docs shortly havent forgotten about them  Want to wrap up the last few items viktoklang jboner On Unsafe vs ARFU vs AR is there a consensus beyond removing Unsafe
; general
Leave it as it is Ill take a stab at it when no one is looking
; general
Will need to squash this into a single commit very soonbe9bce8 has the changes of interest  I tried something a bit different than patriknw recommended with the documentation in the spirit of this being in patterns instead of confined to durable mailboxes  The proposal is adding a section to common next to Duration  I also included a fairly simple graphviz state transition diagram  If you guys agree this is a good direction I can essentially link to this section from the durable mailbox section as well as add the config specifics for the filebased durable mailbox  If not it should be straightforward to push this down to durable mailboxesTo generate the graphviz the graphviz dot application must be in the path I used D graphvizdot  location since I was running sphinxbuild manually windows FTL  I would need some assistance from someone with OSX to see whether any additional work needs done to the Makefile to enable graphvizI have one outstanding issue that Im aware of with the code and that is the use of withSyncCircuitBreaker with an asynchronous execution context causes a few tests to fail in the Closed state  Am still troubleshooting this one
; general
I can try the graphviz build later
; general
Obviously having some trouble with merging in master  clearly im doing something very wrong having to make the same merges over and over again  At this point Im worried about a clean merge of the pull into master  Will see if theres a good way to confirm that the merge would go cleanly by which I mean the changes in the branch apply and none of the files that i havent touched would change  Otherwise im thinking about moving the commits to a clean branchDocs changes are in 9244af0 5d836f0 de8c17d
; general
yes this mergerebase looks very strangeI dont know what you did but the general principle is to not rebase something that has been pushed to a remote branchStarting a new branch is a good idea
; general
Replaced with httpsgithubcomakkaakkapull493
; general
Good initiative and docsBut I for sure dont like Specs2
; general
Looks good 1
; general
I removed the branch so if you want to port this for 202 youll have to do it manually on release20 or gcp
; general
Viktor I think you may have merged too eagerly
; general
I apologize for my trust in your work
; general
now that I merged deployOn into master could you fix the hardcoded paths when you merge this in
; general
yes I will use deployOn
; general
rkuhn does the deployOn really solve akkaclusternodetojoin To me it looks like a specific thing for akkaactordeployment which are not used in those tests
; general
oh sorry deployOn is neither the right tool in this case nor is it necessary simply dont configure joining upfront but instead do it programmatically using    ClustersystemjointestConductorgetAddressFormaster
; general
ok will do
; general
Very nice Looking good
; general
Are you planning on porting all these tests now Or should we create tickets for each one of them so we can share the work
; general
Yes we can create child tickets to 1948I want us to review and agree on the overall formatstructure firstPatrik23 maj 2012 kl 1710 skrev Jonas Bonrreplyreplygithubcom Are you planning on porting all these tests now Or should we create tickets for each one of them so we can share the work   Reply to this email directly or view it on GitHub httpsgithubcomakkaakkapull470issuecomment5875456
; general
Good stuff 1
; general
Think it looks great so far 1
; general
Yep Very good Lets go with thisHow far out is the port management
; general
moved the barrier to after
; general
The test actor systems name should be fixed once httpwwwassemblacomspacesakkatickets2122 goes in final barrier would probably exclude certain tests eg node goes down what should it do so I think that one line should be explicit where needed
; design
oh crap thanks for catching this should also go into master
; general
How fitting Just in time for Jul christmastree
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator243
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator243
; general
This is not all places where akka is defined Why not change all of them
; general
without having looked at the places you allude to akka stays as denominator of the local transport so I would expect a few occurrences to stay unharmed
; general
Hm I havent seen the no protocol loaded error message after these changes in the cluster tests so I assume this is sufficient  and might be overeager Without looking deeper into the logic of the tests I cannot determine if the use of akka is valid
; general
ok it makes sense to keep akka for local but I noticed it herehttpsgithubcomakkaakkablobmasterakkaremotesrcmainresourcesreferenceconfL41httpsgithubcomakkaakkablobmasterakkadocsrstscalaremotingrsthttpsgithubcomakkaakkablobmasterakkasamplesakkasampleclustersrcmainresourcesapplicationconfand thats only examples I think a manually judged search and replace is needed
; general
Yes we had that debate once before with Roland therefore the period
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator244
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator244
; general
Conclusion merge this in since it fixes test failures and create a ticket for making sure that the rest is also dealt with eg Patriks examples
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator239
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator239
; general
Hey KjellI saw that there hadnt been any news on this since last time Id really like to get this excellent piece of work into master can you verify that it works with the latest master before I merge it inThanks
; general
Hi VictorI just verified that it still works with the latest master by merging in the latest master into my repository
; general
AwesomeThanks a lot for this its looking sharp
; general
PLS REBUILD ALL
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator238
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator238
; general
ah we had not done that on master great 1
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator236
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator236
; general
PLS REBUILD ALL
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator237
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator237
; general
0MQ rocks Ive added some comments to the diffs please dont hesitate to ask if theres something I can clarify or explainCheers
; general
Cool thanks for the comments  I appreciate your feedback Ill go through your comments and push a new version tonight
; general
Great looking forward to rereviewing
; general
By the way do you like reviewing patches that incrementally change the code based on your review or should I squash my changes to the original patch I prefer the former one
; general
Just create a new pull request prefer to see all new changes in one diff makes it easier to seeThanks
; general
Sorry for the delay in the review Ill take a look at everything first thing in the morning
; general
Viktor feel free to rereview the changes Ive made based on your comments Thanks
; general
Just commented latest version one threadsafetyissue and some suggestions then all done
; general
Alright I think that the issue with the socketClosed is now fixed though I didnt fix it in the way you suggested
; general
In the latest diff I can see that its still not threadsafeTbh I think its easier and threadsafe to just check selfisShutdown
; general
I dont see how using selfisShutdown in select would result into correct behaviour Can you explain a bit
; general
The idea is to not reschedule the select if the ConnectionActor is shut down right
; general
Yeah youre right Pushed a new patch
; general
Here is what ZeroMQ has to say about the thread safety of ZeroMQ socketsMQ sockets are not thread safe Applications MUST NOT use a socket from multiple threads except after migrating a socket from one thread to another with a full fence memory barrier
; general
Crap I wrongly assumed that the Socket would be safe since the Context is
; general
In the light of this new information it might be safest to drop the entire selectTask idea and just keep the socket local to the Connection Actor and then after every inbound message do the receive and then use a receiveTimeout for the actor essentially becomes the polling interval and on ReceiveTimeout do a receive of 0MQ bytes
; design
And what would this construct look like approximately Inbound message  a message received by the actor
; general
Some clarification on creating sockets0MQ sockets are not thread safe Applications MAY create a socket in one thread with zmqsocket and then pass it to a newly created thread as part of thread initialization for example via a structure passed as an argument to pthreadcreate Applications MUST NOT otherwise use a socket from multiple threads except after migrating a socket from one thread to another with a full fence memory barrier
; general
Alright heres a suggestion that might work note that I havent tried to compile ithttpsgistgithubcom1295252
; general
Did it work My assumption was that recv0 means read without blocking
; general
I took a glance at the code and it looked good to me Ill resume working on that tomorrow morning
; general
Wicked cant wait to get it into 13
; general
Alright the code is starting to look quite concise
; general
Great Looks good now
; general
Hey Karim did that help Let me know if I can assist in some wayThanks for your hard work
; general
Yeah thanks Ill push a revision of the spec shortly
; general
Okay I think there is now some more sense to the test case
; general
Viktor any news on this
; general
Oh sorry Ive been busy preparing a training Youve signed CLA and everythings green
; general
CLA signed and looks green to me No more yoyo tests since latest commit
; general
Great Ill merge it into 13 ASAP
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator232
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator232
; general
yeah sorry me too
; general
and this change should be backported to 20 and 21 as you stated
; general
There seems to be a conflict on 21 with something about timers being cancelled that hasnt been backported what about that
; general
Is there no use case for knowing current data as well as next data in onTerminationI think onTransition and onTermination has some similarities and in onTransition you have access to current state and next stateMight not be important so LGTM
; general
hmm just checked it was httpsgithubcomakkaakkapull915 ticket 2689 I had not thought to backport it because it does not look superurgent but for all practical purposes it should be binary compatible and it does fix something nothing catastrophic for sure so why not Lets add it and say what MIMA says in case it complains rip out that one new method which is internal API anyway
; design
I backported that as well some surgery required
; general
Thanks Patrik for demystifying the test heres a nonwasteful reimpl will be backported to 21 as well
; general
PLS REBUILD ALL
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator229
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator229
; general
I think it is all good quality improvements and minimizing published api is great Explicit return types in api is also great as we all knowWhat I think we should also do is to take a closer look at the traits that we expose to be extended by user code Pure interface trait is no problem I guess we should be careful when we have some implementation in the traits Im not sure exactly what we should prepare for in the traits but Im raising the question Minimizing the number of traits that can be extended would be goodHere is a few ActorLogging Actor  should we consider using abstract base class ActorRefFactory  should we support extension of this and related   various ActorRef   ActorRefProvider   ActorContext   TypedActorFactory ScalaActorSelection DeployScope SupervisorStrategyLowPriorityImplicits FSM LoggingFSM IterateeRef Stash Listeners Router
; design
Great thanks Patrik What about the FIXMEs I put in there that well need to take care off before merging in
; general
If we make Actor an abstract base class we will break literally every user code base that exists
; design
Really impressive diff Great job So many great cleanups Code is now in much better shape Thanks What makes me a little worried is that there are also massive changes in behavioralgos Do we have solid test cases for all of these changes
; general
Great effort Lots of good improvements
; general
allinall the greatest example of following the boyscout rule Ive seen Great Work
; general
I agree Epic
; general
Thanks guys appreciate the kind words
; general
Alright merging this in now we can always adjust the changes after the fact
; general
Looks great I think
; general
Hmm looks like you suggest users to write a general purpose ExternalAddressExt Why dont we provide it in akka and reduce the amount of documentation needed This is probably something I need to consider in the durable mailbox and deamon msg pull requests right now Lets talk about it today
; design
One reason why no general and simple solution is included is because we dont know enough about the details of clustered refs yet But I agree that we should fix this ASAP
; design
Looks good merge
; general
not yet merging because of open points for discussion
; general
also on release20
; general
The ByteStringIterator is not consistent with the behaviour of other iteratorsWelcome to Scala version 292 Java HotSpotTM 64Bit Server VM Java 16031Type in expressions to have them evaluatedType help for more informationscala import akkautilByteStringimport akkautilByteStringscala val bs  ByteStringHello Worldbs akkautilByteString  ByteString72 101 108 108 111 32 87 111 114 108 100scala val bsit  bsiteratorbsit akkautilByteIterator  nonempty iteratorscala bsittake2toByteStringres0 akkautilByteString  ByteString72 101scala bsittake2toByteStringres1 akkautilByteString  ByteStringscala val list  List12345list ListInt  List1 2 3 4 5scala val listit  listiteratorlistit IteratorInt  nonempty iteratorscala listittake2toListres2 ListInt  List1 2scala listittake2toListres3 ListInt  List3 4
; general
Some of this applies to a previous pull request which I missed commenting onIs there a reason for exposing CompactByteString and ContByteString as return types of the public api I had placed ByteString1 and ByteStrings within the ByteString object as the actual implementation being used shouldnt be a concern to the user just like users shouldnt need to deal with Map1 Map2 etc A user should never be using the CompactByteString object as the ByteString object should be creating compact ByteStrings Its fine for the actual implementations to return more precise types but the abstract ByteString class should just be returning ByteString A contrived example of where this might create problemsvar bs  ByteStringhellocompactbs  ByteStringworld  fails to compileorByteStringhellocompact  ByteStringworld    also failsNot to mention it can make later changes more sensitive to binary compatibility problemsPreviously a user never had to be aware of the different implementations If a user wanted to have a compacted ByteString a call to compact would either return a compacted ByteString or return itself unchanged if it was already compacted It wasnt even worth having an isCompact methodIt all seems to clutter the user api without adding any benefitAll of your other changes seem great so far though I love the work you have put into all of this
; design
derekjw  wrote The ByteStringIterator is not consistent with the behaviour of other iteratorsSorry but I have to disagree  true ByteStringiterator behaves differently from Listiterator However Im not sure all Scala iterators behave like that They certainly dont have to as the Scala documentation for Iteratortake and several other iterator operations states Reuse After calling this method one should discard the iterator it was called on and use only the iterator that was returned Using the old iterator is undefined subject to change and may result in changes to the new iterator as wellSo the Iterator does not have to be immutable under take drop etc like the Listiterator For ByteStringiterator I chose to modify the Iterator and return this to avoid excessive object creation in applications that will frequently drop single Bytes or similar So in the case of ByteString the state of the old Iterator is intentionally well defined after these kinds of operations and they advertise this by having the return type thistype I think this behaviour is compatible with the above rules for generic Iterators stating that you can basically do whatever is best for your specific Iterator
; design
Thats why I made certain not to actually call ByteIterators behaviour wrong since there isnt a clearly defined correct behaviour for iterators Im not too concerned about it either way I just wanted to point out that this behaviour was different then any I had seen so far so was surprising I see the reason for it now thanks
; general
derekjw wrote Is there a reason for exposing CompactByteString and ContByteString as return types of the public api I had placed ByteString1 and ByteStrings within the ByteString object as the actual implementation being used shouldnt be a concern to the user just like users shouldnt need to deal with Map1 Map2 etc A user should never be using the CompactByteString object as the ByteString object should be creating compact ByteStrings Its fine for the actual I think the user in some cases does have to know  or to specify exactly whether he requires a compact or contiguous ByteString at some point You are right in many cases the user will not care However in a performance critical application dealing with high data volumes the cost of compacting might be a good tradeoff compared to the runtime cost incurred by operating on a chunked ByteString possibly repeatedly especially for randomaccess scenarios Im my application I do care in some cases This is also where isCompact and isContiguous come in  usually you do not care But when you do performance optimization you might want to know if your data is chunked or not and want to check if compact will be an O1 or an On operation at some stageAnother unrelated reason for my proposal of CompactByteString was that I wanted a serializeable ByteString var bs  ByteStringhellocompact bs  ByteStringworld  fails to compile or ByteStringhellocompact  ByteStringworld    also failsHm true However is that really so bad As compact clearly returns a CompactByteString not a ByteString the user should not be surprised by that I would argue that if the user explicitly requested a compact ByteString like in these examples then its actually a good thing that something that will result in a noncompact one will fail to compile
; design
derekjw wrote Thats why I made certain not to actually call ByteIterators behaviour wrong since there isnt a clearly defined correct behaviour for iterators Im not too concerned about it either wayAh ok  thanks I was worried I might have to change it all again And by the way thanks for ByteString in general  it was exactly what I had been looking for for a long long time
; general
I think I can live with having the the more specific return types The example problems I brought up are the same problems I have to deal with when using Some None or Nil so Im used to those situationsDont worry too much about my critical tone while reviewing I just want to make sure you have justification for decisions like thatI also had been looking for something like ByteString for a long time but wasnt happy with any similar implementations I hope that after its really been put through its paces that it might be considered for inclusion into the standard library Its disappointing that the only space efficient byte storage in the standard library are mutable collections Improvements like the ones youve added help a lot thanks
; general
Hi Derek Dont worry too much about my critical tone while reviewing I just want to make sure you have justification for decisions like thatthats fine  I did ask for a review after all Dont worry  Im a scientist Im used to honest criticism Its important Id do the same in your place  ByteString is a fundamental class after all and these are big changes Just dont mind me defending them with equal fervour Im glad to get feedback  we need to get this right I also had been looking for something like ByteString for a long time but wasnt happy with any similar implementations I hope that after its really been put through its paces that it might be considered for inclusion into the standard library Its disappointing that the only space efficient byte storage in the standard library are mutable collectionsSpace efficient and performant  youre so right Having something like ByteString in the standard library would be really niceIf youre interested I have a highperformance generic collection optimized for primitive types it uses specialization in the right places to achieve nativearraylike performance It doesnt support chunking and O1 slicing though its basically a generic version of CompactByteString  ByteArrayIterator actually I derived ByteArrayIterator from my specialized generic ArrayIterator
; design
Stopped commenting on missing return types after a while Ive done a lot of work trying to rectify things like that on my binary compatibility branchOverall very nice code qualitymost common problems Lack of return types Seemingly large public API make as much private as possbile to allow for flexibility wo breaking binary compat using null return values to indicate need to implement feels wrong Make it an abstract class instead and avoid implementing it or throw an exception never return null Very cool stuff
; design
Hey Victorthanks for your comments  Im on it Give me a few day bit busy atm
; general
Hey Victora quick question concerning the lack of return types Do you want explicit return types only for the public classes or also for all methods of the internal classes like ByteStringByteString1 I just ask because the latter didnt have explicit return types for many methods before eitherCheersOliver
; design
Check my branch at httpsgithubcomakkaakkatreewip2006binarycompatE2889AReturn types go on all methods from now on it has a number of benefits1 Documentation for devs  less maintenance costs2 No risk of accidental change of return type  less maintenant costs3 No risk of reflective types generated  higher performance4 Less work for the typer  faster compilation timesIts perfectly fine to use type inference within a method though
; general
Return types go on all methods from now on it has a number of benefitsJust for clarity  that also goes for methods implementing or overriding a method whose return type has already been defined in a parent class  trait I guess yes to prevent accidential specialization of the return type
; design
Yes precisely because of that reason It also avoids accidental regressions where the specialized return type is accidentally removedI also try to enforce specifying override even for overriding abstract membersmethods since you get a compiler error if you remove that membermethod on the parent so you can clean up properly afterwards
; general
Hey VictorI implemented your comments fixed a few design flaws and bugs and extendedthe tests quite a bit Lack of return typesIts fixed now Seemingly large public APIThe public API is reduced now to ByteString CompactByteString ByteStringBuilder and ByteIterator I think we do need all of theseThe ByteString implementations are inside object ByteString as before I did the same for the ByteIterator implementations now Is that good enough or does all that have to become privateakka  using null return values to indicate need to implement feels wrongNo its ugly as hell  I only did it because it had to give an implementation to override the return value as these methods were already implemented a supertype Youre right though  throwing an exception looks a lot cleaner I changed it accordingly Anyhow since all affected classes are sealed it is guaranteed these dummy implementations will never be executed which is why I made the comments on them normal not ScalaDoc  theyre only relevant to Akka hackersCould you give this another review Im not planning any further major changes except maybe a few small performance tweaks and an override for ByteStringgrouped Or should I do that firstI propose that once as youre happy with the overall state of the code Ill close this review request and open a proper pull request That sound good
; design
Hi OscarIll review this ASAP terribly swamped right now
; general
Alright Oscar whats the status here
; general
Alright Oscar whats the status hereSorry Victor  havent forgotten Im abroad on a conference several actually Im working on it but can spare only limited time so itll take a few more days Hope thats ok When would you like to merge it latest
; general
No worries man Im mainly just making sure that you dont think Im neglecting youId really love to have it in Akka 21M1 which is due about a week10 days after Scala 210M4Have fun at the conferencesCheers
; general
As you have probably concluded from my comments I didnt find much to pick on  Great work
; general
Looking great now excellent workNow lal thats preventing me from merging this in is the lack of docs could you add rst docs in IO and ping me when thats ready so I can merge fingers itching
; general
Hi Victor Now lal thats preventing me from merging this in is the lack of docs could you add rst docsok I extended the ByteString docs in IO Scala mainly based on the description of this request It that roughly what you wantedIf youre happy with the docs please dont merge just yet  theres one or two things in the code I still might change
; general
Ok lemme know when you think its ready to go in and Ill review then
; general
Hey Victor Ok lemme know when you think its ready to go in and Ill review thenok with the last commit its ready nowI still have some ideas for future performance improvements but they will not touch the public API and still have to mature in my head for a while anyway So from my side ready for merge
; design
After the rst docs is changed to pull in the code this is good to go ping me as soon as its done and Ill merge it inCheers
; general
Hey Victoris the documentation OK like this
; general
Yes looks goodWill merge it in ASAP just hang on
; general
Will merge it in ASAP just hang on Thanks No hurries on my account  Im glad its ok and done
; general
Crap and just as I am supposed to merge it in its no longer automatically mergeableCould you merge with the current master and repush so I can merge it promise to do it fast this time  Thanks
; general
Im on it
; general
Could you merge with the current master and repush so I can merge it promise to do it fast this time  Ok its mergedSorry I overlooked your refactor commit 94e71b7a that why I didnt realize things werent up to date
; general
Heyhave youve signed the CLAwwwtypesafecomcontributeclaCheers
; general
Hello Viktor I just signed the CLA a couple of seconds agoRegardsMirko
; general
Waiting for better times
; general
WDYM I have fixed the issues people had I have not received a GO from anyone If you like the patch merge it else delete it Im fine with either
; general
Looks good to me merge and close ticket
; general
Cool Thanks I thought it was you that did the merging Eg was the gate keeper
; general
I just delegated it to you like a boss
; general
rkuhn should we backport to 205 as well
; general
hmm that ticket is closed already and it is on the 21x milestone something does not add up
; general
Yes according to your instructions httpsgithubcomakkaakkapull953
; general
What I meant was that the ticket was closed before all of its pull requests were merged or closed which can be confusing when reviewing the github stateAnd Im very much missing links from pull requests to tickets its a bit of a hassle to click through a bunch of slow assembla pages each time dont know whether we want to do it with greasemonkey or otherwise
; general
Since there was no merge conflict there is really nothing to review The only reason for these PRs is for Kittehaction
; general
Ideally a ticket should wrap the whole feature development cycle ie it exists before you start working and it is closed when everything relating to the ticket is done this way we have one authoritative source for what is ongoing what is planned and what is finished Ill send a mail to akkadev so we can discuss this at a more appropriate place
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator227
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator227
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator226
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator226
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator241
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator241
; general
Is this sufficient for OSGi support Do we not need to do something for the class loading in DynamicAccess
; design
It is a first step See above Perhaps once we have these initial OSGi headers sorted we can add an akkaosgi module which does the right thing in an OSGi environment eg providing an easy to easy Activator implementation andor a Blueprint namespace handler to set up the system
; design
OK So it is useful asis but can be improved
; general
Yeah I think so  I managed to get the Pi calculation sample deployed in KarafServiceMix with these bundles in their current form
; general
One thing that might be missing cannot check right now because traveling Are the published artifacts already bundles If not lets switch to sbtosgi 030 still snapshot but release can be puslished anytime which takes care of that
; general
No theyre not  I didnt figure out how to get those generated by default when using sbt package so for now you have to explicitly run sbt osgibundle to get these generated  I tried the solution you suggested in httpstackoverflowcomquestions10210992howtousesbtosgitogenerateosgibundleaspartofsbtpublishtask but that did not seem to work for me probably because of my limited understanding of how sbt actually works
; design
OK how should we proceed from hereI suggest the following gertv updates this pull request to work with the latest master and reflect all the issues discussed here except for the last one publishing artifacts Then the Akka team merges this pull request After that I create a new pull request adding bundle publishingWDTY
; general
I think the best thing is to retrofit it onto my httpsgithubcomakkaakkapull456 since Ive removedmoved a lot of the embedded libraries
; general
I think all remarks have already been addressed in my previous commits and I just added a commit to ensure the pull request applies to akkamaster again  If you guys prefer to handle httpsgithubcomakkaakkapull456 first Ill keep an eye on that pull request and update this one as soon as it gets closedcommitted
; general
That sounds like an excellent planWould also be good with a small writeup for the docs so that people know what to expect from the OSGi support
; general
Lets consider this level of OSGi support experimental or firststep and wait with documentation until we know that we can really use Akka under OSGiOne more thing to mention Viktor said that the config library will no longer be included in the JAR in the future Interestingly I added OSGi support to config today and Havoc already published a 040SNAPSHOT version In order for this project to work Akka must depend on 040 or use a range for the ivy dependency but I would rather not do that
; general
Alright When is 040 scheduled
; general
My mistake 040 is already out there It has to be 041 with OSGi support I have asked Havoc to release it ASAP
; general
Excellent work  Looking forward to this
; general
Im looking forward to this too Heiko are you planning to work on some blueprint spec for an ActorSystem service or something like that Would be great
; general
Updated the pull request to be in sync with latest changes on akkamaster again
; general
I wonder if remoteactors can work in OSGi after u construct proper Manifest since after deserialization akka system needs to find proper ClassLoader that contains definition of messages and actors from my experiments I observe two options1 Providing to AkkaSystem ClassLoader that is capable of resolving classes needed during deserialization but then for some reason I couldnt use default configurations provided by akka2 Providing definition of message and actors as OSGi Fragment with akka as a host and then akka default configuration could be resolved as well as classes during deserialization only obstacle is limitation for developers since Fragments cannot have activator and its own classloaderWhat do You think about it Do You have some other experience that you are willing to share
; design
elyast So far I dont have any relevant experience but both options make sense to me
; general
elyast  I havent tried using akkaremote in OSGi yet but I did manage to get some basic examples working  in order to get around the problem you mention in 1 I explicitly created the reference config with the classloader for the ActorSystem class ie the akkaactor bundle and then used my own bundles classloader for everything else  I think this should work for use case as well probablySomething like    val reference  ConfigFactorydefaultReferenceclassOfActorSystemgetClassLoader    val config  ConfigFactoryloadgetClassgetClassLoaderwithFallbackreference    val system  ActorSystemmysystem config getClassgetClassLoader
; design
That sounds goodI will try that one so far I am creating test suite using tychosurefire published herehttpsgithubcomelyastorbitthe interesting test is located underhttpsgithubcomelyastorbitblobmastersystemtestssrctestscalaorgelyastorbitsystemtestsscalaAkkaTestscalaI dont really like OSGi fragment since they are very limited so thatwould solve my issues with passing whole default referencemy utlimate goal is to create P2 repository so u can be able todevelop OSGi modules on top of popular scala frameworks using PDEenvironmentBest regardsLukasz Jastrzebski2012525 Gert Vanthienenreplyreplygithubcom elyast  I havent tried using akkaremote in OSGi yet but I did manage to get some basic examples working  in order to get around the problem you mention in 1 I explicitly created the reference config with the classloader for the ActorSystem class ie the akkaactor bundle and then used my own bundles classloader for everything else  I think this should work for use case as well probably Something like  val reference  ConfigFactorydefaultReferenceclassOfActorSystemgetClassLoader  val config  ConfigFactoryloadgetClassgetClassLoaderwithFallbackreference  val system  ActorSystemmysystem config getClassgetClassLoader  Reply to this email directly or view it on GitHub httpsgithubcomakkaakkapull460issuecomment5940184 Pozdrawiamukasz Jastrzbski
; design
Hi thereWhen the akka project is osgified is there any idea to publish it into an p2 repository For example with pde4sbthttpsbitbucketorgjmhoferpde4sbtoverview which iscurrently not uptodateThe reason for this is that Eclipse RCP applications that are build with tycho coulduse this repository to easily use akkacheersMuki Seiler
; general
Akka 21 will be published to Maven Central
; general
Hi Gert could you sign the CLA so I can merge this into masterwwwtypesafecomcontributeclaThanks
; general
viktorklang  done
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator223
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator223
; general
yes nice cleanup LGTM
; general
LGTM but this is api change and should be mentioned in migration guide
; design
Right will add
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator222
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator222
; general
Should this go into release21
; general
yes I think it should
; general
Ok Ill make it happen
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator225
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator225
; general
Ill backport to 21
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator224
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator224
; general
Im assuming we dont backport this since its not going to be backwards compatible
; general
1 after the fact
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator219
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator219
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator221
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator221
; general
LGTM after comments
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator231
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator231
; general
I like it1
; general
I havent had the time to completely review this If it can wait one more day then I will look into this tomorrow
; general
This is not nearly as urgent as stabilizing master dont worry about it Drew
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator220
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator220
; general
If everyones OK with this Ill backport this to release21
; general
1 after changes according to discussion
; general
You can merge this
; general
No build kitteh
; general
hmmm the build kitteh hasnt run in 5h Sounds like a problem to me
; general
PLS REBUILD ALL
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator268
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator268
; general
I tried this patch in the stress test branch locally and it was success That is a good start and I would like to do a proper rebase and continue running the stress test on the build server Please merge
; general
Very nice PeterSo whats the semantics only the online html gets the analytics and not any offline docs
; general
Yeah Two versions of the html docs are created  the online version that gets pushed to the server includes the analytics the version bundled in the dist doesnt
; general
Interesting idea but I feel like its conflating the modelThere has to be a better solution
; general
What do you mean when you say conflating the modelI thought of other ideas for example around the behavior stack you could have a become variant that combines your new behavior orElse the previous stack top Questions about that include   probably need to support new orElse old and old orElse new so two modes   when does the mixin trait call the become variant in the trait body might work   what to call the become variant and the two modesI think it could work but I havent tried it It will be more than the one line of code for aroundReceive but not terrible
; general
Though in both the aroundReceive patch and this become variant idea it sucks that become will lose the mixin behavior I think it would be much more common for the intent to be to keep it more like how the autoReceiveMessage messages work they are before the behavior stack So perhaps it could be more like a preReceive orElse behaviorStack orElse postReceive where preReceive and postReceive by default do nothing at all
; general
But the options arent that good1 make preREceive and postReceive methods that take a message and return what which sort of mixes styles between PFs and methods2 Use PFs all the way which will be costly since the number of allocations and the level of indirection will increase which is bad for performanceWould an ability to apply the behaviorStack until a match is found solve parts of the problem
; general
1 for some builtin solution for this  I have a custom StackableActor trait that does something similar but then all actors must mix that in in order to support stacking of receives transparently  I suspect others have solved this in a similar way
; design
You made me think of yet another idea what if preReceive and postReceive returned an OptionPF None by default Then whenever something is added to the behavior stack chain it with preReceive  postReceive only if they return Somepf That way there is no overhead at all well some tiny onetime overhead in become but thats it if you havent mixed anything in and using become does not lose the mixin behavior since each new behavior gets wrapped in prepostWhat I mean is something likescala    def becomebehavior ActorReceive discardOld Boolean  true Unit        if discardOld unbecome       could microoptimize this a bit more      val chain  preReceivetoSeq  Seqbehavior  postReceivetoSeq      actorpushBehaviorchain reduce   orElse      chain reduce   orElse   would evaluate to simply behavior if the prepost receive PFs are None so the permessage overhead would be completely unchanged from before unless you use a mixinA mixins implementation of preReceive  postReceive would need to chain up to get the implementations from other mixinsI think something like applying behaviorStack until a match is found could work but the trick is that sometimes you want to replace an item in the stack as with current become So it seems like youd need to track for each item in the stack whether it should be chained to with orElse or not  and then traverse the whole stack on each messageNot sure
; design
Thats an interesting proposal what does the Java API look like
; design
One consideration is that in Java you can only have one mixin because theres no multiple inheritance so we just have a single linear chain of superclasses if that matters It may make this whole concept much less useful in Java than in ScalaIt looks like the way become works now in Java is to use Procedure but Procedure has no isDefinedAt so cant be used with partial function chaining Similarly UntypedActoronReceive has no way to not handle a message other than directly calling unhandled to throw an unhandled exception This would mean that no postReceive is ever called in Java right now I guess And the whole docs section I was patching in this pull doesnt apply to JavaWe could add a japi type that implements PartialFunction perhaps it would have an abstract isDefinedAt and apply could even unfinal the override of receive in UntypedActor and people could directly implement receive rather than onReceive if they are willing to code an isDefinedAtThen preReceive  postReceive could be overridden directly  theres a japiOption already and youd use the new japiPartialFunction thing Sure itd be a little clunky but outside of abstract base classes that want to handle messages you would never touch itNot sure would have to play around with it in real code and see what it looked like probably
; design
Above patches illustrate the newer approach I can rebase and squash if desired
; general
Over lunch I thought of a hybrid idea between aroundReceive and preReceivepostReceive which I like more than eitherscala    protected def mapBehaviorbehavior Receive Receivevs aroundReceive mapBehavior is better because it persists across become it wraps the current behavior not just the default behaviorvs preReceive and postReceive mapBehavior lets you customize how you invoke the behavior For example you could transform messages in some way before passing them along or you could call the behavior multiple times or whatever Also mapBehavior is simpler for people to implement supermapBehaviorbehavior orElse handler rather than SomesuperpostReceivefoldRighthandler orElse Heres the code squashed vs master httpsgistgithubcom2727054Ill also push the unsquashed commit in a minuteI left the Java API using onPreReceiveonPostReceive for now because to do mapBehavior in Java without creating an extra indirection by default will require the conversion between japiPartialProcedure and scalaPartialFunction to avoid noop nesting ie we want pfasJavaasScala eq pf I think thats probably possible Ill try to code it if we like this approach but let me know
; design
I moved a rebasedsquashed version over to httpsgithubcomakkaakkapull467 so Ill close this onewasnt sure github would do something sane if I pushed a nonfastforward hereRoland if you and Viktor agree on a name Im happy to searchandreplace  Im not 100 happy with any of the names so far but I think they are all at least OKThe Java API patch on httpsgithubcomakkaakkapull467 may need some work or maybe you dont even want to do it let me know your thoughts over there
; design
Hi HavocId really like your input on what Ive done for httpsgithubcomakkaakkapull456Ive essentially pulled out the behaviorStack out of Actor and placed in ActorCell for easier binary compat in the future
; design
behaviorStack seems to logically go with ActorCell to me it looks good It sharpens up the line where application code is in Actor and akka implementation is in ActorCell It was weird before that the stack was in Actor but become was in the cell
; design
Thanks Havoc credit goes to my team for suggesting this excellent refactor
; general
Also nicely solves the issue of using local vars to create the receive
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator262
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator262
; general
Can you describe a bit more about the problemIs it because RemoteActorRefProvider is created via reflection from the akkaactor bundleIf that is the problem what about other things that are created in the same way such as eventhandlers mailboxtype serializers extensions
; general
hello Patrick Thanks for your interestYou described exactly what Im thinking the akkaactor bundle does not import any akka package thus it may not import other ActorRefProviders I didnt check other things but it should be possible to let every thing be loaded importing optionally akka No ticket had been created until today only a discussion on httpsgroupsgooglecomforumfromgroupssearchinakkadevosgiakkadevonGIJXI3u3A3ufd4G97HEYJ New ticket 2864 tested with akka210
; design
Im not an OSGi guru will marking akka optionally imported be resolved for each requested class name or will it be content with importing just the contents of akkaactorjar Or is this resolved only once the complete bundle set is known so that eg mailbox types in different packages eg akkacontrib are also found
; design
Thanks for that point RolandAfter some discussion with my team and from what I know the akka would be resolve only for Class that are not present in the akkaactor bundle For others the akka will let OSGi lookup in every bundle exporting akka packages to find the requested classIve just learned that using the optional resolution with akka has the same impact as a dynamic import which is not great practice as it may lead to bad dependency resolution if two bundle are exporting akka packages differently The problem comes from On the other hand listing every akka modules in a classic import statement such as akkaremote akkacluster and so on could drive to ClassNotDefException if a package is missingI would prefer the akkaeven in DynamicImport because people are  responsible for exporting akka packages outside of the akka projectThose difficulties come from the OSGi integration and moreover the fact that OSGi does already akka stuff such as the class selection through configuration as ClassforName in akkaactor I let you two links about OSGi that our OSGi guru sent mehttpwikiosgiorgwikiAvoidClassloaderHackshttpiocanelblogspotch201206osgificationgoodbadpuristhtmlI know OSGi may not be a priority and refactoring akka in an OSGi version would be painful but it may be interesting to discuss it
; design
Couldnt you just write an OSGIbased DynamicAccess implementation httpdocakkaioapiakka210akkaactorDynamicAccess
; design
Also from the Avoid Classloader Hacks link it recommends Allow clients to pass a ClassLoader that the framework should use when it performs its lookup by name which we do since you can pass in a CL into the ActorSystem constructor which is used throughout Akka for all DynamicAccess reflection in default impl
; general
I dont fully understand this but what about classes that are located outside of the akka package and hat are created in the same way Eg eventhandlers mailboxtype serializers extensions
; design
patriknw The same ClassLoader is used for all reflective loading inside Akka so I assume that as long as you pass in a ClassLoader which can see the classes then its all good
; general
ok but why is then akkaremote and akkacluster special why is the optional imports needed if the are not needed for other packages
; design
My guess is that the ClassLoader doesnt have access to loading it otherwise
; general
viktorklang Im not akka expert but this was what I was thinking speaking about OSGi version of akka I think this would be enoughI agree with you on the ClassLoader which does not have access on classes that are not importedobvious the optional resolution or dynamic import instead of simple import only avoid to need a bundle even if you dont need it
; general
Feel free to create such a DynamicAccess and propose it as a PR
; general
So is the conclusion that this should be solved by an OsgiActorSystem which features an OSGiaware DynamicAccess implementation
; design
Or simply providing an initial ClassLoader that works
; general
While discussing again before diving into designing some new DynamicAccess we tested correctly at least in our use case the DynamicImport strategy adding akka as dynamic import  Moreover we thought having two different bundles  akkaactor and akkaosgi may be not useful and that they could be merged to one bundle only in BND Im currently testing it
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator291
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator291
; general
What is the reason for copying referenceconf to akkaosgi
; general
because from what Ive see resources may be exported from other bundle only if they are in exported package not on the bundle root and the main akka bundle which creates the actor system needs to import them
; design
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator322
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator322
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator331
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator331
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator331
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator331
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator350
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator350
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator261
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator261
; general
Hello again PatrickReally good points and thanks for your interest ticket created at 2865
; general
concerning the name extendedActorSystemConfig it could also be replace the existing actorSystemConfig as it is used only at bundle start and is transparent enough from my point of view Otherwise I will think about some better name
; general
concerning the properties and json point its really interesting Im going to fix it to let each type of configuration get readBy the way as the configuration file name is explicit enough I dont think there may be a mix with another application configuration file even with those extensions
; general
Thanks for the String interpolation idea Im going to use it and sorry for the bundle typo youre right
; general
regarding extendedActorSystemConfig vs actorSystemConfig if the etc directory is an expected location for the configuration files I think it should be folded into the default behavior in actorSystemConfigthis is only called once on startup right
; general
yes it is the expected location for the configurations files and it is called at each bundlestart as it is called to create the actor system which is done in the bundle Activatorstart methodAnother possibility would also be to modify the BundleDelegatingClassLoader to let it find the relevant resources just an idea This could be nicer
; design
aside from comments LGTM
; general
but before we can merge it youll have to sign the CLA
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator270
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator270
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator273
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator273
; general
looking good but before I can press the button you need to sign the CLAhttpwwwtypesafecomcontributecla
; general
done thanks for that point
; general
Based on the same idea but really more sexy at least in my mind the possibility to create ActorSystem when the corresponding configuration file is provided OSGi in its compendium listen to the configurations files and provide those a services From this point akkaosgi would provide an ActorSystem with the right configuration as a service and the application would just listen to the right ActorSystem This would be more usable and more simple for the user akkaosgi from this point may just be passive providing ActorSystems and application bundles would be simpler a schema is comming
; general
cons  OSGi listen to configuration files those have same synthax as properties files but we wont have conf or json files in this case properties updates are sent to the bundle  need to manage those properties updatespros  more OSGi style akka may just let the users creates and manage its actorsystem with configuration  more OSGi Framework will use it than the etc directory just in OSGi compendiumso what do you think about thatbased on this httpfelixapacheorgsiteapachefelixfileinstallhtmla schema to explain what would it beconfigadminservicehttpsfcloudgithubcomassets153331577751cbba361a615711e2885e4c52890f2cfapng
; general
better idea after discussion with my team leader let the application bundle take care of the configuration modification but defined in the akkaosgi module to handle bundle restart in case of configuration modification with preRestart hook for exampleosgiservicebasedhttpsfcloudgithubcomassets153331578471e5f53b44618211e28f97e5b1d4c86725jpg
; general
in the previous diagram application bundle provides one service listener that gets configuration updates and call a service provided by akkaosgi akkaosgi provide a service that construct an ActorSystem depending on given propertiesFrom this point the user application may or not restart an actorsystem on configuration changes Most of the code would be inherited from akkaosgi
; general
Thanks Viktor For the past week or so Ive been reviewing all ofakkaactor It has been a pleasure to read the code base Very well doneand Im learning a ton of great Scala idioms On Sun Dec 23 2012 at 115 PM Viktor Klang notificationsgithubcomwrote Awesomely done  Reply to this email directly or view it on GitHubhttpsgithubcomakkaakkapull983issuecomment11650661
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator260
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator260
; general
BoundedBlockingQueue is used in BoundedPriorityMailbox ReentrantReadWriteLock would be an advantage if there are many many concurrent reader threads Is that the case here
; general
The only method which takes the readLock which we use is isEmpty but that is called for every message sent so it might well be a gain
; general
ok but dont you think we should benchmark it to make sure that its not a perf regression for 1 sender  1 receiver
; general
Yes that would be nice indeed but I dont think we have time to do it now Ideally wed have a mailbox test harness which runs different scenarios and shows how a mailbox behaves  without contention  with contention  with backlog  at maximum capacitybut this entails more than just measuring the target actors throughput it also includes the time it takes to enqueue things
; general
Also in the case of a priority queue the big hits will be A the blocking part and b the priority part
; general
I agree that a thorough performance tests takes long time and is wrong priority but a quick sanity check might be appropriateI have run a modified variant of the ordinary TellThroughputPerformanceSpec with a BoundedPriorityMailboxHere is the result of 4 test runs with 4 actorpairs Each run consist of 45000000 messages and takes  14 secBefore7012058 msgs7200094 msgs7079586 msgs6908532 msgsAfter6868004 msgs6522654 msgs6461820 msgs6513178 msgsNot a huge degradation and might be worth it if you think it improves scalability for many senders
; general
Nice that you checked it
; general
Great thanks Patrik Now we need some manysenders benchmark  otherwise its just a 510 loss
; general
Thanks for benchmarking the change Patrik Please let me know if theressome way that I can assist I am still trying to become more familiar withthe testing side of the Akka code baseOn Wed Jan 2 2013 at 311 AM Roland Kuhn notificationsgithubcomwrote Great thanks Patrik Now we need some manysenders benchmark  otherwise its just a 510 loss  Reply to this email directly or view it on GitHubhttpsgithubcomakkaakkapull983issuecomment11805129
; general
To complete the sanity check I adjusted the benchmark and added a fan out via a RoundRobinRouterThe idea is that the routees will generate contention in the mailbox of the single DestinationResults roundripss each roundtrip generates 3 message sendsrouteesbeforeafter19981988997002933109906934493993778249088757738085201686768175007032879429766749As a reference the same test but with ordinary mailbox1707265 roundtripss with 1 routeee and 1270408 roundtripss with 32 routeees
; design
Okay Patriks measurements bring me to the conclusion that the RWLock does not help at all it just makes performance worse So the correct action is to just remove that TODOMy guess for why this is we only ever call hasMessages after enqueueing which means that the ReadLock part does not actually help all that much because all other readers will also be writers And then the intrinsic overhead of the RWLock makes it more costly than the plain Lockviktorklang do you agree
; general
If we dont need reentrancy perhaps take this for a spin httpgeecsoswegoedudljsr166distjsr166edocsjsr166eStampedLockhtml
; general
due to the reasons outlined above Im a little skeptical but if someone wants to give it a try
; general
BoundedBlockingQueue is way more general than just for mailboxes its essentially a missing puzzle piece in the JDK
; general
okay thanks for reminding me of the bigger picture that had slipped my mind
; general
Stepping back a bit it looks like BoundedBlockingQueue is currently onlyused to wrap a javautilPriorityQueue in BoundedPriorityMailbox Iunderstand that BoundedBlockingQueue is meant to be a generic wrapper butwhy couldnt we use a javautilconcurrentPriorityBlockingQueue instead ofthe current approachhttpdocsoraclecomjavase7docsapijavautilconcurrentPriorityBlockingQueuehtmlOn Thu Jan 3 2013 at 658 AM Roland Kuhn notificationsgithubcomwrote okay thanks for reminding me of the bigger picture that had slipped my mind  Reply to this email directly or view it on GitHubhttpsgithubcomakkaakkapull983issuecomment11846229
; general
Ah forget what I wrote in my last mail I realized thatPriorityBlockingQueue is missing the bounded capacity option like we havewith javautilconcurrentLinkedBlockingQueue BummerOn Thu Jan 3 2013 at 1202 PM Ryan LeCompte lecomptegmailcom wrote Stepping back a bit it looks like BoundedBlockingQueue is currently only used to wrap a javautilPriorityQueue in BoundedPriorityMailbox I understand that BoundedBlockingQueue is meant to be a generic wrapper but why couldnt we use a javautilconcurrentPriorityBlockingQueue instead of the current approach httpdocsoraclecomjavase7docsapijavautilconcurrentPriorityBlockingQueuehtml On Thu Jan 3 2013 at 658 AM Roland Kuhn notificationsgithubcomwrote okay thanks for reminding me of the bigger picture that had slipped my mind  Reply to this email directly or view it on GitHubhttpsgithubcomakkaakkapull983issuecomment11846229
; general
closing this pull request if something nicer comes along it can reference this discussion but it should be a new PR
; design
Makes sense Thanks for reviewing guys  On Jan 8 2013 at 817 AM Roland Kuhn notificationsgithubcom wrote closing this pull request if something nicer comes along it can reference this discussion but it should be a new PR   Reply to this email directly or view it on GitHub
; design
Shouldnt that TODO be deleted then
; general
thanks for the reminder  fixed
; general
PLS REBUILD ALL
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator259
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator259
; general
Since I assume no one will be reviewing this for like 10 days Ill merge this in now
; general
I am back on 2930 parttime so proceed freely if you catch something
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator266
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator266
; general
I dont fully grasp it at this point but I trust you guys LGTM
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator263
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator263
; general
Good point Patrik Will do
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator264
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator264
; general
The failure in the ticket httpswwwassemblacomspacesakkasimpleplannerticket28010 was not greater than 0 httpsgithubcomakkaakkablob0d185e297d3cf198937142d644801159504abfd9akkaclustersrcmultijvmscalaakkaclusterroutingClusterRoundRobinRoutedActorSpecscalaL191How can that ever be possibleThe replies are gathered here httpsgithubcomakkaakkablob0d185e297d3cf198937142d644801159504abfd9akkaclustersrcmultijvmscalaakkaclusterroutingClusterRoundRobinRoutedActorSpecscalaL96How can that Map contain a value that is 0Can you see anything wrong with that receiveReplies method
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator256
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator256
; general
The changes look good but dont seem to be related to the problem Could it not happen that a cluster node has joined and awaitUp has returned but the router has not yet had the chance to add new routees And then the hits go to the old routees first and out of the 10 there are too few which go to the new node
; general
Previously I suspected something wrong with the receiveReplies but I was wrong about that Of course it can contain 0 values in the MapIt is as you say the router picks up the new nodes later and that was also the reason why I added the additional await on the number of routees in the test before sending the messagesSo I would say that this actually is related to the problem and fixes it
; general
ah okay thanks for clarifying
; general
so what was the underlying problem this patch solves you said something about a corner case with two routees
; general
This is from the ticketSo I cant explain excatly how the scheduling of the different threads handling the actors could behave in this way but by making the routees move a bit slower and the sender a bit faster I can get the test to have a routerSize of 2 when the backoff starts which is ok and always have a pressure of at least 1 which means that the backoff will be 05 which is greater than the threshold 04
; design
yes so we have some guesses but no clear description of why exactly it failed if this test tests the function of resizers is it that we dont understand their runtime behavior or is it that we are testing them in a domain where they are simply not fully deterministic
; general
LGTM we give it one more chance and if it fails again we scrap it and improve unit tests instead if they dont cover enough already
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator255
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator255
; general
rkuhn so to try to answer your question I think that the domain scheduling of multiple threads running multiple actors is not fully deterministic and you have to try to coax it into behaving the way you want which makes the test unnecessary brittle Im all for rethinking this completelyAnd now for something completely different christmastree
; general
Whats the status Sean
; general
Sorry rather busy day at work yesterdaysRpOn May 10 2012 340 AM viktorklang replyreplygithubcomwrote Whats the status Sean  Reply to this email directly or view it on GitHub httpsgithubcomakkaakkapull440issuecomment5620569
; general
No worries let me know when its ready for primetime and the CLA is signed so I can move it into masterGreat job
; design
Signed cla yesterdayOn May 10 2012 608 AM viktorklang replyreplygithubcomwrote No worries let me know when its ready for primetime and the CLA is signed so I can move it into master Great job  Reply to this email directly or view it on GitHub httpsgithubcomakkaakkapull440issuecomment5622570
; design
Alright Im merging in this now
; general
PLS REBUILD ALL
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator250
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator250
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator251
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator251
; general
yes this can well go into 21x
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator249
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator249
; general
Aside from comment LGTM
; general
1 After the fact
; general
Have you checked that the strings for the docs are ok I mean the preprocessVarsAnd I assume that still using the sonatype resolver is ok for the build anywayOtherwise LGTM
; general
there is a CrossVersion in multijvmtestingrst checked that
; general
ouch that should be a preprocessor thing will fix
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator254
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator254
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator253
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator253
; general
PLS REBUILD ALL
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator258
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator258
; general
Great job Patrik
; general
Good fix and boy scouting Thank you
; general
Found and fixed regression
; general
Great Push it I get the same error in my test now Cant find this Member
; general
LGTM after some optimization
; general
Updated according to review comments
; general
Umm looking again I should probably add a comment why the ordering is important
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator274
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator274
; general
Added comment describing why the specific ordering is needed and squashed commits
; design
PLS REBUILD ALL
; general
rkuhn Can you look at this one before I merge
; general
Updated added scope queries to Address
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator279
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator279
; general
CallingThreadDispatcherModelSpec failed I added the failure to 2821
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator277
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator277
; general
Werent there a third one using blackhole
; general
that was perhaps ReliableProxySpec but that is enabled
; general
Lets see what the KITTEH says LGTM
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator278
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator278
; general
Lets see what the build servers says
; general
LGTM I will add the inbound flushing
; general
I changed the scheduling in the throttler as discussed please review I might have misunderstood something
; general
yes your changes look like what I had in mind the two comments are more to the preexisting state of the code drewhk can you comment
; general
I had no time to review this fully I will continue tomorrow
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator267
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator267
; general
Alright I have made the suggested adjustments and will merge after PLS REBUILD ALL
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator276
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator276
; general
Closing for now as setIssueHandshake does not solve the issue directly
; general
Checked the netty code and setIssueHandshake should do the trick        if issueHandshake             handshakeaddListenernew ChannelFutureListener                 public void operationCompleteChannelFuture future throws Exception                     if futureisSuccess                         ChannelsfireExceptionCaughtfuturegetChannel futuregetCause                     else                         ctxsendUpstreame                                                Writes should be buffered still but that is handled by the remoting code We should give it a try I think
; design
No you cant assume that isSuccess  failure youre forgetting cancellation
; general
Hmm its their code so I cant fix it Then I have to do this manually
; general
If they dont cancel the future can isCancelled be true
; general
How do you know if theyre ever going to cancel it
; general
Then its their bug  The code I pasted is from SslHandler
; general
apart from the style comments LGTM
; general
LGTM in the patriknw sense
; general
LGTMPLS REBUILD ALL
; general
Is the kitteh dead or something
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator269
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator269
; general
PLS REBUILD ALL
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator272
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator272
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator275
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator275
; general
great apart from the leader check but that assert is perhaps not needed by this test covered by others
; design
Good Feel free to merge this one and my other one if you feel they are done
; general
great I can merge them in when my build change has been merged
; general
Trying to fix the bug during second construction in doRecreate if it catches an exception case NonFatale it uses the actor field But actor could be either the failed actor if the exception is from newActor or the new actor if the exception is from freshActorpostRestart So I think its sort of undefined whether actorsupervisorStrategyhandleSupervisorFailingself children for example is called on the old or new actor Is that a problem
; design
Thats a good point Ill need to investigate
; general
I did a fair bit of commentingrearranging the code to try to understand it httpsgistgithubcom2839564That patch isnt perfect but it makes the state machine and the possible status of actor and behaviorStack a little more explicit I thinkSome conclusions  I think supervisorStrategy should always be used from the last actor to be successfully constructed I put a test case in the above patch that tests this and the patch fixes it  for a given instance of Actor I dont think instancereceive or become behaviors originating from instance should ever be in the behaviorStack once a recreate or terminate has been received while actor eq instance If aroundReceive is added then the same applies to instancearoundReceive Also none of these methods on instance should be called until instance has been constructed  theres some code unification possible between create recreate and terminate handling I did some of it in the above patch there is more possible though probably  I believe null checks are pretty unavoidable without a larger overhaul that would keep the actor field from ever being null even precreate  In the patch I made actor null more often so that the recreate case matches the create case in the patch its always null when a replacement of the actor field is conceptually in progress pending create recreate or terminate This would then allow become in the aroundReceive patch to reliably know whether to use actor or not Also it makes it harder to accidentally use the wrong instance one thats already been terminated or recreatedTo avoid actor eq null I believe youd have to do something more radical Could just use Option if willing to accept its memory overhead but thats just a safer syntax for null But to avoid the conceptual Optionnull youd probably need some kind of state object which would virtualize those behaviors that change in the various conceptual states of the ActorCell For example you might have PreCreateState with a become method that does one thing and NormalState with a different become and then contextbecome would delegate to statebecome that kind of idea Youd probably virtualize some of the system messages such as terminate and recreate to delegate to the state Only NormalState would have an Actor instance while for example a DeadState might have a supervisorStrategy left over from a former Actor instance and PreCreateState would have neither actor nor supervisorStrategy This could be clean and prove that actor and supervisorStrategy arent used incorrectly but it adds another object and thus some overheadOr who knows maybe theres another solutionAnyway  aroundReceive is pretty orthogonal to all thisGiven the current state of ActorCell the null check is IMO the right way to write the become method and I dont think theres anything conceptual about aroundReceive thats creating a problem ActorCell doesnt already haveSo after a lot of messing around what Id suggest is to merge aroundReceive with the null check in become as it isAnd then separately undertake an effort to clarify when actor is null if ever and over what timeline each Actor instance exists and gets used I can continue to hack on that problem too if you want but I suspect youll care so much about it youd be better off just coding it yourself but whatever is most helpful Whether you like httpsgistgithubcom2839564 overall or not I think some of the test cases in there might be useful
; design
Nice Ill go through the gist with Roland on mondaytuesday and well getback to you asap
; general
I think this looks very good I will try the graphviz generation today and see how the docs looks like when renderedviktorklang might want to take a final lookThen I think its ready to go inAwesome work thanks a lot
; general
graphviz in the docs works fine for me on mac I have dot installed in path usrlocalbindotnice
; general
the java code sample should be formatted it contains tabs should be spaces only braces in wrong location
; general
Not done yet  halfopen test is failing rest are passing  Need to understand why but is this the kind of thing you guys had in mind
; general
This rebasesquash seemed to go better  I did a push f which should be OK as long as nobody else has done work against the branch
; general
Noticed that I had stomped on some epub settings in confpy so undid that
; general
Looks great 1 from mecc viktorklang
; general
Looks goodSigned CLA over at wwwtypesafecomcontributecla  I have goldfish memory on fridays
; general
viktorklang  yep CLA signed
; general
Woot Thanks again for all the mentoring both viktorklang and patriknw  I learned a lot about Akka internals and Scala in general  Will take a look at assembla and see where else I can help out  Definitely owe you guys for developing and maintaining such a useful project
; general
Youre most welcome Thanks for your excellent work
; general
You are welcome It was a pleasure Thanks1 jun 2012 kl 1731 skrev scullxbonesreplyreplygithubcom Woot   Thanks again for all the mentoring both viktorklang and patriknw  I learned a lot about Akka internals and Scala in general  Will take a look at assembla and see where else I can help out  Definitely owe you guys for developing and maintaining such a useful project   Reply to this email directly or view it on GitHub httpsgithubcomakkaakkapull493issuecomment6063231
; general
Awesome Very nice Thanks
; general
changed so that tagsexclude adds to default excludes not overrides
; general
fixed everything from feedback
; general
Very cool stuff really looking forward to get this into the featureset of the Netty remoting
; general
Thanks patriknw and viktorklang for your comments please review again whenever possible I had to merge with changes that were made on upstream and therefore refactored the code
; general
Thanks Ill have a look as soon as I can
; general
Very cool stuff just a tiny bit of work left before we can add this
; general
On 20120530 0430 PM viktorklang wrote Very cool stuff just a tiny bit of work left before we can add this  Reply to this email directly or view it on GitHub httpsgithubcomakkaakkapull476issuecomment6011240I have read about the SecureRandom problem in 2153 should I be usingThreadLocalRandom
; general
Good that you noticed that YES SecureRandom is banned
; general
We probably need to know how this affects the security of the TLSSSL given that TLR is not a cryptographically secure randomAlso since the API requires an instance youll probably need to create a wrapper that delegates to TLRcurrent
; design
On 20120531 1101 AM patriknw wrote Good that you noticed that YES SecureRandom is banned  Reply to this email directly or view it on GitHub httpsgithubcomakkaakkapull476issuecomment6030984What do I do for Java 6 since it is only in Java 7
; general
You do the same for both akkajsr166yThreadLocalRandom
; general
we have it embedded akkajsr166yThreadLocalRandomwrapper is important as V mentions
; general
On 20120531 1108 AM patriknw wrote we have it embedded akkajsr166yThreadLocalRandom wrapper is important as V mentions  Reply to this email directly or view it on GitHub httpsgithubcomakkaakkapull476issuecomment6031131perfect thanks a lot
; general
On 20120531 1104 AM viktorklang wrote We probably need to know how this affects the security of the TLSSSL given that TLR is not a cryptographically secure random Also since the API requires an instance youll probably need to create a wrapper that delegates to TLRcurrent  Reply to this email directly or view it on GitHub httpsgithubcomakkaakkapull476issuecomment6031050I have used the code from this page httpwwwalifecouknonrandomto test ThreadLocalRandom and Random provided by Java 7 and it isntrandom SecureRandom is visibly random
; design
So you might want to doublecheck that the SecureRandom wont be used bymultiple threads
; general
On 20120531 0139 PM viktorklang wrote So you might want to doublecheck that the SecureRandom wont be used by multiple threads  Reply to this email directly or view it on GitHub httpsgithubcomakkaakkapull476issuecomment6033635The code doesnt share SecureRandom It creates and passes itimmediately to sslContextinit
; general
So you guarantee that the SecureRandom isnt indirectly called by multiplethreads
; general
The problem is not multiple threads It is how it is implemented on linux See here httpwwwassemblacomspacesakkatickets2153clusterusageofsecurerandomisslowcomment111923933comment111923933jboner can explain more if neededThere might be different SecureRandom implementations The problematic one was    SecureRandomgetInstanceSHA1PRNGNeeds to be investigated and tested thoroughly on linux before usage
; general
Yeah SecureRandom and Random is fully threadsafe Wrapping it in a ThreadLocal is only to decrease contention The problem is that it blocks on devrandom on Linux when its entropy pool is empty If this is not a bug then I would at least call it extremely sloppy designimplementation in SecureRandom Why not asynchronously periodically fetch chunks from devrandomI dont know what is best to do
; general
Theres some nice reading here httpstackoverflowcomquestions137212howtosolveperformanceproblemwithjavasecurerandom
; general
On 20120531 0315 PM viktorklang wrote Theres some nice reading here httpstackoverflowcomquestions137212howtosolveperformanceproblemwithjavasecurerandom  Reply to this email directly or view it on GitHub httpsgithubcomakkaakkapull476issuecomment6035419that is what I have been reading thanks
; general
On 20120531 0304 PM patriknw wrote The problem is not multiple threads It is how it is implemented on linux See here httpwwwassemblacomspacesakkatickets2153clusterusageofsecurerandomisslowcomment111923933comment111923933 jboner can explain more if needed There might be different SecureRandom implementations The problematic one was     SecureRandomgetInstanceSHA1PRNG Needs to be investigated and tested thoroughly on linux before usage  Reply to this email directly or view it on GitHub httpsgithubcomakkaakkapull476issuecomment6035149I am only using new SecureRandom
; design
On 20120531 0312 PM Jonas Bonr wrote Yeah SecureRandom and Random is fully threadsafe Wrapping it in a ThreadLocal is only to decrease contention  The problem is that it blocks on devrandom on Linux when its entropy pool is empty  If this is not a bug then I would at least call it extremely sloppy designimplementation in SecureRandom Why not asynchronously periodically fetch chunks from devrandom I dont know what is best to do  Reply to this email directly or view it on GitHub httpsgithubcomakkaakkapull476issuecomment6035348If I understand correctly according to thishttpbugssuncomviewbugdojsessionidff625daf459fdffffffffcd54f1c775299e0bugid6202721I will need to set Djavasecurityegdfiledevurandom to force itto be nonblocking on Linux
; general
How do you know that it is goodSee javadoc for that constructor
; general
if Djavasecurityegd works we must make sure that it is used so that users dont hit this issue in production akka will be the first thing to blame
; general
At the very least the PRNG used needs to be configured in thereferenceconfuser conf
; general
On 20120531 0324 PM patriknw wrote How do you know that it is good See javadoc for that constructor  Reply to this email directly or view it on GitHub httpsgithubcomakkaakkapull476issuecomment6035659According to the javadoc for the classA caller obtains a SecureRandom instance via the noargument constructoror one of the codegetInstancecode methodsSecureRandom random  new SecureRandom
; general
On 20120531 0315 PM viktorklang wrote Theres some nice reading here httpstackoverflowcomquestions137212howtosolveperformanceproblemwithjavasecurerandom  Reply to this email directly or view it on GitHub httpsgithubcomakkaakkapull476issuecomment6035419According to these pageshttpdocsoraclecomjavase7docstechnotesguidessecurityjsseJSSERefGuidehtmlTroubleshootingSlowness of the First JSSE AccessProblem JSSE seems to stall on the first accessCause JSSE must have a secure source of random numbers Theinitialization takes a whileSolution Provide an alternate generator of random numbers orinitialize ahead of time when the overhead wont be noticedSecureRandom sr  new SecureRandomsrnextIntSSLContextinit  srThe javahomelibsecurityjavasecurity file also provides a way tospecify the source of seed data for SecureRandom see the file for moreinformation
; general
So whats the status here what do we do
; general
On 20120604 1147 PM viktorklang wrote So whats the status here what do we do  Reply to this email directly or view it on GitHub httpsgithubcomakkaakkapull476issuecomment6112037I have completed the changes and will be submitting them later today iftime allowsThere is an option now on 3 different random number generators with thedefault being the default internal Java one which is supposed to causethe least hassles
; design
Excellent looking forward to see itCheers
; general
On 20120605 0109 PM viktorklang wrote Excellent looking forward to see it Cheers   Reply to this email directly or view it on GitHub httpsgithubcomakkaakkapull476issuecomment6122598I have committed the changes for your review
; general
Im missing rst documentationGreat contribution Will be very useful
; general
Aside from the missing functional test I think this is very good The config change I proposed would be nice to have meaning I could also add that later
; general
On 20120607 0128 PM Roland Kuhn wrote Aside from the missing functional test I think this is very good The config change I proposed would be nice to have meaning I could also add that later  Reply to this email directly or view it on GitHub httpsgithubcomakkaakkapull476issuecomment6173733Thanks
; general
Very nice 1
; general
On Fri 15 Jun 2012 143437 0300 viktorklang wrote Excellently done   Reply to this email directly or view it on GitHub httpsgithubcomakkaakkapull476issuecomment6354463Thanks It wouldnt be what it is without everyones inputThanks everyone
; general
Hey PeterWere having a lot of issue with the SSL testsI have commented them out for now and wasted about a day trying to diagnose we need to solve thisakkaremote  testonly Ticket1978SpecERROR 06192012 101932647 remotesys2 ActorSystemremotesys RemoteServerErrorakkaremotesyslocalhost12346 ErrorjavaxnetsslSSLException Algorithm missing  at comsunnetsslinternalsslSSLEngineImplchangeReadCiphersSSLEngineImpljava554at comsunnetsslinternalsslSSLEngineImplreadRecordSSLEngineImpljava1051at comsunnetsslinternalsslSSLEngineImplreadNetRecordSSLEngineImpljava845at comsunnetsslinternalsslSSLEngineImplunwrapSSLEngineImpljava721at javaxnetsslSSLEngineunwrapSSLEnginejava607at orgjbossnettyhandlersslSslHandlerunwrapSslHandlerjava969at orgjbossnettyhandlersslSslHandlerdecodeSslHandlerjava670at orgjbossnettyhandlercodecframeFrameDecodercallDecodeFrameDecoderjava333at orgjbossnettyhandlercodecframeFrameDecodermessageReceivedFrameDecoderjava214at orgjbossnettychannelChannelsfireMessageReceivedChannelsjava268at orgjbossnettychannelChannelsfireMessageReceivedChannelsjava255at orgjbossnettychannelsocketnioNioWorkerreadNioWorkerjava91at orgjbossnettychannelsocketnioAbstractNioWorkerprocessSelectedKeysAbstractNioWorkerjava373at orgjbossnettychannelsocketnioAbstractNioWorkerrunAbstractNioWorkerjava247at orgjbossnettychannelsocketnioNioWorkerrunNioWorkerjava35at javautilconcurrentThreadPoolExecutorWorkerrunTaskThreadPoolExecutorjava886at javautilconcurrentThreadPoolExecutorWorkerrunThreadPoolExecutorjava908at javalangThreadrunThreadjava680Caused by javasecurityNoSuchAlgorithmException Could not create cipher AES128at comsunnetsslinternalsslCipherBoxinitCipherBoxjava99at comsunnetsslinternalsslCipherBoxnewCipherBoxCipherBoxjava119at comsunnetsslinternalsslCipherSuiteBulkCiphernewCipherCipherSuitejava369at comsunnetsslinternalsslHandshakernewReadCipherHandshakerjava410at comsunnetsslinternalsslSSLEngineImplchangeReadCiphersSSLEngineImpljava550 17 moreCaused by javasecurityInvalidKeyException No installed provider supports this key nullat javaxcryptoCipheraDashoA13at javaxcryptoCipherinitDashoA13at javaxcryptoCipherinitDashoA13at comsunnetsslinternalsslCipherBoxinitCipherBoxjava88 21 moreERROR 06192012 101932648 Ticket1978CommunicationSpec6 ActorSystemTicket1978CommunicationSpec RemoteClientErrorakkaremotesyslocalhost12346 ErrorjavaxnetsslSSLException Received fatal alert internalerrorWARN 06192012 101932657 Ticket1978CommunicationSpecakkaactordefaultdispatcher3 akkaremotesyslocalhost12346userecho received dead letter from ActorakkaTicket1978CommunicationSpecsystemtestActor1 pingERROR 06192012 101932657 Ticket1978CommunicationSpec5 ActorSystemTicket1978CommunicationSpec RemoteClientErrorakkaremotesyslocalhost12346 ErrorjavaniochannelsClosedChannelExceptionWARN 06192012 101938357 remotesysakkaactordefaultdispatcher2 akkaremotesysdeadLetters received dead letter from ActorakkaremotesysremoteTicket1978CommunicationSpeclocalhost12345userlookerchild postStop
; general
On 20120619 1022 AM viktorklang wrote Hey Peter Were having a lot of issue with the SSL tests I have commented them out for now and wasted about a day trying to diagnose we need to solve thisHey ViktorOdd that it doesnt support AES 128bit encryption I will see if I canreplicate the issue
; general
Hey PeterNo thats not the issue The test runs X times on my machine and then failsI think Ive nailed it in master though Im trying to detect if it can run the tests before trying to run themThe problem was that there was a new AkkaProvider instantiated every time this has to be reused to avoid the issue See masterCheers
; general
Hmmm tests still fail on our CI server sigh
; general
It seems like this is the test that normally acts up Ticket1978AES128CounterRNGSecureSpec
; general
Iev wasted 2 days on this now We need to get this fixed or we have to rip the SSL out again
; general
Somehow this ends up on the server at the other endjavasecurityInvalidKeyException No installed provider supports this key nullat javaxcryptoCipheraDashoA13at javaxcryptoCipherinitDashoA13at javaxcryptoCipherinitDashoA13at comsunnetsslinternalsslCipherBoxinitCipherBoxjava88at comsunnetsslinternalsslCipherBoxnewCipherBoxCipherBoxjava119at comsunnetsslinternalsslCipherSuiteBulkCiphernewCipherCipherSuitejava369at comsunnetsslinternalsslHandshakernewReadCipherHandshakerjava410at comsunnetsslinternalsslSSLEngineImplchangeReadCiphersSSLEngineImpljava550at comsunnetsslinternalsslSSLEngineImplreadRecordSSLEngineImpljava1051at comsunnetsslinternalsslSSLEngineImplreadNetRecordSSLEngineImpljava845at comsunnetsslinternalsslSSLEngineImplunwrapSSLEngineImpljava721at javaxnetsslSSLEngineunwrapSSLEnginejava607at orgjbossnettyhandlersslSslHandlerunwrapSslHandlerjava969at orgjbossnettyhandlersslSslHandlerdecodeSslHandlerjava670at orgjbossnettyhandlercodecframeFrameDecodercallDecodeFrameDecoderjava333at orgjbossnettyhandlercodecframeFrameDecodermessageReceivedFrameDecoderjava214at orgjbossnettychannelChannelsfireMessageReceivedChannelsjava268at orgjbossnettychannelChannelsfireMessageReceivedChannelsjava255at orgjbossnettychannelsocketnioNioWorkerreadNioWorkerjava91at orgjbossnettychannelsocketnioAbstractNioWorkerprocessSelectedKeysAbstractNioWorkerjava373at orgjbossnettychannelsocketnioAbstractNioWorkerrunAbstractNioWorkerjava247at orgjbossnettychannelsocketnioNioWorkerrunNioWorkerjava35at javautilconcurrentThreadPoolExecutorWorkerrunTaskThreadPoolExecutorjava886at javautilconcurrentThreadPoolExecutorWorkerrunThreadPoolExecutorjava908at javalangThreadrunThreadjava680
; general
Could it hae something to do with the keystorehttpswwwservoycomforumviewtopicphpf5t14332
; general
Just got this at randomjavasecurityInvalidKeyException Secret key expectedat comapplecryptoproviderHmacCoreengineInitHmacCorejava87at comapplecryptoproviderHmacMD5engineInitHmacMD5java21at javaxcryptoMacaDashoA13at javaxcryptoMacinitDashoA13at comsunnetsslinternalsslMACinitMACjava94at comsunnetsslinternalsslCipherSuiteMacAlgnewMacCipherSuitejava449at comsunnetsslinternalsslHandshakernewReadMACHandshakerjava448at comsunnetsslinternalsslSSLEngineImplchangeReadCiphersSSLEngineImpljava551at comsunnetsslinternalsslSSLEngineImplreadRecordSSLEngineImpljava1051at comsunnetsslinternalsslSSLEngineImplreadNetRecordSSLEngineImpljava845at comsunnetsslinternalsslSSLEngineImplunwrapSSLEngineImpljava721at javaxnetsslSSLEngineunwrapSSLEnginejava607at orgjbossnettyhandlersslSslHandlerunwrapSslHandlerjava969at orgjbossnettyhandlersslSslHandlerdecodeSslHandlerjava670at orgjbossnettyhandlercodecframeFrameDecodercallDecodeFrameDecoderjava333at orgjbossnettyhandlercodecframeFrameDecodermessageReceivedFrameDecoderjava214at orgjbossnettychannelChannelsfireMessageReceivedChannelsjava268at orgjbossnettychannelChannelsfireMessageReceivedChannelsjava255at orgjbossnettychannelsocketnioNioWorkerreadNioWorkerjava91at orgjbossnettychannelsocketnioAbstractNioWorkerprocessSelectedKeysAbstractNioWorkerjava373at orgjbossnettychannelsocketnioAbstractNioWorkerrunAbstractNioWorkerjava247at orgjbossnettychannelsocketnioNioWorkerrunNioWorkerjava35at javautilconcurrentThreadPoolExecutorWorkerrunTaskThreadPoolExecutorjava886at javautilconcurrentThreadPoolExecutorWorkerrunThreadPoolExecutorjava908at javalangThreadrunThreadjava680
; general
Opened this httpstackoverflowcomquestions11115978nettysslhandlerheadache
; general
On 20120620 0152 AM viktorklang wrote Could it hae something to do with the keystore httpswwwservoycomforumviewtopicphpf5t14332  Reply to this email directly or view it on GitHub httpsgithubcomakkaakkapull476issuecomment6441032I have attached the working key stores as well as their checksums
; general
On 20120620 1118 AM viktorklang wrote Attached where  Reply to this email directly or view it on GitHub httpsgithubcomakkaakkapull476issuecomment6448629It got lost I have uploaded it to assembla as wellCan you explain how you do the repeated tests so that I can try toreplicate the problemI have tried testing it on FreeBSD but I keep getting errors for all thetests sayingCould not run test akkaremoteRemoteCommunicationSpecorgjbossnettychannelChannelException Failed to bind tolocalhost12700112345Caused by javanetBindException Address already in use
; general
Restart SBT to release the socketrun on this branch httpsgithubcomakkaakkatreewipsslunbrokenE2889Atestonly Ticket1978Spec
; general
On Wed 20 Jun 2012 115640 0200 viktorklang wrote Restart SBT to release the socket  run on this branch httpsgithubcomakkaakkatreewipsslunbrokenE2889A  testonly Ticket1978Spec   Reply to this email directly or view it on GitHub httpsgithubcomakkaakkapull476issuecomment6449298tested this 25 times without issue on win7 64 and freebsd 90 amd64 Both have the unlimited strength policy files installed Will try windows with strong policy files instead
; general
Try without the strong policy files That needs to not blow up as well see my modifications to the test
; general
I get it to fail on Linux and OSX
; general
What I dont see is where it issues the SSL handshake since handlersetIssueHandshaketrue hasnt been set and handshake isnt called in the codeYou must make sure not to write a message while the handshake is in progress unless you are renegotiating You will be notified by the ChannelFuture which is returned by the handshake method when the handshake process succeeds or fails  httpnettyiodocsstableapiI have tried handlersetIssueHandshaketrue on server andor client but it doesnt work either
; general
On Wed 20 Jun 2012 135354 0200 viktorklang wrote Try without the strong policy fiels That needs to not blow up as well see my modifications to the test   Reply to this email directly or view it on GitHub httpsgithubcomakkaakkapull476issuecomment6451836Your modifications work well Tested 20x with default export policy files on windows and freebsd without fail The 3 tests are skipped with the weaker policy files
; general
I think Ive nailed down the bug See my recent commits to that branch Waiting for our CI to give me an OKKO now
; general
Alright I think weve got a winner httpsgithubcomakkaakkapull554files
; general
On Wed 20 Jun 2012 154609 0200 viktorklang wrote Alright I think weve got a winner httpsgithubcomakkaakkapull554files   Reply to this email directly or view it on GitHub httpsgithubcomakkaakkapull476issuecomment6454166Good news getting it now
; general
This is scheduled for 202 and I need to cut the RC is this ready
; general
Nope writing as fast as I can Cant the doc go in later
; general
Now Im done Somebody read through it
; general
Not done fixing two issues
; general
sorry for that
; general
I got the hard exit shutdown to work with barriers in right place see HardExitLeaderElectionSpecI think that would replace the previous LeaderElectionSpec or do you think we need both
; general
I dont think we need both clustershutdown is just a cheat anyway will be removed think there is a ticket about that already
; general
I think it looks great Like the fact that we test randomness of node addresses and cluster roles
; general
Very nice test I love how these multinode tests becomes much simpler and more readable than the inmemory counterparts Also that a language and set of patterns for how to write these is emerging Good job Patrik
; general
Thanks I agree its very nice to write tests with this frameworkPatrik28 maj 2012 kl 1239 skrev Jonas Bonrreplyreplygithubcom Very nice test I love how these multinode tests becomes much simpler and more readable than the inmemory counterparts Also that a language and set of patterns for how to write these is emerging Good job Patrik   Reply to this email directly or view it on GitHub httpsgithubcomakkaakkapull483issuecomment5962813
; general
Hi Patrikthanks for the review point taken on all notes  Ive updated the pull request
; general
ping which means if nobody says anything Ill close this pull req due to inactivity next weekend
; general
Ping Last chance
; general
Sold to the gentleman with the furry hamster
; general
Hi guysno idea how I missed out the pings in this issue heh now i get it 8days ago  paris 3 days ago prague  Anyway too bad  especially since a very similar pattern enteres the summer of blog Well my fault for not noticing the pings  sorryCheers
; general
avrecko Are you closing this one and opening a new one with your rewrites
; general
I dont like the name of branch wiprclpreview1 Is a pretty crappy name for branch It is a mistake to name it like this in the first place It is intended just to host my clean changes ie no other code changes for version 1Ive done the work in wiprclpreview2 branch thinking it should work fine with pull request I am mistaken  The preview2 was synced with master Ive merged it back to wiprclpreview1 but the results are what you see here  Should have rebased But still it would not be that clean ie only my changes visibleI see you can rename the pull request but cant point to new branchI can make a new clean pull request Alternatively you can see the refacture here with the commit Remote Class Loading with SEDA style netty onwardTell me what do you preferFor the submodule Ive done it like thisakkaremoteakkaremotetestsakkaremoterclakkaremotercltestsIs this ok Or should it be in the subdirectory What confuses me is that akkaremote contains code I dont thinkakkaremoteakkaremotercl is that good idea Imho the project either contains code or other projects but not bothWhat would work isakkaremotingakkaremoteakkaremotingakkaremotetestsakkaremotingakkaremoterclakkaremotingakkaremotercltestsThoughts
; design
You dont need to have a separate project for the tests akkaremotercltests if you dont have a good reason for itFor akkaactortests and akkaremotetests we have reasons for doing that testing framework is dogfooding
; general
Correction You should not have a separate
; general
Yeah It should just be    akkaremote   akkaremotercl
; general
Thanks for the feedback guys Sorry it took me so long Been super tired and super busyThe branch name really bothers me so I opened a new pull request with included feedback from this thread
; general
Hmmm I shouldnt forget to merge this into master as well if this is accepted
; general
Yes and when you do youll find a JavaPartialFunction which might want it too 1
; general
liek a bahs
; general
Hey Bjrnsure thing just sign this httptypesafecomcontributeclaThanks
; general
Excellent thanks for your contribution
; general
Applied the same update to Akka master
; general
InterestingMaybe I dont understand the backgroundThe main purpose according to its docThis object contains elements which make writing actors and related code more conciseThen the Inbox provides a powerful feature use with care to select messages The select feature is not provided for ordinary actors is it Isnt it strange to provide such a feature only in a DSL layer and not in ordinary actors
; design
The select feature is in fact provided in the form of Stash basically requiring only a default case which calls stash in addition to the normal pattern match This DSL was asked for by Martin and I agree that every character saved is beneficial when trying things out in the REPL eg during teaching But lets discuss a bit more in detail when I get to the office
; general
I didnt know that select is provided by Stash Is it documented I cantsee it You mean that it can be easily implemented using Stash Perhaps acandidate for documentationOn Mon Aug 13 2012 at 918 AM Roland Kuhn notificationsgithubcomwrote The select feature is in fact provided in the form of Stash basically requiring only a default case which calls stash in addition to the normal pattern match This DSL was asked for by Martin and I agree that every character saved is beneficial when trying things out in the REPL eg during teaching But lets discuss a bit more in detail when I get to the office  Reply to this email directly or view it on GitHubhttpsgithubcomakkaakkapull607issuecomment7684863
; general
patriknw Stash is documented and I think specific documentation for converts from Scala actors should be given in their migration guide
; general
Since submitter didnt respond a cleanroom impl of the testcase was created
; general
Shall I merge now with the new testcase
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator828
; general
viktorklang ok added test also
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator828
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator827
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator827
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator825
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator825
; general
PLS REBUILD ALL
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator819
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator819
; general
Woo hooINFO 04072013 231101261 akkaosgisampleakkaactordefaultdispatcher9 akkaakkaosgisampleuserb Created Hakker atakkaakkaosgisampleuserbINFO 04072013 231101262 akkaosgisampleakkaactordefaultdispatcher9 akkaakkaosgisampleuserb Hakker TestHakker takes position3 TestHakker is busy with ThinkingTests run 1 Failures 0 Errors 0 Skipped 0 Time elapsed 12723 sec
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator836
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator836 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
PLS REBUILD ALL
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator836
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator836 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator838
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator838 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator831
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator831
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator830
; general
Something like  public Terminated expectTerminatedFiniteDuration max ActorRef target Boolean existenceConfirmed     return pexpectTerminated            target            max            existenceConfirmed  null  Optionnone  OptionsomeexistenceConfirmed
; design
why not OptionapplyexistenceConfirmed
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator830
; general
yes that is better1
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator832
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator832
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator832
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator832
; general
rebased on top of master
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator839
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator839 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
Kitteh you are no gud today
; general
PLS REBUILD ALL
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator839
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator839 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
This one is still building The Kitteh keeps picking up old runs when the commit date is in the past We need to migrate to the new Kitteh
; general
Ok Ill create a new PR
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator840
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator840 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
Not related failure in CoronerSpec ticket updated
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator837
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator837
; general
How about adding an automatic replace in the release script
; general
Hmm but that does not match so perfectly AFAICS there is no change in scalaVersion coupled to the temporary change of Akka SNAPSHOT to release version We want the right thing to be shown in the nightlies dont we So how would an automatism look like
; general
On Sun Aug 12 2012 at 1138 AM Roland Kuhn notificationsgithubcomwrote Hmm but that does not match so perfectly AFAICS there is no change in scalaVersion coupled to the temporary change of Akka SNAPSHOT to release version We want the right thing to be shown in the nightlies dont we So how would an automatism look likeVlugter said theyre using a sphinx extension that does thisCheers   Reply to this email directly or view it on GitHubhttpsgithubcomakkaakkapull610issuecomment7674103 Viktor KlangAkka Tech LeadTypesafe httpwwwtypesafecom  The software stack for applicationsthat scaleTwitter viktorklang
; general
Wat iz happen here
; general
shall automatization be added in this pull req or is that a separate ticket to be created
; general
I suggest adding automation in this release by the means of findreplaceas per the github links in the release scriptand then the ticket will be to replace that method with the sphpinxextension
; general
okay added automatic scalaVersion pickup
; general
feels a bit scary to add this to public API but I guess there is no other way if we dont want to do more thorough work on the API for RemoteTransport  co1
; design
Its already public in 20x
; design
do know by chance whether this also affects TreeSet directly
; general
I dont know TreeSet is default impl of SortedSet so I guess sohttpsissuesscalalangorgbrowseSI5986On Mon Aug 13 2012 at 1227 PM Roland Kuhn notificationsgithubcomwrote do know by chance whether this also affects TreeSet directly  Reply to this email directly or view it on GitHubhttpsgithubcomakkaakkapull613issuecomment7688211
; general
Im on my wayMy connection is not helping me though ceefourannafigit git clone gitgithubcomakkaakkagitCloning into akkaremote Counting objects 137605 doneremote Compressing objects 100 3446134461 doneReceiving objects  86 119669137605 2840 MiB  4 KiBs    Need to be very patient
; general
Stuck on remote place I cant download anything ceefourannafigitakka sbt compileGetting orgscalatoolssbt sbt291 0113
; general
So how can I know if Ive fixed the problem
; general
ceefourgoku1tmpakka sbt compileDetected sbt version 0113Error occurred during initialization of VMCould not reserve enough space for object heapceefourgoku1tmpakka free m             total       used       free     shared    buffers     cachedMem          1511       1435         76          0         33        531 bufferscache        870        640Swap          255         15        240How much RAM does this compilation needs Any prebuilt snapshots
; design
This is my sbt launcherbinshif test f sbtconfig then   sbtconfigfiexec java XXCMSClassUnloadingEnabled XXReservedCodeCacheSize128M Xss2M Xms128M Xmx3G XXMaxPermSize512M XXUseCompressedOops SBTOPTS jar dirname 0sbtlaunch0113jar DakkaparallelExecutiontrue Andno there is ny prebuilt jars since it is not merged into master yet because it isnt verified If you want I can build the jars locally just you tell me what info you need to verify it
; general
Hi ViktorA proper OSGi bundle would contain the following in its METAINFMANIFESTMF BundleManifestVersion 2BundleSymbolicName BundleVersion ExportPackageImportPackage
; general
Thanks for the launcher tip Im using the sbt package from typesafe Ubuntu repository tweaking the RAM size in usrbinsbt seem to get it going its default is 1536 MB no wonder
; design
Ive finished building seems like this commit didnt fix it yet  ceefourjannah1tmpakka git branch  master wip2370ceefourjannah1tmpakka unzip p homeceefourtmpakkaakkaosgiariestargetakkaosgiaries21SNAPSHOTjar METAINFMANIFESTMFManifestVersion 10ImplementationVendor Typesafe IncImplementationTitle akkaosgiariesImplementationVersion 21SNAPSHOTImplementationVendorId comtypesafeakkaSpecificationVendor Typesafe IncSpecificationTitle akkaosgiariesSpecificationVersion 21SNAPSHOT
; general
This is what I get from the akkaosgiaries jar after running publishlocalManifestVersion 10BndLastModified 1344955807800BundleManifestVersion 2BundleName comtypesafeakkaosgiariesBundleSymbolicName comtypesafeakkaosgiariesBundleVersion 210SNAPSHOTCreatedBy 16033 Apple IncImportPackage akkaactorversion2122akkaosgiversion212 2comtypesafeconfigversion04105orgapacheariesbluepri ntversion031orgapacheariesblueprintmutableversion031 orgapacheariesblueprintreflectversion031orgosgiframew orkversion152orgosgiserviceblueprintcontainerversion1 02orgosgiserviceblueprintreflectversion102orgw3cdom scalaversion210211scalacollectionversion210211scal acollectiongenericversion210211scalacollectionimmutablev ersion210211scalacollectionmutableversion210211sca lareflectversion210211scalaruntimeversion210211IncludeResource UsersviktorklangDocumentsworkspaceakkaakkaakka osgiariessrcmainresourcesUsersviktorklangDocumentsworkspaceak kaakkaakkaosgiariestargetresourcemanagedmainPrivatePackage akkaosgiariesblueprintTool Bnd1500Is that right
; general
And this is what is generated for akkaosgiManifestVersion 10BndLastModified 1344955802512BundleManifestVersion 2BundleName comtypesafeakkaosgiBundleSymbolicName comtypesafeakkaosgiBundleVersion 210SNAPSHOTCreatedBy 16033 Apple IncExportPackage akkaosgiusesakkaactororgosgiframeworkscalarun timescalascalareflectscalacollectionscalacollectionimmutablesc alacollectionmutablecomtypesafeconfigversion210SNAPSHOTImportPackage akkaactorversion2122comtypesafeconfigversi on04105orgosgiframeworkversion152scalaversion2 10211scalacollectionversion210211scalacollectionimmu tableversion210211scalacollectionmutableversion21021 1scalareflectversion210211scalaruntimeversion2102 11IncludeResource UsersviktorklangDocumentsworkspaceakkaakkaakka osgisrcmainresourcesUsersviktorklangDocumentsworkspaceakkaakk aakkaosgitargetresourcemanagedmainPrivatePackage akkaosgiimplTool Bnd1500
; general
That looks goodHow come I dont get the same results
; general
I wish I had that kind of super power to know what youre doing wrong Thanks for the confirmation Ill merge and close this
; general
Thank you Viktor
; general
You are most welcome thanks for verifying the fix
; general
Updated with better solution
; general
What do you say about scrapping all the query methods on Cluster and make the domain events the only user read API We still need them for tests and JMX but then we can place all that in a separate class ClusterReadView which can be privateakka This ClusterReadView doesnt even have to be active subscribing if jmx is disabled
; design
Perhaps I like the idea Can we get all info we need for the cluster admin tool in terms of querying from the event stream All memberstate changes yes but what about hasconvergence isavailable issingleton etc Or are these not needed you think We still need the management API though
; design
I move all existing methods to the new class at least better separation of conserns
; design
I already use the eventStream to update this state in Cluster so the change trivial
; general
I trust your judgement Do what you think is best
; general
Can I merge this now because Helena is depending on this work and it would be easier to have it in master I have done the metrics gossip based on thisIll do the more fine grained domain events before closing the ticket
; general
Do itOn Aug 16 2012 637 PM Patrik Nordwall notificationsgithubcom wrote Can I merge this now because Helena is depending on this work and it would be easier to have it in master I have done the metrics gossip based on this Ill do the more fine grained domain events before closing the ticket  Reply to this email directly or view it on GitHubhttpsgithubcomakkaakkapull617issuecomment7791171
; general
ok if there are any more comments Ill change afterwards
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator803
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator803
; general
Thanks for the fix LGTM
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator806
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator806
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator805
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator805
; general
LGTM apart from the small tiny things
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator805
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator805
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator808
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator808
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator823
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator823
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator807
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator807
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator811
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator811
; general
LGTM but Id like to hear drewhks opinion as well
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator810
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator810
; general
Apart from the missing codeblock samples it LGTM There should be one overall sample on JavaTestKit and one on each nested class you can just copy the ones from the docs
; design
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator810
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator810
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator812
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator812
; general
Given how small this feature is codewise Im certain that were doing things right Great work Patrik
; general
Thanks for valuable feedback I have added a commit with the improvements
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator817
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator817
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator821
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator821
; general
apart from the extension question LGTM
; general
yes of course I did that extension after this and What do you say about the ticket Can I use httpswwwassemblacomspacesakkatickets1165
; general
yes that is the right ticket
; general
strange messed up after rebase closing this and will add it in 1307 instead
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator813
; general
Looks awesome Patrik
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator813
; general
Grymt bra jobbat Excellent initiative Patrik
; general
Thanks for valuable feedback I have added a commit with the improvements
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator813
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator813
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator818
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator818
; general
LGTM  Merge it in
; general
Thanks for all LGTM but it is not ready yet I will add documentation also My plan is to complete that during the weekend You know this is a hobby initiative which was not really in the roadmap
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator822
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator822
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator816
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator816
; general
I think this solution has a way too high cost vs benefitWe should return the Thread at the first convenient place to do so as it should not add maintenance burdenAdding a systemAppend essentially invalidates the reason of the design of the system messages queue
; design
Ill simplify it so we rethrow after processing all system messages Gets rid of the append code
; general
Cleaned up the code
; general
Does that mean that this PR can be closed
; general
Yep Ill close it
; general
Sorry for the delay I only got around to this review now Apart from the details commented on above it looks pretty good the following result from further deliberations with the team please rename the subproject to akkaincubator the design of things in there should be one file for the impl one file for the test so that anybody who wants to can simply copy a pattern into their project if they do not want to depend on experimental features in this case I would collapse it into a TimerBasedThrottler class  companion where the specific messages are in the latterThis might be the start of something very cool  I plan on adding a few patterns in there when time permits
; design
I think we decided to name it akkaexperimental
; general
patriknw Can you confirm that it is called akkaexperimental
; general
I will verify with the other guys The naming convention that makes sense is akkaactorexperimental or akkaactorpatternexperimentalPatrik24 sep 2012 kl 1642 skrev hbf notificationsgithubcom patriknw Can you confirm that it is called akkaexperimental   Reply to this email directly or view it on GitHub
; general
just opened a pull req 746 for the contrib area please merge on top of that one possibly waiting a few hours until it is merged into master
; general
Ok rkuhn cool Will do so
; general
hbf in case you havent noticed the new contrib area has been merged to master Use the new Reliable Proxy Pattern as template httpdocakkaiodocsakkasnapshotcontribindexhtml
; general
patriknw Thanks I actually did but have tons of work here Its on my schedule for this weekend
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator27
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator27
; general
Sorry for the delay I submitted the code as a new pull request httpsgithubcomakkaakkapull835
; general
1 I guess
; general
bjornharrtell have you signed the CLA
; general
great I created a ticket for this httpswwwassemblacomspacesakkatickets2412we will merge when we have verified some more thanks
; general
This just ran the cluster tests without problems Merging
; general
seems like you based your work off of the wrong commit I have just updated the version to 204SNAPSHOT so you can rebase your commit on top of release20 Then Id probably just push f to this pull request
; general
Hmm strange dont know what happend A rebase release20 says patch2 is up to date already
; general
Ah I must have accidentally branched from releasing203 Will try to work out the git magic to fix I need to learn how to do that if I fail Ill just delete this branchpull request and redo the oneliner change
; general
Should be ok now
; general
Thinking some more about the api usage Wouldnt it be more convenient with    def getChildname String OptionActorRef
; design
or more scala style    def childname String OptionActorRef
; general
Unfortunately it would be more than just an optimization to push it into ChildrenContainer getByName returns None if it finds a ChildNameReserved but in this case we dont want to return false because this method is meant to signify that creating such a child would succeedOn the other hand if were looking at the case where a child is externally created which should currently not happen to normal user actors but who knows that might happen at any point in time basically rendering a nonreserving method useless But that would optimize for a case we currently dont allowI think the request which was behind the creation of this ticket is to use the ChildrenContainer as a local actor registry hence Id go with Patriks suggestion for now
; design
WDYM more than just an optimizationI assumed that since you cant create a child of another actor then the actor itself wouldnt find a ChildNameReserved in its own ChildrenCOntainer hence creating such a child would succeedThe real question here is if we want something nice with an Option in the API that cant be optimized or something that can
; design
Looking at the use case I have in mind    if childExistsname contextactorForname  msg    else contextactorOfProps name  msgso basically in the yes case it is quite likely that people will want to use the existing child for something Classical Java solution would be to model no as null but that is not nice
; design
ok then Ill go with childname String OptionActorRef so you can docontextchildnamegetOrElsecontextactorOfProps name  msg
; general
please also add getChildname String to UntypedActorContext Do we want to use null there I know of no precedent
; general
null is the classical java way will have to do for now
; general
fixes according to review
; general
1 apart from the scaladoc err
; general
fixes according to review comments
; general
should this possibly include a link to a Java SSL FAQHowto saying that we only enable people to use it but didnt invent it and thus will probably not be able to help much with SSL specific questions
; general
Sounds like a good idea Do you have any specific FAQ URL in mind or should I just link to httpdocsoraclecomjavase7docstechnotesguidessecurity
; general
linking to some Oracle docs is probably not the worst thing to do could also more directly go to httpdocsoraclecomjavase7docstechnotesguidessecurityjsseJSSERefGuidehtml
; general
fixed link to Oracle doc
; general
Excellent migration guide Very good job Patrik
; general
I did an additional diff of referenceconf files and only thing changed was logremotelifecycleevents so I added a note about that also
; general
Please note that the akka jobs on jenkinstypesafecom and scalable1 needs to be updated to use the 012 sbt launcher before merging this or things might break
; design
Launcher has now been updated on jenkins and scalable1 so everything should work fine
; general
looks good to me as a stepping stone towards the next Scala  Akka milestone
; general
apart from that UnstartedTimeoutMs should be a Duration this looks good
; general
LGTM this puts the logic pieces again where they belong I think
; general
Good catch Patrik Thanks 1
; general
I have not followed the problems so I dont have any valuable comments here
; general
The problem was that ChildTerminatedwhile enqueued firstmay be processed after Terminated leading to a nonunique child name error If the UID is not taken into account this code might remove the wrong child since Terminated as a normal message might be processed long after the child has been created anewWrt the checkthenact I think that the performance gain is very probably not worth the spreading of UID knowledge into the ChildrenContainer If this turns out to be wrong we can still fix it later
; general
Sounds like a good idea to clarify that
; general
OK done I thought it would continue on the previous warning block github rst rendering doesnt tell
; general
alright it looks like black magic but if it solves the problem it solves the problem
; general
you mean I should clarify more by which mechanism the barrier works
; general
So basically what you are saying is that by sending this message to the parent after the Supervise system message you guarantee that it will see the Supervise before processing any real messages from the child since we process all system messages after every normal messageLGTM
; general
bantonsson yes that is exactly what this is supposed to achieve
; general
A little more description int the NullMessage comment wouldnt hurt
; general
yes that would be good someone might refactor away it otherwise
; general
awesome that you fixed it
; general
thanks but Jenkins has just been so kind to supply me with another one  aargh
; general
ok if you say so
; general
yeah that code makes one a bit uneasy but LGTM
; general
This is ready for final reviewI will add rst docs also if you think this is the right thing
; general
I reverted the RouterContext
; general
I will add possibility to lookup routees also not only remote deploy We have that for ordinary routers
; general
Whenever you have some spare cycles this is ready for review
; general
Ill have a look asap but most likely on monday
; general
all review comments fixed
; general
yes good one
; general
All comments addressed
; general
Looks good but one piece is missing You should also update the migration guide
; general
Added migration guide
; general
Look good thanks Raymond
; general
Fixed as in review comments
; general
Closed new PR will be opened for this
; general
Looks  great
; general
youre too quick SmallestMailboxRouter has the same problem
; general
sorry for not verifying earlier
; general
Perhaps time to make it DRY
; general
alright I didnt look close enough on that one thought it handled it already since its using deadletters somehowIll fix that also
; general
Thanks Viktor The commit is updated now
; general
LGTM Ill let Roland give his verdict before merging
; general
Alright so functionalitywise this one is a keeper only one thing missing updating the docs can you do that as a part of this PR as well
; general
Yep will update the PR later tonight
; general
Excellent Thanks Gerolf
; general
My thought for the Cluster DeathWatch was to send the NodeUnreachable to the rootactor which would then send it to all its children which would send it to all its children and so on Node death should be infrequent enough for this not to become a problem WDYT
; general
Yes I thought about that and that is absolutely an alternative I see  and  with both How many remote watchers do we expect Many would result in many subscribers which might slow down the event bus Propagation through the tree would require check in each and every actor Propagating through the three can result in stuck msg if an actor is doing long processing In that case it would be a system msg I guessWhat do we expect if watch is added immediatelylong after node unreachable Should it receive Terminated
; design
Problem is that it needs to be idempotent which essentially means that it needs to go through the RemoteActorRefProvider lets talk on monday
; general
Adjusted some things according to todays design discussions Left todo known so far publish AddressTerminated via ClusterActorRefProvider which will also   mark connection as unusable   close connection verifyimplement watch of already broken connection should generate Terminated via deadLetter verifyimplement watch of unknown path should generate Terminated via deadLetter
; design
This is ready for final reviewAs discussed over lunch Il skip the connection quarantine part since that is not implemented in current transport Will probably be easier to support that in new actor based remoting
; design
aside from comments LGTM
; general
Shall I merge or will someone else review this
; general
I like it
; general
I was doing something like that in my own projects although with the possibility to start up multiple quasimain actors
; general
kittynotetoself ignore 17228909cat Roger Rebuilding prvalidatorpercommit for 651f699 rotatinglight
; general
kittynotetoself ignore 17324202cat Synchronaising pray
; general
The failures were very weird ones in cluster code so Im merging this anyway
; general
I will probably wait for more eyes here
; general
otherwise it LGTM
; general
This seems mergesafe
; general
kittynotetoself ignore 17215145cat Synchronaising pray
; general
PLS REBUILD ALL
; general
kittynotetoself ignore 17220466cat Roger Rebuilding prvalidatorpercommit for d34996ae rotatinglight
; general
kittynotetoself ignore 17324167cat Synchronaising pray
; general
kittynotetoself ignore 17330050cat Roger Rebuilding prvalidatorpercommit for d34996a rotatinglight
; general
kittynotetoself ignore 17333103cat Synchronaising pray
; general
So build 69 succeeded but since I used only the short sha d34996a the Kitteh doesnt seem to set the status correctlyMerging
; general
I like this
; general
its either this or specialcasing SelectionPath in the remote protocolwhich sounds rather hacky
; general
PLS REBUILD ALL
; general
kittynotetoself ignore 17221419cat Roger Rebuilding prvalidatorpercommit for dbac4808 rotatinglight
; general
previous failuresakkatestkitCallingThreadDispatcherModelSpecakkaremoterouterRoundRobinRoutedRemoteActorPLS REBUILDprvalidatorpercommitdbac480
; general
kittynotetoself ignore 17324022cat Roger Rebuilding prvalidatorpercommit for dbac480 rotatinglight
; general
kittynotetoself ignore 17335054cat Roger Rebuilding prvalidatorpercommit for dbac480 rotatinglight
; general
kittynotetoself ignore 17337038cat Synchronaising pray
; general
The failures are unrelated and I have only successful build runs since not reported by kitteh
; general
LGTM though one thought remains your solution of adding an AbstractStash to get around the singleinheritance problem is probably the only viable one but there must be a better name prefix than Abstract for this purpose Unrestricted perhaps
; design
Yes Im not too pleased with Abstract either I think that Unrestricted is a better name
; general
kittynotetoself ignore 17215164cat Synchronaising pray
; general
Doesnt look goodThe actor system could not shutdownhttpsjenkinsakkaio8498jobakkaclusterstress127consoleTexthttpsjenkinsakkaio8498jobakkaclusterstress128consoleText
; design
I see the shutdown problem without the patch also but the exception logging is still there with the patch as you see in above links to build 27 and 28
; general
This is not ready yet
; general
Thanks the change looks good But youll have to sign the CLA before it can be merged see CONTRIBUTINGmd there are 47 more superfluous occurrences of must or should may I interest you in removing those as well
; general
I signed the CLA online  I will take a look at removing those other occurrences  If you already have the output of your grep it would make it easier for me to eliminate those superfluous occurrences  If not I will do so on my own  I will submit a separate ticket for the additional occurrencesRegardsMike KrumlaufFrom Roland Kuhn mailtonotificationsgithubcomSent Sunday April 28 2013 119 PMTo akkaakkaCc Mike KrumlaufSubject Re akka 3272  Eliminate redundant should in DataflowSpec test output 1375Thanks the change looks good But youll have to sign the CLA before it can be merged see CONTRIBUTINGmd there are 47 more superfluous occurrences of must or should may I interest you in removing those as wellReply to this email directly or view it on GitHubhttpsgithubcomakkaakkapull1375issuecomment17137795
; general
Thanks All I did so far was the following which might or might not be complete bashegrep r shouldmust gfind type d name src
; general
kittynotetoself ignore 17215130cat Synchronaising pray
; general
Something doesnt look right  I dont think these extra merges should be there see previous comment  If somehow this is messed up we can close this pull request without accepting the commit and start over
; general
you can also rebase on current master and use the f flag for pushing thereby replacing the contents of the pull request thats how we usually do it
; general
I have verifed that mjkrumlauf has signed the CLA I will merge this and fix other occurrences in another PRThanks for contributing mjkrumlauf
; general
The name change is good but as you say its not the cause of the failureBarrier names dont have to be unique it just makes it a lot easier to debug when things go wrong Here we have several barriers since previous actorsstarted3 so there is no mixup
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator927
; general
Mixup no but will they wait for each other or since the actorsstarted3 was finished before they pass through unsychronized
; general
no the new barrier with same name will be used
; general
Yes and there can only be one barrier in progress at any given time So there is no room for somebody getting an old barrier
; general
Ok then this will not fix anything
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator927
; general
but it LGTM anyway
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator937
; general
can you please add the requirements on the system actors such as RemoteWatcher
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator937 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
So the SerializationCompatibilitySpec failed I assume that its ok to change it for things that arent dot releases
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator940
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator940
; general
LGTM apart from the default arg
; general
PLS REBUILD ALL
; general
Since the Kitteh is taking a nap this has been verified by triggering the validator by handhttpsjenkinsakkaio8498jobakkaprvalidator941
; general
Note that the failure unannounced disconnect is fatal in the way that it is an exception ClientLost that restarts the barrier coordinator and thereafter nothing can continue
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator935
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator935
; general
I think this is the right approach LGTM after name change and separation of messages
; general
OK then I will complete this
; general
Ready for final review
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator939
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator939
; general
There is no versioned snapshot I presume Anyway I am happy that my build will work correctly again
; general
Nope non versioned snapshot He only published a version so that we could use it
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator934
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator934
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator932
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator932
; general
This should be merged before other pull requests since it generates most failures Please review asap
; general
please review afterwards if you like
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator933
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator933 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
The failure is the one fixed by 1365
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator931
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator931 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator930
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator930 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
The failure was in ClusterDeathWatchSpec ticket 3255
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator929
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator929 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
The failure was in ClusterDeathWatchSpec ticket 3255
; general
Changed based on feedback from viktorklang
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator936
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator936
; general
looking good so far
; general
Updated with tests and Scaladoc for the adapter
; general
Old kitteh sad GO so I merge
; general
The PR validator only runs on JDK6 so it wont test the fix properly Verified locally on both JDK7 and JDK6
; general
kittynotetoself ignore 17216054cat Synchronaising pray
; general
So the failure was in the RemoteNodeDeathWatchSpec pull 1387 Could I please get some eyes on this one and that one so we can start merging and get rid of failures
; general
kittynotetoself ignore 17322838cat Roger Rebuilding prvalidatorpercommit for 5fd1955 rotatinglight
; general
Thanks for pointing this out and for thinking about both languages would you please amend and repush ie with force to keep the history clean
; general
Good catch LGTMNo more places docs code cluster samples
; general
I skimmed through the usages of shutdown before and we werent creating that many actor systems except for the cluster StressSpec Ill add that one as well even though it has never failed
; design
please also add all the Java tests which spawn systems check it and merge when confident
; general
Created a JUnit managed AkkaJUnitActorSystemResource and changed actor system shutdown to use convenience methods in all tests except documentation tests that demonstrate normal usage
; design
I see no changes to rst Is description of AkkaJUnitActorSystemResource covered by examples Any need to explain it further I guess that is our recommended way to write junit tests now
; general
Very nice Aside from the doc question LGTM
; general
So akkatestkit doesnt have a dependency on either ScalaTest or JUnit so the AkkaJUnitActorSystemResource is not part of the normal akkatestkit
; general
LGTM nice cleanup
; general
One more magic thing removedLGTM
; general
bantonsson do you know whats up with SerializationCompatibilitySpec
; general
Nope no idea about SerializationCompatibilitySpec Seems fishy
; general
So it probably has something to do with you removing the tell method from ActorRef which somehow changed the serialization of the FakeActorRef in the test That test is so brittle
; general
It would be better to test the actual serialization ie that it can read bytes and create obj from itThat only verifies compatibility in one direction though
; general
oh crap Ill figure this out then
; general
I removed FakeActorRef bantonsson is that an option It sure makes the test green
; general
rkuhn yes I think that it is an option to remove the FakeActorRef We should really create integration tests instead that uses the stable version and the head version together
; general
apart from not understanding the Exiting thing it LGTM
; general
kittynotetoself ignore 17214813cat Synchronaising pray
; general
the build bot fails to comment about the failure because the http request to get the console text failsjavaxnetsslSSLException hostname in certificate didnt match jenkinsakkaio  typesafecom OR typesafecom OR typesafecom        at orgapachehttpconnsslAbstractVerifierverifyAbstractVerifierjava228snip        at dispatchclassicHttpapplyHttpscala21        at backendPullRequestCommenteranonfunreceive1applyOrElsePullRequestCommenterscala51Ill make it more robust and deploy a new version
; general
previous failure was in RemoteNodeDeathWatchFast
; general
kittynotetoself ignore 17322956cat Roger Rebuilding prvalidatorpercommit for 3308039 rotatinglight
; general
wow thats a pleasant surprise  Im currently running the whole test suite since our build kitteh is on vacation will comment if I find something else
; general
Cool thanks If desired I would love to remove additional deprecation warnings There are some more low hanging fruit where language feature imports are missing and some Props with creators where anonymous actors are passed in But that takes some more effort as I would first have to understand what these annonymous actors do to give them appropriate names
; general
Unfortunately I didnt get around to it today but Ill write a blog post explaining a bit more of the background for the Props change and also some future perspective well try to reintroduce quite similar syntaxmacrobasedto keep the anonymous actor syntax but make it safe which is why Im not sure yet that we will want to convert themThat being said I find it totally awesome that you did this cleanup You made my weekend thanks
; design
You are most welcome That is the least I can return for all the amazing work you guys do all the time
; general
it can be merged once the KITTEH has been repaired and signed off on this
; general
kittynotetoself ignore 17215223cat Synchronaising pray
; general
okay the last commit was verified correctly the failure was a known deficiency in the OSGi sample application test run with the new kitty well have to squash more eagerly I think to avoid long build times due to multiple commits Ill see whether CONTRIBUTINGmd needs to be updated
; general
Again thanks a lot Dario
; general
LGTM we can optimize garbage creation laterafter having measured that it is worth convoluting the code
; general
failure was buffer overflow
; general
PLS REBUILD ALL
; general
kittynotetoself ignore 17386163cat Roger Rebuilding prvalidatorpercommit for a9394d9f rotatinglight
; general
It is still referring to build 89 I merge this oneliner anyway
; general
any more opinionsdrewhk
; general
Hmm I would not put this in the Transport API Is there any reason to log it there and not in Remoting
; design
ok I will move it to a separate extension
; design
I have moved it to an extension please take another look drewhk
; general
updated as discussed and added to docs
; general
kittynotetoself ignore 17215231cat Synchronaising pray
; general
previous failure was    error Failed tests     error akkaclusterStress    error akkaclusterroutingClusterRoundRobinRoutedActor
; general
kittynotetoself ignore 17322881cat Roger Rebuilding prvalidatorpercommit for 2b4787f rotatinglight
; general
kittynotetoself ignore 17324865cat Synchronaising pray
; general
the build failures are fixed and kitty has verifiedone was a misplaced barrieranother was due to parallel multinode buildsI merge this to wip2787clusterstresspatriknw branch now
; general
This is nice LGTM
; general
LGTM apart from that doc thing
; general
renamed to isOlderThan and added the doc comment
; general
then by all means mrs can someone translate that to sknska
; general
ok I want to merge this after 1381 because I think it can be merge conflicts and it will be easier to fix that in this branch and kitty will have less to do
; general
I dont like the Array for several reasonsAn alternative would be to use Vector and put PatternHolder implementing equalshashCode as elements for wildcards
; general
switched to immutableIndexedSeq and PatternHolder vastly reducing the handcrafted code to nil
; general
ah forgot some docs
; general
excellent thanksLGTM after some minor adjustments
; general
kittynotetoself ignore 17228867cat Roger Rebuilding prvalidatorpercommit for 7ea3044 rotatinglight
; general
kittynotetoself ignore 17322852cat Synchronaising pray
; general
kittynotetoself ignore 17335285cat Roger Rebuilding prvalidatorpercommit for 7ea3044 rotatinglight
; general
kittynotetoself ignore 17414079cat Roger Rebuilding prvalidatorpercommit for 7ea3044a rotatinglight
; general
build was successful but kitty did not bother to comment
; general
Looks Good To Me we will merge when we have collected a few LGTM
; general
Ah capisce Molto grazie
; general
LGTM nice job
; general
kittynotetoself ignore 24386495cat Synchronaising pray
; general
kittynotetoself ignore 24401600cat Synchronaising pray
; general
kittynotetoself ignore 24297628cat Synchronaising pray
; general
LGTM nice and clean
; general
Regarding deprecation This feature doesnt add any value to 22 without the reachability feature so I dont think it should be backported and just adding a deprecation warning without an alternative doesnt make sense So I guess I for 23 I have to remove the require and have a fallback for that meaning autodownunreachableafter0sOK
; general
yes you are right of course deprecation in 23 it is
; general
Rebased and changed to deprecation for 23
; general
kittynotetoself ignore 24571933cat Synchronaising pray
; general
drewhk Could you please try this out on windows You need protoc v250 on the path and then run akkaremoteprotobufgenerate inside sbt
; general
Yep will do
; general
Windows guy approves LGTM
; general
kittynotetoself ignore 24386374cat Synchronaising pray
; general
I have added Dakkaclusterasserton to jenkins jobs
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator876
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator876 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
This will complicate things when using stackable traits with actors For example given an actor A with a stackable trait S where class A extends Actor and trait S extends Actor I could do so far     actorOfPropsnew A with SNow a I have to explicitly define a new class X    class X extends A with Sto get     actorOfPropsXworking because    actorOfA with Swill raise an ActorInitializationException Or am I missing something If the extra class X extends A with S is really needed then Id be highly in favor of not deprecating PropswithCreator but rather offering it as an alternative to the new API and documting the issues that may arise
; design
The goal is to remove API which equates to a gun pointed squarely at your foot of course you can point it somewhere useful if you know how to operate it but most users wont In this sense Im sorry to say that we really do have to remove those methodsHowever the plan is to wait until macros become a viable option to include in core Akka packages at which point we can reintroduce syntax which looks quite like the one you want but is safe The idea is that you give a thunk of code as before to a macro which will then convert that to the new way of doing things basically writing Propsclazz args  for you and I dont see a reason why this macro could not create that anonymous class which is needed to make things work in the stacked traits caseThe old methods will remain availablealbeit deprecated to warn visibly about the problemsuntil that safer solution has been implemented Does that sound good enoughPS you could also play with this if you want it earlier by creating an IndirectActorProducer which can transform a TypeTag into a class generated on the fly and instantiate that but youd still have to wait until Eugene has allowed TypeTag serialization to escape from his brain into the world at large
; design
The old methods will remain availablealbeit deprecated to warn visibly about the problemsuntil that safer solution has been implemented Does that sound good enoughAs long as the deprecated methods arent removed until theres an alternative solution available for dealing with anonymous classes and stackable modifications Im fine with it
; design
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator878
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator878
; general
LGTM I might take a look at the generated full documentationPerhaps we should mention that deprecated methods arent removed until theres an alternative solution in the migration guide to not annoy users that change this all over their code base and then a source compatible solution pops back
; design
patriknw I think that being explicit about no removal until alternative solution would be an excellent addition
; design
thanks for the suggestions
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator880
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator880
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator883
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator883 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator884
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator884 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
Cluster StressSpec failed
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator886
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator886 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
pls suspend reviewing I am merging the props serialization changes
; general
Updated sorry for the intermission
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator887
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator887 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator888
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator888
; general
While the kitteh was successful ClusterStressSpec sometimes fail on my machine I have some ideas talk about it tomorrow
; general
Updated resend strategy to a more economic one
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator888
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator888
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator892
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator892
; general
Great work Endre
; general
PLS REBUILD ALL
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator903
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator903 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
akkaclusterUnreachableNodeJoinsAgain failed patriknw is this something knownCluster stresstest survived though
; general
PLS REBUILD ALL
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator905
; general
Build was successful In you go
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator891
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator891
; general
I reviewed this yesterday but never placed the LGTM stamp here so here it is LGTMVery nice docs and samples
; general
rebasing was not entirely trivial clashed with the WriteFile feature could be a good idea to take a look at TcpConnectionscala again
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator902
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator902
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator871
; general
I think the wording of the must not is confusing apart from the fact that it shouldnt have must first What are we testing here reallyWasnt the purpose of the first test message to ensure that the it had been forwarded to the child and that when we stop the child we make sure that we dont get back the child green to see that we really stopped and recreated the child of the supervisor
; general
I mean then you would have to add some ack that the message had been forwarded before triggering the latch
; general
I asked Roland what this test tests we werent completely sure either I hoped someone enlightens me here  We can ack though the forwarding of that message and then it will be lost  if this is something we want to test
; general
I created a version that acks the forwarding of the first test message All we need to decide if we need it or not
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator871
; general
I think that we should have the ack of the forwarding of the test message to make sure that we actually stop and start the child
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator872
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator872
; general
apart from the err msg LGTM
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator873
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator873
; general
Good idea LGTM
; general
sounds like a good idea
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator874
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator874
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator875
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator875
; general
LGTM I like the instant unwatch feature
; general
LGTMYes akkapersistence is a much better solution well spotted
; design
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator864
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator864
; general
Conclusion from mlist httpsgroupsgooglecomdmsgakkadevd0sXyAr8eBU86RYRaHDLIJI will implement the Welcome message and UID as discussed
; general
This is ready for final review Massive number of changes but most of it is trivial I will squash before merge Here is the updated task list Disallow join requests when already part of a cluster Remove wipe state when joining since join can only be  performed from empty state Welcome message instead of gossip as reply to join only accept Welcome from the member that we are trying to join with Create uid in RARP Use uid in cluster Member identifier UniqueAddress Use uid in vclock identifier Ignore gossips to wrong destination uid and from unknown and unreachable members Make sure received gossip contains selfAddress Test join of fresh node with same hostport Remove JoinTwoClustersSpec Retry unsucessful join request Make Member apply and constructor is privateakka
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator870
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator870
; general
apart from placement of the actual UID LGTM
; general
Adjusted according to comments 3 last commits I will squash and merge when you have looked at those minor changes
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator889
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator889 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
Its a real failure The problem is in the test I will fix it
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator889
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator889 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator894
; general
Great job especially the boyscouting Squash and merge
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator894
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator866
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator866 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
Fixed missed committing the referenceconf
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator867
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator867
; general
PLS REBUILD ALL
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator869
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator869
; general
LGTM after minor things
; general
kittynotetoself ignore 24591871cat Synchronaising pray
; general
krasserm please squash and adjust the commit comment to our encoding    per 3615 Fix InvalidActorNameException in persistence tests
; general
Is the commit message encoding documented somewhere Just found httpdocakkaiodocsakka221devdeveloperguidelineshtml which doesnt explain the per etc
; general
patriknw I mean I know that the 3 letter abbreviation is a module but Im not sure about
; general
httpsgithubcomakkaakkablobmasterCONTRIBUTINGmdI will merge this when prvalidator is done
; general
oh dear how could I miss that Theres even a link at the top of the doc I was looking at Sorry for keeping you busy with that  Will adhere to it in upcoming commits Thanks in advance for review and merging
; general
It would be interesting to see how much this changes convergence times hopefully only a slight increase and unnecessary gossips hopefully drastic decrease
; general
faulure was unable to connect to githubcom
; general
yes I will run the cluster Stress test on this next week to make sure that it works in practice
; general
Probably the default setting needs to be retuned too
; general
why do you think 08 should change in what directiontests will tell but Im not really interested in spending a lot of time finding the optimal values now this ticket is more about avoiding the shoot down game
; general
No 08 seems to be a nice first shot I expected something like 01 that is why I thought that we need to increase it  not necessarily optimizing just to avoid effectively disabling talkback
; general
I meant biased gossip not talkback of course
; general
failure was in ChannelSpec created ticket
; general
LGTMWill be interesting to see the results
; general
Failed experiment attached info in ticket
; general
LGTMI have a felling that the merge in Reachable can be simplified at the algorithm level Will open a separate ticket
; general
kittynotetoself ignore 24502178cat Synchronaising pray
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator863
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator863
; general
Merging this since jenkinstypesafecom will fail consistently without it It hasnt got mvn installed or its not in the path
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator858
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator858 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
JavaTestkitSpec failed should be fixed in master but I guess the kitteh is being stupid again
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator862
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator862 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
Ok this now contains an improved solution for toning down the logging of DeathPactExceptionsThe UDP side is now also coveredI also fixed a problem with Johannes latest halfclosed feature that only surfaced under OSX and cleaned up some small stuff
; design
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator868
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator868
; general
so shall I merge and make the publish change afterwards or do you want to do that Mathias
; general
Roland sure go ahead
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator855
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator855 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
Note that failures were on jenkinsakkaio not slow jenkins that skips TimingTestsThe adjustments of the timeouts might help anyway but Im not convinced that it must be marked as TimingTest
; general
Good point will see if I can rewrite things to not require uninterrupted sleeps
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator855
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator855 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
The test failure is for the fix to JavaTestKit so ignore that for now
; general
great solutionLGTM still not sure you need to tag it is timing test
; general
rebased on top of new master with fixed JavaTestkitSpec
; general
PLS REBUILD ALL
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator859
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator859
; general
Second thought it is a small assumption on CallingThreadDispatcher that makes this nonracywatch sends a message to the testActor and it is only because of CallingThreadDispatcher that it is guaranteed to be delivered before the stop is finishedI dont think you should check existenceConfirmed in such a test
; general
WDYM The Watch system message has to be deliviered before the Terminate system message
; general
the testActor always uses the CTD so I think were fine what Patrik means is that your watch sends the Watch indirectly
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator857
; general
yes your previous test also received Terminated I guess but with wrong existenceConfirmedDo whatever It LGTM
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator857
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator851
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator851 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
I like it
; general
I have tested RemoteWatcher thoroughly
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator879
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator879
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator882
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator882
; general
Added the cluster aware specialization of the RemoteWatcher
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator885
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator885
; general
I have read the implementationwhich looks goodbut not studied the tests I trust you when you say that youve been thorough
; general
I have updated the docs in 2a0c59d I have a question there
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator885
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator885
; general
Added a warning about actorFor in the Watching Remote Actors section 3fb9d1b
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator893
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator893 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
After kitty verification I will merge this I have added the UID to the heartbeat messages and dummy api in RARP for quarantining which will be implemented in ticket 2594
; design
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator897
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator897
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator854
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator854
; general
Documentation still missingWe didnt yet finally decide on which strategy to use for scheduling possibly blocking file IO operations rkuhn commented in the previous PR The configurable dispatcher to run the actual sending on is one way to do it another could be to wrap the transferTo call in blockingWhat is blocking Or should we use a different dispatcher per default eg a ThreadPool with a low fixed size number of threads eg 4 The advantage of using several threads would be that it might be worthwhile even with just one disk to initiate disk reads as early as possible so that the OS would be able to deliver data more efficiently from its IO queue
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator848
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator848
; general
LGTM the chosen solution allows tuning by setting a different dispatcher which I think is fine It should be documented that these tasks may block threads and that no scalaconcurrentblocking marker is used the latter is deliberate in order to control maximum parallelism on these tasks
; design
Cool Just a side question will this be exposed in some way in Spray to serve static content
; design
Yes thats the plan See sprayspray269
; general
I incorporated the suggested changes  fileiotransferTolimit default 512KiB to prevent long blocking file IO calls when network is too fast  dont lose direct buffers on exceptions  forward Exceptions caught during the exactor transferTo call to the actor for proper handling
; design
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator848
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator848
; general
Great work thanks
; general
Yay thanks for the comments
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator850
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator850
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator850
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator845
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator847
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator847
; general
kittynotetoself ignore 25014046cat Synchronaising pray
; general
Great work Patrik I like what I see This should cover all shortcomings I remember eg users can add routees by sending a message and the whole thing works equally well in a normal actorTheres just one thing I dont understand right now why does a Nozzle need a SupervisorStrategy
; general
yeah for the Nozzle it doesnt make sense to have supervisorStrategy
; general
Reimplemented all remaining routers Next step is to consolidate the routing2 package with old routing and deprecate and remove old stuff
; design
Regarding the naming of the router that sends to paths I want to find a name that associates with something that spread the messages typically for scaling out on other nodesAn alternative to Nozzle might be Fan fan out is typically what it doesWas also thinking of farming out but Farm doesnt give the right association
; general
New stuff in correct packages old api deprecated and old api for custom routers removed Kept duplicate of all old testsNext step will be to add the nicer props factories
; design
That failure 969 was unrelated to these changes created ticket
; general
Now is a good point for initial review if you have not looked at this beforeAdded proposal of the nicer props factories b7d2228 When you have reviewed and we agree that this is the way or we decide for something else I will add the same props factories to other routers and update more testsAfter that the final step will be to rewrite the documentation
; general
Head is spinning but LGTMRegarding the name Nozzle or Fan they just dont feel righ Isnt it more appropriate to call it a Group or similar The routees are a group of named paths as opposed to an anonymous pool
; general
I am through half of it Sorry for having more questions than actual comments but this is huge Incredible work Patrik
; general
bantonsson I kind of like the simplicity of the name Group and Pool
; general
I finished the second round of my review LGTM
; general
Yes still looking great and 1 for sNozzleGroupg
; general
LGTMI like the refactoring
; general
Yes this looks very good one question why not rely on the serialization infrastructure already present in an ActorSystem
; general
rkuhn main reason for this is that snapshots can get very large MB  GB range and converting them to a byte array in memory would roughly double memory consumption Nevertheless we could implement a default snapshot serializer that delegates to the existing serialization infrastructure which should work well for all apps with small to medium size snapshots Ill add this to my todo list
; general
we could also enhance the infrastructure to allow streaming in generalRegards Dr Roland Kuhn Akka Tech Lead Typesafe  Reactive apps on the JVM twitter rolandkuhn
; general
This would be even better Shall we follow a twostep approach here First a delegating solution to the existing infrastructure then an extension of the existing infrastructure to allow streaming I think the first step is just minor effort not sure about the second step though
; design
sounds good please create tickets
; general
LGTM very good change
; general
Isnt this a bandaid mitigating the fact that the lifecycle events call each other but are overridable as opposed to being called in the right order by the environment
; general
drewhk yes the lifecycle callbacks are a bit messy but you would still need the separate callbacks for the around so as not to mess with the user actor behavior
; design
Yes you are right LGTM
; general
To persist my reasoning for recommending this pull request stackable overrides are possible in Scala using abstract override which is not applicable in this case and if it were then we would still have the problem that nearly nobody understands that feature properly and it does not work at all with Java Therefore we have now an overridable interceptor which exposes the desired functionality and is compatible with the whole user baseLGTM
; general
kittynotetoself ignore 24824141cat Synchronaising pray
; general
kittynotetoself ignore 24857315cat Synchronaising pray
; general
I dont know what is wrong with the kitty she is building this over and over again once per hour all successful
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator925
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator925
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator925
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator925
; general
please put ticket number in commit comment otherwise LGTM
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator926
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator926
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator910
; general
Anyone objects I give 10 minutes
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator910
; general
only looked at it briefly but as far as I can see it is good
; general
Could not take a very deep look but otherwise LGTM
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator912
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator912
; general
I have to trust youSpray on how the SSL decodingencoding should workLGTM
; general
apart for some minor adjustments to the config LGTM
; general
PLS REBUILD ALL
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator913
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator913
; general
Although Kitteh is happy there was a bug I will neeed a second run
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator913
; general
There is some unexpected interplay with clustering and it fails in ClusterDeathWatchSpec Do not merge
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator914
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator914 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
I know that technically the heading markup could be shortened but Im not doing that now
; general
I love the change but the indexhtml page only contains two headings the PDF looks fine Java Documentation Scala DocumentationShould we link to the sub pages from the siteOtherwise LGTM
; general
will change the site later
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator919
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator919
; general
ok looks innocent Please run cluster tests on it
; general
yep that is what I am doing
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator920
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator920 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator921
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator921 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
ClusterDeathWatchSpec  ticket commented
; general
PLS REBUILD ALL
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator922
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator922
; general
FYI It seems the latest version of the netty workaround is herehttpsgithubcomnettynettyblobmastertransportsrcmainjavaionettychannelnioNioEventLoopjava
; general
One thing our default setting is an infinite selecttimeout which ends up not actually running the guardedTimedSelect Does the epoll bug only manifest itself when select is called with a timeout If not the current solution in this patch is insufficient
; design
The new netty logic seems to be something like this  calculate a deadline for the given timeout  during the deadline call selecttimeout in a loop with the timeout value set according to the deadline and current time  count how often selected  0 occurred during this loop  if the count goes over a threshold default  512 times rebuild the selector
; general
Comparing with the netty solution I find theirs a bit superior They do not require the addition of an instance field that is written to even in the case of a regular unsuspicious selection resultWe could change the bug detection logic to spin on the selecttimeout call for as long as the original timeout deadline has not yet passed If we spin more often than the threshold we declare the selector dead
; design
On a related note We just talked about the selection infrastructure a bit more thinking about remaining perf improvement potential Why do we actually offer the selecttimeout setting Currently we cannot see one reason why I should want to set a noninfinite value for this setting If there really isnt one we should remove it and simplify Once this is done there might optimization potential in manually managing the selectwakeup interaction by switching to selectNow and avoid the wakeup call as long as there are already other tasks scheduled on the selector dispatcher
; general
The reason for the AkkaSelector is to avoid complecting the current logic However if we decide we are not going to support selecttimeout then we wont need it afaict
; general
akkaioselecttimeout is configurable so we should better have code somewhere which uses selecttimeout  code herehttpsgithubcomakkaakkablobmasterakkaactorsrcmainscalaakkaioSelectionHandlerscalaL179
; general
The question is if theres still good reason to make it configurable
; general
Optimized the implementation of Wakeup by trying to do so idempotently without issuing a syscall each timeTheres a bit of terse code in there but its for the sake of performance
; design
I still think we should reevaluate whether we really want to introduce all this complexity just for allowing the user to configure a timebounded select After some more thinking we remembered the reason we included it in the first place for enabling sharing of a single selector thread between multiple selectorsIs this use case really worth this effort When exactly would I want to share a single thread between multiple selectorsI think disallowing timebounded selects would help us in keeping complexity low and make use of one advantage we have over the netty architecture netty apears to use its IO thread also for other nonselectorrelated tasks and therefore has to support timebounded selects Since we dont we dontAlso we are currently experimenting with an optimization that would allow interestOps for a SelectionKey to be set directly from the connection actors This is what netty was doing up to version 35 They needed to remove this optimization due to the Epoll bug workaround which requires key migration from one selector to another as done by Viktor here which is hard to do if interestOps setting is not centralized We dont have benchmarking numbers yet but Id feel uneasy about loosing out on optimization potential because of a feature that noone needs
; design
source for the netty detail httpsgithubcomnettynettypull789
; general
calling interestOps from many different threads may or may not be beneficial at least it is not immediately clear to me we should benchmark both alternatives
; general
yes we are currently on thatThis is the change we are testing httpsgithubcomsprayspraycommitfa170d525b861cbb92103bb71f73d25b0eab9d34
; general
Ok benchmarking shows that moving setInterestOps off the selector thread doesnt help Apparently the selector has only one lock that all keys synchronize on Having the connection actors manage ops themselves reduces the number of actor message sent to the selector actor but at the same time creates contention on the single lock causing throughput to actually drop by about 30 in our tests So this is not a good ideaStill getting rid of the hashmap in the selector can and IMHO should still be done This has no dependency on this PR however Ill open a separate PR for that change
; design
Ok I wont do more on this PR until someone decides what happens with selecttimeout
; general
Bounded or nonblocking select are not really advertised yet and first and foremost we do not have a single test case for them hence they should go The usecase is running Akka IO on a smartphone where one thread is used for everything including the select loop If we want to introduce that later we can just resurrect the code from the 22M3 tag Or we could then make it an alternative facility TcpAlt or somethingViktor do what you like most  and please keep a comment in the code that interestOps are ONLY to be called within the loop possibly pointing to this discussion
; general
Alright what do you guys think about the new commit
; general
apart from the small fix it LGTM
; general
kittynotetoself ignore 16716300cat Roger Rebuilding prvalidatorpercommit for 50172337 4a590b73 rotatinglight
; general
Ummm is the kitteh dead or something
; general
So the kitteh works a bit different now It normally uses the issues to mark the state of the PR and it doesnt comment in the PR when it startsfinishes a job It has picked up this PR and scheduled builds
; general
Ah but doesnt that mean that the author doesnt get a notification by email if it failed as it did with the PRs which was awesome btw
; general
Yes I miss the emails as well Well have to see what it does on failures It commented on this pull anyway
; general
PLS REBUILD ALL
; general
kittynotetoself ignore 17198718cat Roger Rebuilding prvalidatorpercommit for 3d4e26a3 96a6deb7 rotatinglight
; general
PLS REBUILD ALLprevious failed with connect timeout in IODocSpec why the kitty did not complete the determination is unclear to me
; general
kittynotetoself ignore 17211400cat Roger Rebuilding prvalidatorpercommit for 3d4e26a3 96a6deb7 rotatinglight
; general
so it seems that rebuilding does not really happen after a previous unrecognized failure
; general
kittynotetoself ignore 17215070cat Synchronaising pray
; general
so what does this Synchronaising mean it didnt start new jobs and it didnt change the status of the PR  ie the Details link above still points to the outdated failure
; general
So its meant to make the Kitteh reread the jobs from the PR and Jenkins and try to set the status accordingly But for some reason which havent been nailed down yet it doesnt do anything with our PRs even though the log files on buildbot indicates that it finds the jenkins job status
; general
okay thanks for the update
; general
this needs some merge love
; general
After you have merged this Roland Ill put in another PR building on this which brings another set of improvements I wanted to wait until this gets merged because it touches a lot of the same code
; general
Since Viktor is on vacation I took the liberty to rebase and squash well see what the kitty thinks about it now
; general
sirthias youre good to go
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator923
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator923
; general
Looks good but it should also be mentioned in the last section of loggingrst
; general
1 for documentationLGTM
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator923
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator923
; general
Changed to UTC and added test
; general
BUT you have still not updated loggingrst with the new mdc value
; general
yes needz moar docks
; general
sorry for the nitpicking apart from which it LGTM
; general
PLS REBUILD ALL
; general
kittynotetoself ignore 17198788cat Roger Rebuilding prvalidatorpercommit for 7f84dbf4 rotatinglight
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator924
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator924
; general
Thanks for this fix
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator909
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator909
; general
Any thoughts on this Can it go in
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator906
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator906
; general
I will merge this
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator908
; general
LGTM good catch and you are probably right about the rejoining including its brokenness
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator908
; general
Awesome catch I think youre spot on in the analysis LGTM
; general
alright then I merge
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator899
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator899 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
Looks like you missed a spot in StatsSamplescala Otherwise LGTM
; general
fixed cluster samples also
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator900
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator900 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
Last failure was in UdpIntegrationSpec ticket 3245 created
; general
I added the Scala API marker
; design
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator898
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator898
; general
Yes this is the old pain point but if Id have a good idea it would be fixed by nowLGTM
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator907
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator907
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator901
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator901
; general
LGTMvery nice feature
; general
Great work BjrnThere are two things naming things describing overriding rules and offbyone errorsThe terminology is currently something like mailbox is the thing which knows how to run an actor nonconfigurable message queue is the thing which holds the messages fully configurable mailbox type is the configurator which mostly concerns itself with the message queue typeIn that light Id say that the term mailbox queue should be extroduced The other thing is that there should be a numbered list of the override priorities in the docs
; design
Update according to comments
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator901
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator901
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator904
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator904
; general
Its not immediately obvious to me what the goal of this change is can you elaborate
; general
Check out the ticket descriptionhttpswwwassemblacomspacesakkatickets3581ioaddtcpcompoundwriteactivityticket I hope it nicely explains the motivation
; general
Ah thanks for the pointerJust being curious but what other solutions where viable
; general
I see at least three alternatives to this currently proposed solution1 Dont change anything   This would require all applications building on top of akkaio to actively manage writes combining memory with disk data or noncontinous disk data eg from several files themselves This can be done with explicit ACKs that trigger the sending of the next chunk after having been received by the application   In spray this would require us to write a new pipeline stage that does this   Apart from hurting latency and throughput not a tradeoff this solution increases the logic and complexity on the user side of akkaio and requires everyone to implement this same stuff again2 Fuse TcpWrite with TcpWriteFile   This could be done by extending ByteString to also allow offheap ie diskbased content ByteStrings already support compounding ie copyless concatenation so theoretically a simple TcpWriteByteString ack would suffice in akkaio   However Im not sure ByteStrings really should be able to model offheap data IMO this would overload the ByteString abstraction Another disadvantage over the solution proposed with this patch is that you wouldnt be able to request intermediate ACKs eg after the second of 3 subwrites has been completed3 Model TcpCompoundWrite differently   The currently proposed model for compound writes certainly isnt the only one conceivable One alternative could be something like       case class Writedata ByteString ack Event next WriteCommand extends WriteCommand       case class WriteFiledata ByteString ack Event next WriteCommand extends WriteCommand       case object EmptyWrite extends WriteCommand   However somehow the proposed model is currently the one we like best
; design
Couldnt it be solved by sending a message for each using NACK and then do the last write with ACK
; design
The problem is that if I have 2 writes that are ready to be sent I cannot sent them right after each other to the IO layer as the second one will usually immediately come back with a NACK I need to delay the second write until the IO layer has written out the first The only way I can do this reliably is via ACK
; general
My concern Sending huge messages is IMO a bad idea especially if you need to send it over the network since it requires full retransmission if it arrives broken Also it creates a huge entity that can only get GCed once it has been written to the sinkIf we take a step back would it make sense to have some kind of transmittertransfer actor spawned that will deal with the transfer in one go
; design
If huge messages are a concern that we should prevent them However this patch doesnt introduce huge messages Huge message are already possible with the existing API since we can write one ByteString and a ByteString can have any size and even be a compound one consisting of many subByteStringsI dont think the IO layer should enforce any limit on message size Its up to the user to decide whether and how she wants to allow and deal with big messages Also we already allow the passing of potentially huge offheap data chunks to the IO layer with TcpWriteFileThis patch merely smoothens out the API where it isnt yet as properly designed as it should be It doesnt add anything that you cannot already do without the patch It simply removes complexity and unnecessary overhead If we take a step back would it make sense to have some kind of transmittertransfer actor spawned that will deal with the transfer in one goWhat would that buy us over the solution proposed with this patch Apart from added overhead and complexity I dont see any benefit
; design
Its also about fairness sending a massive IO message means that no other writer gets through until the massive message is all over the wire rightRereading the PR Im less concerned however there is one glaring omission  there is no Java API for chaining the writes
; design
Its also about fairness sending a massive IO message means that no other writer gets through until the massive message is all over the wire rightNot sure what exactly you mean A massive IO message will be spoonfed to the kernel either in chunks that are no bigger than the sockets send buffer in the case of TcpWrite ie inmemory ByteStrings or the configured fileiotransferTolimit in the case of a TcpWriteFileSo the connections TcpConnection actor will not block the thread for too long thereby allowing other connection actors to run Of course one massive IO message might take some time to go out and will therefore prevent other data from being able to be sent across this one connection However that is what Id expect as a user no Rereading the PR Im less concerned however there is one glaring omission  there is no Java API for chaining the writesYes that is very true and needs to be fixed Ill do it today
; design
Its also about fairness sending a massive IO message means that no other writer gets through until the massive message is all over the wire rightNot sure what exactly you mean A massive IO message will be spoonfed to the kernel either in chunks that are no bigger than the sockets send buffer in the case of TcpWrite ie inmemory ByteStrings or the configured fileiotransferTolimit in the case of a TcpWriteFileSo the connections TcpConnection actor will not block the thread for too long thereby allowing other connection actors to run Of course one massive IO message might take some time to go out and will therefore prevent other data from being able to be sent across this one connection However that is what Id expect as a user noIf you have multiple Actors sending writes to the same endpoint if they all write many smaller writes they have the chance of interleaving but if you only send one huge write it till need to be digested by the network before the other messages get processed Does that make senseSo its not only about the TCPConnectionActor starving other TCPConnectionActors much is it is writers to the TCPConnectionActor starving the writes of other writers to the same TcpConnectionActor Tuning fairness of the TCPConnectionActors can be done with the dispatcher throughput setting Rereading the PR Im less concerned however there is one glaring omission  there is no Java API for chaining the writesYes that is very true and needs to be fixed Ill do it todayThanks
; design
If you have multiple Actors sending writes to the same endpoint if they all write many smaller writes they have the chance of interleaving but if you only send one huge write it till need to be digested by the network before the other messages get processed Does that make senseThe use case you are sketching out is unlikely If you have several actors sending write commands to the same TcpConnection actor in an uncoordinated fashion you will very quickly have NACKs coming back since the IO layer doesnt accept more than one pending write Additionally the order in which their writes get written to the connection is basically undetermined So in the very large majority of cases you will have some kind of coordination between writes ie one actor serializing the write commands establishing order and managing flow controlFor efficiency in such a use case the ability to group writes that are in memory already anyway into one single command that the IO layer can then transfer to the send buffer as quickly as possible is exactly what this patch provides
; design
Consider me convinced now then
; general
Ill get the update with the missing Java API in ASAP
; design
One thing though Im not sure I like CompactWriteCommand as a name Whats compact about it It is not using compaction like ByteStrings
; general
I was looking for something that is not compound ie combined from others Maybe SimpleWriteCommand
; general
Atomic would be a good name but unfortunately it has already a defined meaning in the concurrency context Elementary maybe
; general
I was thinking about AtomicWriteCommand as well but since it is not really indivisible the ByteString in TcpWrite might even be compounded it might not quite fit I dont have a strong preference though
; general
Ok Ill go for SimpleWriteCommand Good enough
; general
Ok renamed CompactWriteCommand to SimpleWriteCommand and added the Java API for write command compounding
; design
LGTMMaybe add example use cases to the documentation
; general
LGTM once docs are added
; general
Ok rebased onto current master and added section to IO docsSorry for the delay
; general
Thinking about the API a bit more people will want to append not prepend in most cases How can we make that more intuitive
; design
Classic solution provide a builderOr have a
; design
Sorry about the miscomment and the accidental close no idea how that happened Thinking about the API a bit more people will want to append not prepend in most cases How can we make that more intuitiveI think we have at least these 3 options1 Add an inefficent general append logic2 Provide a mutable builder for compound writes3 Add a CompoundWriteapplywrites SeqWriteCommand CompoundWrite overloadKeeping the tailbased design of TcpCompoundWrite probably makes sense since it keeps the implementation simple fast and memory efficient
; design
New doc chapter updated according to comments and duplicated on the java side
; general
Id favor option 3 applySeq and createjavalangIterable then people can build their sequences however they like A small doc snippet showing that off would then be good to also fix that part of the API against accidental improvements
; design
Ok expanded the API with some more construction helpers enabling the convenient building of WriteCommand instances from IterableWriteCommand and JIterableWriteCommand
; design
Great thanks RolandWed also need a backport to 22 for sprayWhatd be the best way to get this done
; general
given the  marker that should not be possible 22x needs to stay binary compatible and source compatible
; general
Well with two small changes we can turn the  into a 1 Turn WriteCommand back into a trait2 Move the ack and wantsAck members from SimpleWriteCommand back up into the WriteCommand classThe CompoundWrite class would then receive two hardcoded members    def ack  TcpNoAck    def wantsAck  falseand we should be fineWithout this patch in place for Akka 22 spray 12 running against Akka 22 would have a significant disadvantage over spray 10 and spray 11 which wed really like to avoid
; design
Sounds like a plan Please try it out on release22 and run MiMa to verify well need a separate pull request for that anyway
; general
Ok will do
; general
Alright looks great Youll need to squash the commits into 1 and make sure the commit message adheres to the convention listed here httpsgithubcomakkaakkablobmasterCONTRIBUTINGmdAlso have you signed the CLA Dont worry thats a onetime thing which lowers the bar for the next contribution as well Let me know if you have any questions and well help you outCheers
; general
Okay CLA signedThe squash is a more interesting problem and shows my newbietude with GitHub  While Ive been using it for a year its a oneman project so I havent had to deal with most of the interesting realworld situations yet  I did my edits in my own master branch without even thinking about it the squash instructions presume that youre editing on a private branch first squashing that and then committing to your master before the pull request  Its not clear how one cleans up undesired commits from the masterAny suggestions for fixing this without major hassle  The change in question is small enough that the easiest solution may well be to kill my fork and start over which is fine probably would only take 15 minutes but Im taking this as a learning opportunity
; design
And reading a bit more carefully  do I correctly infer that I should open a ticket and refer to that in the commit comment  SOP for code but I hadnt thought about it for the documentation tweak
; general
Hi jducoeurThanks a lot for contributingWe try to track everything with tickets sometimes we are pragmatic though I created a ticket for you httpswwwassemblacomspacesakkasimpleplannerticket3596That means that the commit message should be    doc 3596 Add paragraph about Agent localityThere are several ways to squash but in this case it is probably easiest to dogit reset commit id before your first commitgit add git commitgit push f origin your branchThat will update this pull request
; general
BUILDLOGJust checking why our PRvalidator hasnt commented correctly on this PR
; general
kittynotetoself ignore 24153503prvalidatorpercommit   b4ee54cd successhttpsjenkinsakkaio8498jobprvalidatorpercommit746 Took 46 min pendinghttpsjenkinsakkaio8498jobprvalidatorpercommit746 started   49b617de successhttpsjenkinsakkaio8498jobprvalidatorpercommit749 Took 46 min pendinghttpsjenkinsakkaio8498jobprvalidatorpercommit749 started   e7caa624 pending queued
; general
PLS SYNCHStill checking the PRvalidator
; general
kittynotetoself ignore 24153810cat Synchronaising pray
; general
Hmm  Having difficulty fixing the repo so Im going to drop this fork and restart
; general
Thanks for the review Viktor during this change I somehow felt that I was about to lose sight of the way so I wanted confirmation that I am not completely in the woods Will finish along the lines outlined above during the next days
; general
Youre very much welcome I like this directionGreat work Roland looking forward to see it take shape
; general
Good job Roland
; general
BUILDLOGWondering what the kitteh is up to
; general
kittynotetoself ignore 23939546prvalidatorpercommit   67baeaa7 pending queued   149d0278
; general
kittynotetoself ignore 23944408cat Synchronaising pray
; general
Thank you for your contribution  Would you mind signing our CLAhttpwwwtypesafecomcontributecla
; general
DoneThanksDavid            GesendetMontag 09 September 2013 um 1002 UhrVonBjrn Antonsson notificationsgithubcomAnakkaakka akkanoreplygithubcomCcDavid Schmitz DavidSchmitzgmxnetBetreffRe akka ramp up of outdated aries dependencies 1711                Thank you for your contribution  Would you mind signing our CLAhttpwwwtypesafecomcontributeclaReply to this email directly or view it on GitHub
; general
LGTMWe have a commit message policy described herehttpsgithubcomakkaakkablobmasterCONTRIBUTINGmdcreatingcommitsandwritingcommitmessagesWould you mind changing the main commit message to something like osg Updating Aries dependencies with the two versions as sub messages
; general
Alright Or do I have to change my git history
; general
Yes you have to change the commit with eg git rebase i HEAD1 and then reword the commit message and force push the change
; general
Done I hope everything is now as needed I will definitly have to dive a bit more into git normally I am using mercurial most of the time
; design
Hi something went wrong with your rebase so you have 3 commits instead of just one I have applied the patch in your name against master and opened a new pull request 1718
; general
are you running this in a repeat job with the temporary old vs new impl check activated
; general
As it says in the pull request description I ran it during the night with a temporary assert comparison enabled
; general
LGTM sorry for not reading
; general
LGTM after running it in a repeat job for a while
; general
It has been running the multi node tests on repeat the whole night without any failures
; general
The kitteh missed this one for some reason Ill have to investigatePLS SYNCH
; general
kittynotetoself ignore 23932342cat Synchronaising pray
; general
updated my first patch was not correct
; general
These silly bugs are there to remind us of the fallacies of distributed systems  Really nice catch looking obvious after being found
; general
Looks even better wink
; general
drewhk I have added the QuarantinedEvent as discussed yesterday ad121de
; general
Finally found the bug I had introduced Pruning of the reachability table is in place so the only missing piece is update of documentation
; general
failure was not caused by me httpswwwassemblacomspacesakkatickets3587
; general
Do you think Int would be enough for the version fields
; general
Great work Patrik I have not read every single line especially not the collateral damage in the other tests but what I have read looks good There are some things which might want to be optimized eg changing reachability and then sorting through all of it again when publishingunless I overlooked something but bugfreedom is certainly a very good first step
; general
I dont understand what you mean by the optimized publishing It is handled by two different actors with different responsibilities A published event can also be generated from a received gossip not only a change made by that node
; general
Updated documentation a92b72e
; general
Looks like the arrow heads between unreachable and joining are bigger than the others
; general
ah I picked the wrong arrow head thanks
; general
Added one more test as suggested by rkuhn c8979de
; general
Very cool This looks awesomeIs there a separate ticket for optimizing the merge of the reachabilityOne thing that struck me after reading the code If we remove all nodes that think that node A is unreachable then wont it magically become reachable again Hopefully some new observer will mark it as unreachable again Might cause a bit of hysteresis though
; general
Removing all codes removes the evidence of unreachability which sounds as it should be nothing good will become of trusting the parting words of a leaving stranger
; general
It still might be that the node is unreachable Im just saying that its something to keep in mind
; general
bantonsson I have added ReachabilityPerfSpec in 36228fa to verify performance of merge Improved some obvious things Do you think these results are good enough or do you have any suggestions of how to improve    info ReachabilityPerfSpec    info Reachability merge of size 1000    info  must do a warm up run 10000 times 2 seconds 527 milliseconds    info  must merge with same versions 10000 times 812 milliseconds    info  must merge with all older versions 10000 times 1 second 73 milliseconds    info  must merge with all newer versions 10000 times 2 seconds 378 milliseconds    info  must merge with half nodes unreachable 10000 times 3 seconds 276 milliseconds    info  must merge with half nodes unreachable opposite 10000 times 2 seconds 553 milliseconds
; general
The numbers seem fine but Im a bit uncertain as to how they are affected by the test reusing the same reachability instances which will then reuse the table cache  How costly is that to createDuring normal execution the table cache would have to be build for the deserialized message  coming in over the wire
; general
bantonsson I have added more tests and optimized further 218eb8fI kept the table but you the aggregated status is not computed all in one go which was important Thanks
; general
So wont the aggregated status for all members be computed in one fell swoop by anything that uses leader or isLeader in Gossip Dont we do that for every gossip we publish
; general
good catch and also in diffReachableI will fix
; general
bantonsson I changed strategy Now I produce all cached values at once and all aggregated status are computed in a one pass through the recordsOn my machine population of the full cache takes avg of 10000 iterations250 nodes 625 records  037 ms500 nodes 1250 records  075 ms1000 nodes 2500 records  165 ms
; general
that means that I will squash and merge any objections drewhk
; general
kittynotetoself ignore 24232289cat Synchronaising pray
; general
Yes I have not reviewed every part of it but overall looks good Merge
; general
great job Martin
; general
Looks really promising  In general please use more descriptive names in most of the places  it helps reviewing  you should test it with the serializemessages and serializecreators options on and marking messages with NoSerializationVerificationNeeded and Props with Deploylocal when neededThere are quite a lot of things we might want to think about  journal format needs to be documented eventually at least for official plugins  we should make sure that migrating saved snapshots andor journals between system updates is possible  not necessarily automagically  apart from adding snapshot support markers might be useful too  some rollback functionality might be possible even  using journals externally  for example for debugging purposes taking state data from a live system and launching a dev system using the journals
; design
drewhk thanks a lot for your feedback Im on vacation the next two days Will add my comments when Im backCheersMartin
; general
you should test it with the serializemessages and serializecreators options on and marking messages with NoSerializationVerificationNeeded and Props with Deploylocal when neededWill do  journal format needs to be documented eventually at least for official plugins1 when akkapersistence is not any longer marked as experimental  we should make sure that migrating saved snapshots andor journals between system updates is possible  not necessarily automagically1 when akkapersistence is not any longer marked as experimental  apart from adding snapshot support markers might be useful too  some rollback functionality might be possible even1 separate ticket  using journals externally  for example for debugging purposes taking state data from a live system and launching a dev system using the journals1 separate ticket
; design
krasserm when you add the changes please do that separate commits to make it possible for us to review the changes without going through everything again When review is done you can squash everything into one commit
; general
patriknw you mean a single second commit or every little change in a separate commit as Im currently doing locallyhttpsgithubcomeligosourceakkacommitswip3574akkapersistenceprototypekrassermfeedback I was planning to make a single second commit
; general
well it would be rather inconvenient for us to review each change as separate commit and that will also trigger prvalidator on each commit so I suggest one or a few commits containing the changesMy main point was to not squash with the first commit until review is done so that we dont have to go through everything again
; general
aside from the life cycle hook options this looks very good
; general
Thanks for your feedback guys Everything should be covered by the 2nd update now
; general
LGTM I vote for merging this today
; general
Great shall I also squash everything into a single commit when adding  experimentalSettings to AkkaBuildscala
; general
yes but wait until we have some more approvals
; general
patriknw ok please let me know when you think its ready to push
; general
krasserm Endre will review the changes also
; general
LGTM if we make a decision about the usage of EnumerationIm a bit scared about the resolution stuff but I dont have any better idea I opt for merging and we probably discover how it can be made painless after having some experience with the API
; general
drewhk the resolution stuff is only needed for reliable delivery eg to resume a failed conversation after a JVM crash for example see conversation recovery examplehttpsgithubcomeligosourceakkablobwip3574akkapersistenceprototypekrassermakkasamplesakkasamplepersistencesrcmainscalasamplepersistenceConversationRecoveryExamplescala many application wont need that probably We also discussed persistent actor references some time ago ie actor references that keep their uid across incarnation but decided against them so sender reference resolution is the only alternative to support reliable delivery via channels The only thing that users must know whether to use ResolveSender or ResolveDeliver is where the sender reference of a replayed message is used when sending via a channel
; design
I have read up to Channelneed to run nowand it looks really good Ill continue review later for the Message rename Im beginning to like Registered because it works both while sending and receiving
; general
Oops wrong button
; general
Based on the recent comments it looks like there will be another bigger round of changes  review In addition to that Im currently also working on enabling processors to support failures during replays which requires to ignore the remaining replayed messages of the current recovery restart the processor after the last replayed message and run another recovery after restart I have that already working locally but want to redesign the Processor a bit to make the processor behaviors and the state transitions more explicit If there are no objections Id like to add this feature as well in the next commit Thoughts
; general
that is fine with me
; general
Regarding the renamings the core concept of akkapersistence is to persist messages instead of current state Therefore having a Persistent wrapper for messages ie Persistentmessage Any sequenceNr Long instead of Messagepayload Any sequenceNr Long  would make that very clear and explicit Registered is a bit overloaded IMO with no clear relation to persistence Furthermore I more and more tend to rename Processor to PersistentActor WDYT
; general
Yes that certainly is also a good alternative Registered mail is something which probably only few nonnative English speakers are intuitively familiar with but it would have fit together with Envelope so nicely
; general
Im for sure not a native English speaker so I vote for Persistent
; general
Well technically to avoid confusion with persistent collection durable is perhaps more appropriate But considering the modulename is persistence Persistent might be the way to go
; general
LGTM the G means Great You also included that one bug I needed to find to make my Saturday enjoyable so all is fine
; design
rkuhn hah test passed  will push soon
; general
Thanks all for reviewingThe latest commit should now cover all the raised issues in the recent discussions Furthermore the new processor implementation now makes the processor states and transitions more explicit In addition to that I added a feature that allows processors to fail with replayed messages during recovery ie allow failures for messages that have previously been processed successfully
; design
The state machine looks a lot cleaner like this Now would be a good time to squash and merge
; general
The squashed commit also contains the latest discussed changes
; general
Thanks for merging When will the artifacts be published to the Akka snapshot repo When will the user and API docs be published
; design
The machine which did these jobs is currently not running AFAIK it could take a few days to fix this Ill let Patrik decide how exactly to get things published for your purposes
; general
Great to see this merged If things are not automatically published as it should I will take care of it on Monday
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator769
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator769
; general
Ack Commented on the wrong PR please go through the comments I made here they should mostly apply to this PR httpsgithubcomakkaakkapull679
; general
I see 2 problems in generateconfigwithsecurecookiesh1 include and comment about akkareferenceconf is wrong2 property path of securecookie and requirecookie is wrongThe samplesstart script is not up to date Why do we have that script We only have one microkernel sample and it is documented to be started with binakka
; general
True So the question is should we delete the start script And should we keep the generateconfigwithsecurecookiesh We might as well just add a link in the docs on the best practices of generating such a cookie
; general
Remove the samplesstart scriptThe cookie script is still useful if updated
; general
aside from the missing  1
; general
Youre right it should be a quoted string fixed
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator771
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator771
; general
HiI have reviews all your comments and am almost done with the corrections I was a bit confused by some of them as they do not seem to match the commit I have pushed Dont know what happenedI will try to update the branch during the weekend
; general
What assembla ticket is this
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator795
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator795 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator796
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator796
; general
kittynotetoself ignore 17215110cat Synchronaising pray
; general
Thanks Have you signed the Akka CLA
; general
jboner No I didnt How can I do so
; general
We have the same problem in Futurescala Shall I fix both
; general
Right Roland I didnt see that one I think it would be better as these are the sort of things that can create real headaches to Eclipse and as a consequence to the Scala IDE plugin eg wrong errors being reported in the editor
; general
okay I fixed both cases lets see how much of Eclipses misbehavior can attributed to this issue
; general
One thing Im sure youll get is hyperlinking to work correctly when a user links the sources to the akkaactor binaries That alone is enough to justify the change
; general
This should be a compiler flag enforce source location and package name so we can know which ones are fcuked
; design
Yep good idea
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator772
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator772 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
PLS REBUILD ALL
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator773
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator773
; general
PLS REBUILD ALL
; general
PLS REBUILD ALL
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator774
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator774
; general
Alright this should be good to go now waiting for kitteh approval
; general
PLS REBUILD ALL
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator790
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator790
; general
It does or is supposed to support abcactor and onoff as of a couple days ago but didnt originally
; general
should I be publishing a jar so you dont need to copy in all the sources or is that to avoid dependencies
; general
We cant have external dependencies in akkaactor Therefore I haveembedded the code You can continue work in your repository and we willcopy it The long term goal is to push it down to scala libraryOn Fri Nov 18 2011 at 325 PM Havoc Pennington replyreplygithubcom wrote should I be publishing a jar so you dont need to copy in all the sources or is that to avoid dependencies  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull116issuecomment2789590 Patrik NordwallTypesafe httptypesafecom  EnterpriseGrade Scala from the ExpertsTwitter patriknw
; general
Added some comments Great work Patrik  Havoc
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator775
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator775
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator776
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator776
; general
The docs probably need to be updated otherwise LGTM Great work
; general
Actually there is no documentation yet for the case outgoing connection could not be established But from reading the current docs I would assume that I receive a CommandFailed event if the Connect command fails
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator764
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator764
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator781
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator781 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
LGTM thanks Mathias
; general
override is now added
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator763
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator763 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
PLS REBUILD ALL
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator763
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator763 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
Can someone reproduce this locally Something special on the Jenkins box
; general
I will try to run it tomorrow on my machine Just ping me so I dont forget
; general
LGTMThe second Kitteh failure is just bad reporting from the Kitteh They both point to 763 but the second one should be 765
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator765
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator765
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator770
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator770
; general
I 1 all of Patriks comments Apart from that LGTM
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator770
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator770
; general
Alright fixed the issues weve talked about here and added the tests
; general
PLS REBUILD ALL
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator792
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator792
; general
Well its beginning to turn around in circles  So lets have a look at the basic constituents  a factory which can be instantiated without constructor arguments  a key which will typically be in a static field  the extension object itselfThe user may choose to use the same object for more than one of these purposes What else do we want I liked the idea of requiring a certain interface so that eg help or configuration assistance may be printable from the REPL or generate better error messages etc This could be on the extension object the most obvious choice I believe or on the key but then it would need the actual extension object to do its job because the key shall be global the factory is just a oneoff registration thingComparison  before your change the extension was the factory with init for compensating the noconstructorarg deficit and produced the key  with this change the factory produces the key which produces the extensionSo the initialization is possibly a bit cleaner with your change but I would suggest to  rename ExtensionProvider to ExtensionKeyProvider  rename Extension to ExtensionKey  add interface Extension for the actual extension object  sprinkle some docsauce on it
; design
Good improvements Great job ViktorIs getObjectFor Java friendly
; general
Thanks Patrikthe getObjectFor only works for Scala the Java way of creating your own extensions is like thishttpsgithubcomjbonerakkacommit603a8ed034f0489cb1330e81d1159640b9432e16commitcomment745865I dont expect this will be very common so I dont think itll be a problem
; general
Should I merge it in
; general
youve got my smiley
; general
Do itOn Fri Nov 25 2011 at 1119 AM Roland Kuhn replyreplygithubcom wrote youve got my smiley   Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull123issuecomment2873169
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator767
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator767 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
PLS REBUILD ALL
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator768
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator768
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator768
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator768
; general
Im glad you like it
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator798
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator798
; general
331AM in SwedenOn Thu Apr 4 2013 at 630 PM Viktor Klang notificationsgithubcomwrote hehe httptcowDqnzDjmgx  Reply to this email directly or view it on GitHubhttpsgithubcomakkaakkapull1297issuecomment15934682
; general
The Klang never sleeps
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator801
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator801
; general
Fixed and rebased
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator801
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator801
; general
PLS REBUILD ALL
; general
Squashed and rebased Awaiting Kitteh
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator865
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator865
; general
Can I press the green button Only thumbs up from patriknw and the Kitteh
; general
Just awaiting kittehvalidation
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator788
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator788
; general
Code looks great some documentation needed
; general
Thanks for feedback Fixed those some as FIXMEMerging this into master now
; general
Wicked great work
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator799
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator799
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator802
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator802
; general
This is a cherry pick with some resolved conflicts The Kitteh approves so Ill go ahead and merge
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator777
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator777 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
It breaks SerializationCompatibilitySpecOtherwise LGTM
; general
I think the doc tests should be updated to not use isTerminatedAny internal usages that should be updatedAny tests that should be updated
; design
A note in the migration guide would be nice
; general
I think the deprecation and the refactoring should be kept separate as one is changing user API and one is internal implementaiton details
; design
Also SerializationCompatibilitySpec seems broken and needs fixing
; general
I still think the doc tests should be updated to not use isTerminated since that is user APICreate another ticket if you dont want to change the internals
; design
True Ill clean up the doc tests
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator789
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator789 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
PLS REBUILD ALL
; general
race condition between push and start of kitteh
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator791
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator791 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
Alright should be good to go now
; general
PLS REBUILD ALL
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator794
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator794
; general
Only some minor comments Great to have the samples flying again
; general
Thanks for your comments Ill amend accordingly and push updates asap
; general
When all comments are handled please merge this pull request into master
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator785
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator785
; general
The patch itself LGTM but is this always going to be a win Im thinking about framelength encoded data where this will just result in more message sends an no clear benefit unless the frames are very small Do you have benchmarks
; general
With this patch we still read all available bytes up to the configured directbuffersize default 128 KB in one go This means that in all cases where less than 128 KB are ready to be read the behavior is unchanged If more than 128 KB are ready we used to aggregate all of them up to the maxreceivedmessagesize limit which has a default of unlimited before sending out the first message With the patch we now send one message per 128 KB chunkThe benefits we see are increased concurrency as the application layer can already work on the first chunks while subsequent ones are still read from the kernel read buffer and more determinism as the application can be sure to always receive compact ByteStrings which have better characterlevel iteration performance This also better suits the character of the TCP layer as a lowlevel implementationOne thing that we should still improve is to replace the maxreceivedmessagesize setting with a receivethroughput setting with a default of maybe 10 which in analogy to the one on the UDP side limits the number of chunks read and sent off as messages before returning to the event loop
; general
Okay thanks for the explanation I see where my reasoning went astray earlier
; general
One more thought I think this patch should enable us to change    case class Receiveddata ByteString extends Eventto    case class Receiveddata CompactByteString extends EventThis should yield quite a significant performance benefit for bytelevel iteration since the JVM will happily inline CompactByteStringapply because this method is only implemented by one class ByteString1C whereas ByteStringapply will not be inlined if the ByteString1 and ByteStrings classes are also loaded which will frequently be the case at least that is my current understanding of Hotspots inlining behavior
; design
sirthias inlining by HotSpot server is more sophisticated than that It will inline as long as only one class type is used in that call site If you use two types in that call site then it will still use an optimised call path but a bit slower More than 2 and its considered a megamorphic call site and performance goes down significantly
; design
Im not so sure that changing signatures alone will make such a big difference The most important thing wrt hotspot is IMO if the callsite is actually polymorphic or not If it is not and with this PR it shouldnt be hotspot will notice by counting invocations and be able to generate a faster invocation or inline the target
; general
ijuma thanks for this clarification Makes senseStill I think changing the signature to the more specific ByteString type would be good as it better signals to the API user what data the TCP layer will produce
; design
Fair enough It also enforces a monomorphic call sites
; general
Depends on whether you see it as an implementation detail or not Apart from that Im not so sure if you should invite anyone to program against subclasses of ByteString in general
; design
Im with jrudolph on this one by exposing the more specific subtype we limit the implementation to always honor this contract which is not 100 obvious to me at this point
; design
1 ByteString is more future proof
; general
Alright guys flash in the panLets keep the ByteString then
; general
Wow thats an impressive piece of work thanks I skimmed the diff and didnt find anything obvious but maybe I was biased because the things you mention in the commit message are very clear bugs with their fixes
; general
Thanks as usual memory leaks are obvious once you have found them whichisnt always that easyOn Fri Dec 2 2011 at 1012 AM Roland Kuhn replyreplygithubcom wrote Wow thats an impressive piece of work thanks I skimmed the diff and didnt find anything obvious but maybe I was biased because the things you mention in the commit message are very clear bugs with their fixes   Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull134issuecomment2987906 Patrik NordwallTypesafe httptypesafecom  EnterpriseGrade Scala from the ExpertsTwitter patriknw
; general
Great work Im done commenting
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator783
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator783
; general
Overall looks great its just completely void of docs could you please add some documentation to the caseclasses etcThanks
; general
Yep will do
; general
Added some docs and removed the options that made no sense within akka
; general
What the status of this guysif I need to cut an RC3 of 13 should this go in or not
; general
There is one tiny fix in there Id like to see make it into 13in the testkit a rename of a private var from end to end in this commit d92ef8c
; design
Alright so its only that commit that should make it into 13
; general
I think the rest are more complete in kro s pull request 115
; general
Ok so Ill close this merge in 115 and the aforementioned commit for RC3
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator780
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator780 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
Id vote for perconnection configuration of the linger timeout ie the time within which the handler for the connection has to actively close the connection after having received a PeerClosed event During this time the connection still accepts Write commands but will of course not generate Received events anymore If the timeout expires before the connection has been actively closed the TcpConnection should close it itselfOne global per ActorySystem setting for this appears to be not flexible enough since I might have HTTP connections for which this facility is not needed as well as other ones eg for Akka Remoting For a perconnection setting Id vote for extending the existing options Traversable which would have to be changed to allow for nonsocketoptionsAlso we could make the connection immediately autoclosing if the linger timeout is undefined thereby preventing accidental resource leaking
; design
Or have make it immediately autoclosing if the timeout is 0 and never autoclose if the timeout is undefined
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator782
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator782
; general
A timeout for automatically closing after PeerClosed seems overengineered to me either I want the immediate close semantics we had before or I want to control closing myself To me this reads like the handler should inform the connection actor what it wants ie in the Register message and with a simple boolean
; design
I like the idea of configuring this in the Register message If the default is autoclose on PeerClosed Im also fine with no timeout Then we can also leave the PeerClosed event as is ie implementing ConnectionClosed
; general
I added the parameter as discussed and added a bit of documentation How do we support the Java side of the new RegisterkeepOpenOnPeerClosed parameter Another overload for TcpMessageregister with an additional boolean parameter
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator814
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator814 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
Rebased to merge cleanly
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator815
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator815
; general
Thanks Johannes Yes the Java side should be an overloaded register method and please update javaiorst accordingly then Ill merge it in
; general
I added the Java overload
; general
thanks but now youll have to rebase to make the KITTEH happy
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator815
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator815
; general
PLS REBUILD ALL
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator841
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator841
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator778
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator778 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
I think fully functional might be a bit of an overstatement  largely functional seems a little more accurate Many pipeline stages are going to have to be mutable in order to do any real work So pushing a command or an event through the pipeline is going to cause all sorts of side effects Id think that a fully functional design would require that all pipeline stages be immutable So if they needed to maintain state instead of storing it in a mutable structure theyd return a new version of themselves to be inserted into the pipeline in their place or something else that doesnt involve side effects That model would probably be harder to work with especially for imperative programmers like myself and might be slower so Im not saying that that model would be better but it would be more functional
; design
LGTM only minor comments
; general
DaGenix wrt fully functional yes the PR description is not correct I changed it Although I must say that according to my tests they actually are fully functional  I really dislike that overloaded term isnt there a better one Your reasoning is correct and I think while reifying sideeffects sounds like a good idea in theory it is not going to work out in this case because it is too inefficient
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator834
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator834 br sad kittyhttpcdnmemegeneratornetinstances100x31464013jpg
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator835
; general
jenkins job akkaprvalidator Success  httpsjenkinsakkaiojobakkaprvalidator835
; general
This is good
; general
Different kinds of configuration for different tests eg roundrobin vs random router means I cant have a single conf for all tests running on a certain machine right
; general
vigdorchik I dont see the whole picture of what needs to be configured so Im not sure what to recommendI think the things things corresponding to val node1Configval node2Configcan easily be specified as system properties D flags when starting the jvm on the specific nodeSystem properties are used firstThe you have properties likeappservicehelloremotenodes  localhost9991Was this what we talked about that should be in zookeeperThere is also substitions Im not sure if that could be useful for thisSee httpsgithubcomhavocpconfigblobmasterHOCONmd
; general
Aside from my minor comments I think this is great
; general
Shall I merge this or will you do it Jonas
; general
You can merge it But are the remote tests running nowJonas BonrCTOTypesafe  EnterpriseGrade Scala from the ExpertsPhone 46 733 777 123Twitter jboner On Dec 9 2011 951 AM patriknw replyreplygithubcomwrote Shall I merge this or will you do it Jonas  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull135issuecomment3076701
; general
True I thought Roland said it was fixed now but that was probably not inmaster Ill wait for the testsOn Fri Dec 9 2011 at 1016 AM Jonas Bonr replyreplygithubcom wrote You can merge it But are the remote tests running now  Jonas Bonr CTO Typesafe  EnterpriseGrade Scala from the Experts Phone 46 733 777 123 Twitter jboner  On Dec 9 2011 951 AM patriknw  replyreplygithubcom wrote  Shall I merge this or will you do it Jonas     Reply to this email directly or view it on GitHub  httpsgithubcomjbonerakkapull135issuecomment3076701   Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull135issuecomment3076855 Patrik NordwallTypesafe httptypesafecom  EnterpriseGrade Scala from the ExpertsTwitter patriknw
; general
Cool Thanks Do it when they runOn Fri Dec 9 2011 at 1048 AM patriknwreplyreplygithubcomwrote True I thought Roland said it was fixed now but that was probably not in master Ill wait for the tests On Fri Dec 9 2011 at 1016 AM Jonas Bonr  replyreplygithubcom wrote You can merge it But are the remote tests running now  Jonas Bonr CTO Typesafe  EnterpriseGrade Scala from the Experts Phone 46 733 777 123 Twitter jboner On Dec 9 2011 951 AM patriknw  replyreplygithubcom wrote  Shall I merge this or will you do it Jonas     Reply to this email directly or view it on GitHub  httpsgithubcomjbonerakkapull135issuecomment3076701   Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull135issuecomment3076855  Patrik Nordwall Typesafe httptypesafecom  EnterpriseGrade Scala from the Experts Twitter patriknw  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull135issuecomment3077088 Jonas BonrCTOTypesafe  EnterpriseGrade Scala from the ExpertsPhone 46 733 777 123Twitter jboner
; general
I will do that today am still verifying first with my simplified sameJVM setupOn Dec 9 2011 at 1048  patriknw wrote True I thought Roland said it was fixed now but that was probably not in master Ill wait for the tests  On Fri Dec 9 2011 at 1016 AM Jonas Bonr  replyreplygithubcom wrote  You can merge it But are the remote tests running now   Jonas Bonr CTO Typesafe  EnterpriseGrade Scala from the Experts Phone 46 733 777 123 Twitter jboner On Dec 9 2011 951 AM patriknw  replyreplygithubcom wrote  Shall I merge this or will you do it Jonas   Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull135issuecomment3076701    Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull135issuecomment3076855        Patrik Nordwall Typesafe httptypesafecom  EnterpriseGrade Scala from the Experts Twitter patriknw    Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull135issuecomment3077088scaladebate on 2009102Viktor Klang When will the days of numerical overflow be goneRicky Clarkson One second after 031407 UTC on Tuesday 19 January 2038
; general
Whats the status here
; general
This one have been ready for ages Was initially waiting for Roland to enable multijvm tests Should be merged in
; general
Yes that looks good Care to document it in the rst
; general
committed docs check it out
; general
Are we mergeable
; general
jep ya got ma smiley
; general
Any more review of this or shall I merge it to master
; general
I didnt have time to read the actual docs but the code changes look good
; general
Merging this to master now Feel free to comment afterwards if you see anything that should be improved
; general
Wicked It is all coming together so nicely Im so very proud of this Akka 20 and even more 21 will really be the way actor programming is meant to be
; design
It is done routers work locally and with remote children deployment all tests green Speak now or forever hold your silence
; general
I havent inspected every line of change but I like what I have seen
; general
okay guys I have fixed all review comments brought up so far and Id like to merge this real soon so Ill start the merge after lunch unless someone objects
; general
Perhaps Ive just had too much cold medicine but couldnt we remove the dispatcher field from DefaultPromise by moving it into the MessageDispatcher class I gave it a try and the tests pass httpsgistgithubcom1469887
; design
Wouldnt matter it still needs to close over its parent so the field would still be there or
; general
Ah yes used javap to check the results and it does add a field
; general
Btw I added some more tests to the FutureSpec
; general
Looks all good to me great changes in there We might want to add helper methods in testkit that will automatically use the default timeout for blocking methods something likedef resultTfuture FutureT T  Awaitresultfuture timeoutdurationsince testing is a perfectly valid use of those methods although it might be possible to use specs2 to make nonblocking tests something to try out sometimeOther then that nothing jumps out at me Great work
; general
Yes I noticed you implemented the pending tests I added I keep forgetting about those thanks
; general
Wicked Great job Viktor
; general
I definitely need reviews here after last nights crazy hakking
; general
Its a huge chunk but what Ive seen looks good Youll encounter some conflicts in core code though
; general
Jonas I agree with Viktor here specialcasing just those routers does not gain much compare    withRouterRoundRobin    withRouterRoundRobin2The second one has much more information and if you leave out the number you will have to set one in config unless you like ConfigurationExceptions I think that is already good enough no
; general
Sure I have what Viktor wanted here now I think but I can just delete it all  def withRouterT  RouterConfig ClassManifest      val c  implicitlyClassManifestTerasure    val error    throw new IllegalArgumentExceptionClass  cgetName   is not a valid router  has to subclass RouterConfigand have a noarg constructor    if c isAssignableFrom classOfRouterConfig       val routerConfigClass  casInstanceOfClass  RouterConfig      val factory  try routerConfigClassgetDeclaredConstructorArrayemptyClassAnyRef  catch  case e NoSuchMethodException  error      val router  factorynewInstanceArrayemptyAnyRef      copyrouterConfig  routerConfig     else error  On Wed Dec 14 2011 at 351 PM Roland Kuhnreplyreplygithubcomwrote Jonas I agree with Viktor here specialcasing just those routers does not gain much compare  withRouterRoundRobin  withRouterRoundRobin2 The second one has much more information and if you leave out the number you will have to set one in config unless you like ConfigurationExceptions I think that is already good enough no  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull155issuecomment3140468 Jonas BonrCTOTypesafe  EnterpriseGrade Scala from the ExpertsPhone 46 733 777 123Twitter jboner
; design
import ReflectiveAccess    val c  implicitlyClassManifestTerasure    createInstancec noParams noArgs match       case Leftt  throw new IllegalArgumentExceptionClass   cgetName   is not a valid router  has to subclass RouterConfig and have a noarg constructor t      case Rightr  r
; general
We should be able to bring this back in a better way once proper Scala reflection is available but I still think that saving two characters might not be worth the complexityAnyway this branch has a lot more changes than this method addition so might I suggest that you leave out that one piece and apply the rest
; general
Ok Deleted it
; general
Just did that Ready for merge    Jonas BonrCTO  Typesafe httpwwwtypesafecom  EnterpriseGrade Scala from the ExpertsPhone 46 733 777 123Twitter jboner httptwittercomjbonerOn Wednesday 14 December 2011 at 1616 Roland Kuhn wrote We should be able to bring this back in a better way once proper Scala reflection is available but I still think that saving two characters might not be worth the complexity   Anyway this branch has a lot more changes than this method addition so might I suggest that you leave out that one piece and apply the rest      Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull155issuecomment3140836
; general
what about removing the whole directory structure would be a bit misleading to people browsing github to leave it in
; general
I didnt do that because it contains transactors We have similar with other stuff such as spring camelPatrik14 dec 2011 kl 1657 skrev Roland Kuhnreplyreplygithubcom what about removing the whole directory structure would be a bit misleading to people browsing github to leave it in    Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull154issuecomment3141733
; general
Okay so we should do it later
; general
Have made changes based on comments I think its good enough now to go in the download and be used for apps
; general
Excellent work Pete as always 1
; general
Cool Will merge now
; general
Its the Kraken
; general
Shouldnt we merge this in now1
; general
yup go ahead
; general
This is a actually a chapter that would be more readable if split into JavaScala since its more sample than text WDYT
; general
Split it up as weve done for the other parts We dont have time to invent new ways of solving this for M1Open a ticket to unify the docs for 20
; general
I have split it into java and scalaCreated ticket 1493 Revise documentation structure
; general
Youve got my simley and 1
; general
Very good 1
; general
1Also I need the changed transition spec or else my branch fails now that I wipe the state when a node joins a cluster
; general
Alright then I merge this now I have create a ticket for the related issue I found httpwwwassemblacomspacesakkatickets2290
; general
Oops I wasnt thinking and force pushed an amended commit Do you mean something along the lines of this
; general
Sorry I probably should have actually looked at the Duration API
; general
Sorry for the delay on thisCould you please sign the CLA so I can merge it inhttptypesafecomcontributeclaThanks
; general
I just signed it
; general
GreatThank you very much for this contribution
; general
Actor failures are logged for good reason and your change has nothing to do with failures to send to remote actors Also your change breaks actor semantics which is an absolute nogo ActorCell is not the place to start hakking
; design
I touched 2 lines One line changes the logging level it surely does not change semantics That change is the more important one to me
; general
Touching two lines within that specific file has the potential to wreak havoc why have you commented out that other lineAlso if that first line is so important to you you should give some motivation for it And frankly I find the title of this pull request a bit misleading because the discussion was just a monolog the title impliesor at least strongly hints atthat consensus had been reached be that concerning the existence of a problem or a proposed solution
; general
The title was not intended to imply anything beyond providing a point of reference so the motivation would be clearThe main purpose is to control the verbosity of logging I expect that changing the verbosity from Error to Warning would not disrupt the integrity of the Akka product
; design
aside from minor comments it looks good to me 1
; general
Cool Fixing issues now
; general
Pushed updates Merging into master now Thanks for review
; general
Looks good TypedActor is lookin nice and purty
; general
Alright all commented things fixed and pushed
; general
Looks great Only a few minor comments
; general
also rewrote ActorRef ScalaDoc
; general
good minor nitpicky comment
; general
What you are doing is essentially making all the cluster code singlethreadedBefore this was done in parallel  the gossip management  backed by N number of actors and a roundrobin router where N was configurable the leader tasks unreachable node reaperNow all of this is done sequentially  task by task This also means that one task can stop progress for other tasks Fe gossip management vs leader actions etc Since collisions and retries in a CAS operation is very rare  the parallelism was almost free  fully lockless Funneling everything through an actor is essentially the same thing as taking a big giant lock on thisHow can we be sure that this is not going to turn into a scalabilityperformance bottleneck in the future when we are running lots and lots of nodes It might be ok it just feels weird to go from fully locklessconcurrent to single threaded without knowing what we need I would feel better about it if we had test suites that could verify this on 1000 nodes
; design
I dont think you are right everything except the sideeffecting such as notifying listeners and sending gossip back was done in the CAS scope so it was serialized anyway with the risk of contention and doing the same thing several times when actually trying to do things in parallel
; general
Since no time consuming operations only minimal state shuffling is done in the CAS scope the risk for collisions and retry is very rare so believe the normal execution path is close to free I do believe that a concurrent mostly collision free CAS operation is orders of magnitude faster single threaded code that has to go through 2 queues and 4 handoffs to be executed If you can show that collisions is the norm rather than the exception then I would agree that making it singlethreaded is a good idea
; general
the bottleneck for this will always be remoting a local actor can probably handle 1 million messages per secondPreviously the messages were received by actors also so I dont see the differenceWell the difference is that previously there were a pool of actors that were serialized by the CASWhy have pool of actors for something that isnt possible to do in parallel
; design
Ok Patrik and I discussed and he convinced me that it will be good enough to use actors all the way down Actors I want to believe  httpisgdLo6WL4
; general
Haha excellent Ill look at the PR ASAPBut I am not surprised since Patrik is one hell of a guy
; general
I still know that CAS is order of magnitude faster than our actors but I got convinced that it doesnt matter in this case actors are good enough Need to take the leap of faith
; general
Yup if it doesnt work out I know wholl revert it
; general
LOL But Im sure it will work Patrik is just too much one hell of a guy to be wrong Ill remember that Yet another guy to be scared of in this office P
; general
hehe true D
; general
thx guys I feel inspired by your awesomeness
; general
small note it looks like LargeClusterSpec runs better with this when there are merge conflicts less time to convergence less needed messagesprobably due to less conflicts due to things not accidentally reordered
; design
thx Ill do one more mechanical change splitting this gigantic file into several smaller files
; general
I synced this with master locally and pushed to master
; general
Is this ready to be merged or
; general
yes but I have based the refactoring branch on this branch so Im not sure in what order I should merge in stuff any suggestion should I merge the refactoring into this and then merge to master or should I merge this to master first and then merge master with refactoringperhaps it doesnt matter
; general
Its probably easier to merge this first into master then sync the other branch with master then merge that one
; general
Hi Peter can you synchronize with the current master so it can be automatically merged
; general
I have rebased the branchOn Wed 20 Jun 2012 235107 0200 viktorklang wrote Hi Peter can you synchronize with the current master so it can be automatically merged   Reply to this email directly or view it on GitHub httpsgithubcomakkaakkapull555issuecomment6468381
; general
Wow that is an amazingly bad bug And they dont even intend to fix it
; general
its just marked as duplicate but I cant find the thing its supposed to be a duplicate ofthis isnt all that pretty but it does work At least its documented  I think their logic is thisYou should follow some rules to write happy multithreaded code with MQ   You MUST NOT access the same data from multiple threads Using classic MT techniques like mutexes are an antipattern in MQ applications The only exception to this is a MQ context object which is threadsafeYou MUST create a MQ context for your process and pass that to all threads that you want to connect via inproc sockets     You MAY treat threads as separate tasks with their own context but these threads cannot communicate over inproc However they will be easier to break into standalone processes afterwards   You MUST NOT share MQ sockets between threads MQ sockets are not threadsafe Technically its possible to do this but it demands semaphores locks or mutexes This will make your application slow and fragile The only place where its remotely sane to share sockets between threads are in language bindings that need to do magic like garbage collection on sockets
; design
MQ sockets are not threadsafe  theres a big difference between race conditions and unsafe publication
; general
I would like to see the commit message to be revised to indicate which bugs were fixed Also test cases for those bugs Also placing them in separate commits would make it read better And why those extra empty lines
; general
Anything new here Ivan
; general
I dont know how I would test this with akka dispatchers Its not something that is reproduced easily i could possibly reproduce the issue using threads to show it is there the error only showed up every 510 test runsI think the commit message can be revised when the code is being merged in but I cant change a commit message of a published commit or can IThe loop is one chunk of work and has its own commit its one fix for all the issues previously discussedthe extra lines are purely for readability
; general
Ok Ill merge into 13
; general
Alright pushed updates
; general
1  Now Im happy with it
; general
Awesome Thanks Roland
; general
Jonas you told me not to work remember   Im just trying to stay under the radar while reading mail
; general
Sorry I thought it was Roland since we discussed it Thanks Viktor
; general
I decided to remove the karaf testing stuff as even the maven build broke Sticking to plain PaxExam I created a working sample build herehttpsgithubcommuuki88sbtpaxexamexampleHowever my akka build doesnt work as the scala compiler complains about missing classesbashinfo Compiling 4 Scala sources to homemukiDevelopmentgitakkaakkaosgiteststargettestclasseserror homemukiDevelopmentgitakkaakkaosgitestssrctestscalaakkaosgitestLocalActorTestscala25 object duration is not a member of package scalaconcurrentutilerror import scalaconcurrentutildurationerror                              error homemukiDevelopmentgitakkaakkaosgitestssrctestscalaakkaosgitestLocalActorTestscala82 value seconds is not a member of Interror  Note implicit value timeout is not applicable here because it comes after the application point and it lacks an explicit result typeerror     implicit val timeout  Timeout5 secondserror                                      error homemukiDevelopmentgitakkaakkaosgitestssrctestscalaakkaosgitestLocalActorTestscala83 could not find implicit value for parameter timeout akkautilTimeouterror     val result  Awaitresultpong  Ping timeoutduration must bePongerror                                    error three errors foundIt seems that my project isnt build with 2100RC1 but I couldnt figured it out why I tried to add extra settings without success
; design
Duration and friends moved into scalaconcurrentduration in RC1 youll have to update your tests accordingly
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator54
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator54
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator55
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator55
; general
Noticed this while cleaning up pull requests what is the status The latest build failure looks like a forgotten comma in AkkaBuildscala which should not be hard to fixIm trying to assess what exactly this test suite covers not an OSGi expert and what it would take to pull it over the finish line
; general
PaxExam doesnt seem to work pretty well with sbt I wasnt able to fix this and the guys on the paxExam mailinglist couldnt help me either
; general
So is your conclusion that this branch is a failed experiment after all In that case we should close itThanks for the quick response
; general
Im afraid yes I would be really nice to provide integration tests with osgi However paxExam is itself not stable enough to be used Sorry
; general
no problem thanks a lot anyway
; general
A few notes I forgot The tests run currently with Pax Exam and Maven I think its not too difficult to port them to sbt There is no osgified scala library in maven I found none so I used the scalaide update site To get the test running I had to use some deprecated methods felixversion  The documentation was a bit unclear about what to do instead
; general
It would be awesome if you could port the test execution from Maven to sbt
; general
What would be nice in addition is to have an akkaosgitests subproject for Akka that verifies all Akka bundles all that are selected to be osgiified that we can execute as a task in our release script
; general
I will add all osgified akka bundles after I switched  to sbt successfullyTheres one important thing left Currently the akka projects already published toMaven are being tested
; general
Yeah I think it would be beneficial to not have to do a local publish before release just to run the test is it possible to obtain the artifactsbundles that are created by the OSGi plugin
; general
Yeah Its possible to provision bundles from files Hopefully pax exam does resolve relative pathsThan its just building the bundle and executing the test with a relative path from the project root
; general
I think it would be possible to construct absolute paths using the sbt setting baseDirectory
; general
I need help with sbt as there are dependency conflicts and I have noidea how to fix them I will be away for the weekend no hurry See commit message below for details Commit Message formattedChanged osgi test framework to Karaf Using paxexamkarafhttpsgithubcomopenengsblabspaxexamkarafwiki Dependency conflictsStill not running due to dependency conflict on commonsiocommonsio201 and orgapachecommonscommonsio132ErrorjavafilehomemukiDevelopmentworkspaceplayakkaakkaosgitestsupdate sbtResolveException unresolved dependency orgapachecommonscommonsio132 javatextParseException inconsistent module descriptor file found in httprepo1mavenorgmaven2orgapachecommonscommonsio132commonsio132pom bad organisation expectedorgapachecommons foundcommonsiopomxmlhttpsgithubcomopenengsblabspaxexamkarafblobmasterpomxml which declares dependencies Wrong formatted versions solvedThe scalatestorg bundle exports its dependencies in an unproper way so karaf cant deploy the bundleThe following exception is thrownjavakarafroot 20120803 095436676  ERROR  paxexamdeploy  fileinstall                       6  orgapachefelixfileinstall  324  Failed to install artifact homemukipaxexamdeployabac942f8cef45b9aff26a896987415b192100M5B2jarorgosgiframeworkBundleException Could not create bundle objectat orgapachefelixframeworkFelixinstallBundleFelixjava2592orgapachefelixframework309jarat orgapachefelixframeworkFelixinstallBundleFelixjava2443orgapachefelixframework309jarat orgapachefelixframeworkBundleContextImplinstallBundleBundleContextImpljava129orgapachefelixframework309jarat orgapachefelixfileinstallinternalDirectoryWatcherinstallOrUpdateBundleDirectoryWatcherjava10276orgapachefelixfileinstall324at orgapachefelixfileinstallinternalDirectoryWatcherinstallDirectoryWatcherjava9416orgapachefelixfileinstall324at orgapachefelixfileinstallinternalDirectoryWatcherinstallDirectoryWatcherjava8546orgapachefelixfileinstall324at orgapachefelixfileinstallinternalDirectoryWatcherprocessDirectoryWatcherjava4836orgapachefelixfileinstall324at orgapachefelixfileinstallinternalDirectoryWatcherrunDirectoryWatcherjava2916orgapachefelixfileinstall324Caused by javalangNumberFormatException For input string 0M5at javalangNumberFormatExceptionforInputStringNumberFormatExceptionjava6517004at javalangIntegerparseIntIntegerjava49217004at javalangIntegerparseIntIntegerjava52717004at orgosgiframeworkVersioninitVersionjava133karafjar228at orgapachefelixframeworkutilVersionRangeparseVersionRangejava92orgapachefelixframework309jarat orgapachefelixframeworkutilmanifestparserManifestParsernormalizeImportClausesManifestParserjava268orgapachefelixframework309jarat orgapachefelixframeworkutilmanifestparserManifestParserinitManifestParserjava145orgapachefelixframework309jarat orgapachefelixframeworkModuleImplinitModuleImpljava243orgapachefelixframework309jarat orgapachefelixframeworkBundleImplcreateModuleBundleImpljava1153orgapachefelixframework309jarat orgapachefelixframeworkBundleImplinitBundleImpljava79orgapachefelixframework309jarat orgapachefelixframeworkFelixinstallBundleFelixjava2535orgapachefelixframework309jar 7 moreI created a custom scalatestjar which runs and upload it to my server I think this problemwill disappear when scala 210 is out in a final version
; general
Im not able to resolve the dependency conflicts thrown by sbtI found this threadhttpstackoverflowcomquestions8650088sbtwontresolvefakehttpserverdependencybecauseofbadcommonspomfile on stackoverflow but no matter what I excluded I always got bad organisation nameThe osgi project depends on commonsioscala  lazy val osgi  Project    id  akkaosgi    base  fileakkaosgi    dependencies  Seqactor    settings  defaultSettings  OSGiosgi  Seq      libraryDependencies  Dependenciesosgi      parallelExecution in Test  false      val osgi  SeqosgiCoreTestlogback TestcommonsIo Testpojosr Testtinybundles Testscalatest Testjunitwhich seems to result in a conflict And karaf and pax got me the closest working with sbt Everything runs fine with Maven
; general
What is the status on this
; general
HiI spent one day trying to resolved the conflicts sbt throws but without success As Im not really familiar with sbt I could use a hand in this The maven build works  Dependency ConflictbashfilehomemukiDevelopmentworkspaceplayakkaakkaosgitestsupdate sbtResolveException unresolved dependency orgapachecommonscommonsio132 javatextParseException inconsistent module descriptor file found in httprepo1mavenorgmaven2orgapachecommonscommonsio132commonsio132pom bad organisation expectedorgapachecommons foundcommonsio
; general
Can you post the question on either akka or sbt mailing lists or both to see if you can get any help
; general
Of course Thanks for the hintThread on Akka userlisthttpsgroupsgooglecomforumfromgroupstopicakkausernqSn6teoX6Y
; general
Open an ticket on sbthttpsgithubcomharrahxsbtissues547
; general
It seems like the ivy resolver does not like the child not to share the parents groupid see httprepo1mavenorgmaven2orgapachecommonscommonsio132commonsio132pom
; general
Thanks Ill posted this on the httpsgithubcomharrahxsbtissues547
; general
Started jenkins job akkaprvalidator at httpsjenkinsakkaiojobakkaprvalidator28
; general
jenkins job akkaprvalidator Failed  httpsjenkinsakkaiojobakkaprvalidator28
; general
I think we should consider not doing this Its a performance optimization that may not be worth the extra complexity
; general
I guess it would be difficult to write a test which verifies that batching is actually taking placeApart from that it does not look obviously broken to me but I cannot give a definitive answer without spending a lot more time studying the whole infrastructure which is not part of this pull req
; general
Thats a fair point I see if I can come up with a general test for BatchingExecutor
; general
yes with those tests it LGTM
; general
Is this ready to roll
; general
Been offline for a whileYes this one is ready to goHenrikOn Sun Dec 25 2011 at 1612 viktorklang replyreplygithubcom wrote Is this ready to roll  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull184issuecomment3270952
; general
Great thanks Merged and ticket closed
; general
This is definitely going the right way
; general
Alright I think Im done with everything If you have time to look and give me go ahead I can merge it in otherwise you do it yourself tomorrow
; general
Great Ill have a look at it when Sandras gone to bed
; general
Looks great to me
; general
Excellent work Raymond After some finishing touches this will be ready to merge in
; general
Alright lemme know when youre done and Ill just skim through it before I merge
; general
Finished review should be good to go
; general
Wicked Awesomely done Raymond
; general
Great stuff 1 merge
; general
This looks real clean good stuff The only thing that worries me is that there are quite some devs out there who will be reluctant to use something they dont understand so I think this needs really carefully written docs picking people up at the border of imperativeland then it could actually be a showcase for FP in the mainstream
; general
rkuhn One of the reasons I went this direction is because the iteratees are completely optional All of the basic IO functionality is performed by sending messages toreceiving from the IOManager What the iteratees give you is a way to deal with chunks of bytes that may not contain enough information to parse or contain too much information Developers are free to handle this any way they choose typically ByteBuffers I would assumeSo that is an important part of the docs that I havent yet written the basic use of the IOManager without the use of iteratees along with docs for the ByteString class The iteratee implementation is also very basic but a developer can easily switch to one of the many Scalaz iteratees again due to the iteratees being optional and separate from the actual IO operations
; design
Cool what about docs
; general
Hi Derek could you rebase this on the current master so it can be automatically merged Thanks
; general
Nevermind it was an easy merge
; general
Hey Mike thanks for the contribution before I can accept any contributions from you I need you to sign the Akka CLAIn order to send that to you I need your email addres
; general
actually actorOf requires a Props argument which would mean    systemactorOfnew PropsMyActorclass name
; general
Uncompiled code examples FTL
; general
sad but true black album
; general
Blackened  and justice for all
; general
My email address is mjkrumlauf at acm dot org
; general
VictorBefore I sign and return the Akka CLA I need to make sure there are nolegal issues  In the past there were some restrictions on contributing toprojects outside the company so I want to make sure I dont get myself andAkka in troubleThanksMike KrumlaufOn Wed Dec 28 2011 at 0921 viktorklang replyreplygithubcom wrote Hey Mike thanks for the contribution before I can accept any contributions from you I need you to sign the Akka CLA In order to send that to you I need your email addres  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull195issuecomment3291140
; general
Hi Mikesounds sensibleThe CLA is an Apache V2 CLA if that helpsCheers
; general
Akka CLA submitted
; general
Going through the pull requests I noticed that even if legal issues are sorted this pull request is still wrong see my comment on Dec 28 Care to change it to Props
; general
Does this look good now
; general
yes looks good
; general
Im afraid there might be more than the TODOs that needs it What about not exhaustiveAddressDeadLetterBroadcastDefaultResizerFailedPoisonPillKillTerminated
; general
Alright sprinkled some more SerialVersionUIDs
; general
What exactly does this buy us over just noticing when we break stuff and then retroactively fixing that broken class to use the old autogenerated SerialVersionUID Or do you fear that the autogeneration algorithm may change in which case well have to cover way more classes I suppose
; design
Generated serialversionuid is very fragile for changes Even adding a method will change the generated serialversionuidFrom JavadocIf a serializable class does not explicitly declare a serialVersionUID then the serialization runtime will calculate a default serialVersionUID value for that class based on various aspects of the class as described in the JavaTM Object Serialization Specification However it is strongly recommended that all serializable classes explicitly declare serialVersionUID values since the default serialVersionUID computation is highly sensitive to class details that may vary depending on compiler implementations and can thus result in unexpected InvalidClassExceptions during deserialization Therefore to guarantee a consistent serialVersionUID value across different java compiler implementations a serializable class must declare an explicit serialVersionUID value It is also strongly advised that explicit serialVersionUID declarations use the private modifier where possible since such declarations apply only to the immediately declaring classserialVersionUID fields are not useful as inherited members
; design
Yes agreed that we need to fix the UID in the face of added methods but my point was that that can also be done once the method is being added and detected by some MigrationManagerlike tool
; general
That could be done but I think it is easierbetter to add it upfront at the places we know of to avoid breaking compatibility by accident The annotation is also a good indication that this class must be handled with care when doing changesWe dont have that toolI think it would be better to add test that fail if we break ser compatibility See the tests that havocp wrote for config  Patrik1 aug 2012 kl 1217 skrev Roland Kuhnreplyreplygithubcom Yes agreed that we need to fix the UID in the face of added methods but my point was that that can also be done once the method is being added and detected by some MigrationManagerlike tool   Reply to this email directly or view it on GitHub httpsgithubcomakkaakkapull585issuecomment7423555
; design
1 I agree that this is better than the current state regardless of whether well find more places later
; general
For the config tests see httpsgithubcomtypesafehubconfigblobmasterconfigsrctestscalacomtypesafeconfigimplTestUtilsscalaL220 and httpsgithubcomtypesafehubconfigblobmasterconfigsrctestscalacomtypesafeconfigimplConfigValueTestscalaL51 for examplebtw if you want to support serialization compat between different versions Id recommend NOT using the default Java serializer    it exposes all your implementation details so even if you carefully made those private to let them evolve while keeping ABI you cant evolve while keeping serialization compatible   its grossly spaceinefficient the serialization is hugeThe custom serializer I wrote for ConfigValue is incredibly lame but its better than the default serialization on these fronts httpsgithubcomtypesafehubconfigblobmasterconfigsrcmainjavacomtypesafeconfigimplSerializedConfigValuejavaWith the default serialization it was basically impossible to make any changes to the library
; design
Heyyoull have to sign the Typesafe CLA before I can merge your PRs inwwwtypesafecomcontributeclaThank you
; general
DoneOn Tue Jul 31 2012 at 826 AM Viktor Klang replyreplygithubcomwrote Hey youll have to sign the Typesafe CLA before I can merge your PRs in wwwtypesafecomcontributecla Thank you   Reply to this email directly or view it on GitHub httpsgithubcomakkaakkapull580issuecomment7396751 Derek Mahar15143166736 Home15143167348 Mobile15149316222 7754 Work1021365 boul RenLvesque EstMontral QC H2L 2M1Canada
; general
is that the preferred order it looks kind of backwards to me without knowing what the preferred shutdown sequence is supposed to be
; general
orders is LtR close channel shutdown channel factory release external resources What seems wrong about it
; design
as I said I dont know what order is expected but since factory is part of channel I would expect the factory to be shutdown before the channel but if you know this is correct I trust you
; design
Its a childparent relationship many channels share the same factory therefor the child ought to be closed before the parent is
; design
Good one I am a bit worried though that if we add a field to Terminated there are numerous places we need to reviewmodify to maintain consistency Wdyt
; general
Now were 2N cant we do a onepass
; general
Were also doing this comparison twice
; general
alright do you prefer to do the removal inside the above loop with watching  or as a foryield and remove all afterwards with watching doing the sendSystemMessage inside filterNot feels wrong
; general
then we would add the same field in DeathWatchNotification so I dont think that is a big problem
; general
A foldLeft or a collect
; general
Hmm can we avoid having to build a new Set just to drop it from the old foldLeft
; general
but foldLeft would build up a completely new set wouldnt ithere it is normally a few elements that are to be removed
; general
Ok Im convinced
; general
thanks for feedback
; general
the compiler will save us which is why I try my best to defend the code base against those evil default arguments
; general
can also be written as if
; general
Yeah youre right Ill fix
; general
these braces are unnecessary
; general
this method needs to stay deprecated
; general
if this method is not deprecated then well also need one with signature withCreatorclazz args
; general
please remove empty line
; general
Impossible to solve without Await
; general
Of course not Sorry about that Will fix
; general
Ok this can work since we dont guarantee ordering of associations anyway
; general
No braces needed here as there is none above
; design
Does not help netty already caught the exception Or should I rethrow fatals
; general
Same as below
; general
Yep reminder of a refactor Thanks
; general
perhaps do val channel  connectiongetChannel at the top here and use that throughout
; general
Why the extra spacing
; general
Same question here
; general
If there is a multiline case statement I usually add spaces after and before it I remove it  if that is not the preferred way
; general
should this really be new Exceptionuse something better at least RuntimeException or AkkaException
; general
No extra line is the preferred way
; general
this was copied from the original ClientHandler exceptionCaught code so I fix it there as well
; general
Even after the multiline case statement
; general
Yes no extra line there either
; general
The in does not parse for me should be deletedlowest resolution is ambiguous low res means coarse but seconds is actually the finest resolution allowed
; general
This is a bit unclear isnt the problematic case that in which the server will close the inbound connection after having taken some time to process a request and then it is unable to reestablish because passive connection was the only thing to get past the firewall
; general
What if currentChannel throws I think this should stay inside the try
; general
So if netty decided to catch a fatal exception we rethrow it on a different thread
; general
Ok Ill remove in its wrong and change lowest resolution to finest resolution
; general
No the problematic case is when you set readtimeout to nonzero but no reads will never happen guaranteeing the connection to close after readtimeout seconds
; general
Yes this is what we agreed on with Viktor Do you think its problematic
; general
A Fatal is a Fatal
; general
so hypothetically if netty catches ThreadDeath on the IO worker our thread pool stops working
; general
So if Netty catches and suppresses ThreadDeath and puts it into a Future we open a ticket
; general
good just wanted to be clear about it
; general
So you tell me there is no Santa
; general
There are actually exceptionCaught invocations where the cause is null
; general
Shouldnt this also disconnect to avoid Reset by Pierre
; general
I think it makes sense to use RST in case of exceptions it is faster than a complete disconnect
; general
I dont know I just used the existing code I suspect that there cant be such a case
; general
So shold it stay Should I remove
; general
Is it OK then
; general
This seems like debug residue should be removed
; general
Because it returns a future In the onConnect method of the handler we  need to be notified somehow that the handshake is done
; general
You want to ensure that the ssl call has been completed before the sslDone is marked as completed
; general
I suspect that this code can be written without complecting statusPromise with sslDone isnt what you want to do is to defer statusPromise until sslDone is successful
; general
Hmmm Kinda There is unfortunately some side effecting inside  initOutbound which I want to skip if ssl has failed But of course that  does not mean that there is no possibility for refactoring but I have to  think about it
; general
We should really do that since the current solution is very brittle
; design
Looking at the code I think its doable
; general
This section contains 3 code diff snippets but the above description is only related to the last sample
; general
What do you propose
; general
just move the description down above the relevant code snippet
; design
Isnt this code a duplicate of a similar existing function If so can it be refactored to a common place
; general
the reason was BC this is targeted only at 21
; general
Ok then that is a great comment to include
; general
So if I just pull out the common code in an companion object to RemoteClient then that wouldnt break BC right
; design
Tried it and it seems to break BC since I add a new companion object Cant find a nice existing object to stick the code in so Ill just add a comment
; design
I guess this line can go then
; general
or no wait I get it now
; general
if handling of adapters is generically applied at transport load time then it should be documented together with transportclass for enabledtransports above
; general
this will go away when splitting out UDP right
; general
Yes there are some parallel universes on my machine
; general
Yes Best bet is probably to include the same documentation at all of the occurences
; general
why changeI dont say that 80 was a proven value but
; general
Would change this to Timeout after which the
; general
I wanted to be slightly more sensitive than the cluster failure detector  The rationale was that I might be able to recover a connection before the  clustering FD fires
; general
Dunno it was there  I havent touched it I was expecting some  clarification about this from you
; general
Same here  which
; general
shouldnt empty string be default
; general
Why the repition of sslI think we have used enabled in other placesWe most often use onoff instead of truefalse
; general
Why the repition of sslBecause it is the same driver as the TCP one with ssl enabled I dont  want to split TCP and SSLTCP to separate drivers I think we have used enabled in other places We most often use onoff instead of truefalseTrue
; general
I have no clue I dont think I have written it Please rewrite
; general
ah so we are going to have two different configurations Im not sure what kind of implications that will have but I guess we can consider it when fixing the ticket for migrating the FD
; general
ok just to clarify I ment that nettysslenabled  on should be enough
; general
That would be confusing because then the tcp driver config will need to  have nettytcpenabled  falseThe content of the transport sections are passed to the driver so if you  enable the transport akkaremotenettytcp then the contents of that  section are used to confiure the driver
; general
I think we will need different configurations as the implications are  different On FD trigger the remoting will try to reconnnect but the  clustering marks the node as Unreachable and it might DOWN it as well  So I think different sensitivity settings make sense the weight of the  actions are different
; general
Ill try to figure out what does that setting mean then
; general
this needs more thought it will not work as you intend due to the exponential behaviour of this value
; general
No I am aware of the exponential behavior and it conveys my intention   Transport should be an order of magnitude more sensitive to fire  reconnects than clustering is to mark a node as Unreachable Also 107  is already low
; general
no the behavior is opposite of what you expect the difference in sensibility between 7 and 8 is very small the value rises fast not sure about exponential but at least some large power
; general
What do you mean by the difference is small In absolute value it is  small of course but that does not matterWhat matters is the expected number of fires for a given CDF which will  be exactly 10 times as much with a value of 7 than with a value of 8 if  the probability model is appropriatemathlog1010  cumulativeDistributionFunctiontimeDiff mean  stdDeviationThis is a logarithm of a tail probability
; general
Have you looked at the graphs in the documentation It takes basically no time to climb from 7 to 8
; general
The graph shows heartbeat interarrivaltimes I talk about  expectdtimetoFDfire They are completely different
; general
no the graphs show how the phi value develops over time so you can see when it reaches 7 and 8 respectively and those points in time will usually be rather close unless the stddeviation is HUGE
; general
I am not talking about how quickly it reaches 8 after 7 but how often 8  is reached relative to 7 I repeat those are different things
; general
Hmm I see your point though But the reason for this is that a normal  distribution does not describe real world latency distributions very well  Lets discuss this later
; general
ah now I understand it makes sense
; general
Why is this the correct place to call this
; general
Because we know that the actor will not ever be able to receive those messages because it will be suspended and then terminated Also the children must have the Unwatch enqueued before the Terminate so that it has an effect I think this is correct and the KITTEH seems to agree
; design
the comment might want to mention that this is only important for our descendants though
; general
note that finishTerminate is only called in else of this if httpsgithubcomRickLatrineakkablob4e92e82c27b3413cf2ec5eace13741e645f463c1akkaactorsrcmainscalaakkaactordungeonFaultHandlingscalaL152This change will always unwatchWatchedActors Is that difference taken into consideration
; general
as far as I can see finishTerminate is called in terminate and inhandleChildTerminated when status becomes ChildrenContainerTerminationhandleInvokeFailure as an emergency stopFrom this perspective we could include the unwatch in finishTerminate too
; general
Do you feel confident and lucky
; general
yes this is why it is called the dungeon finishTerminate is always called but it depends on whether we need to wait for termination of children whether we do it right away or only upon receiving the last ChildTerminated message
; general
this is in much worse shape than the rest of the collections library  just sayinmight prefer a Vector
; general
if we have a GetNext outstanding across a restart well now have two right
; general
ah no you let them die good
; general
if a node joins an existing cluster and becomes leader due to its address wouldnt this code be wrong
; general
so MemberDowned is always published before LeaderChanged
; general
would be fun to print sender and previousLeader to see that they match
; general
what happens if the child dies
; general
what about allowing the child to send handOverData at any time and storing it so that when we need to recreate the child we can pass that data in
; general
thanks changed to Vector
; general
That is normally the case but I dont want to depende on that Do you see that it does depende on that orderMemberDowned is also handled in BecomingLeader
; general
which senderLeaderChanged is sent from current cluster node via event bus and in this case via the LeaderChangedBuffer
; general
you pushed code while I was reviewing which leads to displaced review comments I meant TakeOverFromMe below
; general
and this comment was supposed to be on MemberDowned
; general
I dont know exactly which scenario you refer to but if I got HandOverInProgress I cancel the retry timer and then I expect a MemberDowned if the previous singleton dies before sending HandOverDone
; general
thats an interesting idea I will explore
; general
line offset 14 strikes again this is supposed to be on whenLeader
; general
move down by 14 lines
; design
ok sure Ill add log of that
; general
The child is restarted its not supposed to die terminate until the termination message is sent to itDo you foresee a problem with that
; general
well the child can always call context stop self so what should that mean
; general
Do you think this name is goodShould it be ClusterSingletonManager and the child is the actual singleton
; general
yes that would be better also SingletonException gave me pause
; general
that would not be a very well behaving singleton should be documentedI already watch the child so I can add some extra logging of unhandled Terminatechild
; general
second thought better to take care of the Terminate in Leader and WasLeader states also to not become stuck in HandingOver because of premature termination
; general
GetNext wont happen here
; general
Why is this AnyRef and not OptionAny as below To remain more general at this level
; general
Can NonLeaderDataNone happen If not why
; general
that would be wrong the purpose is to deliver one message and then buffer until next GetNextdeliverNext behavior is used when there are no buffered messages
; general
Why do we care about this if we just stop in the next line
; general
Ok thanks for the clarification
; general
it can be None initially when CurrentClusterState is empty not really a member yet Ill see if I can stay in Start until there is a leader and dont use an option in NonLeaderData
; general
true can be removed
; general
this is Java api and then null is used
; design
only one outstanding GetNext request is allowed
; general
traits need that ugh
; general
What shall happen in case WasLeader  BecomingLeader currently only the first case triggers I also recommend keeping these blocks close to the states involved
; design
thanks I had them as separate onTransition at first but collapsed them but that was clearly a mistake
; general
I still think it would make sense to take and stash handOverData during the entire lifetime of the singleton if we propagate these data at all then we should also propagate it where possible
; general
one space too many
; general
yes I explored that idea and didnt see a relevant use case for it so I kept it simple but its not a big thing Ill add it
; general
ah I turned off auto format thanks
; general
Shouldnt take a system should take a Scheduler and then make the ExecutionContext implicit parameterThen make callTimeout and resetTimeout Durations in the constructor which makes it possible to remove timeUnit
; general
With the above change this is no longer a public member either
; design
This should be encoded in the Open state and not in the breaker itself
; general
the trycatch block is pointless since you rethrow everything just remove it
; general
use an akkautilDeadline instead httpsgithubcomakkaakkablobmasterakkaactorsrcmainscalaakkautilDurationscalaL259
; general
This should be encoded in the Open state and not in the breaker
; general
I think its the caller who should decide how something gets executed Id remove the Future  and the Awaitresult
; general
Id also remove the FSM from the name as thats implementation detail leaking through
; design
Id probably remove all these methods and added a way to register async callbacks to the transitions
; general
This does not verify whether the transition is legal or not
; general
This does not verify whether the transition is legal or not
; general
This does not verify whether the transition is legal or not
; general
This does not verify whether the transition is legal or not
; general
This was in place to get timeout behavior on the call which I was thinking was necessary when sticking to Nygards version of the circuit breaker  So if the call exceeds the call timeout that is specified that can be considered a failure  I can certainly remove and just consider exceptions to be failures  Or are you suggesting I should find some other timeout mechanism
; general
The timeout can be considered after the call returns It will not fail fast of current call but the failure counter is increasedUsing Future with Await here is not an option since it will consume additional thread resource
; general
all these should be Durations
; general
Sure thing Patrik  The durable mailbox implementations would then be responsible for their own timeout handling  which im understanding Viktors point to be as well caller who should decideThanks for the feedback
; general
If theres a good place to look for examples here that would be helpful to me  Im thinking youre looking for a signature along the lines ofscaladef onOpenfunc   Unit ordef onOpenTfunc   T
; general
Definitely  thanksI also need to make them config options will need to dig a little deeper in that to see the best way so that the durable queue subclasses are kept dry
; general
I think you should have a separate CircuitBreakerHalfOpenException perhaps extends CircuitBreakerOpenException
; general
should be extends RuntimeException
; general
ouch  thats embarassing  will do
; general
def onOpenTfunc   Tis preferrable due to type inference
; general
Youre most welcome keep hAkking
; general
This isnt thread safe
; general
This should be private
; general
Isnt this method heavily duplicated from the HalfOpenonCall
; general
What is this used for
; general
What is this used for
; general
Put these in config
; general
This should not use the default dispatcher but the dispatcher of the Actor right
; design
How does this handle asynchronous backends
; general
These two companion objects were put in place to get rid of strange errors during compilation  I was able to duplicate with both idea and sbt  I tried removing them and recompiling and the issue is gone
; general
Turns out I needed to remove this when I got rid of the Future thats all it was used by
; design
Thats a good question  the integrating point withCircuitBreaker is written synchronously  Heres the sig of the mailbox queuescalatrait MessageQueue   def enqueuereceiver ActorRef handle Envelope Unit  def dequeue Envelope  def numberOfMessages Int  def hasMessages Boolean  def cleanUpowner ActorContext deadLetters MessageQueue UnitSo beyond enqueue and cleanUp its a synchronous interface  Im thinking a circuit breaker is not needed on the cleanUp method since it happens before disposalIll need to think a bit on a different signature to support injecting successerror callbacks for enqueue  Of course am open to suggestions
; design
I dont really like the interaction with the error handling on this particular call the thrown exceptions from the circuit breaker never make it back to the caller
; general
How about moving these into akkautil
; general
You are relying on a hairy bit of overload resolution here the case class has an apply which would also work with zero args Is this really necessary
; design
It works just fine its a very common Scala idiom
; general
I would write WildcardTreeempty here in any case
; general
This is a bit halfbaked isnt it Either do it fully with nice indentation or leave it on one line in which case you might just not override at all
; general
Given that it does not make sense to add a deployment to user himself I think the toplevel element which you create is quite useless or Im stupid
; general
Removed Was only used for debugging
; general
toplevel is initial slash
; general
Im honestly not sure how the 070M1 version got there but I can guess the development version is 070SNAPSHOT But when Josh suggested cutting a new version this time he suggested the 061 the previous stable was 060 I can talk to him about changing it to 070 if youd feel better about it
; general
I just wanted to make sure that it wasnt accidental
; general
Ah right This should include everything that was in 070M1 and seems to pass the basic test of running the various sphinx tasks
; general
Very niceHave you verified that the methods above are inlined so no closures generated etc
; general
Id like to not repeat the mistake of offering variants without message lets force users to be clear about what they want
; general
We should decide whether we want to keep akkaConfigurationException currently 69 uses which means not using plain require here or to completely remove our own exception type and only use require
; general
Yes no requiring without a message please
; general
I dont see exactly what the ConfigurationException buys us over IllegalArgumentException Sure its more precise in some sense but is the distinction necessary
; general
exactly my point
; general
technically naturals do not include zero
; general
Ah so iterators were reused in the previous code Does this new code has any noticeable performance penalty
; general
IF you want performance you should use LARS this is just for legacy HWT action
; general
It was just a question out of pure curiosity
; general
These override of hashCode and equals are not needed in final class HashedWheelTimeoutSame thing is the default implementation in javalangObject
; design
Well since this is something that is required at the business level I think its being worth to spend a final modifier not relying on whether the class is or remains final and I am not a believer in relying on defaultsThat was my reasoning for being explicit Also remember that this is Java
; design
Why is the event stream an option here If you dont use it then why have it as an argument
; general
Since we test failure detectors in isolation without an actorsystem around it makes sense to leave it optional so if you instantiate through this constructor you can decide whether you want to use it or not This particular FD does not use the stream ever but that might change
; general
Yes and then we might change this failure detector Why do it now
; general
One constructor parameter will be unused anyway either this or the one in the auxiliary constructor
; general
So the auxiliary constructor is part of the API for a pluggable failure detector and cant be removedJust thought this change to be unnecessary since we dont use the EventStream and dont know if we will
; design
It was used by Patrik before since he logged things from the FD I can simply remove it although I dont see too much difference
; general
Its no big thing for me I was just wondering why it was added without being used
; general
My idea was if Patrik wants to log again he can just add the logger But it is neutral for me
; general
no that looks funny remove the parameter
; general
btw In the future if someone will want to use an EventStream here it has to be optional since it is not always instantiated inside a system
; general
FailureDetectors are reusable and therefore public everywhere But you are right in that it needs documentation
; design
So we are expecting users to load their own FailureDetectors from Config
; general
Im on Viktors side Every public api we add locks us down In Swedish it is called bjrntjnst
; design
Then we should set every FD related API to be privateakka
; design
Why not is not an ideal question when it comes to API design as it always ends up like a bazillion methods that you need to support the user must find understand and choose between Just my 2
; design
No why not was not an argument but a request for argument against including it which I can comment on We made FD API public since it has many possible uses We can lock it down of course I am neutral about the issue but I find it strange that we keep it open and we lock down only a reflective loader utility
; design
Inclusions should be based on arguments for not theres no arguments against User API is about value vs cost and without arguing the value theres no point arguing the costIm not talking about making the FD API private Im talking about FailureDetectorLoader while there is value in letting advanced users be able to construct and plug in alternative implementations I see no need for them to use their own loading of them from config as thats already provided by the config setting for the default FD Makes sense
; design
We want the failure detectors to be pluggable and even extendable but the construction of them from config is a rather internal thingIt is not a big deal for me
; design
Ok I am convinced
; general
I mean I make only the loader private
; general
Distributed consensus ftw
; general
hmm Im inclined to suggest SendToAllButSelf instead since that is equally usable from Java and Scala
; general
please reformat these to be more readable scalaSerialVersionUID1L case class SendSerialVersionUID1L case class SendToAll
; design
Inclined is that a decision
; general
no its more like an invitation for everyone to join the discussion
; general
I agree with you Roland it needs to work from Java
; general
I agree with the name suggestion since it has nothing to do with the sender of the message but the location of the mediatorAFAIK it is not necessary to use a new message class Isnt this alright    case class SendToAllpath String msg Any allButSelf Boolean  false       def thispath String msg Any  thispath msg allButSelf  false
; design
Shouldnt this be a couple of lines up
; general
Thats better of course Thanks
; general
Dont know if it matters patriknw
; general
Ill go with that Patrik
; general
It may be that Java guys are comfortable with javanew SendToAllhello 42 truebut I would prefer javanew SendToAllButSelfhello 42for immediate understandability
; general
This is in the test and tell is a very conscious decision
; general
Umm can you explain in a few words how this solves the problem I am not sure that I understand
; general
To clarify What makes the facade ready to the second node before done2 but not for the others Why does adding a new barrier solve this apart from increasing the delay somewhat  but then why is it working for the second node
; general
no that is not the solution thats just boy scoutingwe normally use unique names of the barriers to simplify debugging and this tests had already one done2
; design
Ok so the solution is the change from nodethird  user    user
; design
yesIn the log there was    JVMNode2 WARN 10172012 161157604 StatsSampleSingleMasterSpecakkaactordefaultdispatcher3 akkaStatsSampleSingleMasterSpecscalable20346158userstatsFacade received dead letter from ActorakkaStatsSampleSingleMasterSpecsystemtestActor1 StatsJobthis is the text that will be analyzedand the test verifies with       eventually the service should be ok       worker nodes might not be up yet      awaitCond         facade  StatsJobthis is the text that will be analyzed        expectMsgPF           case unavailble JobFailed  false          case StatsResultmeanWordLength             meanWordLength must be3875 plusOrMinus 0001            true              so the test expect to eventually receive a StatsResult but since the StatsJob the request is lost there will be nothing by timeoutthis is a sample so I dont want to complicate it too much therefore I use a local facade as entry point
; general
I start to get it  So by the time the local facade starts processing messages the workers are already available
; general
this should be in finally block as it was before because handleSupervisorFailing is not trusted code potentially
; general
I dont think we should lets have a closer look tomorrow
; general
line breaks please
; general
what about rethrowing InterruptedException
; general
I think this is harder to read than the original What is the advantage
; general
This is a fair point Patrik I had originally written the match in systemInvoke to use the new isFatal method but abandoned that when Roland suggested the cleaner extractor match Ill revert my change Although its faster
; general
only throws InterruptedException or Fatal now
; general
this needs the same treatment as the corresponding catch in systemInvoke
; general
Why not use JavaConverters as in the other cases same for CamelMessage
; general
It was too bulky I resorted to using a very scoped implicit conversion instead
; general
the key of the entry isnt used so why not use containervalues
; general
singleton isnt very self describing when imported like this perhaps rename it to singletonCollection
; general
Its a singletonSet  OTOH one could argue that the JDK name is FUBAR
; general
File needs a bit of docs
; general
good shouldnt be published
; general
just curious does this make a difference
; general
It will probably change the order on the class path while running the testkit tests but it has no effect and is not intentional Just residue from the first rewrite
; general
It should of course say call these methods and not override them Will fix
; general
that they are in early access mode which also means that they are not covered by commercial support
; general
Could add a link to Assembla for the Coltrane milestone
; general
Orand to the Roadmap doc
; general
added links to assembla and roadmap
; general
now that the bug is nailed we might want to factor this code out probably having Recreation and Creation extend a helper trait with enqueue and dequeueAll methods and then reducing this match to two cases again and the others below
; general
Yes I was about to ask how you would make tha look nicer since inheriting case classes isnt the way to go
; general
why wrap this inside NonFatal this should be enough    case i InstantiationException
; general
shouldnt this be DRYed with above
; general
var todo is scary but I guess you guys know what you are doing here
; general
ne null but that doesnt matter
; general
no need for the extra level of nesting here any more    if actor  null      else if isNormal      else
; design
I agree with Patrik reuse the same code for both and check instanceOfInstantiationException to determine the rethrow
; general
These give me the shivers
; general
So this doesnt really wait for the other system to shut down properly does it How does it make things better Apart from removing the nested runOnfirst
; general
that is true but what I could see in the log was that first was shutdown before the thirdcrashed barrier was completely received on second There was a BarrierResultthirdcrashed true in deadLetters at second I guess it has something to do with stopping the controller too early This will wait here until the shutdown is confirmed by a ClientDisconnectedException
; general
Culdnt you run shutdownsecond on second before awaitTermination instead
; general
shutdown command must be done from controller first
; general
but  do you not at least try to run that on second now
; general
what do you mean what shall I try on second
; general
sorry I was confused should have looked at some more context around the diff
; general
Id prefer an algorithm that instead of creating strings and caching them compares the Addresses first falling back to the selfAddress and then compares the pathnames
; general
Do I understand you correctly if I would pushing this down to a real toString method in ConsistentActorRefnot keeping the string in a val
; general
Or avoid Strings altogether and provide a function from T Int  Int to ConsistentHashcreate then you can hash the address and the path name completely without having to create any new strings just use Murmurhash and extend Wdyt
; general
I dont think we should redesign the ConsistenHash now it uses toString of the ring nodes and appends a counter for the virtual nodesKeep it simple
; general
Oh Im not talking about a redesign the default current one would supply a function which does exactly what it does right now But for this particular case ConsistentActorRef we should simply make a method of the following shape def consistentHashActorRefdefaultAddress Address ActorRef Int  IntWdyt
; general
as a seed node
; general
here as well
; general
I expect this to be subject for discussion as usual so I didnt spend any time on it up front We could go totally thread local if you like
; general
Why not just a one liner ringrangeImplSomehash NoneheadOptiongetOrElseringhead2
; general
Why different order of args in this factory method compared to the constructor
; design
Because names communicate and this is not a trivial line
; general
Should this not just be a case class Why would you want to create your own envelope
; design
What happens if you send this message to another kind of router Nothing Error
; general
You mean updateConsistentHash Misspelling
; general
Why use Stringformat here and not the  substitution
; general
You must impl consistentHashKey from ConsistentHashable also so it cant be case class if not using a function param but that doesnt work for java I think pure interface has most flexibility
; design
Nothing special but RouterEnvelope on the other hand always unwraps before sending to destination Broadcast is a RouterEnvelope
; general
That is plain wrong Thanks
; general
Why cant you do    case class ConsistentHashableEnvelopemessage Any hash AnySame as we do in Broadcast Seems tedious to have to define an envelope for each new message you want to hash
; design
We use oneliners even when it exceeds 120 chars
; general
We dont use any unnecessary curlies Newline is ok
; general
Ah I didnt think of it so but that is of course better Ill change
; general
Sure Just looked weird
; general
But I can change it to a comment
; general
Why is this needed Isnt rangeImpls lower bound inclusive
; design
Isnt there a MurmurHash in Scala libs In the nightlies there is a scalautilhashingMurmurHash3 Is ours customized somehow
; general
Performance perhaps I kept that because the original impl did something like that and also the article httpwwwlexemetechcom200711consistenthashinghtmlId be happy to remove it if we dont think it add any value
; general
We had a ticket about migrating to that but V ended up embedding this one so I guess there is a reason
; general
Ah nextClockwise is a def Yes it must be for performance then Though I am not convinced that this saves much
; general
Isnt the name replica a bit confusing No data is replicated just more than one intervals mapped to a node on the ring WDYT
; general
Yeah there is 2226 and it was closed as invalid The comment does not explain why
; general
I think it can make a difference when adding or removing nodes as rangeImpl is probably a lot more costly than get
; general
Isnt removing and adding via  and  They only call nodeHashFor and not nodeFor
; general
True then I see no reason for it
; general
this pretty much is a constant so it should be declared like one    final val DefaultReplicas  10observe the missing type ascription which is part of the deal
; general
yes my bad
; general
Did you see this
; general
thanks for pointing out the typo but the expected discussion was more around synchronized
; general
Sure But typos shouldnt be ignored regardless
; general
no no Ill go through all comments and fix all of them
; general
why move this up here or did Rex write all your code
; design
since always one drives the other you could also make a nonblocking implementation CASloop for updating the routees and the winner sets the hash
; design
if the first is true and the second is false then one should be set to the other no
; general
boyscout bonus points
; general
I blame the computer no it should of course go together with the MurmurHash class I think I move it to a separate file to avoid license ambiguities also makes sense since we use MurmurHash from other place also
; design
I agree suggestion of better namevirtual nodesvirtualNodesFactor
; general
true that would avoid subsequent equals checks Like this      if currentRoutees ne consistentHashRoutees         if currentRoutees  consistentHashRoutees            other instance same content no need to rehash          consistentHashRoutees  currentRoutees         else           consistentHashRoutees  currentRoutees          consistentHash  ConsistentHashcurrentRoutees replicas
; general
Virtual nodes sounds good to me
; general
yup could keep them together in a Tuple2 also This has the down side that several competing threads would do the same hashing work this is on the sender side so its probably not usual to have many threads using the same actorRefI think it would be perfect if first that detects could do the work and other continue with stale dataOnly case where I can think of where it could perhaps be bad is when creating the routees initially but that is done from constructor anyway isnt itFor this we could use ReentrantLocktryLockIs that good in the normal case when nothing changes ie quick op
; general
Locking always writes lockless will almost always read hence less cache line bouncing Id assume When you see a discrepancy between the two lists of routees try to fix that and only that and if you were the successful one update the hasher if you were the loser you might as well go on with stale data I guess ie just read consistentHash
; general
sounds good thx
; general
How important is it that we see the updates and that they are in synch consistentHashRoutees and consistentHash match upIf they need to be in sync then put them into a Tuple in an Atomic and get them in the beginning and if discrepancy between routees calculate and try to CAS if fail just use what you calculated or reread
; general
I think that this is a performance optimization Maybe Im missing something but dont you insert the node with the hashFor as key in the TreeMap during  And calling getOrElse seems much less expensive than rangeImpl
; general
my initial idea was to keep them in sync consistentHashRoutees is just another representation of what is in consistentHash but I think the ignore on CAS failure works fine
; general
no its not used in  its only used for messages and it should be extremely rare that they have the same hash as the nodes
; general
Check I see Not very likelyStill unbounded rangeImpl for every message lookup Tried to find something better but I just cant A get range of size N would have been nice
; general
Instinct Im not sure this is the best option It means that you need to control message implementations to be able to use them for consistent hashing Same issue as with putting equals hashCode etc in ObjectI propose to seed the Router with either a partial function from Any  Any or a total function from  Any  OptionAny so that you dont need to wrap messages to be able to have them hashed
; general
Can we make the ring a nodeRing then
; general
Im not sure I like that because here its the data that drives the routing logic and therefore it should be in the message and not in the definition of the routerOther routers implement the routing based the routers state eg round robin and that is different
; general
This doesnt seem cheap
; general
This line doesnt do anything
; general
Thats how it was in redis client note that this is only done when nodes are changed very rareSuggestion
; general
I think this is a nonissue Im more scared about nodeFor
; general
If its very rarely used then its fine
; general
I dont think nextClockwise needs to be a method Also try to make it return a single value not a tuple
; general
Dont we always put defaults in config
; general
In the context of the use case it shouldnt be a big Map aprox 100 nodes One could perhaps do something with takeWhile or dropWhile which could save some tree rebalancing Should I spend time on it In that case I would benchmark it in the context of the routerPatrik13 sep 2012 kl 1514 skrev Bjrn Antonsson notificationsgithubcom In akkaactorsrcmainscalaakkaroutingConsistentHashscala             private def hashForbytes ArrayByte Long            Factory method to create a ConsistentHash      JAVA API         def createTnodes javalangIterableT replicas Int        import scalacollectionJavaConverters      applynodesasScala replicas          private def nodeHashFornode Any replica Int Int        hashFornode    replicagetBytesUTF8 I think this is a nonissue Im more scared about nodeFor   Reply to this email directly or view it on GitHub
; design
Previous comment was as an alternative to rangeImpl if that wasnt obviousPatrik13 sep 2012 kl 1514 skrev Bjrn Antonsson notificationsgithubcom In akkaactorsrcmainscalaakkaroutingConsistentHashscala             private def hashForbytes ArrayByte Long            Factory method to create a ConsistentHash      JAVA API         def createTnodes javalangIterableT replicas Int        import scalacollectionJavaConverters      applynodesasScala replicas          private def nodeHashFornode Any replica Int Int        hashFornode    replicagetBytesUTF8 I think this is a nonissue Im more scared about nodeFor   Reply to this email directly or view it on GitHub
; design
Possible to remove a bit of duplication    if currentRoutees ne consistentHashRoutees         val rehash  consistentHashRoutees  currentRoutees        consistentHashRoutees  currentRoutees        if rehash          consistentHash  ConsistentHashcurrentRoutees replicas
; general
I think this match points out a flaw in the current serialization Can you add a Serializer mapping that serializes byte arrays just by identityAnd Strings should also use Serialization right
; general
well everything would work fine without those lines see this as a special case optimization to not having to go the extra steps into serializer defaulting to java serializer uha special byte array serializer could be useful for other things but what is the configured class name for such thingy    scala classOfArrayBytegetName    res16 javalangString  B
; design
I see now that this abs business is totally unnecessary negative Ints shouldnt be discriminated
; general
scala ClassforNameB    res3 javalangClass  class B        scala res3isArray    res4 Boolean  true
; design
this wasnt configurable only with api didnt thought it was important to have it as config but now I have moved it to router config and removed this constant
; design
Arent we just interested in the first match with hash  the message hash for less than 100 nodesringfindcase h n  h  hash getOrElseringhead
; general
That would be linear in the size of the ring The TreeMap implementaion in theory should handle subrange queries in the logn order Maybe benchmark
; general
Ticket added httpswwwassemblacomspacesakkatickets2499bytearrayserializer
; general
The TreeMap rangImpl isnt a lookup as far as I can see It seems to do alot more than looking up stuffAll Im saying is that insertionremoval is not common and the lookup we want is specializedMight just be better of with an array and linear find
; general
Yes true because it has to maintain redblack property for the resulting  tree I think Logn still but it materializes only for large trees Might just be better of with an array and linear findEven better sorted array and binary search
; general
yes it might be better but remember that consistent hashing will alwaysbe used with remote routees so we are not spending time on the bottleneckIf we think it is important I can take a stab at it or I can create aseparate performance ticketOn Thu Sep 13 2012 at 610 PM drewhk notificationsgithubcom wrote In akkaactorsrcmainscalaakkaroutingConsistentHashscala             ringgetOrElsehash nextClockwise Yes true because it has to maintain redblack property for the resulting tree I think Logn still but it materializes only for large trees  Might just be better of with an array and linear find Even better sorted array and binary search  Reply to this email directly or view it on GitHubhttpsgithubcomakkaakkapull698filesr1599242
; general
it cant be correct to not keep them together do you mind if I place them in a Tuple2 instead or did I misunderstand the suggestion that one drives the other
; general
I think they should be the other way around Its the consistentHash that should be in the atomic since you dont want to overwrite it with a stale consistentHash Overwriting the consistentHashRoutees with stale values will just trigger a new updateI would just make it a Tuple Cleaner I think
; general
Yes Tuple pleaseJust realized that there is a race when removing nodes otherwise that could make you get a removed node from the consistentHash
; general
Ignore that comment There is no race but go with the Tuple
; general
this import is not needed
; general
this should be expectMsgTypeActorRef
; general
expectMsgType is niceOn Fri Sep 14 2012 at 514 PM Roland Kuhn notificationsgithubcomwrote In akkaactortestssrctestscalaakkaroutingConsistentHashingRouterSpecscala  orgjunitrunnerRunWithclassOforgscalatestjunitJUnitRunner  class ConsistentHashingRouterSpec extends AkkaSpecConsistentHashingRouterSpecconfig with DefaultTimeout with ImplicitSender     import akkaroutingConsistentHashingRouterSpec    implicit val ec  systemdispatcher      val router1  systemactorOfPropsEchowithRouterConsistentHashingRouter router1      consistent hashing router must       create routees from configuration in         val currentRoutees  Awaitresultrouter1  CurrentRoutees remainingasInstanceOfRouterRoutees        currentRouteesrouteessize must be3              select destination based on consistentHashKey of the message in         router1  Msga A        val destinationA  expectMsgPFremaining  case ref ActorRef  ref  this should be expectMsgTypeActorRef  Reply to this email directly or view it on GitHubhttpsgithubcomakkaakkapull698filesr1608480
; design
Perhaps add tests for the individual settings and not only the resulting values
; general
only two is this enough
; general
Yeah max here seems way too low Should be 8
; general
This is for the test conductor sockets that are used only for the test conductor commands
; general
Ah ok I see the default netty poolsizemax is 8
; general
Yes its better to be explicit Changed all of these
; general
Added a new test case for individual settings
; general
you need to update the scaladoc alsoI wonder if someone relies on what is documented Could it change ordering expectations
; general
oh thanks I removed it because it never guaranteed anything really since contextwatch is asynchronous in the nondeadlock cases
; general
We dont use the return value so could use transform instead of transformAndGet
; general
Using refsingleupdatenewValue could be more efficient I know eliminating a read dependency can help in a DB transaction but not sure about in our STM implementation
; general
If were considering pushing this out in 21x then we might want to keep this method in order to minimise API changes But could deprecate it
; design
Nono we cant put this into 21 anyway
; general
this might want to have some comment explaining what it is supposed to be good for
; general
Come on   a semicolon For real
; general
Lol  I confess I experimented having it as a oneliner Residue must go
; general
how does suspend interact with throughtput
; general
I see below that is supposed to interrupt batches but a test would be nice
; general
The test below makes sure that the EC is loaded with all the tasks before starting to process so that it will resubmit after throughput number of tasks processed suspension aborts the current batch otherwise it wouldnt suspend
; general
What does this line Why
; general
It adds 10 tasks to do nothing We do this to simulate that other stuff gets added in between
; general
Yeah forgot to bring this up should one be able to have different batch sizes per Agent And if not what should the default be I chose 10 at random
; general
I think this might be premature just use  Id be surprised if it doesnt return this if it doesnt contain the instance it is an immutable collection
; general
Same comment as above
; general
Yes you are right Ill correct that
; general
Id make the comment the value yes Typesafe Config supports it use getBytes then
; general
if we read remainingLimit then well also want to return MoreDataWaiting no
; general
Yes good catch I fixed that
; general
The previous version called setsubject if subjectpathuid  ActorCellundefinedUid  setsubjectThis does not however Was this the intention If yes can you explain
; general
So if subjectpathuid  ActorCellundefinedUid we always removed both subject and UndiefinedUidActorRef in the else case the filter would remove subject anyway
; general
What are the longterm effects of this memory wise
; general
What do you mean
; general
Create an actor with 10 100 1000 10000 100000 children how much memory does each approach take TreeSet vs HashSet
; design
ah so you did not mean longterm but how efficient are the implementations I should guess that a tree has more overhead than an array of buckets  starting YourKit now
; general
It is a hashtrie actually no So not just a simple array of buckets Still I would guess TreeSet takes more space
; general
True it was a bit misworded I was thinking along the lines of as time passes and you have more kids
; general
well actors may sometimes also be people but the children metaphor only takes you so far
; general
Also you wouldnt want to see kids in a HaschMap
; general
Yes mutableHashSet uses hashtable and immutableHashSet uses hashtrie
; general
so actually TreeSet has an overhead of 32b per entry one tree node whereas immutableHashSet occupies 41b on average at 1000000 entries same result for 1000 entries
; general
You mean Bytes
; general
of course what else
; general
The lowercase b was confusing
; general
nope this is not an Ordering try out IntMinValue compareTo IntMaxValue to see what I mean
; general
emptyActorRefMap does not seem to be used in that case it should be removed
; general
Hmm I see where this is coming from I just wanted to remark that this enlarges every actor by 8 bytes
; design
Youre right Ill change it
; general
you are changing it to if a  b 1 else if a  b 0 else 1 I guess
; general
Oh yes Im not going back to boxing and waiting for the autounboxing optimization to be enabled by default in HotSpot
; general
Only if the actor is the only one using those props Yes it might be premature but It also stops every Actor creation by this props to allocate a Constructor and Constructor and explode the arguments into an Object only to do the exact same thing again right after
; design
yes I know well notice in case we need to optimize differently I think it is good for now I just want to spell things out
; general
I like red code
; general
Im trying to understand this is for inbound association and you remove the quarantine immediately Is that correct I thought talk to the hand was the purpose of quarantining eg undelivered system messages
; general
this means restart right and after some attempts it will be stopped
; general
Yes but in case of quarantining there will be no outbound writers created so no restarts All existing writers are stopped too
; general
When we get to this line we already determined that the uid for the inbound connection is not quarantined so we must lift it in fact Also gate should be lifted too since we just communicated with the guy
; general
got it a few lines up if endpointsisQuarantinedhandleremoteAddress handlehandshakeInfouid
; general
Thanks Sometimes you just want to click on a more context button and keep the diff
; general
This should be pulled out of the trait since it is a constant put in some object
; general
onRouteDefinition closes over this in rd  getRouteDefinitionHandlerrd and now youre exposing this to another Actor
; general
can getRouteDefinitionHandler return different things throughout the lifecycle of the Consumer ie why rd  getRouteDefinitionHandlerrd and not getRouteDefinitionHandlerapply
; general
This will mess up message ordering
; general
Im still not on board with this impl the code here should most probably be implemented as a match though    camelObjects match        case Someendpoint processor  produceendpoint processor transformOutgoingMessagemsg if oneway ExchangePatternInOnly else ExchangePatternInOut       case None  messages  messages  sender  msg
; general
what happens if activationTracker or registry dies or throws exception
; general
These should be in a companion object like usual
; design
cause does not need to be a val Why is this an Exception and not an AkkaException or similar
; general
Same comments as above
; general
prefer vars to immutable datastructures over vals to mutable ones
; general
What if these terminate
; general
So a consumer cannot also be a producer values get overwritten in the map
; general
actorsremoveactorRefforeachapplyactorRefNo need for the if block or anythingBut mixing the produces and consumers in the same map is wrong they deserve their own maps then you do not need to store any functions either just use 2 immutable sets one for consumers and one for producers
; general
if this throws then youve already added it to camelObjects
; general
why toString twice
; general
Wasnt there a todo to make this ocnfigurable
; general
timeout should probably be a Timeout instead of a Duration wdyt
; general
same comment here as above
; general
find 1 problem
; general
Should also verify that there is 1 activation and 1 deactivation per ref and that all refs were activated and deactivated
; general
FuturesequenceactivationstoList map activationsPromisesuccess
; general
Why Vectors and not Sets
; general
10 seconds seem a bit arbitrary shouldnt it be configured per test
; general
no it should not so ill use getRouteDefinitionapply The idea of using functions instead of methods was to limit mutability and closing over the actor instance
; design
Ok Ill do that then whatever floats yr boat
; general
default supervision strategy restart so they both get restarted and lose state so thats not good Ill add a Resume strategy for all NonFatal errorsAlso add a watch on them and create new ones when they die
; general
Ill do an AkkaException
; general
ok will change
; general
yes that is not possible or should not be possible Producer overrides receive to send everything it receives to an endpoint so an Actor that is a consumer and a producer would not make sense Is there some type magic I can add to enforce this
; design
yep and it will be deregistered through supervisor later now that I look at it again it is not exactly right yetwhen It throws supervisor stops the registrar instead of the producer being registered which is not good So what should happen is it throws supervisor stops the actorRef in the ActivationException through Terminated it then deregisters the actorRefAll clean again
; general
Ill take it out its not necessary
; general
Now that you mention it I think there was a ticket for it we talked about it and removed the ticketIll add a FIXME
; general
Yes better BTW Why does Await still use duration
; general
yes that could be hard
; general
ah yes nice
; general
yeah its arbitrary  Ill add an implicit parameter since most of the time you need one of those anyway in the tests
; general
cause Im craaazy like that  Ill change it
; general
Beer  no idea really will fix
; general
Ok Ill do that
; general
Well we should at least know about it right and restart them I could let the Registry watch them and create fresh ones when that happens
; general
Some options  1 I dont keep the messages when the producer is not ready yet they just disappear 2 I throw an ActivationException when the producer receives a message and is not ready yet 3 I mess up the ordering  4 like three but without messing it up how about if I call produce directly here and pass in the originalSender from the messages Let me know your favorite of these 4
; general
I wanted to prevent exactly that closing over this I wanted to basically separate the function from the Actor So the Actor should just be able to return a function the user should be able to provide a custom function and I only want that function to be contained in the message without a reference to the Actor Any way you can see how to do that
; design
Not really possible to enforce what you could do is test with serialization for local sends turned on then youll see that you cant serialize the Actor afaik
; design
Oooooor use Stash and stash all incoming messages until CPO is received then unstash them allIt does however require that camel actors use the DequeBasedMailboxThoughts
; general
Messing up ordering is the worst of them since it breaks the contract of the message sends
; general
I dont know whaat the right semantics should be I just want to know that failures are handled
; general
Would be easy to put a section in the camel config that maps the keys to FQCNsakka   camel     conversions        file  javaioInputStream       pigdog  orgawesomePigdog             And then just load that from the config when the Extension is created
; general
Timeout is for ask
; general
Weird if the test passes
; general
Yeah the message ordering is extremely important wasnt a serious option  The stash option sounds like a good idea are there any serious drawbacks to the DequeBasedMailbox What if the user configures a different dispatcher and mailbox for the actor then it will break right how to prevent that throw an exception if they tryDoes that mean you also cant use durable mailboxes in combination with a Producer
; design
thanks at least you are making me think which is great
; general
Ah man nothing more awesome than PigDog Dcool will do that as well then
; general
The other option is to spawn a child that sends the messages So buffer until CPO is received when CPO is received spawn a child with the CPO info then send all the queued messages to the child then all new messages that come in go straight to the child No stash needed just a queue which of course needs to be bounded in some sense to avoid OOMEs See any issues with that
; design
If the extension you have a reference to ExtendedActorSystem from that you can do    extendedActorSystemdynamicAccessgetClassForAnyReffqcnget to get the Class loaded in the right ClassLoader
; design
You might not want to do plain get as youll want to escalate it as a configuration problem see how the other extensions to it they use recover with rethrow of wrapped exception
; general
noooooo if the JVM is reused between test runs this is terrible
; general
My SSD wants to live
; general
hmm on NIX you can just copy the first 100MB of devzero
; general
Yes I understand that this is not a feasible solution for running tests all the time Any idea how we could do this platform independent The first step could be just not to create such a big file and delete it instantly However that wouldnt solve the SSD problem of course
; design
why remove the nice filesystem override I quite liked the possibility of quickly changing things without having to rebundle
; general
The config value comes from the ActorSystemActivator it may be overrided by the user to let him defines its own configuration as we discuss on Monday with RamanYou may in your class extending ActorSystemActivator override the getActorSystemConfig such as override def getActorSystemConfigcontext BundleContext  ConfigFactoryparseFilenew FileetcakkaconfOf course its tricky to test in the osgi sample as it we need to override something that is not yet in dependencies
; design
this should avoid the error produce in jenkins error localhomejenkinsakkaworkspaceakkaprvalidatorakkaosgisrcmainscalaakkaosgiActorSystemActivatorscala90 not found type Configerror   def getActorSystemConfigurationcontext BundleContext Config  ConfigFactoryemptyerror                                                            error localhomejenkinsakkaworkspaceakkaprvalidatorakkaosgisrcmainscalaakkaosgiActorSystemActivatorscala90 not found value ConfigFactoryerror   def getActorSystemConfigurationcontext BundleContext Config  ConfigFactoryemptyerror                                                                     error two errors foundDo I need to change this import position
; general
order trttl gremlin
; general
Now that you mention as it stands now the appliedadapters config  section accepts adapters from lowest layer to highest while the protocol  scheme is exactly the opposite order Should I change that config section  as well
; general
I have not yet dived into it but looking at this comment Id answer the config file order should match the toString order you see in logs configs etc
; general
I agree I will change it
; general
Nice Cleaning up the ThreadLocal
; general
aha when I looked at your first fix I got scared because I associated gc with javalangSystemgc
; general
Just a quick thought Wont this remove the ThreadLocal for ever actor unregistration Shouldnt it be done in shutdown instead
; design
dont hit me with a bat please but this allocates one ThreadLocal per CallingThreadMailbox ie per actor using CTD is that so bad that it MUST be change in the RFC sense or can we leave it at SHOULD level
; design
Oh Missed that tiny detail Hey its for testing right Its a SHOULD in my book
; general
okay thanks for the confirmation
; general
more test in this file has the same issue as far as I can seeamazing
; general
oh woware you sure this is the only one
; general
I wouldnt use match for this
; general
I cant see those Did I miss someI looked through them again and the other ones should shut down by themselves or are shut down explicitly
; general
would it make sense to have a similar check in addInhabitants
; general
As far as I can see from the code Ive been over it several times by now and the fact that the counts add upI also ran tests with all registrations and unregistrations logged and matched up the paths and classes
; general
so this is the cause of the problemthen my guess why we see this now and not in 20 is the new message passing for TerminationHook
; general
So I first had the fix in addInhabitants and tried to forcefully shut down the actor system in some way but that just left a lot of debrisMaybe I should just move the reportFailure to addInhabitants instead
; design
yes you are right they shutdown as part of the test
; general
yes I was thinking about the reportFailure to be able to see it as soon as possibleif it cant be a forced invariant you should leave the reportFailure here as well
; general
Yes this and the actorstart call in the RemoteDaemon are the important onesThe reason that we dont see it in 20 is that a lot of how the internal versions actorOf have changed completely and inhabitants balance up in 20
; design
Very good analysis Id prefer adding the start on the rootGuardian directly instead of unrolling it here though
; general
Id prefer to blow up if  0 because then something is really wrong as in the error you found above
; general
ah I should not read a diff outoforder
; general
ok thanks for clarifying
; general
after reading it inorder I think the check should be in addInhabitants and print aggressively although I think it should fail in a way which fails our tests thenwhen the cunning plan of 2944 is in placewe can just Threadstop the whole thing which should get peoples attention
; general
I agree with Patrik
; general
Can we put these in one method so we dont need to addremove from multiple places and that the tests for TestSerializer and JavaSerializer are always testing the same system messages
; general
but why repeat the the config here if its supposed to be in reference conf
; design
Can we reduce the boilerplate with foreach
; general
Foreach Define the sys msg classes in one val and use at both places
; general
referenceconf is always loaded by default so yo dont need all this AkkaSpectestConf or AkkaSpec without any special ActorSystem parameter should be fine
; general
great that you added this kind of test that is something we should do more when we take serialization compatibility more seriously
; general
what is the unit
; general
I think Patrik fixed this differently in another PR
; general
Not keeping a reference to the child
; design
Why the Some
; general
Should this switch to use the same approach for ClusterEnvironment as httpsgithubcomakkaakkapull675files
; general
Why this rename
; general
Looks like a noop to me
; general
latestGossip  collectorsample
; general
1 Loc  4     def gossip Unit  selectRandomNodenodestoIndexedSeq filterNot   selfAddress foreach gossipTo
; general
Is there semantics required here for ready to be at the front and initialized at the back of the sequence
; general
Point is if that semantics is not needed then the partition and collect can be collapsed into a single map
; design
Equivalent to but runs only one pass    nodes flatMap  n  if naddress  address Somenmetrics else None
; general
Its just a number or window Int to grade the weighting I could set it to 10 or 49
; general
No need for it really
; general
Good catch this used to be a val as an Option Fixed
; general
decay 0  boom
; general
Immutable set of constants should be lifted into companion object
; general
and ill update the comment while Im on a roll
; general
yes how did i miss that updated
; general
This is a constant as well could be a val
; general
No need for braces
; general
case n BigInt case n BigDecimal
; general
make absolute and move to top of file
; design
Use scalautilTry instead of EitherThrowable X
; general
Yes much cleaner
; general
toSeqhead    Just use yinvokesigargetasInstanceOfArrayDouble0
; general
Rewrite to be a onepass operation
; general
instead of the match just do a map
; general
Same comments as above
; general
Make into Try
; general
Seemed nice But with refactor to httpsgithubcomakkaakkapull675files style it was removed
; general
use    Trycall getOrElse fallbackOtherwise exceptions thrown by the callback will be outside of the Try
; general
Id probably log the exception at debug level
; general
seems inconsistent to have latestStats and clusterMetrics use  or not but consistently
; general
We usually put these between the package declaration and the code imports to easily see which extra features are enabled quickly
; design
BigInt0longValue  What ever happened to 0L
; general
val committed  availablecollectFirst  case heapmemorycommitted b  b Do the same with the ones above a bit easier on the old eyes
; general
Really Expose jmx at the top of ClusterMetricsCollector
; design
yes did not realize the lack of full import thx
; general
ah did not realize thanks
; general
I dont see the value of exposing the exception We want the instance with or without SIGAR
; general
agreed I dislike underscores but didnt want to touch Patriks code Ill see if he minds
; general
Actually I just thought of one  it is possible to have the jar on the classpath but not have the osspecific lib installed properly or the jar if you dont know what youre doing The differences may be helpful to a user during setupIll log it
; general
What do you think about the log info  keep it as is
; general
Yes good Id prefer to add a package declaraton for akkacluster in a separate pull request if thats ok And do the necessary refactors there
; design
This is solved in httpsgithubcomakkaakkapull675which is not merged to master yetProbably that will go in first and then you will adjust I will guide you to what changes are needed when its time to merge with thatPatrik8 sep 2012 kl 0126 skrev Helena Edelson notificationsgithubcom In akkaclustersrcmainscalaakkaclusterClusterscala    1497 1499  class Clusterval system ExtendedActorSystem val failureDetector FailureDetec            INTERNAL API          privatecluster val clusterCore ActorRef      privatecluster lazy val clusterCore ActorRef   He had sent me that and I pulled it in In Master it is different httpsgithubcomakkaakkablobmasterakkaclustersrcmainscalaakkaclusterClusterscala But I know after the pull the NPEs went away Ill look into it   Reply to this email directly or view it on GitHub
; design
you could mention boundaries eg  0
; general
yes when thats in and merged
; general
def gossip Unit  selectRandomNodenodes  selfAddresstoIndexedSeq foreach gossipTo
; general
the reason for the  here is the name conflict with def latestStats
; general
nodes should probably be called nodeMetrics or metrics here
; general
I dont think Viktor ment a package file but just the order of the imports ie place the language import at the top
; design
that barrier is already done in awaitClusterUp
; general
why this schedule and latchI think all this can be written with one awaitCond
; general
those multinode tests are stepbystep so you can rely on that previous step has been done ie you dont need awaitClusterUp here
; general
I would like to see an additional check on that the metrics are changed ie store away the nodeBetrics in a val and then awaitCond until metrics have changed for all nodes
; general
what is this looks like wrong constructor parameters to Address use one of the Address apply
; general
perhaps place those in separate       xxx  taggedAs LongRunningTest in
; general
remove this it will be in MultiNodeClusterSpec I have added it in one of my outstanding PR
; general
Actually I can not use the same strategyprivatecluster class ClusterNodeMetricsCollector extends Actor with ClusterMetricsCollector with ActorLogging   val cluster  Clustercontextsystem JVMNode2 Caused by 68d04775ea084f16ba9506344f2819efakkaactorInvalidActorNameException actor name cluster is not uniqueClusterCoreDaemon creates it withval cluster  ClustercontextsystemWe have to expose it somehow for internal child actors
; design
Yes that was what I saidPatrik8 sep 2012 kl 1526 skrev Helena Edelson notificationsgithubcom In akkaclustersrcmainscalaakkaclusterClusterMetricsCollectorscala             Samples the metrics for the node and updates metrics statistics         def collect Unit            Metric monitoring of the selfnode intended for loadbalancing  workload distribution       INTERNAL API       author Helena Edelson     privatecluster class ClusterNodeMetricsCollectorval environment ClusterEnvironment extends Actor with ClusterMetricsCollector with ActorLogging  Actually I can not change to this strategy yet cluster actor name is not unique   privatecluster class ClusterNodeMetricsCollector extends Actor with ClusterMetricsCollector with ActorLogging   val cluster  Clustercontextsystem  So we can refactor it when Patriks PR is in master   Reply to this email directly or view it on GitHub
; design
PR675merge here you will use settingsMetricsEnabled
; general
PR675merge here you will remove environment constructor param and use Clustercontextsystem
; general
PR675merge here you will remove with AccrualFailureDetectorStrategy
; general
PR675merge here you will remove lazy and the comment
; general
Ive reduced these 11 lines to 2  for the next PR
; general
Great you dont need to create new PR just push to this onePatrik10 sep 2012 kl 1722 skrev Helena Edelson notificationsgithubcom In akkaclustersrcmainscalaakkaclusterClusterMetricsCollectorscala       val available  datametrics filter isDefined        val previous  this previous dataaddress      val inGossip  metricKeysprevious      val peers SetMetric noPeers SetMetric  available partition a  inGossip contains aname        val updated SetNodeMetrics  if peersnonEmpty         val mergedMetrics  peers flatMap m1  previouscollect  case m2 if m1 same m2  m1  m2         nodes collect           case a if aaddress  dataaddress  a copy metrics  mergedMetrics          case a if aaddress  dataaddress  a               else         val initialize ready  noPeers partition trendable        val initialized  initialize collect  case a  a copy average  SomeDataStreamdecay avalue get newTimestamp newTimestamp         val merged  ready  initialized Ive reduced these 11 lines to 2  for the next PR   Reply to this email directly or view it on GitHub
; general
SIGAR returns 3 while jmx returns 1 There is no requirement to return 1 or 3 and one minutes is goodIll leave as is for now and can modify this if requested preferably after the PR is accepted to minimize changes now
; general
Yes use 114 sep 2012 kl 2004 skrev Helena Edelson notificationsgithubcom In akkaclustersrcmainscalaakkaclusterClusterMetricsCollectorscala           Samples and collects new data points           return akkaclusterNodeMetrics         def sample NodeMetrics  NodeMetricsaddress newTimestamp SetcpuCombined totalCores      systemLoadAverage used committed max processors networkMaxRx networkMaxTx            SIGAR  JMX Returns the OSspecific average system load on the CPUs in the system for the past 1 minute      On some systems the JMX OS system load average may not be available in which case a 1 is returned      Hyperic SIGAR provides more precise values thus if the library is on the classpath it is the default         def systemLoadAverage Metric        val n  wrapLoadAverage fold x  jSystemLoadAverage        y  yinvokesigargetasInstanceOfArrayDoubletoSeqhead jSystemLoadAverage SIGAR returns 3 while jmx returns 1 There is no requirement to return 1 or 3 and one minutes is good Ill leave as is for now and can modify this if requested preferably after the PR is accepted to minimize changes now   Reply to this email directly or view it on GitHub
; general
I remember now that I made the decision in not following Patriks naming to make it very clear that the view returns metrics for the cluster thus clusterMetrics vs metrics vs a singular nodes metrics Ill keep it as is unless theres an uproar
; general
My spideysense tingles here execute early
; general
Singleshot tasks use roundUp to ensure not early execution the same goes for the initial delay of recurring tasks Using that for the recurring invocations means that the minimum delay you can get between executions is 2tickDuration unless we were to check the clock where we are in the tick when calling schedule Having the maxFrequency be 05  TickDuration would be unintuitive and looking at the clock costs time quite a lot on Java 6 but thats what the old scheduler doesSo which poison
; general
BTW the worst case is to fire slighty less than 1 TickDuration early but that happens only when the Scheduler is running at capacity ie when dequeuing the tasks for one tick takes nearly the whole tick
; general
So the schedule early thing isnt that more likely to be observable right after the initialDelay since you calculate the next delay from the original initialDelay and not from the rounded up initialDelayThe old timer seems to keep track of when the current tick should have finished as well as the absolute time that a task should executed and if it picks up a timeout thats in the wrong bucket then it reschedules itCouldnt that be done for this scheduler as well Not only keeping track of rounds for a task but also the absolute time that it should execute
; general
This implicit does not actually do anything does it
; general
forgot to verify lastSender  testActor
; general
Yes it does forward takes an implicit ActorContext
; general
Good one will fix tmro
; general
check that the securecookie in this section is correct
; general
has been evolved to  has evolved into
; general
listen ports  listening ports
; general
a previous remote address  a remote address of
; general
has been changed to  have been changed to
; general
onlyTypo formely  formerlyId also italicise or quote connections
; general
triggering  that triggered
; general
reflects that  reflects the fact that
; general
This explanation kind of confuses me Isnt a connectionlike association just a connection What about it isnt a connectionI realise its not a networklayer connection but it does seem like an Akkalayer one
; general
see the documentation of the remoting for detailsee the remoting documentation for more detailA link would be helpful too
; general
transports  transport
; general
The remoting subsystem of  maybe
; general
SPI Implementations of the Transport trait can be loaded by     SPI Transport implementations must extend this trait    Transports can be loaded by
; general
Example for  An example of
; general
Example for  An example of
; general
possible decorate  possible to decorate
; general
Same comments as in migration guide
; general
To intercept when  To be notified when
; general
To intercept when  To be notified when
; general
and the cause Throwable  and the Throwable cause
; general
To intercept when  To be notified when
; general
To intercept when  To be notified when
; general
and the cause Throwable  and the Throwable cause
; general
SSL can be used for the remote transport by enabling the transport akkaremotenettyssl    via adding it to the enabledtransport configuration section See description of the settings    in the refremotingscalaconfiguration    SSL can be used as the remote transport by adding akkaremotenettyssl    to the enabledtransport configuration section See a description of the settings    in the refremotingscalaconfiguration sectionIs SSL used as the remote transport or is it used for it Or in other words is SSL the remote transport or does it enhance an existing transport
; general
No it is the remote transport Currently SSL is not a transport adapter
; general
Member nodes are identified with their address in formatMember nodes are identified by their address with the format
; general
Member nodes are identified with their address in formatMember nodes are identified by their address with the format
; general
for the 22 release and others are pluggable for the 22 release other transports are pluggable
; general
host  port  host and port a bit more formal
; general
This change results in various necessary changes in  This has required some changes to
; general
Mention somewhere what the planned forward and backwardcompatibility of the new protocol will be I guess thats what youre hinting at when you mention futureproofing
; general
1 That should go
; general
Ah buggah yes I fixed it for the cause case but not the my nocause caseWhen you gonna push
; general
Hm cant find it uri
; general
bytes is mutable
; general
True but ByteStringCompact is privateakka It was and still is done the same way for ByteString1scala  privateakka object ByteString1     def applybytes ArrayByte  new ByteString1bytes        An unfragmented ByteString     final class ByteString1 private private val bytes ArrayByte private val startIndex Int val length Int extends ByteString The clone happens in the public objectscalaobject CompactByteString   def applybytes ArrayByte CompactByteString  ByteStringByteStringCompactbytesclonelike is was done before in object ByteString
; design
Remove this method and put UTF8 as the default value of encoding
; general
Sort of confusing with ByteStringCompact and CompactByteString
; general
This docs doesnt really explain anything
; general
Optimize the case where bytesisEmpty
; general
I did it this way two applyString methods because it was and still is done like this in object ByteString Should I change it in both ByteStringCompact and ByteString to keep them consistent
; design
Yes Im not entirely happy with ByteStringCompact and CompactByteString Proposal Ill rename the internal class from ByteStringCompact to ByteStringCompactImpl or maybe better ByteStringStrict Would that be acceptable
; design
Yes change both Overloading in Scala is tricky and often not needed
; general
If its just internal just put the impl inside the ComactByteString companion object
; design
Strike ByteStringStrict  its still not a strict collection behaviourlike just compact as it is
; general
Oops indeed Sorry I will improve the docs
; general
I wanted to ByteStringCompact next to ByteString1 and ByteStrings to keep the three implementations together and so that ByteStringCompact has access to things which are privateByteString though currently the critical stuff is all privateakka
; general
Ok I renamed it to ByteString1C now
; general
Sorry cant  some tests dont compile when I combine the applyString methods Lots of errors likeerror homeoliDataSourceScalaexternakkaakkadocsscalacodeakkadocsioHTTPServerscala199 could not find implicit value for parameter num IntegraljavalangStringerror   val connection  ByteStringConnection
; general
no need to do anything in the other case ShutdownAndFlushpreviously that did something via postStop
; general
ah ok I see
; general
No since that happens before listen is called which starts up the transports
; general
should we yield false if this fails
; general
is it okay to shut down transports and endpoints in parallel
; general
and when receiving  it sends the final systemGuardian  TerminationHookDone  looks good
; general
I would prefer something more visible than  message but that is an implementation detail
; design
but this andThen change did not really change anything unless Im mistaken
; general
Isnt this sequential between flushStatus and shutdownStatus since I create the future of the second inside the for clause
; general
oh forget it my bad maybe add a comment
; general
and I assume that you have tested manually to verify that systemawaitTermination doesnt return before all this is completed with extra sleeps
; general
so that nobody optimizes it
; general
Well andThen is more sequential I dont think anything apart from Unit is needed for RARP I think all the error reporting has to be done until this point
; design
Yes I logged all phases of shutdown with sleeps everywhere It took some time until I got it right
; general
Is that one special in some way If we care about that one then we should care about the ones below as well I guessI think this is just best effort
; general
yes I think we should
; general
Patrik is right but I have to make sure that we keep going on even if some steps fail
; general
This was somehow reverted at some point since I split these once
; general
yes it is only for the logging
; general
I think this baby has got to go
; general
Nice catch dawg
; general
add FIXME needs to be changed manually for the final release
; general
In migration guide section Scheduler Dispatcher there is a Durationparse please fix that also
; general
why fully qualified name here why not import as we normally do
; general
Youre right Ill fix
; general
So basically youre using the synchronization of the lazy initialization to ensure that all users wait for the value to be initialized I mean its not that this has to be done after something else right
; general
yes thats rightthe problem was that Helena was adding another cluster actor which use subscribe and sometimes that call was done from another thread before this val was initializedThe ugly part is that we expose this as ClusterEnvironment to the cluster actors in constructor of ClusterDaemon before the constructor of Cluster has finished Since its only for the internal cluster actors I think its alright or do you have a better suggestion of how to do it
; design
It shouldnt be possible to get a reference to an Extension instance until it has been initialized Can you minimize it
; design
no that is not possible this is only an issue for the internal actors created by the Cluster
; design
Shouldnt they use Clustercontextsystem
; general
nope for testing purpose we create special Cluster instance not the extension
; general
Sounds like something we should avoid creating brittle code to satisfy testability seems wrong
; general
creating untestable code usually also hints at some design flaw just a general observation have not thought about the specific case
; design
This resolves the NPE for subscribeunsubscribe Thanks Patrik
; general
Ill see if I can use ActorSystemregisterExtension to plug in the Cluster subclass for testing purpose If that is possible the internal actors can use Clustersystem
; design
I tried some experiments with registerExtension of a test instance of the Cluster extension I thought it would work if Id override equals and hashCode to make the two ExtensionId instances be treated as the same id but that doesnt work because we use ConcurrentIdentityHashMap for the extensions in ActorSystemWhy do we use ConcurrentIdentityHashMap and not ConcurrentHashMap for the extensionsPlease enlighten me if there is another way of doing it
; general
hmmm dont know what is the clusterinstancereplacement adding
; general
Its adding pluggability of failure detector and seed nodesI have started refactoring which will remove the need for a test Cluster extension instance so problem will be solved in another way
; design
why local methods
; general
might want to cache Clustercontextsystem in a val
; general
Should be added to the ConfigSpec
; general
no ClusterMessage are the ones that are sent over the wire and needs to be protobuffed
; general
reduce clutter further down for example selfAddress is referred to 44 times
; general
I do that in ClusterCoreDaemon where it matters this actor is a short lived actor that only calls that a few times Performance doesnt motivate it but I can sure do it if you think its more dry
; design
its already in ClusterConfigSpecnote that this setting existed before also
; general
You could do      import cluster
; general
This came from viktorklang s change to Try Should it be NonFatale or is that already taken care of in recover
; general
rather not because there would be confusing name clashes for example def join exists in both places
; general
I could of course change to import clusterselfAddress That would make sense
; general
CAtch all is fine here Try handles NonFatal
; general
great otherwise it was a good catch Jonas
; general
So I get a bonus point anyway
; general
yes 10000 reviewerawakedimes to you
; general
How do they know what timestamp to use
; general
they click on the link above and pick onehttprepotypesafecomtypesafesnapshotscomtypesafeakkaakkaactorbinVersion
; general
Ah the context to that link was not present in the diff thanks
; general
youre sending the Actor instance to another Actor and not the ref big nono
; design
A bit adhocy and id happily overwrites the previous values if it receives more of these messages is that intentional
; general
If you cant have an endpoint without a processor they shouldnt be separate vars
; general
2 closures created when isEmpty has already guarded this is a bit too wasteful
; general
oops didnt think about that its the ConsumerConfig info I need to pass on Ill separate that out
; general
ok Ill just use get
; general
Good one Ill guard for more than once and create a case class for holding the endpoint and processor
; design
this is not all places in cluster sample search for akkaremotingtransportstcpport
; general
Where I dont find it
; general
And I actually run the sample
; general
Ah there are conflicting changes Have you merged something I rebased this not too long ago
; general
intentionally not calling superpreRestart
; general
def startactor  Actor name Stringimplicit system ActorSystem ActorRef   AwaitresultCamelExtensionsystemactivationFutureForsystemactorOfPropsactor name  name10 seconds systemdispatcher 10 seconds
; design
no will change
; general
If someone calls endpoint or processor in the constructor then theyll get null
; general
crap yes maybe they shouldnt I had some intermittent issues with just using a val and a lazy val timed out the concurrent testsIll check what can be done
; general
Whats the purpose of making it lazy if it is forced in preStart if not earlier anyway
; general
So that if someone in a constructor calls it it will get a value but that doesnt really make sense cause if that would work OK I might as well have done it as a valBut Im rewriting the activation right now in a separate ticket and came to the conclusion that it is better to not expose this internal endpoint and sendprocessor If the user wants an endpoint they can do camelContextgetEndpointendpointUri and if they want a sendProcessor they can get one doing just new SendProcessorendpoint with that created endpointI dont know why I didnt think of that earlier maybe cause Im rewriting that piece now  so in this case and this version I will just make them private
; design
and then it shouldnt be lazy either right
; general
Alright let me know when things are ready for review Ive got an insane amount of code to review
; general
OK good luck
; general
Here it ishttpsgithubcomakkaakkapull677On Thu Sep 6 2012 at 229 PM Viktor Klang notificationsgithubcomwrote In akkacamelsrcmainscalaakkacamelProducerscala   159 1517  import orgapachecamelprocessorSendProcessor         author Martin Krasser      trait ProducerSupport extends CamelSupport  this Actor       protectedthis lazy val endpoint Endpoint processor SendProcessor  camelregisterProducerself endpointUri  trait ProducerSupport extends Actor with CamelSupport     privatethis lazy val endpoint processor  camelregisterProducerself endpointUri    protectedthis def endpoint  endpoint    protectedthis def processor  processor      override def preStart       superpreStart      make sure registerProducer is called      endpoint      processor Alright let me know when things are ready for review Ive got an insane amount of code to review  Reply to this email directly or view it on GitHubhttpsgithubcomakkaakkapull672filesr1543573 Raymond Roestenburgcode httpgithubcomRayRoestenburgblog httproestenburgagilesquadcomtwtr RayRoestenburg
; design
shutdown  shut down
; general
shutdown  shut down
; general
ok replaced those in scaladoc also
; general
ok replaced those in scaladoc also
; general
what is the java api for this
; design
what is the java api for this
; design
what is the java api for this
; design
def getByteBuffers javalangIterableByteBuffer
; general
Would have preferred to have the same method for both but I guess were screwed
; general
Added getByteBuffers and added test
; general
Why is this not a lazy val Sorry if this was already discussed
; general
We want to keep resident memory usage down
; general
Ah true it would be retained as long as the ByteString lives
; general
ok so here we used the 2 seconds timeout isnt that used at other places in the test which could cause the same problem
; general
it looks like there is a mix of timeoutduration and remaining in this test file should it be like that
; general
Do we mean SingleExpectDefaultTimeout when we say remaining here I cant find a within It looks confusing to me
; general
Switched to DefaultTimeouttimeout for them all
; general
this is fine since you only use remaining which without within is akkatestsingleexpectdefault    3s dilated
; general
I think that is confusing I think remaining should always be the offset from the test start  timeout if there is no surrounding within block
; general
why not remainingtimeoutduration is akkatestdefaulttimeout  5s no dilationremaining without within is akkatestsingleexpectdefault    3s dilatedIm not sure there is still a mix of this timeoutduration and await remaining but I guess it would be easy to introduce that mix again which would be very confusing especially due to the dilation
; general
This is the timeout for the internal askcalls inside the actor itd be very confusing if they werent fixed
; design
At other places like expectMsg it makes perfectly sense as it isI think you should use an explicit within if you care about it    be able to call Futurereturning methods nonblockingly in within 3 seconds
; general
its also confusing to have the await timeout shorter than this ask timeout isnt it
; general
yes Patriks suggestion achieves what Viktor actually wantsViktor without that within marker TestKit cannot possibly know when the test started hence it also cannot give the meaning to remaining which you think it should
; general
No not really the asktimeout is just the longevity of the PromiseActorRef and the subsequent fulillment of TimeoutException inside the Future the reader the guy with Await still is in control for how long he wants to wait and it doesnt make sense to wait longer than the promise lives anyways
; general
Then I suggest having remaining throwing an exception if used outside of a within block
; general
And will have to add withintimeoutduration for each and every test yay for boilerplate
; general
WDYM If you want to limit how long something takes then yes youll have to say so I dont see how this could be different What would be the semantics How would it work
; general
Have an implicit within for each test where the default value is the timeout of the test in this case DefaultTimeout all remaining calls would be relative to the closes within block and at the top itd be the default test timeoutBut I think remaining should be throwing exceptions if used outside of within blocks if it isnt relative at all in that case
; general
I dont think it would make sense to have a default test timeout because it would have to be insanely long like minutes or so tests are very different and the SingleExpectDefaultTimeout was chosen as a reasonable we expect a response right now thing which survives mild machine troubles but as we know fails sometimes Making it much larger does not gain muchAlso how exactly did you envision your implicit within to work Write our own test framework this is not meant inflammatory you knowAnyway we dont have time to rework our test suite right now so lets add a within here and be done with it We can revisit this when 22 is out
; general
Ill do that as I said but I think we should change remainingto throw an exception if used outside of within and then add an expectTimeout method that returns SingleExpectDefaultTimeout because it is absolutely hideous Then we can see how many tests call remaining when they shouldnt and we can change them to use expectTimeoutDeal
; general
do we have a volunteer
; general
ok I thought it was more interesting for the test to see the real asktimeout than the awaittimeout but I dont know the details of the testAlso I hope you see my point in that mixing those you can trigger different timeouts in different environments due to the dilation factor
; general
Yes absolutely an AskTimeoutException ISA TimeoutException so as long as you catch TimeoutException its all the same
; general
Yes of course I suspect we have a few tests that are broken due to this false assumption You do have to agree that something called remaining that isnt relative unless in a specific context is a recipe for problems someone moves a within block or else
; general
BUT I wont do that as a part of this pull request as it is vastly more disruptive
; general
of course I was thinking more along the lines of making a proper ticket for it
; general
Break this out into a private method to stay DRY
; design
we have a ticket for moving this to a macro since it is on the hot path not sure about macros for akkaactor though since that would introduce a new subproject CiaoRolandOn 27 jan 2013 at 1555 Viktor Klang  notificationsgithubcom wrote In akkaactorsrcmainscalaakkaactordungeonDispatchscala    9821 10730  privateakka trait Dispatch  this ActorCell      final def stop Unit        try dispatchersystemDispatchthis Terminate       catch         case e   InterruptedException  NonFatal         case e InterruptedException           systemeventStreampublishErrore selfpathtoString clazzactor interrupted during message send Break this out into a private method to stay DRY   Reply to this email directly or view it on GitHub
; design
Interruptedexceptions are on the hot path wat
; general
I think we are talking about different levels of DRYness
; general
Maybe something like this to DRY it upscala  import scalautilcontrolException  private def handleInterruption ExceptionCatcherUnit      case e InterruptedException       systemeventStreampublishErrore selfpathtoString clazzactor interrupted during message send      ThreadcurrentThreadinterrupt    case NonFatale       systemeventStreampublishErrore selfpathtoString clazzactor swallowing exception during message send     and then   try dispatchersystemDispatchthis Recreatecause catch handleInterruption
; design
may not be as performant if this is a hot path though
; general
I was more thinking along the lines of    private def dealWithInterruptione InterruptedException msg String Unit        systemeventStreampublishErrore selfpathtoString clazzactor msg      ThreadcurrentThreadinterrupt    case e InterruptedException  dealwithInterruptione interrupted during message sendTo make sure that the interrupt is restored everywhere
; design
1 for factoring out the duplicated code
; general
after checking the bytecode for Ryans Catcher variant I think that is the best option right now
; general
Nice I learned the ExceptionCatcher trick from the spray guys On Jan 29 2013 at 257 AM Roland Kuhn notificationsgithubcom wrote In akkaactorsrcmainscalaakkaactordungeonDispatchscala    9821 10730  privateakka trait Dispatch  this ActorCell      final def stop Unit        try dispatchersystemDispatchthis Terminate       catch         case e   InterruptedException  NonFatal         case e InterruptedException           systemeventStreampublishErrore selfpathtoString clazzactor interrupted during message send after checking the bytecode for Ryans Catcher variant I think that is the best option right now   Reply to this email directly or view it on GitHub
; general
its a small world indeed
; general
might not be needed
; general
I had 30 seconds timeout last friday and therefore I set the within timeout to 45 seconds on release21 branch I wrote a comment about that which you might consider to add     the long within timeout is because some networks have long timeout for cannot resolve unknownhost    receive Terminated when watched node is unknown host in within 45 seconds
; general
Oh thanks I forgot to ask you about your timeout experiences
; general
I think this needs a bit of documentation outlining what its purpose is etc so if the need ever disappear we know that it isnt needed anymore
; design
given that they deserialize the same why not reuse DeadLetterActorRefserialized
; general
Thanks for the explanation in Flowdock How about The length of time to gate an address whose name lookup has failed No connection attempts will be made to an address while it remains gated Any messages sent to a gated address will be directed to dead letters instead Name lookups are costly and the time to recovery is typically large therefore this setting should be a value in the order of seconds or minutes
; general
This seems to only work on ZMQ  30
; general
Correction 22 httpsgithubcomzeromqjzmqpull109files
; general
This has no place in the README
; general
Why DEBUG on one line and DEBUG on the next
; general
Use ThreadLocalRandom instead
; general
Why isnt this defined below maxMessageSize
; general
counter  if counter  2999 0 else counter  1
; general
Why this line
; general
renove this line or add comment about why there is no more code
; general
currentTime  SystemcurrentTimeMillis and should not be used to measure elapsed time as it isnt accurateUse nanoTime
; general
Should include a commentoutput on how to terminate
; general
I suggest Array
; general
Same comment as before
; general
Why this line
; general
Dont define messages inside the class they are not static inner classes
; design
why this line
; general
Why is this defined here
; general
Why this line
; general
Why this line
; general
needs to output how to terminate
; general
should be immutableSeq
; general
how do you deal with overflow
; general
Why are these done as messages
; general
No need to make this into a method leave it as it was
; general
why add braces
; general
make it a oneliner
; general
no need for this val just use recvTimeout
; general
Why the Valuesuffix
; general
Remove Valuesuffix is not used anywhere else in the codebase
; general
No need for braces
; general
default should be from the config not in code
; general
default should be from the config not in code
; general
why have you removed mima
; general
This file should IMO not have been checked in
; general
Why is this removed
; general
Why is this added
; general
Frame does not exist in master IIRC
; general
socketType as an Int is a bit too loose of a type would make sense to type it and validate
; general
Any reason to use blocking hereIf supervisor is None you wont get any sensible error message right I suggest passing the supervisor actor into the constructor as to not conflate supervision with services Makes sense
; design
What is the return type of this method
; general
Id suggest switching to either Vector or a mutable append data structure to avoid reverse on line 28
; general
I recommend    case null  None    case bytes ArrayByte  Somebytes    case   None
; design
What is the purpose of this synchronizestatement
; general
Is it intended to be able to send multiple Start messages to the same actor during its lifetimeOtherwise I suggest putting that logic in preStart
; design
Why is the field private
; general
Can the actor get the Start message multiple timesIs there a reason that the context supervisor isnt providing the Sockets in the constructor
; design
Youre using shared mutable state between the context and this registering the sockets with direct calls instead of with messages etcThis should be possible to model with Actors so that theres a polleractor etc
; general
There doesnt seem to be a way to configure which dispatcher that spawned actor will use is this intentional
; design
This is unsafe since this is a captured self reference from the parent Actor you should store away the selfreference and capture the stored reference instead Im assuming the  null check is there due to NPE in the code
; design
Why the synchronized block here which is the owning monitor And who is the contending party
; general
What is the purpose of this To do ThreadyieldI think the receiveMessages method should be reimplemented like Derek has done for IOActor heres a link to how its implementedhttpsgithubcomjbonerakkablobwip923derekjwakkaactorsrcmainscalaakkaactorIOscalaL463
; general
Why is this a lazy val
; general
Why is this a lazy val
; general
Any particular reason that this is an Array mutable
; general
Any particular reason that this is an Array mutable
; general
Can this be sentprocessed multiple times during the lifecycle of this actor
; general
This could be a case class or
; design
I suggest implementing the postStop callback at another step or through a trait instead of blacking it out because its hard to know why
; general
Can this be received multiple times during the actors lifecycle
; general
This should be implemented as IOActor to avoid hogging a thread also its not configurable to choose which dispatcher will be used for the spawn
; general
If there is an error in the calls above the socket will never be closed
; general
I think you meant to say
; general
I think you meant to say
; general
I think you meant to say
; general
I think you meant to say
; general
I think you meant to say
; general
Please use TestKit It already has awaitCond etc
; general
Please use TestProbe from TestKit for this
; general
So if no blocking is used here then how remoteSocket would be provided from the context actor sup or were you thinking that the actor would process messages that provide the created socket
; design
The idiomatic actor style would be that the supervisor creates its children and passes to them either via constructor or first message all information that they need to perform their task
; design
Alright Ill revise the code accordingly
; general
Is Context threadsafe
; general
Scalas Vector is usually quite a bit more performant and supports append so use List only if you need the prepend semantics
; general
Switch to listenerisShutdown isRunning is removed in masterWhat should happen if the listener is shut down
; general
Instead of calling back into the Actor I think you should send it messages otherwise you have a raceAlso there is no check for the current status of the actor what happens if its dead
; design
Nice Would the code be clearer if the runmethod would be named differently
; general
this can be shortened to listener foreach    Connected
; general
Yes from the ZeroMQ documentationA MQ context is thread safe and may be shared among as many application threads as necessary without any additional locking required on the part of the callerhttpapizeromqorg21zmq
; general
Two strategies either the runselect loop is terminated or nothing I dont have a strong opinion about that may be nothing
; general
receiveFrames can be replaced with the followingprivate def receiveFrames SeqFrame    var frames  VectoremptyFrame  whilesockethasReceiveMore receiveBytes foreach  bytes  frames  Framebytes   frames
; general
Can you elaborate this note a bit
; general
If performance is important here I think Id recommend not using options and use a cached empty byte array as an EOF markerval noBytes  ArrayByteinline private final def receiveBytes ArrayByte  socketrecv0 match   case null  noBytes  case bytes ArrayByte if byteslength  0  bytes  case   noBytesThen you can just match on itreceiveBytes match   case noBytes  done  case bytes  Framebytes
; design
Nice touchAre you sure you want prepend semantics on the requests
; general
Nice with the SocketType
; general
You dont need the val keyword when its a caseclass protip
; general
NiceMight be nice to be able to specify a supervisor to the actor
; general
Might want to make that configurable Akka has a really nice Duration type in akkautilduration
; general
I was thinking that ZeroMQ would supply one down the road ie all ConcurrentSocketActors would have a supervisor when created using newSocket Bad style you think
; general
That wont work as hasReceiveMore is false if the message does not comprise of multiple message frames
; general
Instead of directly calling into the ConcurrentSocketActor through methods like connect bind etc you should send messages to the actor
; general
If the listener is shut down it will never come back up again so should it still keep running
; general
So you need to call recv0 before hasReceiveMoreIf so    private def receiveFrames SeqFrame       receiveBytes match         case noBytes  Vectorempty        case someBytes           var frames  VectorFramesomeBytes          whilesockethasReceiveMore receiveBytes match             case noBytes              case someBytes  frames  FramesomeBytes                  frames
; design
I think it might be better to have def newSocket return Props for the 20 versiondef newSocketPropscontext Context socketType SocketType listener OptionActorRef  None deserializer Deserializer  new ZMQMessageDeserializer  Propsnew ConcurrentSocketActorcontext socketType listener deserializerThen instead of taking the dispatcher into the constructor you simple get it from the context inside ConnectionActor contextdispatcherThen when you want to create a connection you doactorOfZeroMQnewSocketPropswithDispatchermyowncustomdispatcherwithSupervisormyownSupervisor
; general
Yeah probably the right thing to do at that point is to stop as the messages would be otherwise lost
; general
I dont see where is the race as requests are processed synchronously in select no
; general
Cool receiveFrames looks much better now
; general
How about for the 13 release Support for a userdefined supervisor
; general
An interesting solution would also be to export it as an Iterator and fold it    val i  new IteratorFrame       var bytes  receiveBytes      def hasNext  bytes ne noBytes      def next  bytes match                           case noBytes    throw new IllegalStateExceptionEOF                          case someBytes                              bytes  if sockethasReceiveMore receiveBytes else noBytes                             FramesomeBytes                             Then to collect all the avalable frames    VectorFrame  i
; design
But youre calling out to the methods of the Actor which is a violation of the ActorModel since the Actor could be shut down or its fields might be invisible from a JMM perspective why not put the connect bind etc as methods inside the selectfunction or are they used internally in the actor as well
; design
No they are only invoked from select and should not be invoked from any other site either inside or outside the actor
; general
Alright good so move them into the select function so that theyre only reachable from within itGreat work Karim
; design
For the 13 release I think its better to create the actor inside the newSocket method and pass the supervisor into it and have it set prior to starting itdef newSocket supervisor ActorRef ActorRef    val a  actorOf  supervisorlinka  astart
; design
Thanks for pointing that out I think your previous suggestion is much clearer
; general
This is not thread safeIsnt there an isClosedmethod on Socket
; general
Not threadsafe here either
; general
Not here either
; general
Since this method is only ever used in receiveFrames you might as well move the method definition into receiveFrames wdyt
; design
No there is not one What if the ifstatement were to be removed from postStop
; general
Thanks those two methods receiveFrames receiveBytes were moved to select
; general
Switch to checking selfisShutdown and remove the var isClosed
; general
An ideais there any reason that these ops are done on the thread of the selectTask and not inside the ConnectionActor itself Or was it like that before I dont recallWould it be possible to do the receiving of bytes Only in selectTask and then to the rest in ConnectionActor then you can capture at the start of the selectTaskprivate val selectTask        def connectendpoint String becomesprivate val selectTask     val self  thisself Then you do not need to check self  null anywhere and you do not need to do select but you can doif selfisShutdown selfdispatcherdispatchTaskthisat the end of selectTaskThoughts
; general
This will generate a MatchError if frameslength  0 is this intentional
; general
Great you can simplify it a bit by    receiveFrames match       case Seq       case frames  notifyListenerparamsdeserializerframes
; general
Seqlength is On
; general
Jason has a valid point change it to something likeval i  framesiteratorwhileihasNext sendBytesinextpayload if ihasNext JZMQSNDMORE else 0 Thoughts
; general
Should be  indexvalueIterators1toSet must be  Set1ie drop assert
; general
Good workOne thing that needs to be added is parallel access to Index since the entire point of it is to be threadsafe can you add thatCheers
; general
Ok that syntax is more intuitive
; general
Thanks I will try to write a test for parallel access as well
; general
You can probably get away with     val index  new IndexInt Int100  compareTo
; general
You can probably just use sum instead of fold0
; general
Coolio does it work with the latest master
; general
Yes I thought it was ok to use Scala actors since they are part of the standard library Of course Akka actors could be used to archive the same thingspawn     do stuffOne reason to not use Akka actors could be that the Akka actors may be dependent on the Index class in the future If the test of the Index class is dependent on Akka actors then the test is testing something with the help of the thing that shall be tested This is probably very far fetched so I will change it to Akka actors instead
; design
I can check that before I push a new version of the code
; general
Id suggest using akkadispatchFuture insteadFuture
; general
Do we need this indirection    listens onFailure addressesPromisetryFailure
; general
the reason I added the ListensFailure was for the pipeTo but perhaps we dont care about unhandled
; general
wouldnt it be better to store the listeners as Runnable instead of    and then it wouldnt be needed to create new Runnable
; design
good point changing the API now from CallableT with documented ignored return value to Runnable
; design
Awesomely done Patrik
; general
regfailureDetectoraddress collect  case p FailureDetectorPuppet  p
; general
Are we sure that you want to reuse the same config
; general
Im not sure First I started without that but it was a bit too much duplication to feel good On the other hand it will be easier for user to see full config in the documentation since we include it there Im on the fence
; general
this is racy
; general
no dot at the end of line here
; general
My settings are more sensitive than your settings were in the cluster  module I started a discussion on that I thought that the outcome was  that it makes sense to have it that way WDYT
; general
that is why I override threshold and maxsamplesize
; general
Ah I missed that one
; general
a constructor with a comtypesafeconfigConfig parameter
; general
How often keepalive heartbeat messages should be sent to each connection
; general
I liked the old look better
; general
ok change it
; general
ok changed it back
; general
Avoid combining default constructor parameter values with auxiliary constructors
; general
Might want to use Mapper instead of JFunction
; general
Returns a new CamelMessage with the given
; general
I think this is redundant just do messageattachments get name
; general
Isnt this just liability just use messagewithAttachmentsmessageattachments  myAttachments
; general
Not documented and isnt it a bit weird to have mutability mied with immutability
; general
This implementation seems like there should already exist such a utility function amongst the dependencies try to find one and use that DRY
; design
So what happens if you have an attachment which is a file on disk does this force that file into memory If so then the usefulness of this could be questionable
; general
If this throws then the files wont be deleted below
; general
Im not a huge fan of adding dependencies even for tests can we avoid these
; general
Make this so that it cannot use a different version than the camel version we use use a val
; general
ok didnt know that one yet cool
; general
ok I just took across the way headers was done by the dude before me Will bring the amount of similar methods down there too
; general
Its needed in apache Camel land but it should actually be private will change
; design
Yeah didnt know if I shoudl pull in a dep instead of handrolling this once Is it ok to depend on scalatoolsnsc or not otherwise ill find something else
; general
yes this does go into mem The other way I though of is to keep some type of filestore in the camel extension write an attachment to fileif it is big configurable what big means or always write it to file and keep some kind of immutable handle to the attachment basically a string url that is stored on a temp location in a fileNot sure when it should then be deleted though could make a time based  scheduled cleanup of temp or make the user responsible like a delete method on the handle The Attachment would then be something like Attachmentname contentType handle what do you think
; general
I needed these to test the attachments with jetty I dont see other existing deps that have http ability I could use good ol HttpUrlConnection from the java stdlib the camelJetty is a necessity if you want to test jetty with attachments but using the HttpUrlConnection will remove httpclient and mimelet me know what you think
; design
It is a bit contrary to your previous DRY comment though
; general
What problem is this trying to solve
; general
No I meant couldnt you use straight camel to test Akka Camel or somesuch
; general
The above commentidea that you would not be able to handle huge files if they cant fit in memory But its a lot of complication for possibly an edgecase Thought it would be a good idea to do the simplest possible first but maybe the ByteString is too simpleThe main problem with how camel does it internally is that it is all mutable uses javaxactivationDataHandlerSo the solution needs to be immutable of course so its or keeping the entire thing immutable in mem or having an immutable ref to the thing on disk Ill build something and see how it goes with the file approach
; design
Hmmm dont put any work into the filebased approach it might end up wrong as wellSo just to backtrack a bit what are attachments and why are they currently a problem and in what way
; general
Apache Camel Messages consist of headers a body and attachments Attachments were never implemented in version 1x of akkacamel or as part of the rewrite so farI picked it up because there was an old ticket from MartinhttpcamelapacheorgmavencurrentcamelcoreapidocsorgapachecamelMessagehtmlthe attachments in the apache camel version mutable version of the message uses DataHandler as type for the attachments These things are mutable so we cant just take them over to the akkacamelCamelMessage class
; general
Well I dont think we should eagerly suck them into memory eitherWhat are the alternatives
; general
Well I did do that before and everything worked for it to not work with a real component jetty and fixing it based on the problems foundI can look into that a bit more The ticket was specific to camel jetty though httpswwwassemblacomspacesakkatickets1214Ill investigate if I can test it without jetty and the http deps
; general
If you dont want to be eager then the actual attachment cant be part of the CamelMessage case class we could add attachmentRefs to the CamelMessage class like refs or handles to the attachments and add some methods on CamelMessage to get the actual data for the ref which will recreate the bytes from the ref something like camelMessagematerializeAttachmentattachmentRef or a far better name not my strongpointProblem is when I tried in a previous version to just only take over the id information of the handler and stream the data later the data already disappeared But that could be solvable Ill get back to the drawing board
; design
When does the data disappear
; general
Yeah I gotta look into that it was in a test where I just used the datahandler stuff instead of the bytestringI guess it might be somewhere inside camel
; general
I should also unsubscribe in unwatch when there is no nonlocal watchers left
; general
This is waaay too expensive put the call outside of the forcomprehencion
; general
Make this a 1liner and move it into the ifclause below since it isnt used in this scope
; design
ok will do maintainAddressTerminatedSubscription has an optimization check on a so it wasnt waay just way
; general
existenceConfirmed true or false here
; general
false Because we could have been watching a RemoteActorRef that had never resolved before the other node went down
; general
thanks I have removed the fixme and added your comment
; general
add FIXMEs for when we go final
; general
Yes A FIXME should probably be added to the dependencies in AkkaBuild as well
; general
Added tick httpswwwassemblacomspacesakkatickets2684 to 21 instead to remove all cross CrossVersionfull when we go to Scala 2100 final
; general
In Scala in the Java rst
; general
Yes the Future is in Scala now Should we try to hide from people that Akka is written in Scala
; general
No its fine
; general
Then clarify it to say In the Scala Standard Library a Future
; general
Will a Java programmer be able to relate to Scala Collections
; general
Thats a really good question Do you have a better analogy Is it important since what it gives you is explained in the sentence after
; general
Yes that is better
; general
You can use this instead if you want       nodefirstaddress
; general
nodeaddress can only be used in the jvm which runs that node so if I want secondAddress from first node that will not work so I think I stick to always retrieving the address from the conductor
; general
ah sorry for my stupid comment now I see what you meannode is a utility in MultiNodeSpechmm I think something need to change name hereif that is named node we should probably use something else in the tests I named the cluster node after your testsI can change that to cluster
; general
I thought this would be solved with Rolands inmem dbregistry Is it implemented
; design
Do we need to tag these as LongRunningTest still Would be nice if all MultiNode tests were automatically tagged
; general
Right Saw your comment now Good
; general
I dont think that this one should be tagged LongRunningTest since it takes about 3 seconds to run but I do think that we should tag some of the tests when they do take a long time I can imagine that provoking the failure detector in weird ways will need actual wall clock time to passMaybe the multinode tests should be tagged with something automatically so you can exclude all of them easily
; general
ok removed LongRunning from this test
; general
oops got it wrong
; general
What is the unit of the average Percent
; general
Is there a null object for MetricsGossip so we dont create a new empty one
; design
so decay  1  boom
; general
So timestamp and startTime is defined to be in millis I couldnt see that in the scaladoc for those fields
; general
Hmmm sameAs would sound and look a bit nicer wdyt
; general
case   would work quite well here
; general
Quite a few functions allocated here for every call makes sense to optimize it
; general
Im not a huge fan of optionget even if it is guarded by isDefined how about a middle ground    value match       case s Somev if definedv  s      case   None
; general
Or of not super performance is needed    value filter defined
; design
Use named parameter when using boolean constants in parameter lists
; general
Should be documented that it creates a new return value
; general
Should be documented that it creates a new return value
; general
Should be documented that it creates a new return value
; general
Needs some docs
; general
Probably costs as much to dofori  vinboundaverageValue o  voutboundaverageValue yield io
; general
This should be enforced by the type system instead
; general
Should also be enforced by type system
; general
What about javalangInteger Long etc
; general
Niliterator creates a new iterator every call yes
; general
Why volatile docs
; general
U sure you want to close over the outer here and not just do contextsystem here
; general
Is this the outer ref update If so I think it deserves some more bells and whistles
; general
why not contextsystemdeadLetters
; general
is this used
; general
No comment describing why
; general
look on the line above also checked when reading the config
; general
ok this is called pretty often so it should be rather optimized Ill change to the match
; general
ok its the dummy overloading clash
; general
its guarded in HeapMemoryIm not sure what real value those unapply methods have I would rather stick it into HeapMemory
; general
by having different Metric classes
; general
I thought those were coveredscala val x Any  new javalangInteger13x Any  13scala x match case Int  printlnIntIntscala val y Any  13y Any  13scala y match case Int  printlnIntInt
; general
contextsystem is fine thx
; general
this is not inside the actor
; general
ok Ill add a guard akka is efficient but running on 0 bytes max heap is in your dreams
; general
yes if there are no metrics for a node
; general
Its unfortunately system dependent but on nixes you get this httpenwikipediaorgwikiLoadcomputing for the last minute Then you have to use it together with number of total cores for it to make sense
; general
Is this N time period wellknown I personally prefer a plain old alpha elem 0 1 scaling value
; general
What does ewma mean
; general
Isnt it weird that it works with javalangInteger but not RichInt
; general
Also the name DataStream is somewhat confusing This is just a derived signal from an underlying signal Something different Is that much work to generalize this stuff so different kind of filters might be applied Windowed average windowed max etc
; general
I agree on the confusing name What do you suggest DataFilter Its used inside MetricIt wouldnt be that difficult to make it generic pluggable and public Then one would like to configure it per metric typeNot sure how important it is Adds some complexity Create a ticket
; design
Also this will mean that the actual decayrate will be dependent on this value and the collectinterval parameter It would be nicer to have something similar to halflife here or any other metric expressed in time units
; general
yes I have no opinion in that case should I name it smoothingfactor
; general
In IntelliJ you can configure inspections to warn against this
; general
my previous comment was about alphaWikipedia The halflife of the weights the interval over which the weights decrease by a factor of two is approximately N28854 within 1 if N  5I dont know if that helps people to decide
; general
Yes but even that is problematic as the actual half life will be  dependent on the sampling interval
; general
Is it possible to set different decayrate for different metrics
; general
How will you collect this
; general
that must be wrong name it should not be latency more like NetworkThroughput or NetworkIO
; general
no its the same for all but that is a possible improvement as mentioned in the comments about DataStream
; general
Latency would be useful though but it does not fit in this framework  because it has to be measured from the outside
; general
we have a ticket for that httpswwwassemblacomspacesakkatickets2639createnetworklatencyloadbalancingrouteractivityticketI guess that it could be measured by pingpong messages
; general
Im with Endre here the configured value should be the halflife not the decay rate thatwhile pleasing the physicistwill be less intuitive to the average programmer and from that and the collection interval the alpha value can be computed
; general
What if the capacity is 001 for one node giving 001 minimum capacity and 1 for 100 others This would be a huge IndexedSeq
; general
This should be probably in some trait instead One responsibility is getting the capacity values while another one is assigning weights WDYT
; general
ok lets see if I understandThe configured value should be smoothinghalflifeduration in unit seconds halfLife  smoothinghalflifeduration  collectintervalN  28854  halfLifealfa  2  1  N
; general
ok as long as its still possible to to implement subclasses in java also
; general
ok lets see if I understand The configured value should be smoothinghalflifeduration in unit   seconds halfLife  smoothinghalflifeduration  collectinterval N  28854  halfLife alfa  2  1  NThis seems to be correct but wait for Rolands answer  Just a final  nitpicking because I am a soulless bastard add comment that it takes  about 4 halflife to drop below 10 contribution and 7 to drop below 1
; general
Its more like    val decayRate  14427  halfLife    val alpha  mathexpdecayRate  collectInterval    avg  alpha  avg  1  alpha  inputThe 2N1 approximation does not look convincing in our case
; general
this use of alpha is contrary to the definition above ie the one we discussed just to keep in mind
; general
fyi I have a better solution for this HeapMemory will be plain case class HeapMemoryused Long committed Long max OptionLongand I will remove those unapply things
; design
When continuing the the refactoring of the metrics I have got the feeling that optional metric value is wrong Either there is a valid Metric with a value or there is no metric at all Im thinking of changing     case class Metric private name String value OptionNumberto    case class Metric private name String value NumberWDYTThe Metric is created with apply in companion that handles check of valid number etcWould it be wrongconfusing to still use apply since it would return OptionMetric
; design
Alright so what youre saying is that you want to fold in both there is no such Metric into there is no value for this MetricIF that makes sense in all cases then it sounds like a simplification
; general
ewma is Exponentially weighted moving average I had this documented explicitly in my original work and DataStream is for the streaming metric data over the duration or lifetime of the stream Each trendable metric one that is defined ie not jmx 1 on an OS or available if user has sigar or one that is not already an average system load average has a datastream I have this documented
; general
this was documented in several places of my original PR  some metrics we want to collect may not be available on the particular OS and more if they do not use sigar and those fields should be explained per metric in the collector methods and HeapMem etc fields
; general
Ok I was unsure about the w
; general
rkuhn Im trying this out your definition    val decayRate  14427  halfLife    val alpha  mathexpdecayRate  collectInterval    avg  alpha  avg  1  alpha  inputYour alpha  10      in the old senseDo you mind if I continue with the old definition of alpha since that is what is documented at wikipediahttpenwikipediaorgwikiMovingaverageExponentialmovingaverageReason is simply to be able to point to the descriptionOtherwise do you have a better pointerIn other words    val decayRate  14427  halfLife    val alpha  1  mathexpdecayRate  collectInterval    avg  alpha  input  1  alpha  avg
; general
Of course you are right your definition of  is the established one And since I got that wrong I correctly assumed that I did more mistakes yesterday the factor in the decayRate calculation needs to be inverted ie 069315 instead of the 14427 Sorry about the confusion
; general
drewhk this has the advantage of being O1 when sending but I agree that its too memory hungry What do you think about using something similar to what we used in ConsistentHash An array of same size as the original routees Vector and with the accumulated weights as elements Then using binarySearch to find the right bucket
; general
Should this really be enabled by default
; general
Please add to the docs what smaller value will have as effect or vice versa
; general
A normal user will have no clue what the docs actually means how does the halflife relate to the specified duration
; general
Or its just confusing to have it named decayhalflifeduration if we just mean decayhalflife
; general
why parens here and not below
; general
Id remove the default param and made a noargs apply method on MetricsGossip to return the empty instance because right now if you do MetricsGossip you get a new instance every time
; general
Yes I will go through all empty when mergingfixing the immutable stuff14 nov 2012 kl 1820 skrev Viktor Klang  notificationsgithubcomIn akkaclustersrcmainscalaakkaclusterClusterMetricsCollectorscala       param nodes metrics per node    privatecluster case class MetricsGossiprateOfDecay Int nodes SetNodeMetrics  Setempty  privatecluster case class MetricsGossipnodes SetNodeMetrics  Setempty Id remove the default param and made a noargs apply method onMetricsGossip to return the empty instance because right now if you doMetricsGossip you get a new instance every timeReply to this email directly or view it onGitHubhttpsgithubcomakkaakkapull858filesr2127026
; design
The plan was to include a reference to httpenwikipediaorgwikiMovingaverageExponentialmovingaverageIt also mentions halflife which is I think is a pretty well know thing for exponential decay otherwise wikipedia is our friendhttpenwikipediaorgwikiExponentialdecayHalflifeI leave it open to rkuhn and drewhk to decide what is the best name of this The reason I added duration was that I thought of the plain halflife to be the relative to the interval between observations ie collectinterval but here we wanted it to be configured in wall clock duration
; design
This method seems very expensive both allocationwise and complexity wise IMO needs an overhaul
; general
Dont copy unless you have to
; general
why this line here
; general
umm seems wasteful why not just a type match and return the value itself
; general
How are these accessed from Java
; general
Why this line here
; general
why extractor  allocation instead of type check and return value
; general
Document that it creates a new instance every call
; general
expensive why the flatten
; general
Should be documented that it creates a new instance every call
; general
Is this really needed
; general
Because the HeapMemoryunapply returns an tuple in this to make it look like an ordinary case class extractor when used from Scala This was what I talked to rkuhn about yesterday
; design
maxOption is used in the yield and this line converts it to the right typeIs there a disadvantage to write this inside the for compared to doing it in the yield
; general
damn java compatibility I have to move the up one level and remove the nice Fields grouping the idea was to support import CpuFields
; design
I can only agree Ill take a stab at it
; general
viktorklang which type would you match The extractor does more than just a type match
; general
then it wouldnt be very optional
; general
because all return an Option
; general
yes its possible to define other impl in config and then it must gave constructor with ActorSystem parameter and I wanted this one to follow the same rules I can add a comment about that reason
; general
To me that code is a WTF since it looks analogous to    something match       case Somex  Somex      case
; general
The disadvantage is that we dont do it like that anywhere else so I wanted to know if this new idiom carries its weightSince its not traversing a sequence but only flatMapping options you might as well do it in the yield IMO
; general
Well unless the compiler says no in which case it would be nice to know what breaks it
; general
my bad missed the part where its OK for it to be none
; general
scpuCombined must be between 00  10 was x
; general
well what I can do is to move the code around so that this more explicit extract method does the real job and the tuple variant calls this oneThis method was originally only for Java API but it might make sense to use from Scala as well in some cases and then this should return OptionHeapMemory instead of null Option is pretty java friendly anyway and used inside HeapMemory also WDYT
; design
Id call it movingaveragehalflife and document as replacing last sentence The relevance of each data sample is halved for every passing halflife duration ie after 4 times the halflife a data samples relevance is reduced to 6 of its original relevance The initial relevance of a data sample is given by 1  05  collectinterval  halflife
; general
tried it but it only makes the scala api more awkward since the tuple construction feels wasteful Id rather have a nice scala api since that is what we use in the router like this    override def capacitynodeMetrics SetNodeMetrics MapAddress Double        nodeMetricscollect         case HeapMemoryaddress  used committed max
; design
Yes it should otherwise it will be surprising that the feature doesnt work We want least surpriseCan be turned off as optimization if not needed
; general
case object vs case class but I have made the default MixMetricsSelector a case object as well using an extra base class
; design
for the nonphysicists it might make sense to add a comment that the constant is log2 or make it a named compiler constant
; general
which only works for valuexn but you are right it might make sense if there are values which are always zero
; general
it depends on the circumstances whether that is relevant but introducing a name like that in the forcomprehension leads to allocating an extra tuple to be passed into the yield part IIRC if this is a hot spot you should consult the bytecode
; general
no in which way is that weird jlInteger is final is it not and RichInt is not the boxed representation of an Int
; general
the better question would be where RichInt can actually come from Is this not a little overdesigned
; general
this looks like it might be useful when dealing with discovering libraries with native components could this go into ReflectiveAccess
; general
this formatting looks a bit surprising ie different first impression from true parenthesis structure Id suggest keeping all of createInstanceFor on the first line and start the next with recover
; general
Id name this escalateStrategy
; general
this comment is misleading probably better to just say that this is the only place from where weightedRoutees is updated
; general
this method can be used from user code but if you think its not possible to createpass in a RichX I dont mind removing It was there originally but then things were not javalangNumber
; general
refs is a field weights is hopefully not how about making one of them privatethis val and the other weights
; general
this is a rather circumspect way of saying that the local nodes weight is replaced by the rounded down average no
; general
ah now I see we dont necessarily have stats for all addresses
; general
What part of it Im not sure its worth reusing
; general
something like def verifyMethod which catches the nonNonFatal stuff its not that important was just an impression I had
; general
correct that makes a good comment
; general
Something less harmless  I think this is a typo
; general
Will there be a weighted version of this
; general
privatethis val refs and refs generates same byte code as far as I can seeIt doesnt look like we use privatethis in many other places in akkaprivate val generates something else less efficientThe naming convention with weights because its only used in constructor is not something I like because that is seen from the outside named parameters but if that is how we always do it I will follow it
; general
as I mentioned somewhere else I have created a real case object MixMetricsSelector in addition to the case class MixMetricsSelector
; design
Yes I had an idea of that but I dont know how far I should go I wanted to keep it rather simple as a first implementation but if think that is useful I can give it a try
; design
is this mutable
; general
Why is MixMetricsSelector both a case class and a case object and the case object neither extends the class nor returns a cached default value Is MixMetricsSelector caseclass mutable I vote for removing the case object MixMetricsSelector since it doesnt do anything AFAICTOr have I missed something
; design
I dont remember where I read it but I think Paul Phillips said that mapValues was horribly slow
; general
no need to use zipWithIndex if youre going to use a sum variable anyway just use another var for the index
; general
Why does this need to be an inner method
; general
would be nice if this was somehow dependent on the config on the metrics collection interval
; general
i is not used
; general
You commented on MixMetricsSlector not being MixMetricsSlectorThe way I have implemented it now not pushed is as follows The purpose is to have the object MixMetricsSelector for the default instance and the case class for custom instance eg MixMetricsSlectorVectorHeapMetricsSelector MyOwnSelector          Singleton instance of the default MixMetricsSelector which uses akkaclusterroutingHeapMetricsSelector  akkaclusterroutingCpuMetricsSelector and akkaclusterroutingSystemLoadAverageMetricsSelector SerialVersionUID1Lobject MixMetricsSelector extends MixMetricsSelectorBase  VectorHeapMetricsSelector CpuMetricsSelector SystemLoadAverageMetricsSelector       Java API get the default singleton instance     def getInstance  MixMetricsSelector  MetricsSelector that combines other selectors and aggregates their capacity  values By default it uses akkaclusterroutingHeapMetricsSelector  akkaclusterroutingCpuMetricsSelector and akkaclusterroutingSystemLoadAverageMetricsSelector SerialVersionUID1Lcase class MixMetricsSelector  selectors immutableIndexedSeqCapacityMetricsSelector  extends MixMetricsSelectorBaseselectors  Base class for MetricsSelector that combines other selectors and aggregates their capacity SerialVersionUID1Labstract class MixMetricsSelectorBaseselectors immutableIndexedSeqCapacityMetricsSelector  extends CapacityMetricsSelector
; design
it doesnt have to but its only used here close connection to the binarySearch I can make it private if you prefer that
; design
ok it returns a map view which might be the problem Is there anything smarter map    scala Map1  aa 2  bbmapcase k v  k  vtoUpperCasetoMap    res12 scalacollectionimmutableMapIntjavalangString  Map1  AA 2  BB
; general
no what makes you ask that
; general
I have changed to immutableIndexedSeq everywhere in my local changes when I merged with the immutable stuff
; general
Mapmap already returns a Map so no need for toMap at the end
; general
thought was some tuples great
; general
Ill change another usage in Serialization also
; general
IF this is renamed in config it needs renamin here as well
; general
No need for toMap at the end here you can add tuple2Seqs to Maps
; general
You can do Failurenew RuntimeException instead of Trythrow
; general
of course I will push my changes
; general
use foldLeft instead of for  var
; general
Why matches inside a total function instead of a partial function with a fail catchall case
; general
no need for braces
; general
no need for braces
; general
You can use recover  get instead of the patmat
; general
AFAIK Akka doesnt do any load balancing of nodes yet Do you mean that its primarily used for loadbalanced routers
; general
Shouldnt we pull in the version from somewhere else instead of risking this diverging from what we actually use
; general
Its better to make it a val and create a method createDeployer that is overridable in the subclass
; general
Is this really something we want to publish in our samples
; general
Same here as with the Java example
; general
Why two different matches looks confusing
; general
PlEASE STOP SENDING ME EMAILSBest RegardsAlicia HarrisonMarketing ManagerPH 3106698800Palos Verdes Footwear INCVolatileVery VolatileVolatile KidsVolatile KicksVolatile HandbagsSbiccaSbicca VintageGrazieOn November 15 2012 at 338 PM Viktor Klang  notificationsgithubcomwrote   In akkasamplesakkasampleclustersrcmainscalasampleclusterfactorialFactorialSamplescala       subscribe to ClusterMetricsChanged      resubscribe when restart     override def preStart Unit        Clustercontextsystemsubscribeself   classOfClusterMetricsChanged     override def postStop Unit        Clustercontextsystemunsubscribeself        def receive         case ClusterMetricsChangednodeMetrics          nodeMetricsfilteraddress  selfAddress foreach  n            n match              case HeapMemoryaddress timestamp used committed max                loginfoUsed heap  MB useddoubleValue  1024  1024             case    no heap info                      n match    Why two different matches looks confusing     Reply to this email directly or view it on GitHub httpsgithubcomakkaakkapull858filesr2144298
; general
ok fixed replacement tag for sigar version
; general
yes thats better
; general
I think it should go a little something like thisclass MixMetricsSelectorcase object MixMetricsSelector extends MixMetricsSelector   def apply  this  def apply   def unapply   def getInstance  this
; design
What about a negative double Like 10 for an undefined metric floating point numbers returned in Right if I see correctly
; general
Why an abs here and nowhere else What if it was 1 which is considered undefined above
; general
good catch the negative check was not done for double that is important because loadAverage might return that on windowsIll add test and fix it
; general
what do you mean what abs
; general
You already removed that I was reviewing the stuff before your last  commit I refreshed my browser now  Just ignore my comment
; general
What will be the capacity for nodes where the metric is undefined Do you have a default value when you call capacity and check for an Address
; general
Ok I see the answer later down
; general
Is this a safe thing to do
; general
corresponding nodes or the corresponding node
; general
As it is used now its safe 0 indicates that its empty and things will be routed to deadlettersI can add another isEmpty method to make it more clear
; general
Why List and not Seq
; general
What does this return in case the props do not have a router
; general
Nice Please comment that this prevents props and context to be closed over below
; general
I dont understand the question createRoute is invoked from RoutedActorRef so its a router already
; general
Alright that was not evident from this diff
; general
This shouldnt be done here ActorCell should be agnostic about dispatcher implementations
; general
lookup will instantiate a new dispatcher for PinnedDispatcher etc so this wont workPut this logic where routers are created
; general
Ok Will fix
; general
Move it to RoutedActorRef
; design
Hmmm might work As I said earlier its tricky
; general
I think you can remove the test covered by grow as needed under pressure
; design
Good Will do
; general
That pool is pretty cool
; general
use routees  routees diff abandonedRoutees
; general
Fraction in what wayIs 00d safe to use as a fixed magic value
; general
What happens if its  1
; general
What happens if its less than lowerBound
; general
What happens if its negative
; general
What does this mean What should I set it to What happens if negative
; general
What happens if negative What happens if  10d
; general
is 00d a safe magic valuewhat happens if  0 or  10d
; general
What happens if 0 What happens if Infinity
; general
Dont schdule if abandon isEmptyRun now if stopDelay is 0
; general
Very good docs
; general
Ill spray some input validation checks to it
; general
no problem with 10For example 13 would increase with 130current size 55  13  7
; general
fraction of the current pool size Ill add some sample to the description00 is no problem if you dont compare with In this compare is done with  00
; general
you get what you ask for Infinity is Infinity
; general
othewise it is a bug in the scheduler
; general
good point changed
; general
This name is not so easy to understand Id suggest messagesPerResize
; general
Is it fine to have the same ref more than once
; general
So you cannot share the same RouterConfig between multiple Actors
; general
People might find that a bit counter intuitive
; general
yes thanks I totally agree
; general
well I think its up to the Resizer to behave and create new instances which our DefaultResizer doesnothing will break when adding but when removing routees diff it will only remove the first one which is a problemIs it worth checking for duplicates
; general
Id probably try to get rid of the repetition hereroutees count         case a LocalActorRef           val cell  aunderlying          pressureThreshold match             case      i if i  1  cellmailboxisScheduled  cellcurrentMessage  null            case                1  cellmailboxisScheduled  cellcurrentMessage  null aunderlyingmailboxhasMessages            case threshold  cellmailboxnumberOfMessages  threshold                case   false
; general
good that you bring it up I thought about that I can move the state and this resize method to the RoutedActorRef instead
; design
Atleast its symmetrical now add adds all the given refs remove removes all the given refs
; general
okOn Wed Jan 11 2012 at 1023 AM viktorklang replyreplygithubcom wrote       else if pressureThreshold  1         routees count           case a LocalActorRef  aunderlyingmailboxnumberOfMessages  pressureThreshold          case x                 false               else         routees count           case a LocalActorRef             val cell  aunderlying            aunderlyingmailboxisScheduled  cellcurrentMessage  null          case x             false                     Id probably try to get rid of the repetition here routees count         case a LocalActorRef           val cell  aunderlying          pressureThreshold match             case      i if i  1  cellmailboxisScheduled  cellcurrentMessage  null            case                1  cellmailboxisScheduled  cellcurrentMessage  null aunderlyingmailboxhasMessages            case threshold  cellmailboxnumberOfMessages  threshold                case   false         Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull206filesr342714 Patrik NordwallTypesafe httptypesafecom  EnterpriseGrade Scala from the ExpertsTwitter patriknw
; general
as I said diff doesntscala IndexedSeqa b a c diff IndexedSeqa cres319 IndexedSeqjavalangString  Vectorb a
; general
That was exactly my point IndexedSeqa  IndexedSeqaab  IndexedSeqa aabIndexedSeqaab diff IndexedSeqaa  IndexedSeqb
; general
Dont put code in the rt docs its a maintenance nightmarePlease use the same approach used by the other docs where compiled and tested code is automatically hoisted into the docs
; general
Sure  it moved it into a file next to HTTPServerscala Uhm how do I trigger compilation of the example I tried action compile in subproject akkadocs but that didnt seem to compile the example code  Is it ok if its just compiled to check it everything in abstract classes but does not really run and do something Otherwise this will need test data etc making the example a lot more complex
; general
It should be compiled when you run testcompile in the parent projectYou dont need to make it a verified test if its too much work but remember that it is an example that should demonstrate something that does work
; general
Ok its done
; general
to avoid the intermediate list it should probably be bytestringsmapiteratorcollectionbreakOut
; general
Nice thanks I want too happy about the toList either  hadnt thought about breakOut Ill put that in
; general
Use explicit return type
; general
Use explicit return type
; general
Use explicit return type
; general
Use explicit return type
; general
Is this guaranteed to cover all cases
; general
make bytestrings private
; general
Use explicit return type
; general
Use explicit return type
; general
Use explicit return type and make it a one liner
; general
Use explicit return type and make it a one liner
; general
Use explicit return type
; general
Whats the difference between contiguous and compact
; general
Use explicit return type
; general
Why is it a public class
; design
no braces in cases please
; general
Why is this public
; general
Use explicit return type
; general
Use explicit return type
; general
Use explicit return type
; general
Use explicit return type
; general
Why is this public
; general
Why is this public
; general
make into one liner
; general
Use explicit return type
; general
Shouldnt this throw an NotYetImplementedException
; general
dont return null its broken throw exceptions
; general
indexWhere and indexOf has a lot of code duplication
; general
why is this needed
; general
Why is this public
; general
Why is this public
; general
Why is this public
; general
Why is this public
; general
FWIW this implementation of InputStreamread is incorrect Read should return the unsigned equivalent 0255 or 1 in the case no byte is available See httpstackoverflowcomquestions4332264wrappingabytebufferwithaninputstream66030186603018
; design
Thanks a lot Should have read the InputStream doc more carefully  will fix it
; general
It should yes
; general
Never use should
; general
I removed contiguous again
; general
Its the companion to the class ByteIterator which has to be public of course I guess it could be privateakka in principle  would that increase binary compatibility Or should I make some of the things inside private this was not done for the ByteString object in the past
; design
Its private now
; design
ByteIterator has to be public so people can get it as an explicit return type of ByteStringiterator  They would get a generic Iterator reference instead which forces boxingunboxing on next Also the special features  of ByteIterator like getInt asInputStream etc would not be available
; design
Yep that looks neater though I made sure it can never be called Done
; general
True  though I made sure it can never be called Done
; general
Its there for symmetry reasons If people write binary decoding code using lots of getInt getShort etc a getByte will be more readable in the middle of that than next
; general
Its in object ByteIterator now like it was done for the ByteString implementations in the past Is that enough for binary compatibility or should it also be privateakka
; design
See comment on ByteArrayIterator
; general
You did agree to make it public a while back Its there so one can pass around compact ByteStrings explicitly and serialize them
; design
It needs to be so one can use its features like putInt asOutputStream etc that a generic builder does not have
; general
Ok as far as I can see it does and testing agrees
; general
These are all public to JAva code
; design
Ah yes  indeed
; general
Ooops  cough cough uhm that was a remnant from my original implementation Its gone now
; design
Is there any tests missing here compared to the public API exposed in the implementations
; design
ByteStringBuilder isnt completely covered yet by testing though the new parts are With ByteIterator and ByteSeq a lot is covered explicitely some methods only implicitely and with some I have to check  Im on itConcerning the implementations They dont add any public methods to the public interfaces of ByteString and ByteIterator there were two or three but theyre gone now
; design
Great let me know when youve checked it
; general
Ok the tests are complete They cover the full public API of ByteString ByteStringBuilder and ByteIterator now except the parts that are just inherited not overridden Hope I didnt overlook anything
; design
Import ByteOrder on the line above
; general
hmm I actually find that kinda nice
; general
would prefer    val xs from until  slice    likeVecItxs slicefrom untiltoSeq  strict  false
; general
might want to lose some braces
; general
could this benefit from being lazy
; general
I thought about it  but will it really safe memory when asOutputStream is not used I dont know how heavy a basic OutputStream instance is On the other hand if its really lightweight might a def even better than a val Experts
; general
Hm i have that in many place If you really care i can change them all  its all testing code though
; general
As a compromise I will remove the braces around ByteOrder
; general
hmm less mental parsing overhead vs effort of the change thats why I formulated as would prefer Your call
; general
since you cache it unconditionally I assumed that it would be heavy but in fact its just an Object ie really lightweight so I think it could well be a def
; design
Ill do that
; general
top level classes are also fine perhaps mention that in the error messagethey are also static but that is probably not known by all users
; general
Whats wrong with collectFirst
; general
smth like    collectFirst  case c Class if acisAssignableFrom c  c  ac  c  getOrElse ac
; design
Oh I see So this was the problem
; general
problem was Propsnew StashQueueReportingActor
; general
Yep that is what I wanted to comment on
; general
Its not published for sbt 0113 or is it somewhere
; general
ah okay Just wanted to know the reason and whether there should be a FIXME in there somewhere
; general
I have created a separate ticket for it 2097
; general
would it make sense to also check isSuspended
; general
someone broke you indentation
; general
this punctuation inflation is not necessary router  1 received1 should work the same way no
; general
refroutees collect  case l LocalActorRef  l
; general
Id replace the entire thing above withlocalfinda  isProcessingMessagea  hasMessagesa orElse localfinda  hasMessagesa orElse localsortBya  numberOfMessagesaheadOption getOrElse refrouteesrandomgetnextIntrefrouteessize
; general
Excellent docs above
; general
Why is this an Iterable of Strings and not an Iterable of ActorPath
; general
This is Java what happens if null
; general
thx fixedOn Wed Jan 11 2012 at 731 PM viktorklang replyreplygithubcom wrote      It will always return 0 for remote actors      Method is exposed to subclasses to be able to implement custom      routers based on mailbox and actor internal state         protected def numberOfMessagesa ActorRef Int  a match       case x LocalActorRef  xunderlyingmailboxnumberOfMessages      case                  0          def createRouteprops Props context ActorContext Route        val ref  contextselfasInstanceOfRoutedActorRef      createAndRegisterRouteesprops context nrOfInstances routees        def getNext ActorRef           nonlocal actors mailbox size is unknown so consider them lowest priority        val local IndexedSeqLocalActorRef  for a  refroutees if aisInstanceOfLocalActorRef yield aasInstanceOfLocalActorRef refroutees collect  case l LocalActorRef  l   Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull209filesr344231 Patrik NordwallTypesafe httptypesafecom   The modern software stack forapplications that scaleTwitter patriknw
; design
ok I have removed the vals but want comments so some curlies and newlinesare leftOn Wed Jan 11 2012 at 734 PM viktorklang replyreplygithubcom wrote         nonlocal actors mailbox size is unknown so consider them lowest priority        val local IndexedSeqLocalActorRef  for a  refroutees if aisInstanceOfLocalActorRef yield aasInstanceOfLocalActorRef         anyone not processing message and with empty mailbox        val idle  localfinda  isProcessingMessagea  hasMessagesa        idle getOrElse            anyone with empty mailbox          val emptyMailbox  localfinda  hasMessagesa          emptyMailbox getOrElse              sort on mailbox size            localsortBya  numberOfMessagesaheadOption getOrElse                no locals just pick one random              refrouteesrandomgetnextIntrefrouteessize                                     Id replace the entire thing above with localfinda  isProcessingMessagea  hasMessagesa orElse localfinda  hasMessagesa orElse localsortBya  numberOfMessagesaheadOption getOrElse refrouteesrandomgetnextIntrefrouteessize  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull209filesr344257 Patrik NordwallTypesafe httptypesafecom   The modern software stack forapplications that scaleTwitter patriknw
; general
In the end it does actorFor so it should be fine with ActorPath Will tryto change that in separate refactoringOn Wed Jan 11 2012 at 736 PM viktorklang replyreplygithubcom wrote    Please note that providing both nrOfInstances and routees does not make logical sense as this means    that the random router should both create new actors and use the routees actors    In this case the nrOfInstances will be ignored and the routees will be used    br    bTheb configuration parameter trumps the constructor arguments This means that    if you provide either nrOfInstances or routees to during instantiation they will    be ignored if the nrOfInstances is defined in the configuration file for the actor being used     case class RemoteSmallestMailboxRouternrOfInstances Int routees IterableString override val resizer OptionResizer  None    extends RemoteRouterConfig with SmallestMailboxLike             Constructor that sets the routees to be used      Java API         def thisn Int t javalangIterableString  thisn tasScala Why is this an Iterable of Strings and not an Iterable of ActorPath  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull209filesr344268 Patrik NordwallTypesafe httptypesafecom   The modern software stack forapplications that scaleTwitter patriknw
; design
it will be some NPE laterI could add null check but we dont really have that kind of validations inother places and I dont think we should If you supply null to anconstructor like this you get what you ask for ie troubleOn Wed Jan 11 2012 at 736 PM viktorklang replyreplygithubcom wrote    be ignored if the nrOfInstances is defined in the configuration file for the actor being used     case class RemoteSmallestMailboxRouternrOfInstances Int routees IterableString override val resizer OptionResizer  None    extends RemoteRouterConfig with SmallestMailboxLike             Constructor that sets the routees to be used      Java API         def thisn Int t javalangIterableString  thisn tasScala            Constructor that sets the resizer to be used      Java API         def thisresizer Resizer  this0 Nil Someresizer This is Java what happens if null  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull209filesr344271 Patrik NordwallTypesafe httptypesafecom   The modern software stack forapplications that scaleTwitter patriknw
; design
The question here is not what works but what is the better API An ActorPath cannot be obtained from a String in one line of Java but the other direction is possible Given that constructing routers will not be the bottleneck in any real application Id vote for the easier route
; design
11 jan 2012 kl 2206 skrev Roland Kuhnreplyreplygithubcom   Please note that providing both nrOfInstances and routees does not make logical sense as this means   that the random router should both create new actors and use the routees actors   In this case the nrOfInstances will be ignored and the routees will be used   br   bTheb configuration parameter trumps the constructor arguments This means that   if you provide either nrOfInstances or routees to during instantiation they will   be ignored if the nrOfInstances is defined in the configuration file for the actor being used   case class RemoteSmallestMailboxRouternrOfInstances Int routees IterableString override val resizer OptionResizer  None   extends RemoteRouterConfig with SmallestMailboxLike          Constructor that sets the routees to be used     Java API       def thisn Int t javalangIterableString  thisn tasScala  The question here is not what works but what is the better API An ActorPath cannot be obtained from a String in one line of Java but the other direction is possibleBut why dont we have a ActorPathfromSting thenIf we dont change to ActorPath we must anyway improve the docs of it Now its not clear what the String is Given that constructing routers will not be the bottleneck in any real application Id vote for the easier route    Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull209filesr344888
; design
On Thu Jan 12 2012 at 817 AM Patrik Nordwallpatriknordwallgmailcomwrote 11 jan 2012 kl 2206 skrev Roland Kuhn replyreplygithubcom     Please note that providing both nrOfInstances and routees does not make logical sense as this means    that the random router should both create new actors and use the routees actors    In this case the nrOfInstances will be ignored and the routees will be used    br    bTheb configuration parameter trumps the constructor arguments This means that    if you provide either nrOfInstances or routees to during instantiation they will    be ignored if the nrOfInstances is defined in the configuration file for the actor being used     case class RemoteSmallestMailboxRouternrOfInstances Int routees IterableString override val resizer OptionResizer  None    extends RemoteRouterConfig with SmallestMailboxLike             Constructor that sets the routees to be used      Java API         def thisn Int t javalangIterableString  thisn tasScala   The question here is not what works but what is the better API  An ActorPath cannot be obtained from a String in one line of Java but the other direction is possible But why dont we have a ActorPathfromSting then If we dont change to ActorPath we must anyway improve the docs of it Now its not clear what the String isIts the same in ActorRefProvider so Ill not change just improve thedocs  Given that constructing routers will not be the bottleneck in any real application Id vote for the easier route     Reply to this email directly or view it on GitHub  httpsgithubcomjbonerakkapull209filesr344888 Patrik NordwallTypesafe httptypesafecom   The software stack for applications thatscaleTwitter patriknw
; design
thx its not necessary
; general
yes it does I have added to the first filter to skip supspended
; general
Its scalariform Only happens for align parameters setting which we use I filed a bughttpsgithubcommdrscalariformissues44
; general
Switch to ARFU or akkautilUnsafe
; general
Move this one out to a private companion object for reuse
; design
switch this to import CircuitBreakersyncExecutionContext
; general
How about putting the ExecutionContext into the creation of the breaker
; general
have CircuitBreakerHalfOpen extend AtomicBoolean
; general
Here we have something that might be at least confusingWe are in Closed and some call triggers transition to Open Another call started in Closed and is running in parallel and when that is sucessful it will set the failureCount to 0 even though we are in Open
; general
We asume that breaker round trip time is longer than duration of calls which I think is a practical assumption which simplifies the implementation a lot Just saying
; design
have this extend AtomicInteger
; general
yes if possible for the different ExecutionContext used for withSyncCircuitBreakerPerhaps the syncasync mode should be decided on creation of the circuit breaker Mixing is perhaps only confusing
; general
I think the they originate from the     listeners  new CopyOnWriteArrayList  What is the type for a callback  Unit parameter
; general
just do  CircuitBreakerClosedaddListener  callback
; general
is reading from an AtomicReference that badI cant imagine contention here When changing state you have more serious problems
; general
I dont like suboptimal solutions when the optimal solution is known and only 56 lines of code away
; design
sorry forget what I said braces can be removed
; general
Collapse the imports using bracenotation
; general
I dont like micro optimizing things that is obviously not a bottleneck but I will not argue moreYou know we have a AtomicReference in Dispatcher
; general
Yup thats on my todo list
; general
I think we shall use with NoStackTrace for this since it is thrown a lot when Open
; general
Preference for ARFU or Unsafe  Never used either so will need to research
; general
I prefer Unsafe since it performs about 515 better than ARFU in Scala
; general
This is true  I dont see it affecting functionality but it could be confusing  Should we guard with a current state check here
; general
currentFailureCount should perhaps not be publicif we change that to privateakka we dont need to care about this caseOn Sun May 20 2012 at 813 PM scullxbones replyreplygithubcom wrote      def enterimplicit executor ExecutionContext Unit          enter        notifyTransitionListeners              def enterimplicit executor ExecutionContext Unit          private object CircuitBreakerClosed extends CircuitBreakerState       val failureCount  new AtomicInteger0        override def invokeTbody  FutureTimplicit executor ExecutionContext FutureT          callThroughbody              def callSucceedsimplicit executor ExecutionContext Unit  failureCountset0 This is true  I dont see it affecting functionality but it could be confusing  Should we guard with a current state check here  Reply to this email directly or view it on GitHub httpsgithubcomakkaakkapull466filesr850604 Patrik NordwallTypesafe httptypesafecom   The software stack for applications thatscaleTwitter patriknw
; design
It is very weird to argue for switching to Unsafe here Im with Patrik 1 It is not needed in this place2 If you still think it is  prove it with a realworld benchmark  D Knuth applies 3 It adds complexity to the code eg unnecessary baggage cognitive overhead in understanding the code etc We cant go around and optimize every singel AR to the verbosity of Unsafe
; design
1 By the same reasoning Ill refute the claim that its not needed here by requesting a benchmark that shows that its not needed here2 See 13 Anyone who is not comfortable with Unsafe and is working within the Akka codebase should definitely spend the required time to learn itIm OK with leaving it as a FIXME but please optimize when you have a performance problem is not a design philosophy that I will ever agree to Design needs to be done with performance in mind otherwise youll both give users performance problems AND youll risk having to break binary compatibility to change the design to be performant
; design
documentation code should go into scalajava doc spec classes see almost all other documentation
; general
BytesStringbytes will do the right thing
; general
DEBUG vs DEBUG
; general
why is the kernel dependency needed
; general
please dont shadow the standard akkaactorReceiveTimeout message type
; general
either use length or compare to DurationZero
; general
1 on comparing against DurationZero
; general
Rate of what
; general
print how to terminate
; general
val text  mframesheadutf8String
; general
text  currentMessage
; general
doesnt say what time unit
; general
doesnt say at what rate
; general
update this text
; general
Write doc comment for this
; general
Id put this check in the middle and move the Sub  Pull  to the bottom
; design
How can it be a ReqRepPoll if it only polls for Rep
; general
Nevermind I see that its handled differently
; general
I find this weird Why do we only recur on mode  Poll
; general
What happens if the timeout is negative
; general
What happens if the timeout is negative
; general
Should this check that its really the target that was terminated
; general
result success true
; general
result failure new
; general
Do context stop self here otherwise youll close over system needlessly
; general
Isnt the system dispatcher used by default if theres an implicit system in scope
; general
How is this used from Java
; general
ok should never happen but I have added that check now
; general
ah rusty thx
; general
Famous last words
; general
with PatternsscalaIm not sure if we should have separate Scala and Java apis for these things like this
; general
Double the maintenance cost though
; general
On Sun Jan 1 2012 at 938 PM viktorklang replyreplygithubcom wrote  import akkaactorActor  import akkaactorActorRef  import akkaactorActorSystem  import akkaactorActorTimeoutException  import akkaactorPoisonPill  import akkaactorProps  import akkaactorReceiveTimeout  import akkaactorTerminated  import akkadispatchFuture  import akkadispatchPromise  import akkautilDuration        Akka patterns that provide solutions to commonly occurring problems     package object pattern  Double the maintenance cost though Well we need different signatures anyway to take advantage of implicitparameter for scala anywayI dont mind skipping package object and putting everything in objectPattern if we think that is better for the other patterns also  askpipeTo  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull200filesr321716 Patrik NordwallTypesafe httptypesafecom  EnterpriseGrade Scala from the ExpertsTwitter patriknw
; design
What should this do if it times out
; general
What should these two do if they time out
; general
when will this fail and use BatchingExecutor as fallback
; general
this must be case Terminateda if apath  targetpath otherwise it will not work with remote target ActorRef acquired with actorFor
; general
isnt it already terminated why send Unwatch
; general
Is this change correctIf the target replies with something before terminating the PromiseActorRef will be completed with something else than Terminated
; general
Since this is calling into a private scala entity this prevents havoc if that internal thing changes in a microrelease of scala
; design
Me and Roland has already discussed this Ill revert the change
; general
That would be a bug IMO Theres tons of code that does Terminatedfoo and if it wont match then we have to fix it
; general
I see good
; general
ok sorry so many emails
; general
That was part of my uid pull request httpsgithubcomakkaakkapull1244I changed such occurrences in akka code For user code I have described the problem in the migration guideIt is not possible to fix Equals and hashCode cannot be based on wildcard matching it would violate the contract of equalsThis specific issue was discussed here httpsgroupsgooglecomdmsgakkadevbXpaIEQCdEXI1YZFnP5jQJ
; general
ok but doesnt that pollute deadLetters for the normal case when it is terminated
; general
I think this is actually a huge silent killer issue So I dont really see any point in keeping actorFor if were going to completely break its semantics in respect to the other code Also Terminatedunapply should do the right thing And what does it mean to do context watch contextactorFor
; general
No from DeadLetterActorRef      override protected def specialHandlemsg Any Boolean  msg match         case w Watch           if wwatchee  this  wwatcher  this            wwatcher  TerminatedwwatcheeexistenceConfirmed  false addressTerminated  false          true        case w Unwatch   true  Just ignore        case NullMessage  true        case             false
; design
Let us talk about it with rkuhn later until then compare Terminated via the pathcontext watch contextactorFor behaves exactly as before The difference is that equals in ActorRef takes the uid into account which must be considered when handling the Terminated message
; general
Should probably be implicit though
; general
On ActorSystem its not implicit right now which is why I havent marked it implicit in ActorRefFactoryShould it be implicit in ActorSystem as well
; general
Right now theres an implicit conversion from AS to MD     privateakka object MessageDispatcher             implicit def defaultDispatcherimplicit system ActorSystem MessageDispatcher  systemdispatcher
; design
Ok so ActorSystem has a nonimplicit dispatcher but an implicit conversion to MessageDispatcher while ActorContext has an implicit dispatcher but no implicit conversion Assuming that this was done for a reason and makes sense the way it is would the best solution for ActorRefFactory really be to follow the model of its ActorContext child Ie simply have an implicit dispatcher and no implicit conversion
; design
This is wrong The previous was a plain ask ie reacting to a reply gracefulStop reacts only to termination and not to a reply
; general
this semantic change needs proper documentation Im not even sure that it is desired
; general
You might want to reread the implementation of askWithDeathCompletion
; design
as I said gracefulStop is only interested in the Terminated and I think it should stay this way while we want to get the ACK here even if the actor does not die the code you deleted below did that
; design
Ill restore gracefulStop but askWithDeathCompletion will not remain as a copypaste version of it
; general
this can overflow just use size if that is greater 10000
; general
On Sun Jan 8 2012 at 652 PM Roland Kuhn replyreplygithubcom wrote        def getNext ActorRef          refrouteesnextgetAndIncrement  refrouteessize        def size  refrouteessize          tailrec        def reducen Int           val safetyValue  size  100000 this can overflow just use size if that is greater 10000I didnt found it realistic to use more than 21474 routees but I can sureadd that extra check for size  10000  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull204filesr335330 Patrik NordwallTypesafe httptypesafecom  EnterpriseGrade Scala from the ExpertsTwitter patriknw
; general
Should it really be 10000 at one place and 100000 in the other
; general
What if the collections size is IntegerMAXVALUE
; general
yes because 10000  100000  1000000000 is safetly below IntMaxValue 2147483647
; general
The assumption is that number of routees is far below MaxValue which is a realistic assumption
; general
I think its probably cleaner just to switch to AtomicLong and go with abs on it
; general
what if finclose throws IOException
; general
This is done during startup so if closing the file fails we definitely should abort
; general
Im more concerned about that the real cause from IOException from trustStoreload is lost and it will be hard to debug
; general
Alright so youre for dropping the tryfinally
; general
no catchignoretry trustStoreloadfin pwd finally Tryfinclose
; general
This file should be placed in srcmainscalaakkapatternpackagescalapackage object pattern
; design
Is this really trueShouldnt we delegate this to the implementation of MinimalActorRef
; design
Document as Akka internal
; general
This is not even on the table just remove the comments
; general
Does this need to be final to be inlined or not
; general
dont think so compiler knows which exact method is invoked no subclassing possible
; general
This should just contain Java API all Scala parts should be available with import akkapatternsask I know overloading is evil but in this case it looks very elegant
; design
perhaps describe what MPSC stands for
; general
looks like there is some inconsistency in the naming MPSC vs Node
; general
move size and isEmpty to  AbstractNodeQueue
; design
would it be possible to not expose Node to the publicpeek return T instead
; design
Because then you cant separate a null entry from empty The alternative is to prohibit to add null which would add a branch for each insertion
; general
Yeah so the reason I gave it this name is because this is visible in the configuration and Node says just about nothing But I agree that MPSC isnt ideal either so do you have any suggestions
; general
Because count would be uglier in Java But I get your point it might be just safer to avoid the wheel to be reinvented poorly
; general
Do we need to support null values
; general
ah I see nextvalue  null
; general
You mean Change peek and document that we do not support adding nulls and not add the branching check for nullness
; general
Yes if we dont null it out were going to hold onto an already consumed entry
; general
SingleConsumerMailbox SingleConsumerMessageQueue AbstractSingleConsumerQueue
; general
I think that is fine We check for null messages at a higher levelIt would be beneficial to not expose NodeYou can still have a private peekNode for poll
; design
We cant really get away from exposing Node atmpublic abstract class AbstractNodeQueueT extends AtomicReferenceAbstractNodeQueueNodeT Thats if we move it into a field instead but the problem is that there is no getAndSet on Unsafe so it cannot use LOCK XCHG So Ill move in isEmpty into AbstractNodeQueue and add count to signal that its not constanttime
; design
ok thanks for clarifyingYou could define peek as private to not make the api more ugly than necessary The returned Node cant be used for anything else than looping over next Not even the value is accessible
; design
Not sure that assigning of null will help GC to collect node fasterPossible need to ask GC experts like Gil Tene to weigh all procs and cons
; general
This is not about collecting the node faster It is about not holding on to the consumed value of type T if the node is in the tail position and the queue is empty
; general
Good point but then comments are misleading httpsgithubcomakkaakkablobmasterakkaactorsrcmainjavaakkadispatchAbstractNodeQueuejavaL56 nextvalue  null  Null out the value so that we can GC it earlyAlso using the null value as a marker for an empty queue lead to failure of following test  XXX in     val queue  new AbstractNodeQueueAnyRef     queueaddnull    queuepeek must null    queuecount must 1    queueisEmpty must false
; general
Adding null wont happen we just dont want to pay for the nullcheck
; general
probably better to remove deprecated here and make sure that all methods on OldRemoteSupport are appropriately annotated
; general
should mention that the GlobalActorSystem needs to be stopped manually in order to voluntarily exit the JVM
; general
Think its good to say which version this guide is meant for
; general
actorSystemstopactorref or actorContextstopactorref
; general
Because it otherwise exposes protected types at a public scope see Xlint
; design
Because all of them should go to self
; general
I thought one could ommit the wildcard but now I see that that would only work for case objects like in the CurrentRoutees caseThx anyway
; general
call to superpostStop
; general
Which begs the question can we really realistically put anything in ActorpostStop Probably nobody out there calls super when overriding because it is known to be a NOP So while I think it does not hurt too much I also think that it will always be redundant
; general
does this mean that if someone already overrides postStop in their actor this Stash postStop will most likely not be called and oops we have changed semantics since it used to be done from preRestartA case for migration guide and docsCant it be done in both preRestart and postStop It doesnt hurt to do it twice
; design
I think it just needs to be documented in those traits which modify the defaults so that everyone deriving from Stash will know that they need to call super Should be bold italic and really visible
; general
ok and then also in the migration guide
; general
Ill bring back the old preRestart and add the postStop callback and mention it in the migration guide
; general
This shouldnt be like this see httpsgithubcomviktorklangscalacommit089805510ee79c389ff2a870355c8496c723b8ccL1R678
; general
FIXME with a link to the Scala ticket
; general
See how this is done for TypedActors ie children TypedActors
; general
Needs docs and an explanation what errors means usually this is called message
; general
I remember this from somewhere else and if so I think it deserves som DRY treatment
; general
could you explain a little
; general
The code here is the nave implementation which is known to be broken according to the Scala ticket referred to in the link above a solution that doesnt have the kinds of issues the nave implementation has is outlined there as well
; design
do we need to do anything is channels or classes isEmpty
; general
This definitely wins some kind of obfuscation award So I need to use a Batching executor not because I want to batch things but because I want trampolining NiceCould this potentially be clarified in the docs for ExecutionContext and BatchingExecutor BatchingTrampoliningExecutor but only if it likes the RunnablesIm leaning towards not exposing this at all
; general
I agree that this shouldnt be exposed at all but no matter what it still needs to trampoline And the best way to avoid reinventing the wheel is to use the BatchingExecutor
; design
typo of the it
; general
WDYM Of course you can create toplevel actors why not Children are created differently
; general
but it needs a name that is for sure
; general
it is similar to but not compatible with SupervisorStrategsort
; general
yes and wants to be moved to Opsscala
; general
indent one level
; general
believe me I tried many things and this is the optimum allowed by scalariform
; general
But it maeks kitteh cry on teh insidez
; general
val nuffin  weakTypeOfNothing    if parent  nuffin abortc Parent argument must not be Nothing    if child  nuffin abortc channel list must not be Nothing
; general
channel list not child
; general
its either this or a very long line
; general
no this is the childs channel list and the error will hopefully be displayed at the right source position
; general
Should be experimental
; general
This looks like a foldLeft over Nil to me
; general
msg match       case tr  TypeRef  x   if tr  typeOfWrappedMessage   x      case other  other
; general
please refactor CircuitBreakersyncExecutionContext to use the same thing
; general
interestingis it still possible to define a channel typed with FutureA to send the actual future bad practice but anyway
; general
that would not make it nicer at least not in my view due to the needed flattening
; design
this OTOH is nicer
; general
will check that one
; general
I think its too easy to associate A B C D with declarations of type parameters so it would be easier to understand if using some more message like class names for those
; design
it is not currently flagged as an error but it probably should creating a ticket
; general
not yet no it would need special TypedProps though that name is already taken we discussed about changing some aspects of Props a while back and I thought Id incorporate that here from the start thus the interim solution
; general
hmm would it be possible to place all the Problem sections later to not scare people away They are really interesting but as you say not for first time users
; general
yes good point Ill move the details of the motivation to the end
; design
missing something here
; general
ok I dont like different syntax for creating actors and you probably need the Props functionality as well
; general
yes I just wrote it half an hour ago
; general
keep the assertion with the assignment perhaps use Richs new requiring
; general
Use an option iso magic value
; general
what if this throws
; general
I think this is dubious if it isnt legal then it needs to be enforced
; general
Its legal it means that the receive did not succeed and the message was  dropped
; general
Cool add that as a comment
; general
yeah it deserves it
; general
can isOpen thrown an exception
; general
closing over this
; general
val OPREADANDWRITE  OPREAD  OPWRITE
; general
Same as in TcpSelector I can change both though
; general
if one of the channels fail to close the other channels wont get closed
; general
try selectorManagementDispatcherexecutetask finally selectorwakeup
; general
explicit return type pls
; general
well they ARE guaranteed to be the same here
; general
There is a long tradtition of  for those two
; general
I prefer  too
; general
The documentation does not mention any possible exceptions so I think not
; general
True Ill port it to the TCP selector too
; general
so you only need trycatch around the actual close call
; general
what about trying to read right again and only falling back to the selector once that fails
; general
same here try sending first and only register WriteInterest if that fails
; general
where is the KickStartDone handled
; general
It needs to be configured in that case as it hogs the current thread
; general
it just occurred to me that you can add forwarders in the respective objects    object Tcp       object SO         val SendBufferSize  InetSOSendBufferSize
; design
expectMsgTypeReceiveddata must be  data
; general
why is this not a child of one of the selectors in the pool
; general
if selector is a pool then this might go to some actor and the WriteInterest later to a different one which makes me think that the simple sender should be registered just as anybody else
; design
This is exactly the plan I came yesterday to the same conclusion
; general
avoid relative imports at the top level imports in a file
; general
if the manager always is the parent you dont need the constructor parameter but that is perhaps not the case
; general
use the convention to enclose variable data in log messages and exceptions in square brackets    logdebugClosing UDP connection to  remoteAddress
; general
not Option because of performancein that case you might want to avoid the tuple allocation as well otherwise I would prefer Option
; general
this is wrong will fail if its the first usage of the extension should be     override def getsystem ActorSystem UdpFFExt  supergetsystem
; general
same thing here
; general
one reason for this is tests the other is that contextparent is not the same for routers as is the case here as well
; general
What does low mean
; general
I think the precedent for such a setting is throughput
; general
Hmmm after getting here I think we need to establish a convention for how we name limiting settings
; general
this is a limit
; general
Perhaps have this in a finallyblock
; general
I still like this
; general
and I still have the feeling that that was not a good choice way back when it is not configuring the throughput it is configuring the max batch size in all cases alluded to which may then have an influence on throughput
; general
The cost for cahnging it is higher than the value of changing it and the cost of having multiple things describing the same thing is costlier than just using the already established one Im afraid
; general
yes I was afraid too  But it needed saying at least this one time
; design
then we agree
; general
I have never liked throughput but I also agree
; general
explicit type please
; general
If this throws then all is still good
; general
ie very nice
; general
this reads weirdly receive  workerForCommand
; general
options foreach  beforeDatagramBindsocket
; general
You were catching and suppressing such exceptions in previous Actors why not here
; general
Id rather pass send and sender into doSend and let doSend manage the pendingSend
; general
please add endpoint in the message
; general
please add bind and connect parameters here as well
; general
same here please add endpoint to the message
; general
I have no idea other than lower than TCP
; general
upong seems to be there since the beginning
; general
Id like to understand better what exactly is different on Windows here I dont think the test needs the assumption you are quoting It should test what happens when the connection is closed when the client side Actor is waiting for the connection establishment Under Linux what happened is that the channel was flagged Connectable but the connection call failed with an exception What happens in Windows
; design
this is confusing people will drop the parens and then wonder why it does not work can we make it so that the companion object extends SimpleSenderNil
; design
need to check the Java API then
; design
No exception is thrown it looks like that the OS accepts the connection  and so the client does not fail
; general
payload to all
; general
There is another special scenario when the routees are provided externally
; general
pull in from code sample please
; general
All AutoReceivedMessages are treated like that the one useraccessible case you have overlooked is Kill
; general
is this formatting looking goodMy experience is that  looks unreadable for multiword things but I have not tried it together with
; general
that was a new way of writing a reference is it correct
; design
sorry now I see not new its correct
; general
no the trick is to use nonbreakable spaces in there optionspace on mac
; general
ah thats great to know thanks
; general
I patched the CSS to make this readable in HTML but nonbreaking spaces are probably better Although they could mess with wrapping
; general
OK Ill add Kill too
; general
OK Ill add Actually Ill probably need some anyway so I can verify whats going on
; general
Meaning they are not children of the router right Can you give me some more information about this or a link to where I can find out more
; general
I like links
; general
these snippets should be short and should not be intended for being wrapped
; general
for remote deployment beware of the caveat documented in the remoting section coupling of nodes
; general
whether or not the router will be restarted depends on its supervisor
; general
yes much better
; general
Before creating your own router
; general
OK I misunderstood the description of the Kill message in the actors doc which is currently You can kill an actor by sending a Kill message This will restart the actor through regular supervisor semantics Ive read the code to check the meaning and rewritten the explanation so its clearer to me at least
; design
here one piece is missing which is in the Scala version  It should be mentioned that the routers restart behaviour has been overridden so that a restart  while still recreating the children will still preserve the same number of actors in the pool
; general
this should probably be Kill
; general
Not sure about the word annotating here It made me think of Java annotations Would with the routers RouterConfig added work
; general
I know that you didnt write this but the config and the sample code doesnt match up The config uses myrouter1 and myrouter2 while the java code uses router and router2
; general
Yes that sounds good
; general
OK Ill fix this
; general
Yeah I saw a couple of questions about this on the mailing list
; general
I saw a comment on the really easy somewhere Ill change to possible
; general
Question if the defaults for 204 should be the exact same as for 203 20 with a very high max so we dont change semantics but we allow people to configure it on an asneeded basis
; general
I think that is a good idea Ill change the factor to 20 so it mimics Netty defaults and cap it at say 64
; general
Id cap it to 128 since it will have changed semantics on a0 otherwise
; general
I dont like this one please avoid negated booleans noDiagrams  contains switch it to be truebased instead
; general
You are right its completely backwards
; general
good that its possible to disable
; general
wasnt the purpose of all this to fail the build
; general
Yes that comment was made yesterday when it didnt fail the build Will remove it
; general
Have you covered all the angles with this featureEquality of ActorRefs belonging to the same node persenderordering to the same destination are outbound lookups creating new connections which defeats NAT
; general
At the time I was trying to be sure that my change wasnt propagating outside that class I wasnt entirely sure another class wasnt accessing it through the val So I wanted to see if any errors would show up I decided to leaver it since this value isnt always going to match the local ip address used in the rest of remoting it should only really be used to initialize the Netty server so I felt using it externally should be discouraged
; design
In what way does this test verify that it works over NAT
; general
This test checks if it can successfully deploy actors to a remote system through NAT and then receive a message back  However it does not cover all the angles you mention above
; general
Currently I am using it to build a p2p voiceChat client  Outbound lookups to initiate connections are working and I have been able to send out a stream of Speex encoded voice packets to a remote actor and then play it on the other end  At the moment I have only tried this inside my own home network but it is NATed on both ends through my routerIf point 3 didnt work I shouldnt be able to connect and if 2 didnt work I dont think my voice stream would work
; design
Equality of ActorRefs I assume you mean that if I use actorOf actorForakkanode747474742552usersomeActor and actorForusersomeActor are they all equal  This I have not tested
; general
Since none of the new settings are used in LocalActorRefProvideractorFor I am very doubtful that this patch actually achieves its advertised goal it is not enough to just bind to 0000 youll also have to accept different IPs that the current systems name as local Have you actually tried sending TO the NATed host Because that is the thing which does not work
; general
My explanation was probably insufficient The only IP I name as local is the IP which is accessible from the internet I am not supporting multiple addresses here  I am supporting a single address the one that corresponds to the NAT my router  If my internet IP is 74747474  This is the only IP I can send to I cannot receive messages via the IP in my internal network  If computers in my internal network want to send messages to my NATed ActorSystem then they MUST send to 74747474        This is how I am using it currently    automatically find and map a port on my router this maps port 2552 for my first PC and 2553 for my 2nd etc    val routerConnection  new UpnprouterConnection    val ip  routerConnectionip        74747474    val port  routerConnectionport        configure to use my modified akkaremote with the Ip and Port for the Router    val natConfig  ConfigFactoryparseString    akkaactorprovider  akkaremotenatRemoteActorRefProvider    akkaremotetransport  akkaremotenatnettyNettyRemoteTransport    akkaremotenettyforcebindaddress  on    akkaremotenettyhostname    ip      akkaremotenettyport    port    implicit val system  ActorSystemnode natConfigCurrently I can already use it to stream voice P2P both directions Such that 747474742552 communicates with 747474742553  If I tried to have my internal network 192168102462552 and 192168102482553 try to communicate it would not work under this setup which I think is what you were getting at I would need to identify a second local IP for both addresses to work I know this wouldnt be sufficient for all use cases but this was simple to do and is the only way I could get Netty to bind to my external IPMy main problem at the moment is I feel like my test is terrible  Since it needs to be manually configured against the router Ip it is just going to fail unless I disable it by default But if I disable it by default then it will rarely get tested so what good is it Maybe I should just be testing that 0000 gets set properly so I know forcebindaddress is working
; design
I think this should be a ticket and not a comment
; general
override val deadLetters InternalActorRef       deadLettersgetOrElsep  new DeadLetterActorRefthis p eventStreamapplyrootPath  deadLetters
; general
we actually solved it during the meeting today will updatethere will be a ticket for the better long term solution though
; design
I think this wants to be a warning
; general
True Ill change that and then mergeI think cherrypick of the last two commits to release21 should be no problem Ok
; general
no backporting to 21 should only be done once we are certain how to proceed in 21 links between systems are not bulletproof yet with or without this patch right
; general
How about encoding the suffix inside the akkaPreviousArtifact so crosspublishing would technically work aside from DRYing things up a bit
; general
SureWhat I also tried was to define previousArtifact in defaultSettings but I couldnt get hold of the project id from there
; general
Is there a reason why we dont just ignore it in MiMa
; general
Same here Do we really want to guarantee binary compatibility on synthetic methods I am fine with it just curious
; general
yes it is very strange that it reports it as a problem dotta do you know why
; general
we can keep it like this for now but we should ask the MiMa folks whether this is not something which can be autodetected and not warned about or whether our reasoning is unsound dotta
; general
If the synthetic isnt private then its a binary incompatibility otherwise its a bug on MiMa Of course I agree it may be nice to have a flag to tell MiMa not to report these sort of incompatibilities if you expectrequire clients to never link against them You could file a ticket
; design
If we cant get these to run sequentially and failing fast then maybe we should do like we discussed this morning and let the job do clean testcompile test validatepullrequest and only add things like building docs and mima here
; general
ok Ill change to that
; general
Before merging this I must wait for a recent nightly
; general
Isnt it the second element
; general
So the first seednode must be started first and then the other seednodes in any order
; general
no not really you can start seed2 and seed3 before seed1 but they will not be active until they have been able to join another seed node seed1 They will retry the join procedureSo a possible startup scenario is1 seed2 started doesnt get any ack from seed1 or seed32 seed3 started doesnt get any ack from seed1 or seed3 seed2 doesnt reply3 seed1 is started and joins itself4 seed2 retries the join procedure and gets an ack from seed1 and then joins to seed15 seed3 retries the join procedure and gets acks from seed2 first and then joins to seed2
; general
Change all Up Down etc to Up and Down etc
; general
Link to the script or even better to a doc section that explains the script
; general
You mean Up and Down and not Upand Down double backticksThe latter is rather annoying to read
; general
Yes will be done as part of ticket httpswwwassemblacomspacesakkatickets2014
; general
Yes Up just to make it clear that it is a command
; general
is this artifact name going to be correct dont we publish binary scala version in artifact id from 21
; general
Will the version numbers above be replaced automagically bad memory
; general
Should we hardcode a nightly version
; general
I think the idea is to cut akkaclusterjar when we release 21 and mark it as unsupportedexperimental
; general
In that case it is wrong here also httpdocakkaiodocsakkasnapshotintrogettingstartedhtmlusingakkawithsbtDo you know bantonsson
; general
Im not 100 sure though 21M2 was cut when I was away
; general
21SNAPSHOT is replacedThe scala version replacement must be written like this     parsedliteral      scalaVersionIt cant be used inside plain text rkuhn correct me if Im wrongAnyway it doesnt matter I can remove that from the text and only use the scalaVersion in the code below
; general
Until we have something better
; general
I saw that  I like thatThis doc was written before that was decided
; general
plain text works just fine the parsedliteral is only needed for code snippets which would otherwise be a codeblock since within that these replacements do not apply
; design
ah good to know I missed that
; general
a comment as to why 90 is chosen
; general
Whats with these
; general
certainly got it
; general
they snuck into the wrong branch somehow hope you dont mind
; general
isnt this more a LongRunning test than a TimingTest
; general
90 seconds added to the build time is hard to justify once this has been tested for a while we might want to create a ticket or FIXME to ignore this test
; general
Yes in 21 and forward it will be but in 20 that tag did not exist And I think we should keep it as LongRunning because long running is exactly what it is
; general
Might want to clarify semantics of this method
; general
Might want to clarify semantics of this method
; general
Might want to clarify semantics of this method
; general
I prefer repliesFromAddresses must be  Setnodefirstaddress nodesecondaddress nodethirdaddressThen you can replace 5 LoC with 1
; general
Is there any risk of cycles here
; general
Is cX a safe name compare X for anon children
; general
Im not sure I understand what you are looking for I tried to explain what it doesuse the resizer defined in code if not defined in config
; general
You mean like a RemoteRouterConfig wrapping another RemoteRouterConfigThat would be very wrong I can add assert
; general
Yes exactly thanks
; general
I dont know the background for naming the routees with real names instead of using anon name Do you know rkuhn
; general
Oh I interpreted the docs as Override this method if you want to use the resizer defined in code if not defined in configDrop Override and just say Uses the resizer of the given Routerconfig if this RouterConfig doesnt have one
; general
ah sure that was confusing
; general
looking more at it randomName is not availble here Im leaving it as is open a separate ticket if you think it should use some random name Note that this is using the internal provider api          val name  c  childNameCounterincrementAndGet          val deploy  Deploy ConfigFactoryempty propsrouterConfig RemoteScopenodeAddressIternext          implprovideractorOfimpl props contextselfasInstanceOfInternalActorRef contextselfpath  name            systemService  false Somedeploy lookupDeploy  false async  false
; design
What is this intended to be used for Id like to avoid duplication Why isnt it an ActorRefFactory
; general
Ie why is it a subset of ActorContext
; general
It was something that rkuhn and I talked about We dont like the way the full ActorContext is exposed to RouteeProvider and RouterConfig outside of the actorThe purpose of this was to reduces this full exposure
; design
I think it makes sense to have a design discussion on this Roland had some ideas on how to solve it
; design
Previously rkuhn had an idea of that routees should be created by sending messages to the router actor I didnt go that path because I dont think it is possible without major rethinking because we rely on immediate return of routee ActorRefWe can discuss further improvements to the router design on Monday Im not sure that major redesign should go into this ticket though
; design
Do you think it would be useful to also have a setting deployonownnode  on that can be set to off for masterworker scenario where all routees are remote
; general
I have added this feature
; general
I guess you meant javalangIterable
; general
this file belongs into the akkaclusterrouting directory so that IDEs can find it
; general
of course I meant that thx fixed
; general
This should mention that it cannot be combined with withDeploy
; general
I guess I should look at the code which uses it but still why is it necessary to give a Deploy if all we want is a clusteraware router The same is not necessary when using RemoteRouterConfig
; general
postRestart will then subscribe again is this intended If yes a comment would be in order
; general
Im not currently fit enough to think through those fallback thingies but all this will be marked experimental so I think we can sit together at a later time and try to find a consistent spec not saying that this wouldnt match it but
; general
please move local import into proper initialization block
; design
this should still respect the maxInstancesPerNode setting I think
; general
what about RootActorPathtarget  settingsrouteesPathElements and then in settings using the RelativeActorPath extractor to verify that the string makes sense
; general
If you feel uncertain about those fallback thingies you should take a look at this closed pull request because similar is also in nonexperimental RemoteRouterConfighttpsgithubcomakkaakkapull650filesThere I wrote test that fails without thisticket 2433
; general
yes that is the point to handle restart Ill add a comment
; general
That is a very valid remark and simplifies a lot I have removed this sugar stuff and let user api be    withRouterClusterRouterConfigRoundRobinRouter ClusterRouterSettingswith some nice apply and constructors in ClusterRouterSettings
; design
good point I have moved that special case to a better place
; general
Exactly what I was originally looking for but didnt found then I have changed to your suggestion
; general
its a tiny bit confusing reusing the same parameter name as the outer scope
; general
scalaIterable I presume
; general
What about mutability of the Iterable
; general
A bit of not needed copying here what about assuming it does the exact same thing    abandonedRouteesfoldLeftroutees      or routees  abandonedRoutees
; design
Id probably unwatch them as you iterate over them in the fold above Turns O3N to ON
; general
I think you can replace it with    registerRouteespathsviewmapcontextactorFor
; general
However you may or may not want to close over the context
; general
What does the breakOut do here    val routees  VectorfillnrOfInstancescontextactorOfrouteeProps
; general
keep is not used use drop
; general
abandon could technically be mutable and in this case youre exposing it to other threads
; general
To be symmetric with the Scala API do we want to return RandomAccess httpdocsoraclecomjavase142docsapijavautilRandomAccesshtmlThe docs does not say anything about the mutability of the list returned by this method
; design
how about allowlocalroutees  onnode is a bit fluffier than local wdyt
; general
You could hit 2 birds with one stone here    val selfAddress  systemprovider match       case c ClusterActorRefProvider  ctransportaddress      case other  throw new ConfigurationExceptionActorSystems needs to have a ClusterActorRefProvider enabled in the configuration currently     uses sformatsystem othergetClassgetName
; general
What are valid values for the totalInstances maxInstancesPerNode routeesPath etc
; general
As in documentation I mean
; general
yes it is  will change
; general
the outermost wrapping parens are not needed
; general
This is not used
; general
in practice that would be strange but what type to use then does it matter isnt scalaIterable thread safeshould I have to do toIndexedSeq or something before doing
; general
currentNodes is not used
; general
I have no clue why breakOut is used here and there why is the view needed why not     registerRouteespathsmapcontextactorFor
; design
Move this up to the line above
; design
good catch Ill make a local val of type Seq or is there a better immutable type to use
; general
preStart and postStop are called by default by preRestart and postRestart so if you dont want to miss things that happen in between youll have to override preRestart and postRestart
; general
RandomAccess is a marker interface  wouldnt be that useful I think List is what most java users are familiar with and this is a copy so I dont care about immutable
; general
I like allowlocalroutees another suggestion is uselocalroutees
; general
yes it is but I can move it inside the else scope
; design
final class or we want users to subclass
; design
and since its only used once its not needed
; general
thats not a problem subscribe sends a fresh CurrentClusterState snapshot so what happens in between is irrelevant
; general
ALLOW is niceOn Sep 11 2012 114 PM Patrik Nordwall notificationsgithubcom wrote In akkaclustersrcmainresourcesreferenceconf       enable cluster aware router that deploys to nodes in the cluster      enabled  off         Maximum number of routees that will be deployed on each cluster       member node       Note that nrofinstances defines total number of routees but       number of routees per node will not be exceeded ie if you       define nrofinstances  50 and maxnrofinstancespernode  2       it will deploy 2 routees per new member in the cluster up to       25 members      maxnrofinstancespernode  1         Defines if routees are allowed to be located on the same node as       the head router actor or only on remote nodes       Useful for masterworker scenario where all routees are remote      routeesonownnode  on I like allowlocalroutees another suggestion is uselocalroutees  Reply to this email directly or view it on GitHubhttpsgithubcomakkaakkapull653filesr1575362
; design
I try to keep lines  120 chars  isnt that a god convention
; general
You can get back down to 120 if you drop the this part of thisgetClass
; general
works for me
; general
you just lost one line of netnegative opportunity
; general
One day the king has to step down from the throne just making sure that therell be a new king
; general
these things tend to want to be configurable
; general
yes postStop of parent is called after all postStop of children have run
; general
After all the postStop of the children have been called or after all the postStop finished
; general
This means that all other exceptions are escalated leading to a restart of the headActor which will due to default preRestart terminate all connections I know you are thinking about definitions of restart semantics for the connection actors and once that is done it needs to be hooked in here
; general
adding volatile does not make it racefree without using CAS loops Id recommend a normal ConcurrentHashMap or similar
; design
probably the easiest way of not forgetting to remove these is to switch them off in IDEA
; general
Totally true I realized that it was wrong but I forgot about concurrent collections
; general
we usually put such imports at the toplevel unless lexical scope really matters for implicits or they are unusual
; general
keep an eye out for Java API we generally do not use partly symbolic method names on interfaces which can reasonably be implemented by user code
; design
didnt look to closely at the usage why does the handle need to be mutable
; general
maybe assert that no connection was there before the send
; general
The child tells the parent that it has terminated after it has run its postStop And the parent proceeds to run its own postStop after all children has told it that they have terminatedDoes that answer your question
; general
Always place constants in objects and not in classes its good style to do so since it doesnt add a field for every instance In this case the number of instances will be fewone but its how we do it
; general
Are these intended to be public
; general
Is this intended to be publicFor reasons of readability and quick breakage if inference changes always use explicit return types on methods
; general
No need for the braces here
; general
Why is this public and lazy
; design
We most likely want to do the nullingout in a finally block
; general
Use jucTimeoutException supertype of AskTimeoutException
; general
This should move in after the ifcheck
; design
Not needed to have the addressFuture out here just inline it into the Awaitresult call
; design
Looks like a good contract needs some ScalaDoc that describes what it does and what it means Id suggest the name reporter instead of notifier
; general
Always use override so that you get compilation errors when you remove methods on the interfaceFor 1line methods the recommended format is def    Type
; general
Id remove this method and use remoteSettingsLogRemoveLifeCycleEvents in the notifyListenersmethod directly
; general
Why is this placed here and not in an object
; general
Listen does not extend RemotingCommand which I assume it shouldAlso I prefer to pass the transport in the constructor instead of in a message in Props
; general
Instead of the getOrElse you could simply do  senderOption and it will be Somepath or None which is just as informative
; general
We might want to brainstorm about a new name
; general
Always use varstoimmutabledatastructure unless youre using a Concurrent datastructure why You can freely share the data structure if it is immutable and changing the value locally keeps mutability to the smallest possible scope
; general
no need to match address use
; general
I dont understand this line
; general
what if endpoint doesnt exist in the map should throw exception here
; general
Double work on the line above the address is returned in an option use a patternmatch on the returned value
; general
Since you always do remove you might as well start the method withendpointToAddressremoveendpoint match   case Someaddress  addressToEnd  case None
; general
These two imports should go at the top of the file
; general
why put it in a val here
; general
why val here
; general
I think EndpointException is not a fatal exception so you dont need the  EndpointException
; general
Why use the default dispatcher and not the actors dispatcher
; general
no need for braces
; general
no need for braces
; general
Name seems wrong here
; general
Order of notifications and other code in these cases seem inconsistent
; general
Historical nomenclature has been inbound  outbound
; general
Add a TODO to switch to a different dispatcher
; general
A RuntimeException is probably more appropriate here
; general
Why create all these types
; general
Why the local vla
; general
this match is unrelated to the action
; general
This breaks actor encapsulation by writing to an internal field from outside of the receive
; design
Pausing the review here its 3am
; general
that is a bug and a actually a very stupid one It is duplicated further  down as well Will fix it
; general
I dont know what is the best way to represent points in time in Akka so  I just used Deadline for now Is there a nicer way
; general
True This is an obvious remnant of old code that I already got rid of  Thanks for pointing out
; general
I thought that it is better to distinguish the kind of errors by distinct  types instead of just distinct messages On the other hand these  finegrained exceptions are not used now so I can remove them easily  What is your opinion
; general
Yes we talked about this with Roland already I mark it with a TODO as  you recommended and fix it Thanks
; general
think EndpointException is not a fatal exception so you dont need the  EndpointExceptionThe idea was to catch the exceptions that might slipped out that were not  wrapped in EndpointException but match the NonFatal pattern Currently  NonFatal and EndpointException is treated the same way so these lines are  surely redundant I will remove it as you suggested
; general
This is something I want to talk about with you and Roland
; general
True And now netty4 uses the same terminology for handlers instead of  UpstreamDownstream
; general
I think we talked about it but just to make sure that it does not get lost dont log messages which go to deadLetters
; general
one more thing I think it would make messages more easy to understand if these actors had names corresponding to the address they are serving
; general
this will not work the newly created endpoint is not yet known to the registry
; general
Could it happen that the name is not available after stopping and creating  a new actor
; general
having different types for different failures which are then actually distinguished by the actor is definitely good style because then we can fully use supervisorStrategy to decide what to do
; design
or an AkkaException even
; general
True Thanks Latch behavior has no test case yet I will add a test and  fix it
; general
this should be idempotent if it only can be called once
; general
Constants like these are always nice to group at the top of the class
; general
Why commented out
; general
why Tuple2 instead of 2 params
; general
isTerminated accessed outside of lock and isnt volatile Also name is confusing perhaps something like shutdownRequested
; general
If it remains there then during the tests I cannot observe if the actor  managed transport closed the individual handles or not because the  transport closes them anyway
; design
Because of the arrow notation The arrow indicates the direction of the  connection At least that was the idea
; general
braces not needed
; general
Yes these classes related to DummyTransport are not threadsafe This is  something I intend to clean up but only after the design of the remoting  is settled
; design
This is only used for testing the EndpointActors behavior during  restarts This code is used to intentionally crash the actor and force a  restart
; design
You can use named parameters instead    def connectfrom Address to Address      connectfrom   to
; general
Ok I will change it
; general
A Sequence might not be a proper data structure for this a Set perhaps
; general
Im skipping the rest of the Dummy as I assume this code will be dropped later in the process
; general
I propose RemoteMessageEncoder
; general
All of these imports are superfluous after
; general
We never use relative imports they are confusing and orderdependent
; general
We never use relative imports they are confusing and orderdependentThis is IDEA magic I have to turn this thing off Thanks for noticing
; general
scala is always imported by default and here scalaSome is imported explicitly twice
; general
Isnt the initial value always null
; general
True It was an Option before and I changed back to using null
; general
I guess actmote is just a temporary code name
; general
I think you can consider all names as temporary Any naming suggestions  are welcome
; general
if headActor  null try
; general
magic value 5 secondssame as managedRemoteSettingsShutdownTimeout
; general
what if multiple threads do start at the same timedo we need to support that
; general
use apply of the case class Timeout instead of new    val timeout  Timeout
; design
implicit val timeout instead of param
; general
yes or import remoteSettingsLogRemoteLifeCycleEvents
; general
I think we have a convention to use max 120 chars linesNot followed everywhere though
; general
210 string interpolation
; general
and then it should not be a relative import
; general
is it a timestampSystemcurrentTimeMillisor if its only for later measure a duration SystemnanoTime
; general
Or if it really is a Deadline it should be in the future then you just need to check isOverdue and then evict
; general
I dont know I will check it I think you can currently specify one  RemoteTransport in the config and that is started by  RemoteActorRefProvider
; general
Why not indeed If everyone agrees I am happy to use it
; general
Is there a class that has a different name than Deadline but still  represents a point in time Or the only way to do that is  Systemnanomilli LongsStoring the real deadline was my original plan but this way I can extract  also the elapsed wait duration when the Latch opens which is needed if I  want to implement increasing backoff intervals
; design
so after a restart you dont want to use the handleOption passed in to the constructor but still use isServer derived from the constructor param
; general
perhaps call superunhandled first
; general
could you send yourself a message instead
; general
do we need catch around in that case it should perhaps be case NonFatale
; general
rely on unhandled instead
; general
no  should not throw exceptions in 21
; general
sorry this was not an actor
; general
awesome documentation in here
; general
val f not needed
; general
NonFatalor is there a reason for e Exception
; general
Should probably be documented that this might take a while
; general
Yikes Good catch
; general
Yeah Viktor noticed the same Will change to message
; general
This is copied from the old code Should I fix it there as well
; general
I copied this from NettyRemoteTransport I should have asked first why is  it an object I will fix it Should the original code  NettyRemoteTransport stay as it is
; design
Its not the fact that it is an object that is a problem but why is it an object within a class
; design
Because thats how it is in NettyRemoteTransport it is a class as well  and I thought there is a reason for that which I just dont understand  Check NettyRemoteSupportscala line 345 I am not saying it is right  I  will fix it anyway but should I fix it in NettyRemoteTransport
; design
If it was like that already then just leave it be I just got curious
; general
Ok but I should change it in my code NettyConnector right
; general
Best solution is probably to pull it out and use the same version from both the NettyConnector and the NettyRemoteTransport
; design
This could also get problematic
; general
Yes this is blocking  I just realized it yesterday I could not find a  nonblocking name lookup in Java Can you recommend a solution
; design
is this pasted here verbatim
; general
Why explicit type here
; general
no need for braces
; general
I think the writemethod should return a Future so that the logic inside the method could be extracted out because all other transportconnectors will want to achieve the same behavior sending to DeadLetters etc
; general
This code was lifted from the original transport but I started to rewrite  it because of the blocking calls awaitUninterruptibly but I have not  finished rewriting it in a completely asynchronous fashion
; general
No need for braces check all such occurences
; general
doesnt extend ConnectorEvent on purpose
; general
You mean that the handling of errors should move to the EndpointActor do  the same stuff as above when the Future fails I was actually thinking  about that and talked with Roland about it He told me that as we already  have an ActorRef a Future might be overkill I am personally a bit  undecided about this I conceptionally like the Future version better but  on the other hand I feel it is a bit heavyweight Does it have any  performance implications What is your opinion
; design
No Its a bug Sigh
; general
Do zeros need units
; general
No but for the casual reader or the guy who works with this test it is nocer to know instantly if its a count or a duration
; general
what about sunmiscUnsafe
; general
The import for sunmisc is marked optional for now to allow for resolution of the bundle in most OSGi environment  In my example the package didnt get resolved and my miniexample still worked fine but if it is really required the only solution is probably to document that this needs to get configured properly in the OSGi framework either using boot delegation or as a system bundle export but that would probably also mean that Akka only works on Sun JREs I guess
; design
ITs definitely a required entity An no it works for virtually all VMs out there atleast according to Doug Lea
; general
OK cool  thanks for the feedback Ill remove the optional attribute from that import then and perhaps add a doc page under additional or something to clarify what needs to be changed for an OSGi environment instead
; general
I think we should only export akka not the other ones
; general
Oh and I dont believe in such a compatibility story Better go for 21 22
; general
Akka will only be binary compatible within minor releases so 20x 21x etc
; general
Yes thats why I propose to fix the version range to 21 22 which means 21 to 21x
; general
Ah sorry about that glanced too quick didnt notice the exclusive
; general
Yeah it probably makes more sense to mark comeaio and orgjbossnettyakkautil as private packages  However for comtypesafeconfig I would personally keep that export because at the moment these classes provide the most convenient way for passing along the correct classloaders to make sure that configuration files can get loadedPerhaps once we have these initial OSGi headers sorted we can add an akkaosgi module which does the right thing in an OSGi environment eg providing an easy to easy Activator implementation andor a Blueprint namespace handler to set up the system
; design
OK thanks for the feedback once again
; general
You are right comtypesafeconfig should be exported
; general
Okido  Ill make the necessary changes and add them to the pull request then  Thanks for the feedback
; general
Jut as a FYI comeaio will be dropped Ive added a ticket to move the things from orgjbossnettyakkautil to akkautilcomtypesafeconfig will become an explicit dependency as well instead of an embedded one This will hopefully clean up the exportPackage
; design
Are the things from orgjbossnetty only used internally or should they be exposed in the API If just internal you could consider to put them into akkainternalutil
; design
Well make them package protected
; design
Dont we want to only check this if a nondefault version is used
; general
Dont we want to only check this if a nondefault version is used
; general
you mean specialshortcircuiting the string DefaultDispatcherId would that really save that much time
; general
Its a ConcurrentHashMap right
; general
Where reads are synchronized so all actors created on the default dispatcher would synchronize
; general
Special case can be added in hasDispatcher
; general
no hasDispatcher does not access the map it only checks whether the Config has such a section
; general
I think it needs to be racefree       val sz  routeessize      if sz  1 routeeProvidercontextsystemdeadLetters      else routeesnextgetAndIncrement  szasInstanceOfInt
; general
but on the line above it is already stored in a local val  val routees  routeeProviderroutees
; general
Doh of course I only use  as first letter for hidden members not for methodprivate fields
; general
ok I can cleanup that in my other router work but leave this as small as possible to simplify backporting
; general
changed my mind it doesnt touch much more lines than I have already changed so Ill change it right away
; general
we dont have any public class named DeathWatch so I think the user instruction should be something likeUse death watch or Use contextwatch
; design
True Ill fix
; general
why the parens
; general
What unit are these in
; general
Why do we use immutableTraversable and not immutableSeq which we use everywhere else also has efficient Java helpers in JavaAPI
; general
one char too much
; general
its in the docs above
; general
is on the line above
; general
do you fear that someone might pass it to StringvalueOf   This is the Java API
; general
we had some discussion back when it was introduced it boils down to that this type expresses exactly what we need and nothing more we can use those efficient helpers nevertheless I guess
; general
Since its not apparent in the type it think it should be apparent in the name One shouldnt need an IDE to read the code Pullrequests etc IMO
; general
didnt we agree to leave the closure stuff in awaiting the sporticles
; general
Didnt we already change a lot of Props even though we dont have Sporticles
; general
Hmm considered that but then Id either have to call Optionget or make the code less compact neither of which I found appealing
; general
I dont think youll need this
; general
Could you add this where possible
; general
You mean adding these to the referenceconf Sure
; general
Do you need this to be true
; general
Ah no sorry misunderstood leave them as they are until they have more efficient serializers available
; general
Since this looks to be public API it needs some ScalaDoc love
; design
Great work Patrik
; general
yes it should have little impact for normal actors without routers etc its only the creator Function0 that goes through java serialization
; general
Yeah we could always create our own Function0 for the classcase
; general
If we do that it would be possible to serialize that case with a class namestring Perhaps not importantOn Tue May 15 2012 at 416 PM viktorklang replyreplygithubcom wrote        case Lefte       throw e            protected def deserializeT ClassManifestdata ByteString clazz ClassT T        val bytes  datatoByteArray      serializationdeserializebytes clazz match         case Rightx if classManifestTerasureisInstancex  xasInstanceOfT        case Rightother  throw new IllegalArgumentExceptionCant deserialize to s got s          formatclazzgetName other        case Lefte            Fallback to the java serializer because some interfaces dont implement javaioSerializable           but the impl instance does This could be optimized by adding java serializers in referenceconf           scalaFunction0 the creator           comtypesafeconfigConfig           akkaroutingRouterConfig           akkaactorScope Yeah we could always create our own Function0 for the classcase  Reply to this email directly or view it on GitHub httpsgithubcomakkaakkapull452filesr823633 Patrik NordwallTypesafe httptypesafecom   The software stack for applications thatscaleTwitter patriknw
; design
See this commit httpsgithubcomakkaakkacommit31ace9e83f1a9dc361bc6d1aa4e79c4825e8e07eIf there is any drawback Ill revert
; general
changed to false
; general
violated mutilated maimed
; general
So I could someone explain how this is different from the previous code I mean where is the leak and how is it fixed
; general
calling it a leak was a bit overly dramatic the fix is on line 389
; general
It was a leak tho
; general
Why is this removed
; general
It has to be removed in order to allow adding  to the other apply method def applyT  Actor ClassManifest PropsElse both have the same signature after erasure
; design
But they dont do the same So wont work
; general
In addition Removal did not break anything hence it was not used And there is always the val default available which is more expressive than apply returning a cached default so the removal increases intuition
; general
How do you know that no one is using it
; general
I think it was not used in AkkaEven if someone used it nothing should break The old version returned a default which could not be used because the creator field was initialized with a function that throws an exception In order to use it one would have to call withCreator on it which is exactly what the other apply method is doing
; general
Alright if you promise that it wont break anything
; general
Well I can give you a future which will eventually and IMHO very probably evaluate to not breaking anything sensible but you know
; general
I thought this worked now out of the box with the default dispatcher
; general
with for example
; general
that is new type of linking for mewhere does it link to the below  Props
; general
Yes youre right will change the documentation
; general
Yes it uses the Props It is how you write an anonymous link so the word above will link to Props in the same document The old link was a broken http link that caused a warning
; general
You most likely want to make that  case NonFatalf
; general
Please restore to have them on one line each saved vertical space
; general
One liners please
; general
NonFatal is a really nifty trick
; general
Yeah rkuhn is a genius
; general
def enqueuereceiver ActorRef envelope Envelope Unit  storagepushserializeenvelope
; general
def dequeue Envelope  storagepullmapdeserializeorNull
; general
Might want to comment as to why cleanUp shouldnt be implemented
; general
is a replacement for the standard actor mailbox that is durable  is a mailbox which stores the messages on durable storage
; design
Add URLs to the other adoptedcommunity mailboxes
; general
A durable mailbox typically doesnt implements transactions for current message  A durable mailbox is like any other mailbox not likely to be transactional
; design
yes for anything else but documentationI want to show the type returned from serialize
; general
Where do I find them They are not listed at httpakkaiocommunity
; general
Ask Jonas hes coordinated that
; general
Ok but comment that so no one cleans it up
; general
there is only amqp at the moment
; general
I dont think we should add this comment to private members
; design
In case Scala changes visibility for other JVM languages I think we need to
; general
private is not visible for Java afaikprivateakka is another thingotherwise there will be a lot of those comments
; design
These should of course be documented
; general
Could add that it should be a valid URL so they know what and why
; general
Could we switch to Scala Libs MurmurHash or Phils new hash
; general
private or define explicit return type
; design
with the new constructor you dont need  null here do you
; general
why is this case class and other exceptions are not
; design
any risk with that we cant change this onewould it be possible to move to context
; design
yes I see no reason why not
; general
what purpose does this UUID serve nowadays I hope lazy vals are not secretly transient
; general
I dont know
; general
I think ActorRefProvider and related things should not be user extendable yet
; general
protectedakka or prevent subclassing by user code
; general
might make sense to mention what its only usecase within the library is
; general
didnt know that doublebrace suffices
; general
behavior  state hence a restart must clear it so why would we want to move it into the context because it is a var in a trait and yes it wont be private because of the constructor business
; design
why not privateakka for the whole ActorSystemImpl
; general
Ill see what I can do
; general
I dont think it should yet
; general
Itll be used by Akka Camel as well
; general
Hmm I know firsthand what the location transparency thing is all about but would it not make sense for user code to ask a ref whether it is local or not in order to determine proper timeouts etc Im on the fence really
; general
yes I think so
; general
I think it can be privateakka
; general
in what way is this more readable than the original
; general
is the recursion here on purpose
; general
Because otherwise we wouldnt know how to create a Future during ask But we could also change that to require an implicit ExecutionContext That was all from akkaactor still diggin
; general
Same here ie we wouldnt know how to do the ask timeout thing Essentially the underlying reason is that ActorRefProvider does not expose a reference to its ActorSystem which is a good idea because of initialization order
; design
is this still correctexecutorService is  now a ExecutorService but LoadMetrics is not implemented by that
; general
And replace it with what exactly
; general
protectedakka is weaker than protected so what are you saying Subclassing applies to ActorSystem or ActorCell so I dont see a problem which emerges from this line
; design
No need to repeat the name of the documented elementA factory to create MessageQueues for an optionally provided ActorContext
; design
No need to repeat the name of the documented element
; general
WDYM I dont see how this should be improved
; general
I dont think it should ever
; general
You mean why is it exposed Because it does need to exist somewhere A good way to answer these questions is by simply removing it and seeing what breaks ISTR having good reasons to split this out when doing the actor system initialization
; design
somewhat like the fact that one of the earliest required devices during Linux boot sequence is devnull
; general
great catch fixed
; general
great catch fixed
; general
nope see implementation also for traversals
; design
Because it makes sense I dont see any value in hiding it The rest of the ActorPath handling is also not private
; general
behaviorStack is now moved to ActorCell
; general
yaint gonna saturate no 100GB link like this
; general
Read the classdef D
; general
So you dont want people to implement MessageDispatcher I must have read that email wrong which you sent to akkauser just minutes ago
; design
and that wasnt caught by tests scary
; general
Wow thats not a good reason Actors already have an implicit dispatcher yknowIll remove it
; general
Think again please And this time keep in mind that not all actors are local
; general
No I mean if we make it an implicit EC then we already cover the base of actors calling Ask and theres an implicit from AS  MD EC so if you have a system lying around you can obtain it from thereHOWEVER if we go the SIP14 route with Havocs proposal we might not even need the EC at all
; general
I dont think it does Use    eg triple brace Or correct me httpdocsscalalangorgstylescaladochtml
; general
yup checked that after commenting
; general
Well doc could be improved Not clear at all what it should be used for nor its semantics
; general
Why not fix these FIXMEs as part of this pull request
; general
Because I do not have infinite timeI marked it as a FIXME instead of simply a TODO so that its highlighted when someone goes on a hunt for FIXMEs however I do not believe that this setting has anything to do with binary compatibility and I wanted to focus my efforts on that since its both the target of the ticket Im working on and the name of the branch
; general
I disagree if you want to copypaste from the ScalaDoc its way easier if the name is contained within the description
; general
I was thinking about scala style guide httpdocsscalalangorgstylescaladochtmlWhen referring to the instance of the class use this XXX or this and not the XXX For objects say this objectIts no big deal I think the reason is to minimize the risk of outdated docs renaming
; design
Fair point but ScalaDoc is shoddy anyway Id like a documentation formatwhere the code samples is actually compiled and you could refer to thedifferent parts perhaps you already canthisClass etc
; general
yeah that would be super awesomeYou can referlink to classes akkaactorActor but I dont think you can for members which is poor
; general
I assume that this is not what were proposing our users use right Casting to internal API
; design
shouldnt currentTransport be used
; general
ah sorry didnt properly boyscout yesterday on the plane this must have been a whitespace only change due to slipping on the keyboard and accidentally touching cmdshiftf I guess
; general
Nope because thats set only during send and the point of this exercise was to make something which also works outside of normal remoting calls
; general
See my answer to Patrik below If unacceptable we have to discuss it and come up with a better solution
; general
do we need a more unique name here to not clash with user name space
; general
Is akkacluster unique enough
; general
perhaps order the cases with Heartbeat GossipEnvelope MetricsGossipEnvelope at the top
; general
our convention is value
; general
Yes I was thinking about this performance wise Would it be faster to have it in a Map based on class like fromBinary
; design
Doh of course
; general
explicit immutableSortedSet remove the importthat is at least the convention we decided for immutableSeq
; general
place Double and Long at the top
; general
place Double and Long at the top
; general
aha clever manifest
; general
Yes thats more consistent
; general
In all cluster messages we have used explicit address I think that in most cases that corresponds to the address in the sender reference The background reason for explicit addresses is that originally there were no cluster actors and therefore no senderThe address is the member identifier and that might not always in the future correspond to the sender transport addressI think we should keep the explicit addresses but just wanted to mention it
; design
all messages are also Serializable Do you think we should add the SerialVersionUID1L to all of them or skip it to indicate that we dont really support java serialization of cluster messages
; general
yes that was my thought as well
; general
It is only those 3 that have any kind of frequency to worry about I think match is fine
; general
and when you are at it please remove the import of SortedSet in ClusterEventscala
; general
I think that we should skip it since we wont support java serialization I also removed ClusterMessage from all messages that arent sent over the wire by themselvesThat reminds me of one thing I meant to ask about If I dont make the trait ClusterMessage extend Serializable I get this warning since the case classes are serializable by default Multiple serializers found for class akkacluster choosing first Is this something that we canshould work around Should we treat Serializable in a special way
; design
but I think we should add SerialVersionUID1L to all ClusterDomainEvent because users might send them over the wire and that includes Member MemberStatus NodeMetrics and stuff that are referenced Please add that in this PR
; general
Yes hat would at least allow us to add new methods on the classes without breaking serialization or using another Scala version that adds methods
; general
Since you cannot make these classes nonSerializable ClusterMessage must also extend Serializable to make the mapping more specific And since these classes will always be Serializable well have to make sure that that actually works ie we cannot not support java serialization of our messages
; general
Ill take this as an example users may include Member in their own messages which means that when they use the serialization extension theyll find only the JavaSerializer for this class Should we not offer protobuf serialization for all userlevel API messages
; design
what are all these backticks doing here this line is after parsing exactly the same as val gossip  envelopegossip
; general
So I was under the impression that this ticket was for creating a compact serialization representation for our gossip messages and everything they contain Im not sure what we gain by providing protobuf serialization for separate pieces of the gossip message If we make the messages future proof with versioning then it might make sense The standalone Member will be encoded differently from one contained in the gossip but thats not a big thing
; general
Sorry about that Scalabuf names the vals wit backticks and IDEA expands them with backticks Ill clean it up if it breaks reading flow
; general
I agree with bantonsson Protobuff of cluster domain events and enclosed classes such as member is nice to have but not at all needed Those are primarly intended to be consumed locally
; design
I must also do some low hanging tickets sometimes
; general
youre most welcome
; general
May i suggest javautilCollectionsemptyList
; general
of course you may will fix
; general
privateio val cmd evt        val l  new javautilArrayListAnyRef1      l add null      l
; general
why Int max size
; general
Dont like the repetition of 4 put it in a val somewhere
; general
And by putting it in the actual initialization of the class if you want for instance to send messages larger than 4Gb
; design
Isnt it enough to annotate the methods in UntypedActor
; general
explicit return type javautilList
; general
explicit return type javautilList
; general
This feels scary since they will be public for java Any way to hide them better
; design
explicit return type
; general
should we also have nonsymbolik names
; general
case l Left
; general
what is this all this code in docs
; general
I think i is more familiar
; general
at some other place I saw  TickGeneratortick
; general
ok now I understand it is real code that also serves as an example good
; general
The java message is named tick Perhaps name it TICK
; general
in the java sample there is also SetTarget
; general
Unit   here as well
; general
postincrement is evil I realize that Im opinionated
; general
nope wrong type try it
; general
hmm suggestions does sequence also work in infix notation
; general
yes I agree that is quite an explicit return type
; general
not that Im aware of suggestions
; general
tried that first then javac complains whenever compiling an actor since it apparently verifies the whole hierarchy
; design
yes or WDYM
; general
good point will make it a constructor arg and add bounds checking
; general
because Short is not always long enough or do you suggest we should enable users to accumulate more than 2GB within the pipeline before sending the whole blob onwards
; general
ouch my java collections skills are obviously lacking
; general
I thought that we had Unit   as a consistent coding style or Im just missing something
; general
that looks inefficient to me I know that scalac will probably not actually retrieve a BoxedUnit and then discard it but still the method does not return anything and  is a reified form of that which is superfluous here we currently have both styles in the codebase with roughly 80 being
; general
is just a blockscope so youre forcing the compiler to infer  essentially
; general
no there is nothing inferred you would be right if we were talking about a value of type Unit but a method which returns Unit does NOT return a value of type Unit
; general
put another way  matches quite exactly the empty body emitted in byte code while  does not
; general
Im not talking about the value Im talking about the type
; general
the reason is viktorklangplease change to whatever but make it consistent
; general
okay now we have three votes 1 for  1 for  and 1 for make it consistent I think we need at least one more vote
; general
privateio val cmd javautilListAnyRefnot hidden but at least not in normal sight
; general
I have no idea about the efficiency of  vs  so I vote for make it consistent
; general
I agree on the consistency part I vote for  as it means Unit whereas  means emptyblockpleaseinferreturnforme
; general
it makes no difference whatsoever in the bytecode but this means that we still need at least one more vote
; general
only one vote per person even for Directors
; general
ask Mr Style aka hseeberger
; general
Mr Style says that it clearly must be
; general
so be it
; general
Team Klangberger wins
; general
actually no genjavadoc does not like that
; general
also ByteString is limited to 2GB as are arrays
; general
gideondk How do you suggest handling 2GB There seem to be many limits interfering
; general
WDYM with the explicit return type
; general
that is a nonpublished detail which is necessary to verify that the Java code also works as advertised
; general
rkuhn nvm was just about the limits of the 4 byte header It felt wrong to have a predefined size of 4 but anything larger doesnt make sense in the current architecture and generally not that trivial in binary protocols
; general
rkuhn have seen 2 byte lengths for instance
; general
Yes Im adding putLongPart  getLongPart to ByteString and using those to allow 14 bytes header size here
; general
trying things out we cannot use the same names as for the static methods because then we lose the static methods Scala rules and I dont like having different names for the same thing hence Id propose to answer your question with no
; general
Are these intentionally invariant
; general
Also  is closer to a circle which is the perfect shape so for aesthetic reasons I opt for
; general
I think this is suboptimal since this is in the documentation Add a defaultAddress Address to RemoteTransport that by default returns addresseshead
; general
hmm this looks like duplication will also be done by RemoteActorRefstart
; general
this should probably not be in the general RemoteTransport scala file I assume its needed for the Netty transport
; design
Lets call him Fred Or Barney
; general
How about making these two lazy val depending on the addressesPromise which would go here as a simple private val That obviously documents the writeonce semantics
; design
OUCH I really would like to have compiler support in catching these context must not ever leave the actors context because that would be completely illogical
; general
this ifelse has somewhat misleading formatting
; general
Big Thanks Its just plain BAD
; general
may laymans understanding suggests that an open latch does not permit flow this means that in this case here the if is inverted
; general
No if the latch is open then it allows messages to flow If it is  closed it doesnt A circuit breaker is the thingy that allows flow of  things when closed  But I can change the terminology
; general
That triggered me to check the closest dictionary  latch noun a metal bar with a catch and lever used for fastening a door or gate   electronics a circuit that retains whatever output state results from a momentary input signal until reset by another signalmeaning that I think latch is entirely the wrong word on these things As we just discussed gate would more fittingly describe the purpose of this method
; general
please use extendedSystemdynamicAccess
; general
Id prefer transportlisten map transport
; general
hmm I had to think too long about this so why not    transportMapping  results groupBy         case  transportAddress   transportAddress       map         case  t if tsize  1  throw         case a t  a  thead1      Does that not also return a HashMap
; general
the method Setcontains is one of those which I prefer to write without the dot and parens
; general
val endpointId  Iterator from 0
; general
please somehow demarcate the end of the constructor arguments given scalariform indentation rules this probably means adding an empty line
; general
why print Set around the address
; general
This is the old remoting which should go away This was just a short hack  to make things work
; general
why not inline this
; general
please reorder into triangle form
; general
I guess these methods will be useful in more generic form to cover protocol stacking
; general
these forwarders to wrapped transports might also be useful to package in a reusable mixin I think
; design
Iterator from 0
; general
They are already refactored
; general
you mean because the frame is just passed through just checking
; general
Yes it should be properly encapsulated The way it is defined with  protobuf now will eagerly deserialize the payload part  which violates  the layering I will change the protobuf definition after I removed the  old remoting
; general
neither  nor
; general
please document relationship between states and data types
; general
refactor with the case above theres too much repetition here
; general
it would be more intuitive to move this to WaitActivity and start out in that state in the inbound case
; design
why not enqueue the InboundPayload objects directly
; general
plus theres a superfluous dot on this line
; general
I created a ticket to do that automatically
; general
better include full config path in the error message
; general
better include full config path in the error message
; general
By using PartialFunction composition
; general
That makes perfect sense
; general
I am not really convinced about this one What would it improve
; general
Ah no It dont There is a missing deserialization step there  deliberately which will be included when I split the protocol buffer  definition of payloads
; general
no by not having two cases for different stateData but only one which has a match where the differences are
; general
this should have an accompanying scaladoc comment explaining why we added the warning
; general
Do you really mean to send a RST packet In that case youll need to set SOLINGER0 before calling close
; general
if you just echo the string in the EchoActor you could also do    expectMsgpong    lastSender must betestActor
; general
out of general curiosity I wonder if its not preferred to skip private val for nonpublic constructor parametersWithout private valscala class Foobar String  def fooBar String  bar defined class Fooscala javap c p FooCompiled from consolepublic class Foo extends javalangObjectprivate final javalangString barpublic javalangString fooBar  Code   0aload0   1getfield11 Field barLjavalangString   4areturnpublic FoojavalangString  Code   0aload0   1aload1   2putfield11 Field barLjavalangString   5aload0   6invokespecial18 Method javalangObjectinitV   9returnWith private valscala class Foo2private val bar String  def fooBar String  bar defined class Foo2scala javap c p Foo2Compiled from consolepublic class Foo2 extends javalangObjectprivate final javalangString barprivate javalangString bar  Code   0aload0   1getfield10 Field barLjavalangString   4areturnpublic javalangString fooBar  Code   0aload0   1invokespecial15 Method barLjavalangString   4areturnpublic Foo2javalangString  Code   0aload0   1aload1   2putfield10 Field barLjavalangString   5aload0   6invokespecial20 Method javalangObjectinitV   9return
; design
Is there any risk of confusion by using the term MessageDispatcher since that is something already used in akkadispatchMessageDispatcher
; general
might add a comment that this is not actually returned
; general
we have a convention to use square brackets around variables in log and exception messages    logerrore Tried    remoteAddress
; general
same here and possibly on other places
; general
Where did the isSelfAddress method goShouldnt those repetitive checks be extracted
; general
Im confused Shouldnt this show the diff with master Looks like something is missinghttpsgithubcomakkaakkablobmasterakkaremotesrcmainscalaakkaremoteRemoteActorRefProviderscalaL196Make sure that the changes I did here are not lost httpsgithubcomakkaakkacommit49500ab
; general
addresseshead is scary since that is a Set We should have something like defaultAddress or primaryAddress which corresponds to the transport configured first in the config list
; general
type should be immutableSeq or Map
; general
I prefer  filter  case t   tisResponsibleForremote
; general
This was posted before that was pushed I need to merge it
; general
This is not used by the new remoting it is there to make the old  NettyRemoteTransport happy it inherits this stuff I have a completely  separated serialization service
; general
please add a comment what exactly is wrong with this address
; general
could be done with Deadline
; general
Perhaps try transportshutdown catch
; general
why the BeanProperty
; general
just FYI ie no need to change expectMsgTypeInboundAssociationhandle
; general
consider adding descriptive messages to all these
; general
ah sorry wrong awaitCond Hmm consider adding the possibility to adding descriptive messages to the TestKitawaitCond API then
; design
Perhaps mention what a PDU isprotocol data unit
; general
please always use testActor which is more obvious
; general
Dont know yet as in FIXME
; general
if AkkaProtocolSettings would assume to get an appropriately selected subconfig ie confgetConfigakkaremoting in the normal case that would make configuration even more flexible right
; general
when using one parameter per line its preferred to start the first one on a new line
; general
should the return type be FailureDetector
; general
Someone commented that I should go with plain Long timestamps
; general
why the BeanProperty This is how it is done in the old RemoteLifecycleEvent classes I just  followed that I suspect this is for Java compat
; general
why are you sleeping if waiting for some event that should be explicit if not it needs a comment
; general
Yes OSI terminology also used by IEEE I will add comment to explain
; general
some    could go away
; general
Strange that should not be there Thanks
; general
Closed is for we dont have an underlying transport yet while WaitActivity is for we are waiting for activity on the underlying transport Incoming connections logically start out in the second stage the first stage happens unbeknownst to us
; general
ah okay That would have made a nice FIXME comment
; general
Inconsistent naming Ssl vs SSL
; general
there is no need for the  and stripMargin
; general
I also thought about this but we are dispatching messages in several places and several distinct ways all entitled to receive the one appropriate name
; general
no should simply be removed making the whole strategy a oneliner
; general
Ok I started out with a statechart which is in the draft doc and  followed that It made sense for me to have one initial state for both  cases But I can change if you like
; general
ok someone commented that I should use Deadline see reconnectionDeadline in nettyClient
; general
I see but I dont think there is a good reason for it The other properties are not BeanProperty Cant be very important to have getCause for this API
; general
remove the use of addresseshead and instead create a method called defaultAddress and use that
; general
we agreed with Roland to keep the volatile var
; general
perhaps we should mention that my dream blew up in the face of error handling which would be less nice when using lazy vals
; general
The path is not always available at this point
; general
My plan was to only return the ref if the test passes and a descriptive error message if it doesnt I think this fulfills both
; general
Ok that was not clear to me It fulfills both
; general
after the first await should not the others be there already
; general
not necessarily when using fine grained events the clusterView will be updated by published fine grained eventssome of these conditions could probably be written as you suggests but I think its more robust to assert all in the same way and dont make to much assumptions about the how the clusterView gets updated
; general
this answers my question the test is not overly cautious maybe there should be a comment explaining this because it might somehow pass by chance anyway if making the followup tests strict
; general
comment explaining why
; general
Why are specific scalac and javac options required here How does the user know which ones heshe needs to have
; general
Oh theyre not Ill just remove the whole section
; general
Why change to JVMthe tasks are multijvm
; general
All other places in the text use that capitalization when talking about multiJVM stuff This was the odd one out The examples clearly show multijvmwhatever
; general
I prefer toimmutableSeq even though you get the same thing The intention is more readable This is the only place with toVector that I could find
; general
Great this is exactly the type of feedback I want ie why I used different techniques in the PR
; general
Would you prefer immutableSeq over Vector here too
; general
No this reads fine Using List or Vector as arguments is more readable Its only in the case where there is an explicit conversion that I think it needs to be overstated
; general
thats bad so one must use immutableIndexedSeqempty to get the right IndexedSeq
; general
Yeah Want me to switch to immutableIndexedSeqempty
; general
procons for toInexedSeq vs toIndexedSeq
; general
Note that immutableSeq returns List not VectorWelcome to Scala version 2100RC1 Java HotSpotTM 64Bit Server VM Java 17010eaType in expressions to have them evaluatedType help for more informationscala collectionimmutableSeqres0 scalacollectionimmutableSeqNothing  List
; general
I think toIndexedSeq can be optimized to return this toIndexedSeq doesnt OTOH I think its a code smell with all these toX methodsSo for performance we might want to use toX but with a TODO to switch to to when it is smarter
; general
But please note that toIndexedSeq is NOT the immutableIndexedSeq
; general
Well it can be but not always
; general
traversable toIndexedSeq is implemented as      def toIndexedSeq immutableIndexedSeqA  toimmutableIndexedSeq
; general
Same with scalacollectionSeq then
; general
do we want to do this api changearray is pretty convenient way to define the classes
; design
import static javautilArraysasList    asListFooclass Barclass
; general
I understand that this way of writing out explicit immutableSeq makes it clear but its not very concise an alternative would be that we always have import scalacollectionimmutableSeq in all files where Seq is usedStarting to feel the need for scalastyle
; general
How would you know if you were using scalacollectionSeq which is autoimported by Predef and immutableSeq
; general
thats a costly thing to do the byte array will become a Vector
; general
but it wasnt really optimized before either
; general
Yup I think it should be a ticket for another version to switch to ByteString I dont see how well have time to change this atm
; general
Sure      scala    scala IndexedSeqempty    res0 IndexedSeqNothing  Vector
; general
type IndexedSeqA  scalacollectionIndexedSeqASo you get scalacollectionIndexedSeq which isnt immutable
; general
we would make import scalacollectionimmutableSeq part of our copyright header we must watch out for Seq anywayIm seriously thinking how this could be autochecked If not by scalastyle with regexp perl or whatever part of the buildFile containing Seq must always contain import scalacollectionimmutableSeq
; general
ok great that you created the ticket
; general
exactly see and believe    scala val i immutableIndexedSeqString  IndexedSeqemptyString    console30 error type mismatch    found    IndexedSeqString    required scalacollectionimmutableIndexedSeqString       val i immutableIndexedSeqString  IndexedSeqemptyString
; general
I think the appropriate thing would be to disallow PredefSeq
; general
yeah can we have our own scala fork  I think there is a company that provide such things
; general
No I mean in the style enforcer
; general
Such a tool would be awesome
; general
Isnt it UtilimmutableSeq
; general
Can you please motivate this api change The only reason I can think of is to make it possible for high performance java implementation of a router to return a real immutableSeq instance which is rather inconvenient an unlikely to happen so there will be a conversion anyway and then I dont understand why we dont do UtilimmutableSeq for them
; design
The whole point of Routers is that normal actor performance does not suffice In that case it will be beneficial to make the API user do the conversion instead of hiding it so that the implications are completely clear
; design
Damn these noncompiled documentations
; general
and then that should perhaps be mentioned in the above doc and not only refer to the conversion
; general
roleS  configS
; general
Entire forcomp can be replaced with    val c  configsreduceLeft withFallback     nodeConf  roles map    c
; general
would be nicer to make this extends AnyVal
; general
why this dance just extends TestKitActorSystemTimerBasedThrottlerSpec
; general
no need to say remaining here thats implied
; general
same applies below
; general
how about also testing SetTargetNone withwithout queued messages
; general
Ive copied that from somewhere but makes no sense here indeed
; general
Hm I think not After sending 13 we want to wait a full second Without the expectNoMsgremaining wed expect 46 too early
; general
Always good idea and indeed found a bug Two more tests are in now
; general
What I meant is that removing remaining does not change the behavior    def expectNoMsg  expectNoMsginternalremaining from TestKitscala
; general
Ah this way thanks  I removed the argument in the tests see httpsgithubcomhbfakkacommitfb237b859e886aa651294303d9665065222a8bc2
; general
Im always avoiding self for the self type of actors because Actor has val self ActorRefIt might not be a problem
; design
Im afraid this will not work on the slow jenkins machine with timefactor  5 The within durations are dilated but the durations passed to the throttler is not Shouldnt all durations be dilated Perhaps it also needs to be taggedAs TimingTest
; general
Its not problematic here since this self name is only visible within the Throttler trait but I agree that it should be changed to this Actor as a matter of style
; design
Ah I didnt know thisI added dilation to the throttler rates and tested it by locally and temporarily setting timefactor   50 in akkaakkatestkitsrcmainresourcesreferenceconf With this the tests still passSee httpsgithubcomhbfakkacommitaeb4e471415b2f757d4065cc5baed8a940e78cc4
; general
Fixed in httpsgithubcomhbfakkacommitaeb4e471415b2f757d4065cc5baed8a940e78cc4
; general
No code in rst doc please put it in a scala file and import it
; general
No code in rst doc please put it in a scala file and import it
; general
What implication will this have for the user ie what are you trying to convey here
; general
Cool great work Piotr Docs is always the hardest thing to write
; general
unnecessary imports from javalang
; general
They are for the test
; general
I mean javalang is always in scope isnt it
; general
The IDE appears to differ on that
; general
default argument with Seqempty and remove the accept overload
; general
What are valid values for the parameters
; general
Might want to link to the JDK docs for the settings
; general
What are valid values for the parametersMight want to link to the JDK docs for the settings
; general
What are valid values for the parametersMight want to link to the JDK docs for the settings
; general
what happens if linger is negative or 0
; general
what happens if negative or 0
; general
What are valid values and where can I read more about it
; general
same here as with accept
; general
same here as with accept
; general
import channelsocketThen use socket
; general
Great stuff after these last tweaks I think its ready to go inHave youve signed the cla Will be needed before I can merge it in httpwwwtypesafecomcontributeclaCheers
; design
It looked like the java docs didnt specify this stuff but I just realizedif I click on the api they jump to a fuller definition Ill link to thatTurns out the apis can also throw errors Any ideas for the cleanest way todeal with that Should we fail the operation and make a new error caseclass to send back to the owner eg for Accept Closed isnt quite theright response because it might be possible to Accept again with differentset of options
; design
Since you linked the ticket to this pull request do you want me to stop recreating the pull request so its a clean commit and instead add additional commits on top of it
; general
Yeah just add additional commits
; general
Nah if we want to signal to the sendersender  StatusFailureexceptionthrow exception
; general
Depends on how we want the failure to be handled
; general
Any difference from a performance obj allocation perspective to define those msg classes here or in a ConcurrentSocketActor companion object
; general
params collect case p PollDispatcher  contextsystemdispatcherslookuppname
; general
to be very sure of intialization order but I suppose it doesnt really need to be lazy
; general
thank you Ill do that in the other methods too  totally forgot about collect
; general
perhaps place 100millis in referenceconf
; general
I think you can usepollTimeout  DurationZero
; general
should this transformation be done on each notifyListener call or can it be placed in valguess you can use collect here also
; general
Might be advantage to use watch insteadisTerminated always returns false for remote refs but we have more reliable remote death watchWhat do you say Viktor
; general
should not be necessary since it is already defined in fallback referenceconf
; general
I couldnt see anything that was order dependent in there but I might be wrong Remove lazy if not needed
; general
a duration of zero is supported in zeromq though it will then block forever
; general
sorry forget that suggestion I read the code wrongpollerpollpollTimeouttoMicros  0On Thu Jan 19 2012 at 1257 PM Ivan Porto Carrero replyreplygithubcom wrote    private def pollAndReceiveFrames       if currentPollisEmpty currentPoll  newEventLoop          private lazy val eventLoopDispatcher        val fromConfig  paramsfindisInstanceOfPollDispatcher map         option  contextsystemdispatcherslookupoptionasInstanceOfPollDispatchername            fromConfig getOrElse contextsystemdispatcher          private lazy val pollTimeout        val fromConfig  params find isInstanceOfPollTimeoutDuration map asInstanceOfPollTimeoutDurationduration      fromConfig getOrElse 100millis       a duration of zero is supported in zeromq though it will then block forever  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull225filesr366719 Patrik NordwallTypesafe httptypesafecom   The software stack for applications thatscaleTwitter patriknw
; design
Remove this line
; general
Put the code in a compiled file as the other docs this makes it way cheaper to maintain
; general
Very nice work
; general
nice and clean
; general
Is this user API If so ScalaDoc and what does the Java API look like
; design
Specify return type
; general
specify returns type
; general
specify returns type extra cred if braces are dropped
; general
same as above
; general
You know it
; general
Might be polite to slain what it stands for Im guessing sendHighWaterMark
; general
Drop the companion object doing getBytes wo specifying character encoding makes the program platform dependent
; design
scaladoced nowYou made me write my very first lines of java code ever
; general
Still code in the rst files
; general
And no Javaversion of the rst file
; general
Needs to be def lookup ZeroMQExtension this otherwise Java wont work
; general
I think you really need to write Java example code for the Java documentation of it then you really see what code Java compiles with and what it doesnt
; general
I have all intentions of doing that but thats not something I can do in 20 or 30 minutes so I wont be able to do that todayI have never written java or a java unit test so I imagine some cursing and lots of cigarettes will be involved
; general
Hehe alright mate what do you think of the followingI merge this into master we create another ticket for the next milestone and I could also possibly help you out with the Java tests  examplesDeal
; design
Is this something users have to do all the time when using TMapCould it be incorporated in JavaAPInewMap
; general
Highly unjavapackage name should be stmjava
; general
How is current txn determined
; general
A is much better than T
; general
Its not a package but an import static from class JavaAPIPatrik19 jan 2012 kl 1601 skrev viktorklangreplyreplygithubcom  715 711  class import akkaactor import akkatransactor import scalaconcurrentstm import scalaconcurrentstmRef import static scalaconcurrentstmJavaAPI  Highly unjavapackage name should be stmjava     Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull223filesr367159
; design
If youre supposed to import it it essentially a package
; general
I can agree with that JavaAPI is maybe not a good class name Some may prefer to use it without import staticSuggestion scalaconcurrentstmjapiStmStmnewRefPatrik19 jan 2012 kl 1613 skrev viktorklangreplyreplygithubcom  715 711  class import akkaactor import akkatransactor import scalaconcurrentstm import scalaconcurrentstmRef import static scalaconcurrentstmJavaAPI  If youre supposed to import it it essentially a package     Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull223filesr367197
; design
Yes Ive also thought of combining in a newMap method I guess it will be the common thing to do works well in the tests anyway
; general
Txn is looked up dynamically with RefView thread local
; general
Yes nothing can be better than the first letter of the alphabet
; general
Okay Ill change it to japiStm which is similar to what I had in the transactor package before and was used without static import
; design
Is 4 enough for the transactor tests
; general
I guess so since corepoolsizefactor  2 and we have 2 processor on jenkins right
; general
Hmm I seem to remember hitting a deadlock with 4 threads now that you remind me I just dont know which exact test it was I think it might have to do with CallingThreadDispatcher and the minimum required parallelism was 5
; general
I kinda like this approach though I suggest the name whenBecoming
; general
Very clean and nonintrusive addition very nice work Havoc
; general
become does not really mix all that well with inherited behavior hierarchies who is responsible for becomeunbecome how does a thunk higher up in the hierarchy change itself ie handler in the example above how can you do it so that it does not result in a spaghetti messThat being said I also like the look of this and mapBehavior is more precise than whenBecoming because it also applies to the initial behavior Though we might want to use a word which does not have different spelling depending on which side of the ocean you live mapReceive anyone
; general
make ref a val as well since you use it in a method
; general
shouldnt you test for  1
; general
Should this be invokable by users
; general
I dont want to make it visible accessible for custom routers that is why its not a valRoutedActorRef is akka private
; general
If they write a custom router or resizer it can be used by users yes
; general
0 is covered by the line aboveIll change the first to case x Nil if x  0  throw
; general
FIXME on this line to avoid the cast
; general
Somedeploycopyrouting  new RemoteRouterConfigdeployrouting nodes
; general
Shouldnt this be a string
; general
Why not just case
; general
it is quotes are optional in the new config format
; general
that would have the same meaning but it is a specific check for if routees xs was defined and I wanted the case to highlight that
; general
If you want to enable users to write their own RouteeProvider to do fancy stuff then we need to drop these restrictions
; general
I removed the ref RoutedActorRef it wasnt needed
; general
getOrElsenull can be written as orNull
; general
now theres an easy performance win here just turn it around to make def childnameOptiongetChildname
; general
Shouldnt getChild be only in UntypedActorContext Its purpose is for java api
; design
ActorCell must implement both and ActorContext does not expose the Java variant AFAICS
; design
ok now I see it
; general
I dont get the performance optimization comment How I would rewrite the getChild method so it returns null for both None and SomeChildNameReserved in a nice way without basically doing the same thing that I do right now in child
; general
I think his idea was to move current child code to getChild and return schild or null
; design
I guess so but what should I use then If I flatMap I get back an OptionIm running out of ideas here how do I do that filteringtransformation to the Option without ending up with an Option as the product
; general
Id just use a pattern match instead
; general
Aha you are not true to Scala  A lessidiomatic way to use Option values is via pattern matching
; general
why not use Futurefailed
; general
Id use future either delayed I also dont particularly like that method name but somehow the more natural  didnt make it into the stdlib
; general
unless Im wrong either would also work from Java and make it a bit shorter
; general
well you tell me why all other failed in this file are written like PromisefailedfutureShall I change all to Futurefailed
; general
yes it works changed thx
; general
I changed to Futurefailed here but leave the others for ticket 2314 There might be a good reason
; general
the reason was that Futurefailed was only introduced after Viktor and I had discovered that it was missing and given the relative development speeds this resulted in what you see now
; general
Yes this is better I originally thought that if you configured a dispatcher you had already set your boundaries But since Netty gladly maxes out that pool by using those weird defaults the settings should be used here as well
; general
The Kitteh is right Superflous brace here or missing brace down below This doesnt compile
; general
why not apply the same niceness as above
; general
A very good idea
; general
was it something else we also redirected to deadletters
; general
Are you sure you want to completely remove this I know users still on 1x that want to upgrade to 2x
; general
I think we should point them to httpdocakkaiodocsakka203projectmigrationguide13x20xhtml
; general
Sure we can do that But then I think we should add it to the top of the file So they can find it there themselves
; general
Just call the page migrationguides And have links to the different ones One in this doc current and the other one to the old one
; general
good point will do
; general
By doing this we have to make sure that we never delete these old docs Can we ensure that
; general
I think that is what we need to do for supported versions anyway
; general
Cant grab these from code
; general
the docs are also in the distributions
; general
Too long for PDF Check all other snippets as well
; general
You just refer to deadletters as a noun Link to what it means or explain inline
; general
no that doesnt workif you in 22 want to include 21 migration guide it will breakalso its not possible to include the 20 snippets in this one
; general
Readd this page See comment above
; general
Right you would have to duplicate it No good Leave it
; general
this does not actually use ec should probably add some combinator to the example
; general
or change the comment that ec no longer needed for Future construction
; design
that was also changed for failed remote sends
; general
If I didnt miss anything then the getInstance pattern should hold for all singletons including Kill GetRoutees and some others Im currently forgetting Differences between docs and code will then have to be settled by changing the code
; general
fixedmigrationguidesrst is back and 13  20 links to 20 docs
; general
This implementation detail should most definitely not leak into user API
; design
To have PIDs the uids exposed to users is not something we should add without much careful thought
; design
This has implications performancewise One could argue that removeChild should have an optional uidparameter to do conditional removes to mitigate the cost of checkthenact style solutions
; general
I agree with Viktor
; general
okay Ill make it privateakka then
; general
no this should be a Timeout or Duration as everything else
; general
also why havent we specified type on all these boy scout
; general
ah wasnt that because of the special optimization that is done when type is not specified for final val would be awesome with a comment about I forget it all the time
; general
yes it was done like this because someone thought these might then be constants but of course they cannot be anyway after all they are not known at compile time so Im not sure what to do with them To me their types are obvious enough it would disturb the visual impression to repeat them
; general
but we have agreed on using types on public api makes it harder to break the apifor example the type of Durationapply is FiniteDuration but we might want Durationif it is for an optimization we can leave it out otherwise we should stick to our decision to use types on public api
; design
good motivates the usage of ReentrantLock over plain synchronized also
; general
The setting in the cluster with the same name is a Duration Is there a reason to specify it as a FiniteDuration here
; general
yes that contains strictly more information Id like to use FiniteDuration more in method signatures which expect finite durations
; general
Then maybe it should be a FiniteDuration in the cluster for symmetrical reasons
; general
um but isnt it better to use the most abstract type neededI have not seen any need to use FiniteDurationWe dont return Vector just because its an Vector we prefer to return IndexedSeq
; general
The reasoning behind FiniteDuration is that you can then statically be sure that toMillis will not barf which is a piece of information which I would like to keep Unfortunately we have used plain Duration in places where it is not so good leading to runtime errors for infinite timeouts for example but that does not mean that we cannot fix it In order to do this in a nice way producers as well as consumers of Duration values need to be changed
; general
exactly we havent used FiniteDuration api consistentlyanyway the important review comment was that it shouldnt be a Long
; design
yes and that has been fixed Im just compiletesting a change of all Duration settings I found which are in reality FiniteDurations Lets start at the producer side then we can with less pain tighten the consumers in 22 or something
; general
Should FiniteDuration not be documented if it surfaces user APIs
; general
yes I guess it should but it is in the standard library now meaning that it would take a bit longer to do and it would not show up in M7 since that is fixed already
; general
Perhaps just a link to the std lib ScalaDoc
; general
thats what I meant it is not documented in the stdlib right now Ill have to submit a pull req to change thatBut I just now rediscovered commondurationrst which Ill fix
; general
That was the doc page I was talking about
; general
in that case it is done
; general
This explanation tells the reader nothing about what this is useful for
; general
This explanation tells the reader nothing about what this is useful for
; general
Id suggest    val xcgPattern  if oneWay ExchangePatternInOnly else ExchangePatternInOut    producetransformOutgoingMessagemsg xchPattern
; general
Might want to clarify which headers override which
; general
Its not immediately obvious what this means
; general
you want more DSL syntax inbetween    transform       case x       using       case s State
; general
yeah otherwise itll trip people up
; general
Shouldnt this be in some other referenceconf Its not part of the official akkaremote user API right
; design
well I just needed a token to send around and protobuf does not really have this feature so I thought a string is extensible at the same time ie containing what it was that is done now should that become necessary
; design
okay will put all of this into a new subproject
; general
Why dont we just reuse the same config option to use a dispatcher for all of the remoting
; general
Why a nested object binary compat issuesNeeds docs
; design
Should include what happens if theres an exception thrown
; general
dropped the executor
; general
I left that change for another day
; general
Yes but I dont see any compat issues since it is the implementation it should not be overridable instead users should override createPipeline Then they may call defaultStack so we are bound to its signature but thats the end of it correct me if Im wrong
; design
of course that reasoning required some sprinkling around of private and friends
; design
not needed anymore since the executionHandler comes from the outside
; design
Should this be public
; general
Is this public API
; design
why not var initialPatricipants Int
; general
because I dont know which kind of pants Patricia wore initiallyAh now I get it Yes will change
; general
TODO or ticket
; general
default case here
; general
Needs a metric tonne of docs
; general
public API seems like an utility method that should go somewhere
; design
Alright finished review Docs ScalaDoc etc is needed
; general
made the ConductorHandler privateakka
; general
Hmm lets see whether we need that Ill keep the TODO
; general
does it matter which exception is thrown
; general
deferred Ive added some brief explanation in ScalaDoc real docs will have to come later once we fixed the whole API
; general
moved into encodersdecoders
; general
Is it by intention that you dont call superpreRestartThe default behavior is lost
; general
Raymond is working on it as we speak Also he will replace postStop with DeathWatch and try not to override any lifecycle hooks
; general
Make this a def
; general
Might want to include some more debug info about which actorref didnt manage to activate within how long
; general
two spaces here
; general
Just name it val system and drop the def system below
; general
What happens if templatestart fails
; general
if contextstop fails then template isnt stopped
; general
Why is this here
; general
Yeah we played with it with Raymond and didnt come back to clean it up
; general
This reminds me our conversation about tryAll  did you think about how can we solve shutdown of multiple services in elegant way without tryAll
; general
try contextstop finally templatestop
; general
the initial reasons were for testing but maybe there is a neater way if someone wanted to initialise camel outside of akka CamelExtension and share it between systems but then we changed the relationship between system and camel to 11 so overrides would not make sense any more
; general
Alright remove it
; general
Good point Well it would be in a good tone to cleanup after ourselves Just need to figure out a clever way of doing it without nested trycatches just kidding
; general
Where is this stopped
; general
Honestly This swallows first exception if the second fails
; general
Atleast it attempts to stop both
; general
Replace withval ref  actorSystemactorForpathactorPathif refisTerminated None else Someref
; general
Put a space before the brace on every such occurrence please
; general
Is this idempotent It will be done on every restart
; general
This should most likely be a config option
; general
This is most likely a bad default
; general
I dont like the name BlockingOrNot and its confusing to have a method named blocking that can return a NonBlocking
; general
Id suggest just using a Duration here if its  0 its nonblocking
; general
Then you can drop this
; general
Should include more debug info which consumer etcPerhaps good to have a baseclass for CamelExtensionExceptions
; general
This aint right
; general
Mutable state in messagE Uncool
; general
Confusing method name
; general
forkv  mheaders cmgetHeadersputkvasInstanceOfAnyRef
; general
why the space here
; general
why not just protected And why a val and nota def
; design
Is the context threadsafe
; general
make thisreceive  failedToActivatecause
; general
def failedToActivatecause Throwable sender  EndpointFailedToActivateref causeetc
; general
Why not use DeathWatch to remove refs WeakHashMaps have performance implications
; general
Just use if
; general
Together with the actor systemThe camel lifecycle is bound to the actor system lifecycle so there is no need to stop itYou can not stop camel extension from outside of the package other then by stopping the actor system
; design
Return type please
; general
What happens if theres no  in the uri
; general
Should be a ticket and should most likely go into the config section for the Camel Extension right
; general
Will doIs the sbt plugin not going to do it for us anywayI assumed so and I didnt pay that much attention to formatting
; general
Yes it is
; general
Shouldnt this be privatecamel as well
; general
make thisprivatecamel sealed trait ActivationMessage  def actor ActorRef
; design
is there a reason why ActorPath isnt good enough It starts with akka no
; general
new ActorEndpointuri this PathfromCamelPathremaining camel
; general
I dont like the name too Give me a constructive suggestion please I didnt want to use the Option here and be explicit
; general
Why do you need camel Camel here when ActorComponent already has a Camel
; general
Well this stuff is inherited and there is another ticket for fixing the docs
; design
What kind of config do you meanThe idea was you can override the method so it is configurable as the rest of the stuff blocking autoack etc
; general
Agreed shall I change it to 1020 secondsAlso1 I dont like the name  suggestion please 2 I was considering using the actorTimeout here but probably it would be bad  to overload the meaning of this setting
; general
Open a ticket
; general
d parens to the method
; general
C like yakId rather use explicit stuff rather then magic constantsAlso can you imagine all these ifs in TestableProducer Now it isblocking match    case NonBlocking  do x    case Blockingtimeout  do y with timeoutIt would surely loose readability
; general
rename outCapable to isProducer
; general
Still dont like this one
; general
If this is intended for tests it should be in another jar
; general
This code above smells weird
; general
We could look into it I havent had time to look at it yet
; general
The method signature is completely unrelated to the body of the method
; general
All sideeffecting methods should have parens
; general
I can rename it to CommunicationStyle so it doesnt get people confused
; general
new is not needed here
; design
method name completely unrelated to the body of the method
; general
use pattern match instead
; general
Is this public API
; design
Is this public API
; design
Thanks for pointing it out Again lets address all the comments in separate ticketBtw whats the Typesafes policy on Copyright section and author tagsPersonally Id save myself adding this stuff to every file
; general
Why is the test writing to stdout
; general
Why is the test writing to stdout
; general
I only modified Message so it compiles in 2x  ticket pleaseAnd btw it was using singleton before  so now it is much better
; general
Braces not needed
; general
Is Raymond getting this comments as wellProducer is his domainI spoken to him and what you see right now is a port of 1x as is so it compiles under 2x and he is working on this issues so they work the same way as with consumers
; general
Why change this
; general
Where does this come from
; general
it was moved as is
; general
Does any of the code after this even compile Id say no
; general
sntt simply getSender work
; general
depend on testkit and use that
; general
skype me please  its better to talk this troughOr look into IdempotentConsumerPublisher to see how they work together
; general
Copyright section goes at top of every file
; general
We use DeathWatch to automatically unregister endpoints Then the EndpointDeactivated is sent to the stream so ActivationTracker can notify those awaiting activation only after the unregistration
; general
No need just do as the comments that follow say
; general
Human brain doesnt deal with negation well And  operator is easy to missUnless is natural I admit might be more natural to native speakers
; general
copied as is but it will return seescala fwef take fwefindexOfres2 String
; general
as a good practice or there is another reason
; general
could be I think most of your comments will become tickets am I rightYes I also think that CamelExtension config would be a better place for this
; general
yepAlso I think I dont want AwaitActivationDeactivation to subclass it
; general
There is  you can not easily  create ActorPath from a string unless you want to go systemactorOfstringpath route but Id rather avoid that Also Ive moved some behaviour scattered somewhere else to be nicely encapsulated here The new version of this class looks like thatprivatecamel case class ActorEndpointPath privateactorPath String   requireactorPath  null  requireactorPathlength  0  def toCamelPath   actorpaths format actorPathprivatecamel object ActorEndpointPath  def applyactorRef ActorRef  new ActorEndpointPathactorRefpathtoString      Expects path in a format paths     def fromCamelPathcamelPath  String   camelPath match     case id if id startsWith path    new ActorEndpointPathid substring 5    case   throw new IllegalArgumentExceptionInvalid path s  should be pathactorPath format camelPath
; design
sure could doIf you looked up the history this method wasnt that short originally
; general
Because ActorProducer needs it
; general
Be careful here  producerconsumer thing depends on the point of sittingAlso outCapable is the name camel gives it so it would make things difficult if we gave it another name
; general
didnt get this comment Can you please rephrase
; general
What if I rename it to CommunicationStyle See response to your other comment
; general
Really It reads well here
; general
nop Its only used for automatic deserialization of endpoint inside of camelAlso I have rewritten it in the meantimeobject DurationTypeConverter extends CamelTypeConverter   def convertToTtype ClassT value AnyRef      requirevaluetoStringendsWith nanos    DurationfromNanosvaluetoStringdropRight6toLongasInstanceOfT    def toStringduration Duration  durationtoNanos  nanos
; general
consider migration package as a temporary junk  no need to review it
; design
to be cool
; general
Consider onhold as on holdThis classes havent been migrated yet and might never get We just borrow ideas from themThe changes there come from 13 RC5 and we should ask whoever made them why
; general
already moved to onhold in my fork
; general
Why whypreRestart needs it
; general
test kit doesnt buy me much here I happily use it in ActorProducerTest thoughI could use something like SharedCamelSystem trait here but not shared
; general
should be 1 second instead of 1 millis
; general
Dont know if it does
; general
Like something you put in your configuration file
; general
Well you did change the wording
; general
Create a ticket
; general
The message shouldnt need a CamelContext remove it
; general
Thats fine but we employ the BoyScout Rule
; general
I hope he is
; general
So why is it a WeakHashMap if you already use the DeathWatch
; general
I get the point I just dont think its worth it since it creates more line noise and introduces overhead in terms of allocations and calls
; general
Return type of methods
; general
Yeah open ticketsI also think that the config should be in the Extension
; general
Why not systemactorForstringpath
; general
As I said compcamel should do just fine no need for an extra camel here
; general
Oh sorry meant Add parens to the method ie def createProducer
; general
Very good point makes sense with the distinction here Perhaps something like replies or responds
; general
Examples should be general guidance if this is not the recommended way of creating children then we shouldnt have it in the examples
; general
If noone is referencing actorRef assuming there is only one actorRef instance pointing to an actor then there is no need to keep the state machine for the actor Remember that someone might want to wait for deactivation long after the actor is dead so until there is a reference to an actor we need to keep the ActivationStateMachine for itObviously it would only work with local actors but we should only support local actors in camel module and if someone wants remote actor they should add a local proxy actor
; design
If there are no references to it it means that its been terminated if it has been terminated then DeathWAtch has been triggered No need for WeakHashMap
; general
Should I add that work here or wait for this to pulled in first in akka and create a pull request from there
; general
piotrga this reminds me of something
; general
We need to hookup the akkacamel build to the AkkaBuild stuff I saw there where formatSettings there
; general
Well I didnt But now Im looking at them Just again a question Can the code of Producer be accepted as is so I do a pull request on akka repo or do I fix it in piotrs repoThe context is a val so I think so  val context      val ctx  new DefaultCamelContext    ctxsetNameactorSystemname    ctxsetStreamCachingtrue    ctxaddComponentactor new ActorComponentthis    ctxgetTypeConverterRegistryaddTypeConverterclassOfBlockingOrNot classOfString BlockingOrNotTypeConverter    ctxgetTypeConverterRegistryaddTypeConverterclassOfDuration classOfString DurationTypeConverter    ctx
; general
Ray proposed tryfinally but I didnt like it
; general
Viktor I was thinking along the same line just using the akka as the indicator for the akka actor camel componentIn the docs it refers to clustered actors tbd as cluster which would then not work well the actor part would take that problem away but I for one would rather see akka as the camel component protocol but then you would have to change the cluster part to be consistent here
; design
code onhold should not be in the pull request
; general
its not in the srcmainscala or srcmaintest path so it will not even be compiled But it should not be part of the pull request
; general
You are right  I remember nowApplication is user application so in this case autoacknowledged is systemacknowledged so the comment would not make sense unless systemacknowledged meant acknowledged by user application which would be weirdYes this needs clarification
; general
Yes but how It needs it for conversionsAt some point I added factory methods for message to CamelExtension so messages could only be created from camel instance which should be available from every actor I dropped it  cant remember whyI can reinstate it Good idea
; design
code onhold should not be in the pull request
; general
Maybe a good idea to go back to the way Martin did it in the beginning the context was not part of the messages before I think he used some implicits etc
; general
And those factories indeed
; general
automatic formatting perhapsor my fingers in autopilot mode
; general
Lets say we use normal map and remove STM after the actor terminatesWhat do we do if someone is awaiting activationcase 1  actor hasnt been started and registered yetcase 2  actor has been terminated and we removed the STM from our mapIn both cases we have no information about activation In case 1 we have to wait on the other hand in case 2 we have to respond with EndpointActivated message What if someone is awaiting deactivation In case 2 if we remove the STM from the map after termination we can not determine wether the actor hasnt been deactivated or simply hasnt been activated yetWhat say You
; design
What if instead of the line noise we look at it as a form of abstraction We like clear abstractions dont weScala gives us powerful abstractions like higher order functions for collections  noone says its a line noise
; general
Re allocations and calls  inline baby
; general
Ok  I take itForgive my ignorance  whats wrong with starting children that wayIs this violating the rule of not sending behaviour to an actor
; general
wrong  the changes are probably some autoformatting thing in IntelliJ
; general
and here it should be 100 millis  we dont want to make test slow
; general
He was using camel context singleton in the beginning so this is a nogo
; general
I think Viktor was asking if getEndpoint is threadsafe Also is it idempotent and fast enough so restarts can be quick
; general
object Tst extends App   val ITERATIONS  1000  1000  1000  var i  ITERATIONS  var v  0  i  ITERATIONS v  0  printlnIf took time    whilei0      if  i  2  0 v  v 1      i1        i  ITERATIONS v  0  printlnUnless took time    whilei0      unlessi  2  0v  v 1      i1        i  ITERATIONS v  0  printlnUnless2 took time    whilei0      unless2i  2  0v  v 1      i1        i  ITERATIONS v  0  printlnIf took time    whilei0      if  i  2  0 v  v 1      i1          def unlessAcondition Booleanblock    A  if condition block  inline def unless2Acondition Booleanblock    A  if condition block  def timeAblock   A  Long Long     Systemgc    Threadsleep1000    val memory  RuntimegetRuntimefreeMemory    val start  SystemcurrentTimeMillis    block    val duration  SystemcurrentTimeMillis  start    duration memory  RuntimegetRuntimefreeMemory1024  Full GC 13919K539K63424K 00175747 secsIf took 1272324Full GC 1528K518K63424K 00134099 secsUnless took 1290384Full GC 1227K517K63424K 00134961 secsUnless2 took 1272384Full GC 1566K523K63424K 00139020 secsIf took 12500
; design
Yes it can be optomized I veto it though since youre replacing a singlecharacter pillarstone of logic programming and replacing it with 6 characters
; general
looks nicewould have been even nicer without the double Bar but I guess that is the problem you mentioned
; general
If I drop it I get error fileUsersviktorklangDocumentsworkspaceakkaakkaakkaactorteststestcompile javalangError trying to do lubglb of typevar TNot sure I can fix it we probably need a type mage for that
; general
you will have merge conflicts here
; general
perhaps an import of akkaactorTypedActorTypedActor
; general
I think the style guide say that parameters like this should start on new linecase class TypedPropsT  AnyRef protectedakka   interfaces SeqClass
; design
why would one want to use withTimeoutNone when default is None
; general
why would one want to use withLoaderNone when default is None
; general
def ft TypedProps  twithTimeoutNonewithInterfaceclassOfKickAss
; general
looks a bit strange to match here since it is plain ifelse
; general
I think that is a not very common usage and for that you can do tcopytimeout  NoneWe dont have that for other things like dispatcher I think it only pollutes the api
; general
I like to have resetters also copy doesnt work for Java
; general
not a big thingWhat about propswithoutTimeoutorpropswithDefaultTimeoutNow you need to methods for javascala anyway
; general
It looks like it that fails before this succeeds the promise will be completed with the failure Is this intentional or should register take both futures as args instead of hardcoding that
; general
is it intentional that if that also fails p is never completed I as a user would not expect that kind of behavior
; general
What would you expect The failure of the first or of the second
; general
Doesnt systemactorOfPropsempty work better
; general
Use same approach for line above
; general
Is this user API If yes then it needs to be document if it isnt that needs to be documented
; design
works the same but will change to the cleaner variant
; general
you mean Optiondispatcher getOrElse thisgetClass Sure
; general
use case is already documented below will add more here
; general
No I meant doing it like the ifcheck
; general
dead comment FIXME TICKET or REMOVE
; general
feels a bit inconsistent in the naming one with akka one without Rename sourceThread to akkaSourceThread or use use sourceThread and source
; general
I might be wrong but doesnt this mean that if I doLoggingsystem myownloggingcategorythe logClass will be javalangStringwhich will be used for creating the slf4j loggerI think that we shouldnt use logClass ClassInstead it should be a String so that myownloggingcategory can be passed all the way to the event listener
; general
doh forgot to reenable only commented out to ensure that we are not using it ourselves because I wanted all logging to include system name if possible
; general
hmm leaning towards the former But sourceThread sounds more akkaindependent than our completely selfbaked logSource mechanism
; general
Yes it means that if you supply an ActorSystem you get it appended to the string If you dont want that supply a LoggingBus ie systemeventStream Will make docs more explicit in this regard
; general
yes it can be good to prefix them to avoid name clashes because in the end its just an Map and applications may define same in their own logging infrabut on the other hand since we force people to use sourceThread instead of ordinary thread in their appender config they might want to adjust their own logging infra to use MDCsourceThread as well if they dont want to include both thread and sourceThread in the appender configdoesnt really matter as long as we have consistency
; general
so you mean LoggingsystemeventStream myownloggingcategory will end up with SLFLoggerFactorygetLoggermyownloggingcategorythen Im pretty happy but it feels a bit confusing to sometimes useLoggingsystem this and sometimesLoggingsystemeventStream myownloggingcategorybut I have no other suggestion than documenting it then
; general
weeell I actually liked the more concise formulation better If this ever becomes a hot path well have other problems
; general
I agree with Roland this is in a Spec
; general
Okay the argument that sourceThread is forced on them tips the scales towards keeping everything as is and writing more docs about it
; general
I think I prefer import orgjbossnettyakkautil Timer TimerTask HashedWheelTimer Timeout  HWTimeout
; general
I think the message should be delivered but the task shouldnt be rescheduled otherwise theres a semantic difference between schedule once
; general
Would it make sense withnew TimerTask with ContinuousScheduling with Runnable   def run  f  def runt HWTimeout     dispatcher execute this    scheduleNexttimeout delay continuousCancellable
; general
replace isCancelled with cancelled  delegateisCancelled
; general
I totally agree just copied the code as it was but I thought of exactly thisOn Jan 13 2012 at 2028 viktorklangreplyreplygithubcom wrote   def scheduleOncedelay Duration receiver ActorRef message Any Cancellable      new DefaultCancellablehashedWheelTimernewTimeoutcreateSingleTaskreceiver message delay    def scheduleOncedelay Durationf  Unit Cancellable      new DefaultCancellablehashedWheelTimernewTimeoutcreateSingleTaskf delay    private def createSingleTaskrunnable Runnable TimerTask      new TimerTask        def runtimeout orgjbossnettyakkautilTimeout  dispatcherexecuterunnable    def scheduleinitialDelay Duration delay Duration receiver ActorRef message Any Cancellable       val continuousCancellable  new ContinuousCancellable     val task  new TimerTask with ContinuousScheduling        def runtimeout HWTimeout           Check if the receiver is still alive and kicking before sending it a message and reschedule the task         if receiverisTerminated            receiver  message  I think the message should be delivered but the task shouldnt be rescheduled otherwise theres a semantic difference between schedule once    Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull214filesr351951
; design
I guess so looks more clean thxOn Jan 13 2012 at 2031 viktorklangreplyreplygithubcom wrote    private def createSingleTaskreceiver ActorRef message Any TimerTask      new TimerTask        def runtimeout orgjbossnettyakkautilTimeout          receiver  message   def scheduleinitialDelay Duration delay Durationf  Unit Cancellable       val continuousCancellable  new ContinuousCancellable     val task  new TimerTask with ContinuousScheduling        def runtimeout HWTimeout          dispatcherexecutenew Runnable  def run  f   Would it make sense with  new TimerTask with ContinuousScheduling with Runnable   def run  f  def runt HWTimeout     dispatcher execute this    scheduleNexttimeout delay continuousCancellable       Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull214filesr351964
; design
WhyOn Jan 13 2012 at 2035 viktorklangreplyreplygithubcom wrote class DefaultCancellableval timeout orgjbossnettyakkautilTimeout extends Cancellable     Wrapper of a orgjbossnettyakkautilTimeout that delegates all   methods Needed to be able to cancel continuous tasks   since they create new Timeout for each tick   privateakka class ContinuousCancellable extends Cancellable    private var delegate HWTimeout     private var cancelled  false    privateakka def initinitialTimeout HWTimeout Unit  synchronized      delegate  initialTimeout       privateakka def swapnewTimeout HWTimeout Unit  synchronized      val wasCancelled  isCancelled  replace isCancelled with cancelled  delegateisCancelled    Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull214filesr351980
; design
Its either that or rewrite it as lockless
; general
imports at top of file is normally something I just want the IDE to take care of and Eclipse doesnt do this kind of multiimport but I have changed it for you
; general
second thought there is no need for atomic update of the 2 fields changed to plain volatile
; general
Id prefer eithercase X  Yor having an empty line between each case statement
; general
Id advice not to use a Symbol go with a String or a case object
; general
Id advice not to use a Symbol go with a String or a case object
; general
Id advice not to use a Symbol go with a String or a case object
; general
Id do this in a finally block since socketclose might throw up
; general
Strongly preferdef sendBytesbytes SeqByte flags Int Unit  socketsendbytestoArray flags
; general
This looks fishy Id rather haveprivate def pollAndReceiveFrames Unit  if currentPollisEmpty currentPoll  newEventLoop
; general
You should definitely not capture context in the closure
; general
Users might want to have this configurable
; general
I dont think you need to check that youre entering a race
; general
Big nono writing to mutable shared state
; general
Drop the extra braces please true for all of the same cases below
; general
Why is this commented out
; general
Shouldnt this be configurable
; general
Error message should include which versions are supported
; general
Otherwise very much like Computer says no
; general
this is just the timeout for the reply of creating the socket
; general
but I can make it configurable
; general
it seemed neat to make it a system actor but it doesnt need to be
; design
People using unsupported internal API is a huge failure for me personally if you dont need it please just use normal actorOfThanks
; design
This should not be added to referenceconf of akkaactorakkazeromq should have its own akkazeromqsrcmainresourcesreferenceconfIt will be merged with the systemsettingsconfig automatically
; general
Use your own log instance for this so that the logSource is correct not the systemval log  Loggingcontextsystem this
; general
what happens during a restartany need to unregister the previous socket
; general
use contextsystemdispatcher instead same thing
; general
I think it needs to be unregistered and the way its written now you wouldnt be able to survive a restartThe socket options need to move from being messages received to be part of the parameters instead I thinkBecause I wouldn be able to restart the socket but I wouldnt know whether I should bind it or whether it should publish Also all the configuration would be lost as they are all sent through messages to the actor right
; design
I think an explicit return type would make it easier for readers
; general
Would it be a better idea if this method returned Props instead of an actor ref That way the user is in control of the path to the socket actor
; design
Maybe or pass the name as parameterso this is a public apithen Im in doubt that pollDispatcher should be a OptionDispatcherI think that should be a OptionString and you do the systemdispatcherslookup here to align with other api such as PropswithDispatcher
; design
You dont need to do AcceptWithOptions just instead of having the empty Seq as a defaultparameter create a new constructor that has 2 parameters and that delegates the empty seq to the 3param constructor
; general
I started down that path but migration manager flagged that things likecopy and unapply would no longer be compatible I dont think any clientcode should be doing that but who knows Should I go ahead and ignorethoseThankssRpOn May 8 2012 328 PM viktorklang replyreplygithubcomwrote         val socket  SocketHandlesocketOwner ioManager        ioManager  Acceptsocket this        ioManager  AcceptWithOptionssocket this options You dont need to do AcceptWithOptions just instead of having the emptySeq as a defaultparameter create a new constructor that has 2 parametersand that delegates the empty seq to the 3param constructor  Reply to this email directly or view it on GitHub httpsgithubcomakkaakkapull438filesr790997
; general
No I meantcase class Acceptorig origval options   def this orig orig  thisorig origSeqemptyDoesnt that work
; design
I tried the following  case class Acceptsocket SocketHandle server ServerHandleval options SeqSocketOption extends IOMessage     def thissocket SocketHandle server ServerHandle  thissocket serverSeqempty  But the compiler fails withinfo Compiling 1 Scala source to homesrpgitakkaakkaactortargetclasseserror homesrpgitakkaakkaactorsrcmainscalaakkaactorIOscala254 ambiguous reference to overloaded definitionerror both constructor Accept in class Accept of type socket akkaactorIOSocketHandle server akkaactorIOServerHandleakkaactorIOAccepterror and  constructor Accept in class Accept of type socket akkaactorIOSocketHandle server akkaactorIOServerHandleoptions SeqakkaactorIOSocketOptionakkaactorIOAccepterror match argument types akkaactorIOSocketHandleakkaactorIOServerHandleerror     def thissocket SocketHandle server ServerHandle  thissocket serverSeqemptyerror                                                            error homesrpgitakkaakkaactorsrcmainscalaakkaactorIOscala253 ambiguous reference to overloaded definitionerror both constructor Accept in class Accept of type socket akkaactorIOSocketHandle server akkaactorIOServerHandleakkaactorIOAccepterror and  constructor Accept in class Accept of type socket akkaactorIOSocketHandle server akkaactorIOServerHandleoptions SeqakkaactorIOSocketOptionakkaactorIOAccepterror match argument types akkaactorIOSocketHandleakkaactorIOServerHandleerror   case class Acceptsocket SocketHandle server ServerHandleval options SeqSocketOption extends IOMessage
; design
Wow what a shame Then I suggest we push this feature in to 21 instead of 202 since we cant make it nonkludgy while retaining binary compat
; general
This worked no complaints from migration manager either not sure how clean itd be considered   case class Acceptorig orig       var options  Seqempty      def withOptionsopts Seq           options  opts         this
; design
A good effort but a mutable case class would be very confusing
; design
Oh youre right passing a mutable message is a really bad idea Ill go ahead and amend the patch for 21 instead of 202
; general
It should not be 22 And SNAPSHOT is volatile
; general
This is for 21x to notify people that use akkatcp that they shouldnt And 21SNAPSHOT will be replaced by the correct version by the release script
; general
why is matches better than
; general
It isnt Some bad habits pop up now and then Will change
; general
do we need this
; general
remove this comment
; general
I dont think we should define the node because we want different node names when running multijvm testsI dont know what is best to use hostport which will generate many many nodes or let multijvm set this for each jvm node1 node2 node3
; general
I dont know I just followed the atmos instructions
; general
yes indeed that was an oversight I used it to find out whether this file was being read at all since in the beginning things were not working
; general
the docs say that at least I should define the node how is it supposed to be done
; general
ah I hadnt noticed that this slipped in is it okay or shall I move this part to a different PR In theory it should not matter much
; design
in tests we use our own TestEventListener so this will not be used but its confusing to define it here
; general
its not needed for atmos tracing initself
; design
hmm I thought this would be merged with the TestEventListener need to improve my HOCONfu but if it is not needed then it should of course go
; design
Its supposed to define a logical name of the node for a production system so that you can move the logical node to another hostport and still compare with historical metricsThat is not something we need for our testsI think that if not defined it will use hostport as node name which might be good enough for us but that will mean that many nodes will be shown in the console since we use dynamic ports cc h3nk3
; design
no string lists are not merged how would you then override
; general
Shouldnt it be the other way around you enable it when you want to use it
; general
No because we always want to run all tests with it enabled etc Just because I verified that the AST does not change does not mean that I trust it without running the tests at all times Id also prefer not having to remember to switch it on when building a release
; general
I will agree with you if we run scaladoc everytime we compile as well
; general
running ScalaDoc has nothing to do with the class files we generate running genjavadoc does
; design
I would prefer to rename the property genjavadocenabled and check for false
; general
removing doublenegation is a good suggestion will do
; general
No shutdown anymore
; general
No there can never be any replacement We check for existence a couple of lines above
; general
Ummm this wont work as advertised wrt remoting Also an ActorRef can exist as an entity long after the actor is dead
; design
I have created a ticket for this httpswwwassemblacomspacesakkatickets2744We can release 21 without fixing it
; general
Great job thanks Patrik
; general
Why lazy val and why are we caching the configurator
; general
trait SupervisorStrategyConfigurator extends CreatorSuvervisorStrategy
; general
besides a coincidence wrt method name what does this buy us
; general
yeah I was keeping the spirit of overengineering will remove
; general
good catch thx
; general
harmgain doesnt do much
; general
It prevents us from having to worry about people extending them
; general
Having a common parent for all of our XConfigurators would be desirable right
; general
Why would that be worrisome They cant change the meaning of FQCN akkaactorDefaultSupervisorStrategy can they
; general
Should probably mention that its a OneForOneStrategyWhat number of restarts should it be configured with
; general
No but if we change the implementation we need to worry about name clashes etcThere is no reason to allow subclassing so we shouldnt offer it make it final
; design
okay got it
; general
That is not obvious to me ATM What would we use it for Also we have lots of Configurators and FactoryProviders and none of them extend Creator which is only used for actors anyway When would you want to abstract over the thing which is created
; general
WDYM there are now restarts oneforone was added
; general
param maxNrOfRetries the number of times an actor is allowed to be restarted negative value means no limit  param withinTimeRange duration of the time window for maxNrOfRetries DurationInf means no window  param decider mapping from Throwable to akkaactorSupervisorStrategyDirective you can also use a    Seq of Throwables which maps the given Throwables to restarts otherwise escalates case class OneForOneStrategymaxNrOfRetries Int  1 withinTimeRange Duration  DurationInfSince you use defaults youre saying unlimited restarts but thats not true since actors are either stopped immediately or escalated which in its turn stops the children right
; design
I just got the feeling that we were sort of reinventing Spring
; general
no because in that case we would abstract over the things we create
; general
You mean like a CreatorProvider
; general
This is the opposite of Spring In Spring you have abstraction over abstraction over abstraction A class has a base class that has a base class that has a base class that has a base class that has a base class that has a base class that has a base class that has a base class that has a base classund so weiter
; design
And the reason it dies from the Kill is due to the escalateIs it documented that Escalate on the user will kill everything
; general
kitten died here
; general
yes see httpsgithubcomakkaakkapull623filesL2R86
; general
ouch debug residue
; general
It would definitely be logical to pass uid into initChild
; general
Store away a boolean for this check inside the actor    val isSystem  contextselfpathname  system
; design
What about Fatals
; general
This closes over outerrootGuardianStrategy is this intentional
; general
or Long if that was intended
; general
no initChild is used from two places one which cares about uid and one which does not
; general
or better pass it into the constructor which Ill do
; general
Int it will be
; general
Fatals are not caught and thus do not fail actors
; general
This message seems a bit odd also if we get multiple Failuree AskTimeoutException we schedule multiple joinSeedNodeTimeouts
; general
the AskTimeout comes from ScatterGatherFirstCompletedRouterwill that send multiple Failures
; general
case Failuree AskTimeoutException is a very generic type of message and Id recommend wrapping it in something more domain specific if possible
; design
Or simply check the sender if its the router
; general
alright Ill try to break out this seed node joining to a child actor to make it more separated
; design
If that will make the code more awesome then Im all for it
; general
should not the seedRouter shut itself down after InitJoin instead
; general
possible to use receiveTimeout instead
; general
I can easilly implement this without ScatterGatherFirstCompletedRouter I tried to dogfood Why is it bad This is not performance critical in any way If ScatterGatherFirstCompletedRouter cant be used for this I think we should remove or rewrite itPatrik14 aug 2012 kl 1827 skrev Viktor Klang  notificationsgithubcom ScatterGatherFirstCompletedRouter
; general
Never mind me brainfartedNothing to see here move along
; design
I appreciate your comments and interpret them as the code is not clear enough so I removed ScatterGatherFirstCompletedRouter from JoinSeedNodeProcess Hope that is less confusing more straightforward
; general
Why this temporary val
; general
So we give up permanently after the seed node time out
; general
no retry is performed see L869this is in done state when we have received one ack it lives for one idle period of ReceiveTimeout to collect other InitJoinAck to not pollute deadletters
; general
I like the use of SGFCR Good thinking
; general
Interesting wonder what that link doesI have not updated it on my machine
; general
I guessed the link was to let Sphinx know about the Akka documentation style but maybe its not even necessary Do you have an Akka style defined in your system pygments style directory Maybe now it picks it up from the local akkadocs pygments directoryCertainly the old link is wrong since the themes directory doesnt seem to exist anymoreIll remove my link and see if the docs still build If they do then we can probably get rid of that line altogether
; general
Need for symlink to pygments style disappeared with 4cd2693340104d6d0bf5675e620924ab59a8afa9 Ill update the docs accordingly
; general
Are you crossreferencing this from the supervision and faulttolerance sections
; general
The Chicago Manual of Style says that titlecasing shall be done according to importance of each word and level is one of the more important ones in this title
; general
That is ugly anyway Screw Chicago the only good things that have ever come from Chicago is Michael Jordan and Chicago style pizza
; general
This is sooo good
; general
why the comma between shutdown and too
; general
Awesome page Exactly what I wanted Good job
; general
You also have to add a cross link from both httpdocakkaiodocsakka202generalsupervisionhtml and httpdocakkaiodocsakka202scalafaulttolerancehtml and httpdocakkaiodocsakka202javafaulttolerancehtml And in this cross link also add that the prefixesscopes user etc are explained there
; general
thats plain English just like the comma before a final yet
; general
This is realized by having the system guardian watch the guardianWhich one The User Guardian It is not completely clear for me
; general
would it make sense to remote this method altogether and call shutdownClientConnection instead its only used at one place
; general
if you remove this then isBoundTo is not called anywhere else are you sure you didnt break anything when removing this
; general
we should move the foreachshutdown to after the writeLock has been released
; design
I missed the isBoundTo cleanup Should have looked better I can only find two places where we put things into the map We use the same address that we just used to create the clients as key in the map and isBoundTo just compare the addresses This just seems like leftovers from some other implementation
; general
Maybe I thought the symmetry of bindClientunbindClient was nice
; general
Are you sure Because it checks if the RemoteConnections address is the same as the given address it doesnt check the key in the map hence the remoteAddress of the connection can vary from the key in the map no
; general
My previous statement was meant to show that I couldnt find any way for the key and the RemoteConnections address to differThey are always the same as far as I can see
; general
Ok if you are sure then you can of coruse remove it
; general
I think we normally do
; general
didnt we just do that a nanosecond ago
; general
Not necessarily We did that when we caught the InterruptedException but we might have kept on sending any number of messages since then
; general
should we clear AND rethrow
; general
does the nullness matter
; general
we should use remaining instead of timeoutduration
; general
Yes thats the java idiom By convention any method that exits by throwing an InterruptedException clears interrupt status when it does soWill add better comment
; general
No its residue from the old code will remove
; general
absolutely will change all cases in this test
; general
Thats not how we roll create an ADT
; general
crap added that in for testing debugging purposes for some messages I saw during the unit tests Will change
; general
Why was this moved out here
; general
use testActor as sender and expectMsg instead of Awaitresult  ask
; general
to make it idempotent the registrar still has to get the register messageOn Sat Nov 24 2012 at 727 PM Viktor Klang notificationsgithubcomwrote In akkacamelsrcmainscalaakkacamelinternalCamelSupervisorscala           parent  AddWatchproducer                 producerRegistrar forward msg Why was this moved out here  Reply to this email directly or view it on GitHubhttpsgithubcomakkaakkapull893filesr2215496 Raymond Roestenburgcode httpgithubcomRayRoestenburgblog httproestenburgagilesquadcomtwtr RayRoestenburg
; general
OK this test doesnt use TestKit yet will change
; general
Ok so it was just bitrot
; general
ListActorRef  Nil
; general
Well it did come in handy so Ill add some case objects
; general
Added ADT gives better warnings it did help me during the tests so would be better to keep
; general
This should be sealed
; general
Name is too anonymousgeneric
; general
Doesnt this really imply that this Actor ought to be a FSM actor
; design
No I mean its in the camelinternal package and is privatecamel since its for the ActivationTracker put in the ActivationTracer companion and make it privateActivationTracker The name StateStateName doesnt make sense to me if I just see it in camelinternal
; design
Yeah you could to it as an FSM it grew this way I guessRather leave it like this first create a separate ticket if you want itdone Ill look into it later thenOn Sat Nov 24 2012 at 836 PM Viktor Klang notificationsgithubcomwrote In akkacamelsrcmainscalaakkacamelinternalActivationTrackerscala   2212 2313  privateakka final class ActivationTracker extends Actor with ActorLogging        type State  PartialFunctionActivationMessage Unit        var receive State  notActivated        var state StateName  NotActivated Doesnt this really imply that this Actor ought to be a FSM actor  Reply to this email directly or view it on GitHubhttpsgithubcomakkaakkapull893filesr2215597 Raymond Roestenburgcode httpgithubcomRayRoestenburgblog httproestenburgagilesquadcomtwtr RayRoestenburg
; design
If we arent making this an FSM Actor now I think we should also omit theentire state thing I dont like partialadhoc solutions Do you agree
; design
Ok let me take the names out it was purely for loggingOn Sat Nov 24 2012 at 904 PM Viktor Klang notificationsgithubcomwrote In akkacamelsrcmainscalaakkacamelinternalActivationTrackerscala   2212 2313  privateakka final class ActivationTracker extends Actor with ActorLogging        type State  PartialFunctionActivationMessage Unit        var receive State  notActivated        var state StateName  NotActivated If we arent making this an FSM Actor now I think we should also omit the entire state thing I dont like partialadhoc solutions Do you agree  Reply to this email directly or view it on GitHubhttpsgithubcomakkaakkapull893filesr2215629 Raymond Roestenburgcode httpgithubcomRayRoestenburgblog httproestenburgagilesquadcomtwtr RayRoestenburg
; design
why not an implicit def
; general
No need for the extra braces
; general
No need for extra braces
; general
No need for extra braces
; general
What happens if resetStreamCache is called by one Thread as another thread is reading the body ie the same CamelMessage is sent to 2 actors
; general
yes that will not end well body is Any and can be whatever mutable nonthread safe instance so its not much we can do about itI would say that the recommendation should be that the user should convert the body to a real immutable instance in the first endpoint actor before passing it on to other actorsThis fix is still relevant because you expect to be able to call getBodyAs several times in same actor with the same result eg adding a debug log stmt should not break things
; design
On Mon Nov 26 2012 at 809 AM Patrik Nordwallnotificationsgithubcomwrote In akkacamelsrcmainscalaakkacamelCamelMessagescala   1087 10821  case class CamelMessagebody Any headers MapString Any        Java API                def getBodyAsTclazz ClassT camelContext CamelContext T  camelContextgetTypeConvertermandatoryConvertToTclazz body    def getBodyAsTclazz ClassT camelContext CamelContext T        val result  camelContextgetTypeConvertermandatoryConvertToTclazz body       to be able to reread a StreamCache we must undo the side effect by resetting the StreamCache      resetStreamCache yes that will not end well body is Any and can be whatever mutable nonthread safe instance so its not much we can do about it I would say that the recommendation should be that the user should convert the body to a real immutable instance in the first endpoint actor before passing it on to other actors That is definitely a best practice and people start doing that quitenaturally since the CamelMessage is hardly ever seen as part of the domainand the normal immutable messages are easier to work with This fix is still relevant because you expect to be able to call getBodyAs several times in same actor with the same result eg adding a debug log stmt should not break things1   Reply to this email directly or view it on GitHubhttpsgithubcomakkaakkapull894filesr2218705 Raymond Roestenburgcode httpgithubcomRayRoestenburgblog httproestenburgagilesquadcomtwtr RayRoestenburg
; design
you can drop such braces in matches
; general
Id say t Some instead
; general
This class should go anything not otherwise known is queued This way you can use the throttler transparently in front of any other actor otherwise the source of the messages would need to be adapted
; design
Sending messages will not throw we changed that recently so there is no need to be that careful here
; general
The queue size should also be bounded otherwise were looking at OOM quite easily
; general
Hm if you ment case EventSetTargett  Some d  then this does not work
; general
Okay simplified it accordingly
; general
So what happens when the queue is full How does Akka handle queue length internally I am asking so we get similar semantics For the time being I have not changed this
; general
Fixed good point
; general
We probably want to discuss this change which is compatible with how it was but perhaps not what we want later on The problem with maintaining the collections with ActorRef is that the registered ref might not contain the uid read actorFor
; general
more things that needs to be corrected in addrssingrst please read it
; general
This is an interesting one on a certain level your fix is wrong because at that level the test was always wrong since it was not that child which terminated but the previous incarnation However this points out the need for adding a warning to the docs since the previous precise match will lead to DeathPactException after a restart precisely due to the late arrival of the previous incarnations Terminated messageHmm Not nice
; general
I guess this will be fixable by making Terminated a system message and processing it in the prerestart incarnation of the parent this also means that we will have to document that DeathWatch then is not suitable as a conversion end marker anymore
; general
with three fields we now have four bytes unused within ChildActorPath so I think implementing the string length caching is 100 beneficial put in a val which holds the offset of where this path element begins relative to the beginning of the paths string representation then preallocate the StringBuilder with the right length and just paste the entries in using builderreplace
; general
this needs a comment in ActorCellnewUid so that nobody gets crazy optimization ideas which then break hashing
; general
strictly speaking the UID is not even necessary in the Supervise message anymore AFAICS
; general
once actorFor is removed you can only watch things you know for real at which point this change must have been reverted if we do not do this change then we must remove a wildcardwatched upon reception of a Terminated even though it does not match by ActorRef if the aforementioned strategy leaves a program broken then my intuition tells me that it was broken beforeThis leads me conclusion that this change should not be done
; general
shooting from the hip Id think that in light of my suggestion above this should turn into also replace a wildcardwatched with a precise one if the opportunity presents itself
; general
this should also only wildcard remove if the subject has undefinedUid
; general
too tired to figure out the rest of this file right now hence no comments
; general
the rule of the boyscout
; general
this should have a FIXME since the change will not be necessary anymore once having an ActorRef means having the UID
; general
will do so tomorrow
; general
Yes I have been thinking about this as well and I agree that it would be better to do it the other way I will try it out tomorrow
; general
in case ref ne null  uid mismatch you can directly return Nobody
; general
If it contains a uid is it really a path any more I think we should try to keep ActorPaths unbound to any particular ActorRef A lookup method can be used to get the current ActorRef
; general
How do we handle collisions My calculations possibly wrong suggest a 1 collision rate for every 10K calls to nextInt which I think is large enough to need consideration
; general
the collision needs to happen between the current incarnation and the previously obtained reference ie two calls and not 10000 but was this not discussed before
; design
And for the exact same path And I think it was discussed at the office and not online
; general
OK I didnt realise it was on the exact same path I assumed the uid would now be used to key actors within the parent but the actor name is still used
; design
Is this something were going to fix
; general
yes actorFor is going away for that precise reason
; general
No ActorRefs cannot be looked up which is why actorFor is going away ActorRef is bound to an instanceincarnation while ActorPath logically is just about the names ActorPath has also a physical function in locating an ActorRefbut this function is completely internaland hence it carries the UIDs In the mailing list discussion you linked to in another comment you make some good arguments why the UID should be stored together with the path foremost it boils down to that ActorRefs dont have parents
; general
for the record the discussion was at 4f258c7523c577e24568333a119d04c7c3e224cf
; general
Im not sure I understand what you suggest that I should do but I have noted that I should describe something about exact match in the migration guide
; general
I created httpswwwassemblacomspacesddEDvgVAKr3QrUeJe5aVNrtickets3156 to deal with this case you dont need to do anything at this place specifically apart from maybe a FIXME pointing to that ticket since when that is done this change should not be necessary anymore
; general
Id rather have something like asString or convertToString raw doesnt say anything imo
; general
What is the semantics of this method docs
; general
raw was inspired from URI but I dont mind changingtoRawString and toRawStringWithAddress could be moved to ActorRefWe currently only use them for serialization and therefore a name suggestion toSerializableRepresentation or toSerializationFormat
; general
1 to toSerializationFormat
; general
2 times doesnt  do not
; general
ie the child after the restart will be a different incarnation than the child before the restart
; general
use incarnation here that should also be added to the terminology section
; general
2 times doesnt  do not
; general
there should be a note between the ActorRef and ActorPath sections clearly stating the difference in meaning ie name vs incarnation Reusing Actor Paths needs some love as well ie its pathref will point to the dead letters
; design
Ah the elusive forward slash on Windows
; general
what if the the path contains spaces
; general
thats why scalacOptions is a SeqString it should just work especially with my fix to genjavadochttpsgithubcomtypesafehubgenjavadoccommit007bee9624bb813b8e6f58fff86026247a13ddfc
; general
that sounds awesome I was afraid it was string concatenation going on there as wellPgenjavadocout  t  java
; general
allRolesmapr  r  latestGossiproleLeaderrcollectionbreakOut should also do it
; general
Wow How does that work
; general
Yeah I want to know too
; general
Explained here httpstackoverflowcomquestions1715681scala28breakout
; general
Nice I might prefer to type that vs have roles be a String pertaining to a firmer definition of a Role
; general
Assuming on leave  roles
; general
What do you mean15 mar 2013 kl 1834 skrev Helena Edelson notificationsgithubcomIn akkaclustersrcmainscalaakkaclusterClusterDaemonscala     case ClusterUserActionDownaddress   downingaddress     case ClusterUserActionLeaveaddress  leavingaddress     case Exitaddress                     exitingaddress     case Removeaddress                   removingaddress     case SendGossipToaddress             gossipToaddress     case msg SubscriptionMessage          publisher forward msg     case msg GossipEnvelope                     receiveGossipmsg     case GossipTick                              gossip     case ReapUnreachableTick                     reapUnreachableMembers     case LeaderActionsTick                       leaderActions     case PublishStatsTick                        publishInternalStats     case InitJoin                                initJoin     case JoinToaddress                         joinaddress     case ClusterUserActionJoinaddress roles  joiningaddress roles     case ClusterUserActionDownaddress         downingaddress     case ClusterUserActionLeaveaddress        leavingaddressAssuming on leave  rolesReply to this email directly or view it onGitHubhttpsgithubcomakkaakkapull1254filesr3395567
; general
Curious how this would play out with clusters of clusters as a topology Say one would like to partition cluster A of clusters ABCD as a singleton role  cluster with each node instance falling within a range of akka port usage to lock down all nodes of a particular role for security Cluster B is deployed as a multirole cluster with 2 other roles Cluster C with yet another role another singleton role cluster How would one manage this if roles are not dynamic but hard coded is what I am getting at Id love to see a start up strategy that is dynamic typing roles with a few fields but have the role class a configurable FQCN that one can easily and probably would extend with akka providing the base traitimplI see a role as implicitly defining specific behavior vs just used for partitioning message routing Will talk more to this on dev list
; design
I guess since the node implicitly shuts down on leaving the cluster vs an autojoin that is onoff for manually leaving the cluster but staying operational means my comment is moot Disregard
; general
Yes I dont follow Anyway if the role of a member should be static notchanged after startupjoin or dynamic possible to change without restartis a question we are very interested in We have discussed it Its a loteasier to implement the static role assignment but we are curious to knowif there is a good real world use case for dynamic rolesPatrik15 mar 2013 kl 1854 skrev Helena Edelson notificationsgithubcomIn akkaclustersrcmainscalaakkaclusterClusterDaemonscala     case ClusterUserActionDownaddress   downingaddress     case ClusterUserActionLeaveaddress  leavingaddress     case Exitaddress                     exitingaddress     case Removeaddress                   removingaddress     case SendGossipToaddress             gossipToaddress     case msg SubscriptionMessage          publisher forward msg     case msg GossipEnvelope                     receiveGossipmsg     case GossipTick                              gossip     case ReapUnreachableTick                     reapUnreachableMembers     case LeaderActionsTick                       leaderActions     case PublishStatsTick                        publishInternalStats     case InitJoin                                initJoin     case JoinToaddress                         joinaddress     case ClusterUserActionJoinaddress roles  joiningaddress roles     case ClusterUserActionDownaddress         downingaddress     case ClusterUserActionLeaveaddress        leavingaddressI guess since the node implicitly shuts down on leaving the cluster vs anautojoin that is onoff for manually leaving the cluster but stayingoperational means my comment is moot DisregardReply to this email directly or view it onGitHubhttpsgithubcomakkaakkapull1254filesr3395995
; general
Sorry when I say Dynamic I refer to load time detection vs compilebuilddeploy time I should have been clearerHere is one real world use case As a  I need to bootstrap a singleton or multirole cluster     and deploy with Akka MicroKernel for quick IT testing cycles locally   with a servlet listener to deploy to tomcat in S3 to various devbetaprod etc environmentswith env variables that the node doesnt detect until loadtime begins optional hardcoding in config files optional dynamically detected from environment variables pushed by chef in the cloud vms would have differing env vars I have code running in the cloud that does this strategy already But having it standardized for bootstrapping roles via Akka would be cleaner and more integrated In my cluster I leave the environment variable to look for configurable in the akka conf file The biggest use case here is deploys to servlet containers in the cloud where for example the web module itself is a common sdk to bootstrap any app depending on what is deployed and what roles are detected to deploy
; general
helena users can override the config with Java system properties java Dmyappfoobar10  httpsgithubcomtypesafehubconfig
; general
Thanks for clarifying That falls into the static category with minedefinition Note that config library supports env variables sesection Optionalsystem or env variable overridesin httpsgithubcomtypesafehubconfigPatrik16 mar 2013 kl 1817 skrev Helena Edelson notificationsgithubcomIn akkaclustersrcmainscalaakkaclusterClusterDaemonscala     case ClusterUserActionDownaddress   downingaddress     case ClusterUserActionLeaveaddress  leavingaddress     case Exitaddress                     exitingaddress     case Removeaddress                   removingaddress     case SendGossipToaddress             gossipToaddress     case msg SubscriptionMessage          publisher forward msg     case msg GossipEnvelope                     receiveGossipmsg     case GossipTick                              gossip     case ReapUnreachableTick                     reapUnreachableMembers     case LeaderActionsTick                       leaderActions     case PublishStatsTick                        publishInternalStats     case InitJoin                                initJoin     case JoinToaddress                         joinaddress     case ClusterUserActionJoinaddress roles  joiningaddress roles     case ClusterUserActionDownaddress         downingaddress     case ClusterUserActionLeaveaddress        leavingaddressHere is one that may fitAs a  I need to bootstrap a singleton or multirole cluster    and deploy with Akka MicroKernel for quick IT testing cycles locally     with a servlet listener to deploy to tomcat in S3 to various   devbetaprod etc environmentswithout hardcoding in config files but rather via env vars pushed by chefto vms in the cloud Dynamic env variables that the app doesnt have untilloadtime begins is the use case I refer to vs static predefined in configfiles Sorry I should have been clearerIve written code for this already and could put up a pr to look at thisweek if there is interestReply to this email directly or view it onGitHubhttpsgithubcomakkaakkapull1254filesr3403512
; general
Yes I code functionality using Config and environment variables often quite familiar but thanks I think the distinction Im trying to make here is not hardcoding all settings into a war file ahead of time So if for instance roles could first be detected by env variable and if not found then read from config great I do this too so I know its a simple request
; general
My point was that even if you hardcode default config into the war it can always be overridden by sys props or env vars
; general
Id prefer calling this leaderOf
; general
ff  if
; general
this getOrElse looks wrong Address or None
; general
roleLeader MapString OptionAddressit might exist a role but currently there is no member with that role
; general
ah I confused it with a different method of the same name then on a different Class maybe call this one roleLeaderMap
; design
ok good suggestion then I can add the methodroleLeaderrole String OptionAddress which corresponds to the java equivalent getRoleLeader
; general
ok changed to breakOut
; general
undefined or empty
; general
yes undefined or empty is more correct I guess I was thinking that the user would not specify it and then it is empty by default
; general
This file needs to get deleted somewhere right
; general
Would it be possible to make this less specific to ScalaVersion and make it something like dealias or something that takes a keyvalue map for things to be replaces with something else
; general
not as far as I can see why
; general
It would be trivial to do so when the need arises the mechanism is established I cannot think of another usage right now so Ill leave it to the next addition to figure out the best name then
; general
close in finallyjust joking
; general
Given that the person realizes that this solution is just specific out of JITfeatureadd
; design
what we heard from James there are no actors in play 21 but Futures and actor system
; design
and if you change above you might have to change also
; general
Ill change both to built with Akka wink
; general
Id probably collapse these two lines
; general
Is Exception the most specific thing here
; general
Id probably not do it with failed and then Awaitready  value butval e  interceptAkkaCamelException  AwaitresultproduceraskmessagetimeoutDuration egetMessage must befailureeheaders must beMapCamelMessageMessageExchangeId  123
; general
Yes thats how the tests where written I can change to a specific TestException Thats probably much more robust
; general
You should switch to that approach for the rest of the tests that have the same structure as it is less code and less repetition
; general
Very nice catches
; general
Maybe Im missing something but I cant get that to work Youll have to show me later
; general
Do we need this separate construct If we publish directly to systemeventStream then the integration opportunities are endless
; general
yes that was my initial idea but when looking at it I got scared of its specialization for logging LoggingBus but if you say that is ok then Ill change
; general
I think we should try to use it if we get any performance issues etc we should address them in the eventStream so we give extra power to everyone
; general
makes sense Ill change
; general
fixed using systemeventStream instead much better thanks
; general
shouldnt it unsubscribe itself when in postStop
; general
What is the intended semantics for MembershipGossipChangedif you callpublishStatepublishState
; general
Possibly start the comparison by checking eq then check size then do the maps since they allocate quite some objects
; general
well I took the easy path first to just publish current state ie the whole GossippublishStatepublishStatewill result in two MembershipGossipChanged even though there is no changesIll do something better I think Gossip in itself is something internal which we should not publish instead I think we should publish things like real changesMembersChangedConvergenceChanged
; design
Yep I wrote that up in the ticket You didnt see that The Gossip does not help the user much We should do the diff and publish actual changes
; general
Yes Ill deexpose the Gossip but Im not sure its worth it to go allthe way to detailed change events such asMemberJoined MemberLeftI think the granularity of MembersChanged is good enoughOn Wed Aug 15 2012 at 917 AM Jonas Bonr notificationsgithubcomwrote In akkaclustersrcmainscalaakkaclusterClusterDaemonscala       if PublishStateInterval  DurationZero publishState      publishMembersoldGossipmembers          def publishState Unit        eventStream publish MembershipGossipChangedlatestGossip Yep I wrote that up in the ticket You didnt see that The Gossip does not help the user much We should do the diff and publish actual changes  Reply to this email directly or view it on GitHubhttpsgithubcomakkaakkapull617filesr1380314 Patrik NordwallTypesafe httptypesafecom   The software stack for applications thatscaleTwitter patriknw
; general
Im not sure that the changes is enough Problem is if someone starts listening just a ns after the initial MembersChanged then it will never get the full picture
; general
fixed that optimization
; general
We should make this more finegrained Detect the diff and only publish that change if any
; general
You mean like    MemberJoinedaddress Address    MemberUpaddress Address    MemberDownaddress Address    MemberBecameUnreachableaddress AddressIm not sure that adds much value but if we think it is useful I can do that also
; general
I think it adds value 1 Else the user needs to store away the old status for all nodes do a full diff to understand the difference then grab the changed nodes 2 The user will only be notified if there is an actual change he cares about ie only subscribe on the changes he care aboutWhy would this not be valuable And it should not be also but instead
; general
Should this be ever serialized
; general
Isnt this racy
; general
Probably not None of them should
; general
actually dissociate is fine
; general
I cant see how you would ever escape the deathrace with Disassociate Its for testing
; general
Yes I know that you like long words wink Need to reset my brain not to use dissociate
; general
Long words make you smart
; general
actually dissociate is fineBut I use disassociate everywhere else Shouldnt we stay consistent
; general
is is usually prefixed to boolean values
; general
Yes we should stay consistent
; general
Youre right Will change to joiningAddress
; general
clusterView will not be updated with Joining unless you refresh it There is no MemberJoined event any more
; general
Thanks it slipped my mind
; general
Some of them are sent Will leave SerialVersionUID on all of them
; general
Yes joiningAddress is ambiguous Settled for tryingToJoinWith
; general
the ask pattern implementation does exactly this check as well resulting in a failed promise to make it watertight would mean to have the PromiseActorRef watch the throttlerActor which means not using ask but a custom variant of it
; design
thinking about it some more I dont get this change it seems more proper to me to add a recover clause to deal with the isTerminated situation if it somehow does not really matter or to fix it for real as I suggest this code looks more like a leaky bandaidbut I might be missing something in which case it is lacking a comment
; general
So there are two things hereOne is that if we know that the actor is terminated then we can just skip trying to set it  since the throttle settings will be picked up when a new connection attempt is madeThe second is the race between ask and and termination which I think would be ok with a smaller timeout and a recover We basically assume that if we havent heard from him in X he must be dead and the settings will be picked up by the new connection attempt
; design
Ah sorry so the ask implementation does it for me then Ill just use recover
; design
I just followed the existing codebut I dont think NonFatal is really needed here Shall I leave it in or remove it
; design
I think you can remove it
; general
You might also use the TestTransport and its SwitchableLoggedBehavior to override the low level associate call and fail the test associateBehavior allows a become like operation
; general
Great idea Ill try that out
; general
and the reason should not be included in the error log
; general
why is it not needed
; general
Isnt NonFatale Blah redundant if Blah is NonFatal already
; general
eclipse scalariform will reformat this line because of the  and I will be blamed you can change it to  publishe stay
; general
The error logging here applies when publishing went wrong Is it safe to  refer to the reason then
; general
ok similar to that stack overflow when serializing Warning I thought of adding toString or message of it to the log message and that should be reasonably safe I think
; general
that is true but dont remove the last case NonFatale
; general
Yes I was unclear that I refer to the redundant pattern match The last  line must stay
; general
Hmm the only safe thing I can think of is logging its Class
; general
yeah was a huge wtf moment for me
; general
Why is this unaligned now
; general
please make a case class instead of using existentials
; design
why meaning we usually rely on automatic cleanup at the end of the test suite unless we have a reason to do it earlier
; general
deadlinetimeLeft can theoretically become negative here and Threadsleep boomWouldnt it be good enough to always sleepstep
; general
was it intended to change the  2 waiting
; general
Why isnt MAXWAITTIME defined as a Duration in the first placeMAXWAITTIME naming is not scala style
; general
Yes I dont want the backoff because it wastes a crapload of time
; general
it wouldnt if it were properly bounded against the deadline as you have now done since this is for tests exponential backoff versus straight polling does not seem to be a hot topic
; general
You should probably add the unit of size bytes in the error message Just to be sure
; general
any exception from serialization should be treated the same hence please wrap things which are not NotSerializationException in that exception before catching it again downstream
; general
you should also stop the actor
; general
please also verify that the reason was NotSerializableException similar below
; general
this waits three seconds one would probably be more than enough better yet send a marker message after the test and verify that you didnt get an error in between which will save some time when running the test suite
; general
the duration is already dilated in TestKit expectNoMsg
; general
any chance we can include some info of what message type that was rejected
; general
I decided to reintroduce a separate exception because the error now occurs in both reading and writing and I feel it happens at a layer below serialization alternatively could use DeserializationException for reader but it doesnt feel quite right
; general
Made nested class to access all the good stuff in EndpointWriter especially publishError
; design
no there must be another way nesting actor classes is asking for trouble eg accidentally accessing unsafe state in enclosing actor
; design
oh now I remember what that was which has been nagging me
; general
save one allocation
; general
Why not list the leader statuses and use filter instead avoiding inversions
; general
is there a reason for filterNot  forall and not forall xxx  yyy
; general
Yes Ill redo and skip the double negation
; general
nope will fix
; general
You might have to reword the boolean expr tho
; general
I would rename this to nonLeaderMemberStatus and then you can write nonLeaderMemberStatusx instead of nonLeaderMemberStatusescontainsx
; general
you should be able to use that Set in GossipleaderOf as well
; general
Yes I am using that in GossipleaderOf
; general
remove the cast please
; general
Well technically this only tests that the actor receives the messages in the same order in which it sends them Inte s spnnande
; design
Why send the messages from inside the actorPerhaps two different tests one sending from the outside and one from the inside from constructor like this
; general
ah looked at the whole file now I understand the purpose of it sending from the inside is smart I agree with Roland the msgs should be shuffled first
; general
Is this intended to be purely nondeterministic ie no seed I would recommend logging the seed then
; design
what is recvdo you mean i
; general
hmm any chance that this will fail with an infinite loop
; general
I see some inconsistency in the naming for setup and teardownbecome and unbecome are calls to perform something while whenFailing and whenRestarted are callbackssetup and teardown should perhaps be named whenSetup and whenTeardown to indicate that they are also callbacks or even better whenStart whenStop
; general
Good point Ill cap the sleep time by akkaactorcreationtimeout
; general
Also a good point I think I prefer whenStarting and whenStopping to make it clear that the callback is executed before that overall action is finished
; general
Here the double param list becomes both very ugly and unintutive Is this the best we can do
; general
no I was indeed able to remove it
; general
val echo  systemactorOfPropsctx   case x  ctxsender  x
; general
Can we get rid of the sleeps and use latches instead
; general
yes we can of course where was my mind
; general
That is wicked awesome Didnt know about it Is it in the docs
; general
Yes its been there since 20 its the shorthand syntax to create an Actor can be dropped now when Roland has created the more rich DSL for it
; design
The wicked awesome about viktors proposal is that the tell operation would use the wrong sender reference hence I think it should be removed on those grounds alone
; design
Oh thats even more wicked awesome
; general
IMHO its just as wrong as tellmsg uses the wrong sender reference But I think it should be removed when the actor dsl is doneAlso there has been 0 complains regarding this and much more regarding the missing sender of tell
; design
well missing sender is one thing wrong sender another
; general
Theyll be deadLetters in both cases wdym
; general
I mean if you use that idiom within an actor then that actor will be the sender which would be quite unexpected I guess
; design
Now THAT is a different story Looking forward to the PR
; general
Ignore my previous self I must have written that in some euphoric dilirium since receive and select block until its too late this cannot be done without sleeping
; general
I liked your previous self better
; general
I know but what can I do
; general
Big fat deadlock warning
; general
dont run this test on systems with webmin started OTOH no port is guaranteed to be free
; general
doesnt foreach look better than map for this
; general
and herealso different  usage than above
; general
use scala style for constant ie Address
; general
yes was just going to say that this should be a dynamic port
; general
should be closed in finally or afterAll
; general
Need to beat the JavaCC remains out of you
; general
needs to return an Iteratee
; general
foreach doesnt return an iteratee
; general
while this is already something wouldnt it be nice to expectMsgeof here
; general
Dont these messages have something in common
; general
Completely impossible to guess what this is for
; general
Dont use default params AND aux ctor
; general
So theres never any cause of invalidity associated
; general
Shouldnt this also be privateakka and documented to be internal api
; design
Shouldnt this also be privateakka and documented to be internal api
; design
Document as internal
; general
I think we ought to give better names to origCause and msg
; general
Avoid the closure for msgmapgetClass
; general
give better name to origCause
; general
Dont mix default param value with aux ctor
; general
Does this imply that all Throwables are serializable
; general
lots of repetition here can we improve on that
; general
why not used
; general
I think this is a slightly unorthodox method name which is way costlier than the name implies
; general
This has a tiny bit of smell to it
; general
Shouldnt this have a big warning sign plastered over it
; general
Quite illogical to suspend childrenNotToSuspend
; general
rename inResponseToFailure to causeOfFailure
; general
what are you getting at
; general
Realized it was in a test Would be nice if things in test were sort of colored differently from main
; general
not currently no same goes for ActorKilled and IllegalActorState Im leaning towards removing those causes as well
; general
That is also not present on the public for Java constructor and I think it would look weird to add it
; design
I just wish it was easy in Java to see that they shouldnt call it
; general
But on the other hand its not as if calling this constructor would immediately end the universe either Its more meant to give a hint that the origin of these exceptions is within Akka
; general
For msg Id propose optLastMsg but what is wrong with origCause
; general
also here Id just remove the cause since it was never used
; general
how about message and originalCause
; general
I made it messageOption as in headOption et al
; general
only those which were sent within Failed in the other direction already
; general
not without creating closures
; general
because before were even started we know for a fact that we cant have failed
; general
costly in which way it is done precisely to avoid allocations
; general
its that mossy smell in the forest when the sun shines through the rainbow onto the freshly fallen rain drops
; general
yes it probably should
; general
costlier in the sense of compared against a load
; general
changed to suspedChildrenexceptFor  skip  childrenNotToSuspend
; general
the resume is not the cause of the failure so Ill go with causedByFailure
; general
you are pretty generous with that flow thing  in this case its superfluous
; general
technically this also does not need a flow around it because it does not contain a Futureapply
; general
yes good one
; general
Have you tried this from Java codeI think there is a surprise when extending a trait In all other places where we have getInstance we extend and abstract class for this reason
; design
Im curious to know what good the final does here object cant be subclassed
; design
So what youre saying Write a test for Java on the usage of this object
; general
great then it was some other combination that breaks it
; general
better to use watch and expectMsg especially since isTerminated will go away
; general
info is not really used here more than checking for null Should we have provide SerializationhasTransportInformation Boolean or can we put everything into serializedActorPath
; general
The description in the rst docs must also be updated
; general
similar thing here and I dont think we should leak DynamicVariable into public api
; design
So were already leaking DynamicVariable in the JavaSerializer even if were subclassing it Do you have a suggestion for how you want to hide it
; general
ok if it cant be removed we can add def hasCurrentTransportInformation Boolean  currentTransportInformationvalue eq null but I was also thinking if serialization is always supposed to be done like this the check can also be implemented in SerializationserializedActorPath    val identifier String  SerializationserializedActorPaththeActorRef
; general
Yes we can definitely just have a boolean that people can check if they want to do something special for the non normal case since we do the same check in SerializationserializedActorPath
; general
you could construct this path only once upfront I only comment because you use two different methods for constructing it
; general
Does the last getOrElse statement make sense If getExternalAddressFor fails that means that we cannot communicate with that system anyway
; general
I would say that it means that if we cant communicate with that system using this protocol then fall back to the default protocol for our system
; general
Hmm ok that might make sense
; general
sselftestActor to be less confusing
; general
if this line would fail the line before has already thrown a TimeoutException or
; general
Yes of course Completely redundant
; general
Isnt ExtendedActorSystem enough
; general
no need for val
; general
Why isnt SerializationserializedActorPathactorRef hidden inside the SerializedActorRef ctor
; general
case SerializationInformationaddress null  originalSystem  pathtoSerializationFormatWithAddressaddress    case SerializationInformationaddress        val provider  originalSystemprovider      pathtoSerializationFormatWithAddressprovidergetExternalAddressForaddressgetOrElseprovidergetDefaultAddress
; general
Java Serialization is an ongoing nightmare
; general
It should be
; general
But I just realized that it doesnt convey the same meaning If the originalSystem is null I dont care about the matched value
; general
I think we normally place the INTERNAL API on the first line
; design
Dont we need to change this note also toSerializationFormatWithAddress and toSerializationFormat is no longer in the doc sample
; general
Great catch toSerializationFormatWithAddress is in the scala example but not in the java one Will fix
; general
this PR was only about the rename not finishing the UDP stuff Ill think about whether that warrants its own ticket or not
; general
updFFAnd it closes over this
; general
No these are messages between actors
; general
My understanding is that the doc is where it belongs right now these classes are not privateakka  scratch head  for some reason I cannot recall but they are for sure not supposed to be welldocumented public API Ill add a clarifying warning at the top
; design
Doc above says rootPath  not including any remote address information then how is this supposed to work
; general
Ah Ok this is an implementation only for the local provider
; design
update comment also
; general
Can we solve all those asInstanceOfInternalActorRef in some more elegant waySome implicit conversion that is only for internal use
; design
Since it seems to be used mainly for sending system message I think its good enough if we make an internal utility method
; design
Maybe watcher should be of type InternalActoRef Then no casting is needed
; general
selftellTerminatedactorexistenceConfirmed addressTerminated actor
; general
Good observation Endre
; general
match on type instead of extractor
; general
child ActorRefWithCell with ActorRefScope
; general
Dummy question but what should it be I have never used Java  serialization before
; general
It can be just anything Normally you start with 1L for a new class and then bump it when doing noncompatible changes
; design
Yep so then you can see how evolved the class is
; design
Thanks Me dummy
; general
Im not sure about the second condition by default preRestart unwatches the children which should get rid of Terminated messages during restart what this check means is that any watch notification will be dropped silently during restart which is probably not expected
; general
this should be addressTerminated  true
; general
this should not be done if the previous one was already done its a duplicate
; general
so Id prefer a match over foreach
; general
this line should not be so empty
; general
Thanks for noticing
; general
I think we should create a ScalaCheck checker here so we have better coverage
; general
What if one of the path elements is the empty string
; general
isnt this a correlationId
; general
Why is next Any
; general
This seems kludgy can we fix this properly in the rootGuardian
; general
no the request message has an message id and the correlation id is in the reply message at least in the terminology I use httpwwweaipatternscomCorrelationIdentifierhtml
; general
what else should it be in the end it is the application message that is sent via the ActorSelection
; general
Must be documented to be racy if called from the outside
; general
Just match on type and not extractor
; general
yes it is but I dont see how it can be fixed in rootGuardian SuggestionsIt might be fixable as part of the optimization to not pass those messages at all httpswwwassemblacomspacesakkatickets3073
; general
The user will ask how
; general
ops thanks fixed
; general
What about having OptionActorRef in ActorIdentity instead indicating unknownness
; general
Im sorry but neither the name of the field nor the type of the field says anything about what it will contain
; general
Is it some kind of Either
; general
I like that
; general
it is a linked list
; general
why first filterNot and then map sounds like a collect with a breakOut into an Array to me
; general
if this were public API then it might be EitherSelectionPath Any but that is only so slightly more useful that I collapsed it to Any back then also because of object allocation overhead since these beasts are created per message send
; design
this could be renamed to wrappedMessage or similar
; general
hmm would it not be more idiomatic to keep around the actual ActorRef and compare to that one
; general
Shouldnt this be a failure Is initialize called from anywhere else than just after creation of the actorRef
; general
Why are we merging the queues This behavior is different from a normal cell And why is the suspend count removed
; general
Nice This reads so much better than locklock try
; general
Shouldnt the null case be an exception That should never ever happen
; general
Roland asked me to rethink that question and yes the messages are of course handled correctly by the real actor later Would have been nice with a comment explaining that when we transfer the messages
; design
this is not atomic with swapCellunderlying might be null here someone else calls initialize and both are creating new UnstartedCell potentially overwriting cell that has already been started to be used
; general
remove val for all those parameters except uid
; general
I like this Feels better to not reorder the messages
; general
actually Id like to leave those val in where the thing to the right will be a field anyway which AFAICT leaves only props to be unvaled
; general
or what was the conclusion from the convention of privatethis val vs leading underscore again
; general
yes it would indeed feel better just one small problem CallingThreadDispatcher actor sends to itself from the constructor say three messages fails at the first message which will be processed in here but its Suspend message will only be dequeued after the other two have runSolution enqueue system messages which arise from this processing loop at the front of the queue ie after all system messages at the real frontUglyI lovehate that dispatcher with a passion
; design
val generates extra bytecode not as efficient as without the valprivatethis val generates same thing as without valI didnt hear any more comments regarding my objections to privatethis val vs leading underscore
; general
Having val somewhere in there says this will always be a field without it you will have to read the whole class body to find out Adding the underscore to props in this case is lighter weight Hmm
; design
but thats something the IDE should help you with mark occurrences all this just reminds me of a naming scheme using prefixes of different types of variables in java m  member p  parameter s  static so bad wrong those memories hurt  anyway as said earlier I will adopt to whatever we decide perhaps easiest to discuss it in the same physical room whole team some day
; general
Exactly that logicreason should have been present in a comment for that code
; general
There is a huge comment right above this loop and it explains it Hence I refute your claim
; general
Then I argue that its written in a suboptimal way since neither of you nor I touched this subject when we discussed rewriting it
; general
I submit that the reason was rather that neither of us bothered to actually read the comment It might make sense to describe the solution I proposed if you agree with it in great detail though
; design
Yeah Ill just add a boolean which will be protected by the lock and when its tru itll just insert system messages after the last system message in the queue
; design
but it would be nice if we could create the Mailbox in a notactivated mode and then drain the queue and then flip the mailbox on
; general
It is called by the guy who creates the ActorRef immediately after this just makes sure that if he calls it twice things dont get messed up
; general
see sendSystemMessage now
; general
I know but my point is that it doesnt always protect against that I think you should throw exc as suggested by Bjrn
; general
Yeah I have reconsidered I think you guys are right Lets do that
; general
Sounds like a perfect topic for the eng meetup
; general
isEmpty and hasNext doesnt have sideeffects I hope
; general
The ticket states In akkamailboxescommon and akkaremote the import for comgoogleprotobuf should have a version  eg version240250You changed zeromq
; general
mailboxescommon depends on remote I am no expert but that sounds like it should work for meZermomq also depends on protobuf
; general
But I might be wrong tho so Ill add it explicitly to mailboxcommons as well
; general
Isnt there a stray  in the line 10 TimeUnitSECONDS
; general
So if Im not mistaken this should only be an issue with long version like xyzRCX and cross CrossVersionfull which is only needed for Scala Milestones and RCs Doc for normal releases will look funky I think
; design
Why was this completely removed
; general
ok Ill revert linebreaks in this and similar dependency lines
; general
because it was a duplicate its already in faulttolerancesamplerst
; general
well that was done by Roland in the original fix for 204 and I can agree that the sample is too long to be included here Its included in the linked faulttolerancesample
; general
Ok thanks for the clarification
; general
this might need some  or caps or
; general
This will improve the performance for any mailbox type used
; general
Hey ChicoIve added something similar to Akka 20Cheers Viktor KlangAkka Tech LeadTypesafe httpwwwtypesafecom  EnterpriseGrade Scala from theExpertsTwitter viktorklang
; general
Hey cool Tell me when you make the commit so that I can point my project to the online versionCheersFrancisco
; general
Are you on 112 or current masterWill commit tomorrow at the airport going home right nowOn Jun 9 2011 308 PM chicofranchico replyreplygithubcomwrote  9527 9577  class LocalActorRef privateakka privatethis valactorFactory   Actor protectedakka def checkReceiveTimeout  cancelReceiveTimeout  if receiveTimeoutisDefined  dispatchermailboxSizethis  0 Only reschedule if desired and there are currently no more messages to beprocessed  if receiveTimeoutisDefined  dispatchermailboxIsEmptythis Only reschedule if desired and there are currently no more messages to beprocessed Hey cool Tell me when you make the commit so that I can point my projectto the online version Cheers Francisco  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull81filesr42071
; design
Im on 20 Planning to do some remoting stuff until the cluster comes outHave a nice trip back home
; general
Ive pushed my changes to 20 and 12ActorRefmailobxSizegetMailboxSize is removed in 20 and deprecated in 12Cheers
; general
Hey Many thanks for that Really appreciate it Keep up the good workCheersFrancisco
; general
On Mon Jun 13 2011 at 546 PM chicofranchico replyreplygithubcomwrote   9527 9577  class LocalActorRef privateakka privatethis val actorFactory   Actor      protectedakka def checkReceiveTimeout        cancelReceiveTimeout      if receiveTimeoutisDefined  dispatchermailboxSizethis  0  Only reschedule if desired and there are currently no more messages to be processed      if receiveTimeoutisDefined  dispatchermailboxIsEmptythis  Only reschedule if desired and there are currently no more messages to be processed Hey Many thanks for that Really appreciate it Keep up the good workYoure welcomeCheers Cheers Francisco  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull81filesr44059 Viktor KlangAkka Tech LeadTypesafe httpwwwtypesafecom  EnterpriseGrade Scala from theExpertsTwitter viktorklang
; design
So this was the missing path Nice work
; general
why does managementCommand take a Promise wouldnt it be better if it just returned a Future
; general
This promise juggling seems quite brittle whose responsibility is it to complete it Is it safe to call the exceptionthrowing success failure  complete methods etcHow about having setMode return a FutureBoolean instead and doing handlethrottlerActor  ManagementCommandmode
; general
you mean the def managementCommandthere is already one def managementCommand that creates the promise delegates to this one and return the futuresee Remotingscala
; general
I mean FuturefoldallStatusestrue   pipeTo sender
; general
I also think it is brittle but Im not sure ask will make it that much better but I dont see the full picture of all thisWhen I drewhk and rkuhn talked about the issue we decided that the promise should be propagated down but that can of course be changed
; general
I think ask can work here too
; general
Well of course sending something else than a plain boolean but just for the sake of things
; general
I have created and alternative implementation using askhttpsgithubcomakkaakkacommit760485163e9ccd8ea4b8de980962da37c29ab089Which one do you prefer Im on the fence
; design
that will be a global findreplace httpswwwassemblacomspacesakkasimpleplannerticket2879
; general
case naked handle  setModehandle mode direction statusPromise    case
; general
yes thats nicer
; general
what do you mean
; general
Id use mode here instead of reading a var
; general
ah the params of course
; general
ifmembersisEmpty empty else emptycopymembers  members
; general
hmm I find this style slightly confusing using named arguments which are not Booleans suggests that the others use default arguments this is kind of true but in fact this is a real singlearg method
; general
ok that is not important I can change back to the default argumentsit was that I wanted to replace all usages of Gossip with Gossipempty
; general
If you want to enforce that then you could make the members argument the first and be required and add the empty value for the truly empty cases
; general
yes that is good I will change thanks
; general
this parses weirdly for me how about idGeneratornext
; general
is the original sender of the delayedEvents not of interest
; general
is usage of this wraparoundsafe
; general
Iterator from 0 reads nice but its dead slow compared to something like this    var count  0    def nextId Int        count  1      count    if its used in a hot path in the remoting I think we should consider using the primitive id generator and perhaps go for long
; general
No they are coming from an interface anyway Transport
; general
then I think you should use tell with no sender propagating current sender with forward is misleading
; general
Yes thats true
; general
patriknw I think youre wrong here check the implhttpsgithubcomscalascalablobv2100srclibraryscalacollectionIteratorscalaL140
; general
ok then tell me what is wrong with this microbench    val idGenerator  Iterator from 0    def loop Unit        val t0  SystemnanoTime      var n  0      while n  100000000         idGeneratornext        n  1            printlntook   SystemnanoTime  t0  1000  1000   ms     n      idGeneratornext          1 to 100 foreach   loopcompared to    var count  0    def nextId Int        count  1      count        def loop2 Unit        val t0  SystemnanoTime      var n  0      while n  100000000         nextId        n  1            printlntook   SystemnanoTime  t0  1000  1000   ms     n      nextId          1 to 100 foreach   loop2on my machine loop takes  240 ms and loop2 8 msprofiler tells me that loop creates a lot of javalangInteger instances boxing
; general
hmm strange that it does not elide the allocation here I do like the nice syntax so we should maybe roll our own little thing possibly with Long and Int variants
; general
Yes thats actually what gave me any information at all about what had probably happened Maybe a more descriptive message thoughDo we have any preferred way to output test information that might be useful when diagnosing failures
; general
we should have a ticket for making the TestEventListener not print anything unless the test failed httpswwwassemblacomspacesddEDvgVAKr3QrUeJe5aVNrtickets3101
; general
Could you use for count  0 to rounds
; general
Is it impossible that loopDurationtoMillis is zero
; general
I would say so unless convergenceWithin returns a negative number
; general
now it looks like this comment is misplaced
; general
So this doesnt work httpstackoverflowcomquestions8699521anywaytoignoreonlyconnectionresetbypeerioexceptions
; general
getMessage is definitely localized I might try setting the locale for  the test to enUS and try getLocalizedMessage I dont have high hopes  though It also fails on scalable1 jdk7 build with a Swedish message so  it is not Windows specific at all
; general
Currently a magic number Sometimes you get Connection refused no  further information sometimes the message is slightly different I dont  know what the Swedish build will say to this but I could not find better  solution here It would be nice if I could expect the colon to be always  there but I dont know if this is guaranteed or not
; design
could you do a searchandreplace in the TcpConnectionSpec for upong and replace it with upon
; general
Yes but first I have to merge other stuff it was fixed in another PR
; general
I think we should put the ConnectionResetByPeerMessage in the test name so its easy to inspect what was tested even in success
; general
Couldnt we expand on this to send N packets to get more coverage
; general
Itas a bit WET needs a bit DRY
; general
why 100 ms
; general
Ah this should come from the RemotingSettings instead BackOff  parameter Thanks
; general
Why is this a val
; general
Isnt there a race between setting it writable and doing this write
; general
case DisassociateAttemptaddressATest addressBTest  true
; general
There is one 2825 I added already a comment to that ticket
; general
I dont see any
; general
Backticks are nearly impossible to get from my keyboard  But right that  looks better
; general
Ok inlining it
; general
A lot of repetition below
; general
listener1 and listener2 seems a bit too generic they obviously have a deeper meaning than that
; general
this snippet is duplicated below perhaps make it a method
; general
Just a tiny nitpick but if youre already rewriting these imports then I think its nicer to have all the akkaremote imports grouped together
; general
Is it possible for defaultWrite to take two named parameters rather than a pair Named params would avoid the params1 or params2 making it easier to understand the body of the methodThe partial application of defaultWrite in writeBehaviour could still be made to work
; general
Maybe use se map  case xxxx yyyy  if locaHandleinbound xxxx else yyyy  to destructure the tuple so you can give each entry a name
; general
Maybe mention ticket number in comment
; general
I took the opposite route and the ticket references the comment  But  yes I can add a link here as well
; general
No this is needed because it is a SwitchableLoggedBehavior that accepts  one parameter
; design
this would probably have been benefitted from a you must not ignore return value annotation in the sense of being found earlier but thats life
; general
This was ignored on purpose and there was even a comment about it Of  course the assumption was wrong
; general
Why does it require a HashSet
; general
Ehm why use Scala Actors
; general
This impl is weird Uses system identityHashCode for hashCode AND equals
; general
nope nonnegative is the correct one here
; general
also for ActorInitializationException which is the only change wrt the default which matters
; general
will these rejects not be sent directly to the router again
; general
No we changed that idea along the road
; general
is NonFatal to be used here
; general
the Bound should go to the original sender not to the handler
; general
Hmm Then we must be very careful to maintain or store the sender of the original Bind
; general
that  changes the story altogether
; general
0  positive 0  negative  nonnegative  nonpositivezero is not considered as positive as far as I know httpenwikipediaorgwikiPositivenumber
; general
no what I meant is do you really want to override the default behavior of killing the actor if it cannot be initialized
; design
which one is correct maximal or maximum
; general
Good question I think you can use eitherMy point was to establishing consistency between the bullet points in that all of them are nouns rather than a mix of nouns and verbs
; general
Actually according to this discussionhttpenglishstackexchangecomquestions38260maximumvsmaximal maximal is probably the better choice
; general
Id remove the injected as initial API clients and replace it with a prepended sentence like This IO implementation is meant to be generally useful and extensible feel free to improve on that its afterlunchsleepiness which keeps my brain from functioning properly
; design
please retain proper emdashes instead of latex pseudosyntax the right one for interjections is  shiftoptiondash on Mac
; general
this is a Germanonly comma I think
; general
ok no problemsphinx does convert  to endashs and  to emdashs though
; general
but it probably does not remove the surrounding whitespace
; general
Ah I see You want unspaced emdashes According to wikipediahttpenwikipediaorgwikiEMdashEndashversusemdash you are then following the US school of dash usage rather than spaced endashes which are more the UK way to goProbably makes sense since typesafe is incorporated in the states
; general
off  0N
; general
I think you have to do this for Java override def getsystem ActorSystem TypedActorExtension  supergetsystem
; general
Propsempty  no TODO
; general
why do you need this var I cant see that it is used outside of start
; general
what is the threading characteristics of this thing should these be volatile
; general
you only expect this once rightI think you should use become to separate the two different states
; general
you have reversed the order List might not be the appropriate collection for the buffer
; general
so for error you log two entries doesnt feel right
; general
your right I corrected not useful log in stop without correcting this thanks
; general
Thanks sorry for forgetting
; general
youre right forgot to move the first log in the second case
; design
thanks for that note I use Buffer then
; general
The name of this method is misleading
; general
for  log  logService sys  system  syseventStreampublishlog
; general
Youre speaking about the actorSystem or the LogService cause Im not the author of the ActorSystemI would say no it does not need to be volatile from wwwosgiorgjavadocr4v43coreorgosgiframeworkBundleActivatorhtml   The Framework must not concurrently call a BundleActivator objectBut its really good pointing that as most of the time I let akka manage the concurrency issues So thanks to tell me if Im wrong
; general
Is that really using the right ClassLoader
; general
The LogService is provided as a service from OSGiFor the CL question Im still thinking that wrapping  akkaactor and akkaosgi would be a nice thing and also avoid the CL problem here
; general
changed to   logServicegetlogeventlevelasInt messageFormatformateventlogSource eventmessageinstead of logging twice now log is done in the matchYoure too fast for me
; general
For me this is more directsimple than using SLF4J As long as this is only part of akkaosgi as wont work without an OSGienvironnement  this is just alternative
; general
ok better idea
; general
I guess Viktor reacted to the intern part of it
; general
you would not really need any of the two fields in the actor capture locals in the closures for each behavior and youre set that also lets you elide the Option wrapper
; design
thanks a lot really nicer
; general
thanks so it was mostly because I based this Actor on StdOutLogger It should save some memory in the case this string is used from different places but this is not expected here so I removed it in last commit  based on httpwwwcodeinstructionscom200901bustingjavalangstringinternmythshtml
; design
messagesToLog  logEvent
; general
here you should also unsubscribe to the eventBus
; general
what about the eventmessage for errors
; general
why not log same kind of things as in StdOutLogger timestamp eventlogSource eventthreadgetNameNote the two different cases for error with or without stackTrace
; general
now I remember why I had in my thought implementation also put the messagesToLog in a closure to be discarded
; design
is it conceivable to keep that LogServiceTracker running and dynamically adapt the actor systems logging output
; design
Sorry mistake in precedent correction
; general
Well I was using karaf for my tests which already gives a timestamp and other information I think I will add those informations tests it with OSGi Felix and then commit the changes
; general
I agree with patriknw but I dont get you rkuhn  what kind of event do you want to adapt to If it is bundlestop the ActorSystem is going to shutdown and shutdown the EventHandler Do you think about something else
; general
if the LogServiceTracker see that service publishing a change then it could send another LogService message to this actor in order to change the logging destination
; design
Good point Ill change the log service tracker to a log service listener which will advice the EventHandler on changes
; general
remove not needed
; general
use explicit return type such as  Unit
; general
note that errorcause will be object NoCause extends NoStackTrace when error logging without Throwableabove might not cause any trouble but you might consider to guard it with if eventcause  ErrorNoCause
; design
you can place this inside the initialisedReceive behavior
; general
def uninitialisedReceive Receive        var messagesToLog  VectoremptyLogEvent       def setLogService                case logService LogService  setLogServicelogService         case logEvent LogEvent      messagesToLog  logEvent
; general
which implies that you dont need to clear the vector it will be gced together with the behavior block
; general
I suggest running the test with custom ticks setting so we dont need to stall for 60 seconds to verify that it works
; general
Makes sense do you prefer updating pull requests with additional commits or should I squash the commits and submit a pull request on a new branch
; general
we actually tend to fix up such things by amending the commit and pushing with f github is smart enough to figure it all out keeping the PR history and comments intact yes gh is truly awesome
; general
argh just pushed an additional commit  sorry about that
; general
I think this should be located in SchedulerSpec instead
; general
I would feel more comfortable with 3200 millis
; general
the exact value is important here and I just dont trust doubles for exactness even though it is tested to work here
; general
Makes sense  I put it here because the previous test also exercises some HashedWheelTimeout behavior  Should that one move as well
; design
This fix just papers over the problem it does not properly root it out the underlying issue is that slipped timeouts are rescheduled unter the writelock after the wheelCursor has already been advanced which means that the readLock is taken by the same thread that holds the writeLock already breaking the assumptions about remainingRounds vs offset
; general
I actually think weve already approched the point where we should have the entire test suite for the scheduler as weve modified the original  too much to rely on its tests By extension if we need to add all the tests ourselves we should really rewrite this in Scala
; general
yes that sums it up nicely
; general
Slipped timeouts always get rescheduled with a nonzero delay so they never get put back in the same tick bucket  That is the slippage may cause them to be delayed by one tick but never by an entire revolution of the wheel  So I think this fix is valid and our testing bears out that it solves the problem  Though whether you want to bite the bullet and rewrite the HashedWheelTImeout in scala is a larger project decision
; general
re more extensive testing I dont see any kind HashedWheelTimer test suite in the netty code base either the 35 or 40 branches so this would have to be developed from scratch presumably starting from the existing test of long timeouts and the one in this patch
; general
Isnt this always needed in concert with serverSideChannelclose and if so lets just make a method to avoid the code duplication
; design
I think I covered all occurrences where it matters but making it a method  is a good idea
; general
Sounds good great work
; general
Should the 3 seconds be dilated
; general
sprotocoltransport protocols will be sandwiched on top of transports
; general
I think you need to clarify what a local sender and local reader is
; general
Its nice to show that we are dogfooding but we might also emphasize that it is intended for a more general audience
; general
Why extract child cause and uid here
; general
No need In fact it is dangerous as some of the names shadow field names
; design
Would it be possible to use a nullobject for FailedContainer instead of null
; general
So what happens if an exception has been thrown
; general
Needs documentation First needs to be virgin
; general
then we will not have dequeued the messages and will overwrite the perpetrator field thus losing the messages should be fixable in line 195 below
; general
what do you mean with virgin
; general
Sorry I retract that it will only write next conditionally
; general
The test isnt necessarily finished since the thread could have been interrupted by anybody Some better signaling and a loop might be in order
; general
It would be great if you could add information from findDeadlockedThreads to the dumpMaybe you should check if the JVM the test runs on supports the flags and operations used by calling things like isObjectMonitorUsageSupported so the dump code doesnt throw exceptions if it runs on a nonstandard JVM
; general
I think this should be dilated like other timings in our tests based on the akkatesttimefactor
; general
shouldnt it be called a Vigilante
; general
Only if it beats up the thread for misbehaving
; general
hmm lets see
; general
deadlinetimeLeft  DurationZero would also work
; general
but in fact Id recommend deadlineisOverdue
; design
this line is not correct testRunningLatch is not volatile and if it were then it would lead to NoSuchElementException on line 112
; general
Use a Timer instead httpdocsoraclecomjavase6docsapijavautilTimerhtml
; general
Use multiline string iso dualprint
; general
no not Timer its horrible incredibly easy to generate memory leaks with itUse this instead httpdocsoraclecomjavase6docsapijavautilconcurrentExecutorshtmlnewScheduledThreadPoolintbut I think current Thread solution is fine
; design
Memory leak You mean if the thread isnt shut down If so then the current solution is just as flawed But yes a ScheduledThreadPool is fine by me
; design
are these threads and what they hold on to released after the test
; general
not as far as I can see youll need to interrupt them to release them and our class loader
; design
no need to change but you could have used stripMargin to make the multiline string indention look nice
; general
Good catch but its a bit more complicated One of the future purposes of this test is to use it as long running test and then I mean long and therefore a lot of things are configurable such as approximate run durationsI think this must also be configurable in this test and the default value perhaps calculated from the sum of the other Duration settings
; general
I try to read this but cant really understand the change in ordering Is there something else that Im not seeing Could you please explain
; general
This line was concurrent with the future returnedlistenerPromisetryCompleteWithinterceptListenlistenAddress  upstreamListenerPromisefutureThis was not obvious first because it was called in an andThen block but  that itself does not enforce that interceptListen is completed before  finishing the future provided to upstream It just enforced that  listenerPromise was wired together with the result of interceptListen  before finishing the upstream future
; general
The andThen version has the exact same semantics as your proposed new version interceptListen will have been executed in full in both cases before the map is executed Hence there must be a different problem somewhere
; general
interceptListen returns a future and that is not guaranteed to finish  before the whole expression is completed
; general
oooh  yeaaah sorry youre right of course Damn but these Futures can be confusing
; general
Subtle one yes This implicitly implies the need for a better comment there
; general
maybe make it protected so that this trait is reusable as a template for similar implementations like the one you may have in mind
; design
These methods only exist in the private SecretAgent implementation so there would never be an opportunity to subclass  Or are you suggesting to pull them up into the trait as protected abstract methods
; design
then again much more would need to be protected  hmm
; design
Seems sensible to me
; general
There is no implementation in this right Isnt it better to use trait instead so that it becomes a java interface
; design
what is SecretDefaultAgent
; general
I think there is a typo here and we normally mark these kind of methods like          Java API      Factory method for creating an Agent
; design
BTW one more thing add a section to the migration guide also since it looks like we promoted the constructor for the Java API documentation
; design
It started as a trait but the compiler was unable to generate the static forwarder for the Java API create method in that case  This was the fix
; design
Must admit I prefer this form  I went with create because I saw we were already doing it for Duration  Plus it allows Java users access to the tiny bit of inference that their language affords
; general
oh yes right you are the alternative would be Agentscreate but I dont like that either
; general
yes it was not a complaint of the change just that it needs to be documented in migration guide since its a breaking api change
; design
ah thanks for clarifying
; general
Why a ReentrantGuard for this and a ReentrantLock for the one above How do they relate to eachother Is the any risk of deadlocking interleavings
; general
What is the purpose of this switch if were using the systemGuard anyway
; general
No real reason The ReentrantGuard seemed convenient so Ill change the cdtLock as well
; general
The suspendSwitch blocks normal message enqueues during cleanUp The systemGuard blocks system message enqueues
; general
Yes there is a possibility of an interleaving since I hold the guard over a too long region Will fix
; general
lets suppose that this succeeds just before this actor walks into the cleanUp section would we not have the exact same problem as before Now cleanUp is blocked on systemGuard and we are blocked on the ctdLock
; design
This is the section that I was talking about when answering viktorklang about lock interleaving Still thinking about itOTOH your example shouldnt be a problem since cleanUp doesnt touch the cdtLock of this actor
; general
My bad rkuhn Youre right
; general
return is verboten    systemQueueGet match       case null  NoMessage  null      case head  if systemQueuePuthead newContents SystemMessagereversehead else systemDrainnewContents
; general
no return please create an inner tailrec method instead that aborts on this condition
; general
this can now throw InterruptedException which previously for lock was not true please wrap appropriately
; general
Yes that is what Threadinterrupted does the important part of that comment is to describe why
; general
Is the recurse boolean really needed I only see a couple of places that return true which could call the line below
; design
I think you meant intEx here
; general
Absolutely Nice catch
; general
style suggestion    mboxsuspendSwitchfoldEnvelopenull
; general
no need for the ret
; general
The nesting and flags and var is a bit hard to follow here Do you need them for the tailrec or is it possible to call process from within the cases and get rid of recurse and intex
; general
They are unfortunately needed for the tailrec
; design
I think the distinction between null and NoMessage is confusing at bestCan we rename it to Tombstone or similar
; general
that will be done in the context of reworking the SysMsgQ ie by drewhk
; general
This has the distinct DNA of the Klang D
; general
nooo dont use nanoTime directly abstract the actual clock implementation out into a method so it can be stubbed out for tests
; design
Spidey senses go tingly here
; general
Batman has no parens this one should cancel
; general
override val resolution
; general
override val resolution
; general
warning multiple calls will be oppa gangnam style
; general
why is it a var
; general
What happens on InterruptedException here
; general
This Runnable needs hardening as not to kill the scheduler if theres a random exception happening
; general
This can throw RejectedExecutionException or other cool things
; general
Would probably prefer Runnable with Cancellable
; general
Cramming in features are we
; general
try removing it
; general
old impl does the same thing stop recurring when scheduler is shut down
; general
yes we need to talk about that
; general
yes good one
; general
okay Ill remove three lines then
; general
well not really this is the constant we take from the config the other is a derived quantity whose relation to this constant is about to change
; general
it blows up what are the requirements
; general
because it is used to communicate the intent of stopping the timer thread there needs to be some mutation going on and it needs three states
; general
wow cool   yes this needs hardening
; general
So what happen if you call stop multiple times
; general
what does this comment mean I prefer a distinct marker for tasks and I chose not to expose the meat of the task itself therefore the runDirectly method
; design
ah now I get you hmm too many Runnables nested here
; general
or cleaning up after others depends on the point of view
; general
The Rule of the Boyscout
; general
when Im done fixing that bug youll get back an already completed future
; general
As we talked about it should use an ExecutorServiceConfigurator so it can be managed externally
; general
can new tasks be added while this is being called and if so what is the intended semantics
; general
Apart from logging can some interesting property tested used the histogram values
; general
1000000l  1000000LI completely misparsed it at the first glance
; general
Document return value
; general
ticks  ticks  1  0
; general
I would rather read the comment
; general
1If we could implement pluggable clocks that are effective enough that would enable very interesting things
; general
is this enforced when readingusing the property
; general
also document what interface it has to implement and what constructor parameters that are required
; general
how is the SchedulerException handled I hope it is loglevel debug for this case
; general
why not let it go to deadletters as it would without this check
; general
ok here was the check is it the same for DefaultScheduler
; general
Im not a big fan of prefixing classes with the product name Akka
; general
I meant  of course
; general
why this dance with Map and JavaConverters    ConfigFactoryparseStringsakkaschedulertickdurationSchedulerTickDurationtoMillis ms
; general
Suggestions for a cool name a very welcome I changed it from Timer to AkkaTimer
; general
because it was not immediately deadobvious to me that that would work but you are probably right
; general
yes my idea with this was that we should be able to get some measurement of how reliable the timing is of each jenkins instance over time
; general
we need to stop rescheduling that timer
; general
but isnt this scheduleOnce
; general
The only reason we add this new scheduler is that we want to replace the old DefaultScheduler and akkautilinternalHashedWheelTimerjava The old has in practice not been part of the public api even though visibility modifier and doc annotation of that is missing Therefore I suggest to rename the old to LegacyScheduler or whatever and this new one to DefaultSchedulerAkkaTimer could be named akkautilHashedWheelTimer privateakka internal api
; design
The thing is that no hashing is involved in the new timer hence its more like a LamettaWheelTimer with all those lists dangling from the spokes Lametta is German I think the English word for it is tinsel My idea would be to backport it to 21 but then the Default needs to stay in and we just add a new one which is not selected by referenceconf
; general
WheelTimershouldnt it be privateakkaMy suggestion of DefaultScheduler would still be possible in 22 hopefully we can ship 22 without old schedulerFor 21 you can keep the old as DefaultScheduler and name the new one as ExperimentalScheduler
; general
yes good point was looking at the wrong thing
; general
no this is called after filling in the stopped Promise
; general
why is this not a forexpr To easier see which line fails If so please add comment about that
; general
Id numerate the arguments
; general
What happens if it times out
; general
using class as a FCQN config element isnt what we usually do
; design
Is there a test that validates the behavior when this throws an exception
; general
Its your name on the commit
; general
Could we group these a bit
; general
no isTerminatecheck here
; general
Do we really need to do this more than once
; general
How will this blockingcall help Youre creating a thread of your own
; general
Im assuming that the race between this line and cancellation is benign
; general
case null  CancelledTask
; general
that syntax has been deprecated right
; general
would be nice if there was a failure context which could hold the loop counter
; general
can you think of a better name I certainly didnt like akkaschedulerscheduler  which would match other uses like akkaactorprovider
; general
No currently failure to start the actor system will just abandon it in whatever state it might have failed in Making it clean up reliably is outside of the scope of this ticket
; design
but Im not the author Patrik found the reason in a different PR
; general
I thought I had done that but some reformatting or automatic importing must have messed it up again Will fix
; general
no why would there
; general
So you are arguing that a Float should be enough right
; general
yeah I guess that Schedulers will not be measured in bytes so will make a val
; general
OTOH that leads to all kinds of cast ugliness all over the place also for user code Double is the default floating point in Scala
; general
that syntax does not work for the comments which are the reason for writing it like this
; general
has it now  I didnt see any warnings
; general
then Ill take the full implementation
; general
True invalidly configured parameters in the old impl would also have had the same issueOpen a ticket for it
; general
We dont have authorship its everyones code
; general
Theres a semantical difference between this and the other then Ie check should be after send not before
; general
yes but if the machine does it then Im powerless I think Ill just make both cases multiliners
; general
No my point was to keep it as an Int or Long
; general
okay thats a good point
; general
nope can plausibly be between 0 and 1
; general
null  expired Cancelled  do the math
; general
Ok so lets not use trailing dot syntax use the D
; general
If it truly is in Hz just have 1000Hz or 10000000Hz or whatnot I still dont see the need for involving things that can be NaN
; general
I dont see a use case for less frequent than 1Hz can you come up with one
; general
viktorklang and bantonsson could you in particular have a look at this part is this how to make a timer thread reliable Or is it an atrocity for which well burn in JVM hellApart from this I incorporated all feedback so far and wrote some docs
; general
You might want to rethrow that t
; general
Yes that is true If that is the only problem with this code then Im happy
; general
You also have a race between threadstart and timerThread  thread
; general
Could you remind me why we have to allocate a new thread here
; general
We should only get fatal exceptions here which means that something is wrong with this thread if we want the Scheduler to try its best to stay alive I came to the conclusion that trying to start a new thread might be the last resort which will fail if the fatality of the exception was not localThe race you mention is between stopping and recovering and only for the Threadinterrupt purpose which is an optimization so it is not really relevant AFAICT
; general
Do we really want to create a new Thread on Fatal
; general
the alternative would be to die which is precisely why I wanted to have other opinions on this part the old impl just kicked the bucket BTW another possibility would be to try to shutdown the ActorSystem because that does not work in this case anymore anyway
; general
If that should be done then I think it should be done by the UncaughtExceptionHandler we register to all threads created by that factory wdyt
; design
no in general you cannot rerun a Runnable this way which means that that would be quite a special ThreadFactory in particular it would not be the default thread factory of the ActorSystem and it might not be applicable to all Scheduler implementations either so how would the Scheduler select this feature
; design
No I mean the UncaughtExceptionHandler should be the one which deals with Fatals and shuts the actor system down
; design
wouldnt it be better to include the println message in the thrown exception instead of println ie wrap the original exception
; general
what is the reason for the various strategies for logging here log previous println
; general
yes this feels wrong uncaughtExceptionHandler should handle fatals
; general
should this be public
; general
hmm SchedulerException is used for two very different things receiver terminated and when the scheduler is stopped When scheduler is stopped it is converted to IllegalStateException which is part of the contractFeels fragile I think you should use two different exceptionsAlso is SchedulerException ever exposed to users Make it private
; design
double format might look weird in the log output
; general
I think this inclusion to document the api is questionable especially in the java documentationIts two methods and I think it would be better to mention them here briefly and then refer to API docs for details yes I know its scaladoc but that is at least better than scala code
; design
actually the message send methods of the api is not included by include javaschedulerAs suggested document the api in another way
; design
no way to avoid this kind of  awaitConddefault4
; general
So I discussed this with rkuhn and the shutdown of the actor system in the uncaughtExceptionHandler needs the timer thread to be alive to work properly I really think that this thread needs to be handled specially
; design
Comment here that this is used during shutdown would be nice
; general
hmm systemlog is not always reliable but in this case Ill just wrap the exception
; general
no it should be removed  but will fix for now
; general
unfortunately not possible but protectedactor will suffice plus INTERNAL API comment
; design
it might also print 1000ms which did not look too wrong to me
; general
why would I want to avoid it here
; general
hmm thats a tough one I cannot really write that class in Java for real and writing a Java copy runs the risk of bitrotting as would documenting the method signatures translated to JavaWait a second I have an idea
; design
is that parsable by the config libthe outcome also depends on what values we actually use I bet we will not remember to change this if we change maxFrequencyeg 6666666666666667ms doesnt look that niceI suggest 1000  systemschedulermaxFrequencytoInt
; general
looks magic and fragile and eclipse doesnt understand it but if its not possible then just ignore my comment
; general
okay will fix
; general
its DRY otherwise I would have to repeat the default argument here and then wed forget to change that
; general
immediately following what
; general
Why function  match instead of partial function
; general
Looks a bit fragile
; general
Is the ordering important here ie is it fine to move this down
; design
that is not important but feels better to publish the instant events before the converged events
; general
um changed to     val isInstantMemberEvent  classOfInstantMemberEventisAssignableFromto    if classOfClusterDomainEvent  to  isInstantMemberEvent      publishInstantClusterStatesubscriber    if isInstantMemberEvent      publishCurrentClusterStateSomesubscriberTests cover this
; general
no reason at all  thanks fixed
; general
fixed spelled it out
; general
Yeah just in case of bounded mailboxes it could take time before we are completed here
; general
documentation doesnt say what happens if 0
; general
what happens if 0
; general
requesttimeout  timetolive
; general
What if 0
; general
no need to copy on contains
; general
no need to copy on contains
; general
This shuffle by using hashing doesnt work when there are collisions some will be lost when producing sendersWe should use a simple deterministic sort shuffle algorithm instead
; general
oops that was a complicated way of saying nodes filter  sender  receiverssender contains receiver
; general
ok not interested in other types of InstantMemberEvent
; general
yes heartbeatrequesttimetolive is good
; general
will never be the case but good principle anyway I will change
; general
collisions can be resolved by normal Address orderingCiaoRolandOn 16 jan 2013 at 0740 Patrik Nordwall notificationsgithubcom wrote In akkaclustersrcmainscalaakkaclusterClusterHeartbeatscala     INTERNAL API       Data structure for picking heartbeat receivers and keep track of what nodes    that are expected to send heartbeat messages to a node The node ring is    shuffled by deterministic hashing to avoid picking physically colocated    neighbors       It is immutable ie the methods return new instances     privatecluster case class HeartbeatNodeRingselfAddress Address nodes SetAddress monitoredByNrOfMembers Int       requirenodes contains selfAddress snodes nodesmkString  must contain selfAddress selfAddress      private val hashToIndex MapInt Int nodeRing VectorAddress        val nodesByHash immutableSortedMapInt Address  immutableSortedMapemptyInt Address         nodesmapnode  hashFornode  node This shuffle by using hashing doesnt work when there are collisions some will be lost when producing senders We should use a simple deterministic sort shuffle algorithm instead   Reply to this email directly or view it on GitHub
; design
Yes and that would dramatically reduce the number of monitoring links across data centers which I thought was a bad thing but I can be convinced that it doesnt matter or even is a good thingIn that case I suggest that we pick half of the neighbors to the left and half to the right That would result in more bidirectional links which would be good in the case of 3 data centersWDYT
; general
No you got me wrong only if the hashCode of two Addresses is the same do we sort them by their natural order This does not affect the probability of neighbors being in the same datacenter Choosing neighbors left or right also does not have any influence on this but it would be bad from a cycles point of view if everybody looks forward then cycles will be formed around the ring depending on whether or not the ring size is a prime etc if everybody looks forward and backward then most cycles will be of size two ie monitoring pairs watching each other mutuallyOn that other note I think it would make sense to make this hashing be skippable by configuration for those who want to prefer local monitors in Address natural order but that could also be a later addition
; general
This number 3 feels rather magic Should it be configurable
; general
ok got it
; general
Is there a reason why we need a hashToIndex instead of a binary search
; general
As clustering uses consistently one transport it is safe to omit the scheme part from the hash but it might deserve a comment here
; general
Be aware of 2690
; general
I prefer seeing the conditional on its own line otherwise it is missed too easily
; general
could it potentially happen that we still have isMonitoringtrue for someone who after a subsequent ring change stopped sending heartbeats and that that leaves us in a state where we dont send the request ever I have not yet fully grokked the rest of the code
; general
this section is basically unreadable it would greatly benefit from some white space
; general
AFAICS this would be more efficiently encoded using a TreeSet you wont need the addressToIndex mapping and could just use nodeRingfromaddrdrop1takenrOfNeighbors In Scala 210 that should be really optimized so Philipp told me
; general
of course you would need to fill up with nodeRingtakerest if the neighbors wrap around the seam
; general
I kind of agree but we use that style at many places search for this and you will see some of themdef if
; general
Im seeing this assumption cropping up in several places do we make sure not to let that invariant be violated Do we throw obvious errors in the users face if trying to join nonmatching clusters
; general
why not make more sure of that by blackholing on first immediately following the joinLatch
; general
It is designed to be covered by the resends When a node stops sending heartbeats it continues to send some EndHeartbeat messages which will remove it from the failure detector ie isMonitoringfalseWe also send a few HeartbeatRequest in case of message loss
; general
yes but I need to start somewhere
; general
is my intuition correct then that the worst case is that we declare a node unreachable in extremely convoluted cases when it actually is not
; general
sounds goodany reason for fromaddrdrop1take instead of slice
; general
good point Ill add a check when a node is joining
; general
that is not completely race free either why would it be better than a hard shutdownbtw this test is always failing with the old heartbeat strategy
; general
sure just tell me and I can change all of them but I cant promise that viktorklang will not change them back to earn some net negative points
; general
yes and it should be possible to adjust with the config ofheartbeatrequestexpectedresponseafterheartbeatrequesttimetoliveNumberOfEndHeartbeatsI see now that NumberOfEndHeartbeats is derived from other settings Ill change that to an explicit property to make it less magicThe StressSpec should generate nasty scenarios and detect unexpected failures and I have enabled some logging that should be enough to be able to diagnose this kind of problems
; general
youd have to find the index first might be similar in performance but a little less obvious try out both variants and make an informed choice ah and look at the impls there may be gotchas
; general
no what I meant is that you rely on the shutdown being soon enough after the join to test what you what to test you could make that a bit more reliable by dropping those messages because then it does not matter when the shutdown actually happens
; general
Ill ask this Klang guy to leave those lines alone then
; general
I actually agree here if it doesnt fit on that single line I think we might want to move them down to the nextGood point
; design
great Ill change them all over the place in a separate PR to make it a visible style decision
; general
ah yes it was a leftover from a debug session thx
; general
reader foreach contextstop
; general
How expensive is this
; general
What about wraparound
; general
Do we need time of failure or would it be enough to store a Deadline for when it is to be pruned
; general
A why would be nice to comment here
; general
GAAAAA Nooo Thanks
; general
Is there a reason why the notification goes out prior to the registration
; general
We use it during shutdown This whole structure is specific to this actor  and should not be used anywhere else
; design
We can go with Deadline
; general
It does not really matter here but it probably makes sense to move it  before the creation of the endpoint
; design
I dont see what inbound as a var buys us as a def it will be false when handle is set to None in the line above
; general
It affects lifecycle event logging which need to know the direction and  the inboundness of an EndpointWriter could change by a restart after  restart it could be only outbound
; general
why not ordinary MapAFAIK a Map is a HashMap when more than 4 elements
; general
so the race was around here looks good
; general
you dont need Long here it should also work with Int
; general
what is supposed to happen if registering two writers for the same address ie why is that not tested
; general
It is not the job of this structure to enforce that On the other hand it  makes sense to throw an exception in that case
; design
Do you think it is needed This is local communication
; design
I think it should be dilated doesnt hurt 3 seconds is not always enough on slow jenkins
; general
Great name change
; general
was this a bug previously or is the fact that the unreachable set can contain Down members a new
; general
The new thing is that I implemented the transition from Down to RemovedPreviously down members stayed in unreachable foreverA member is normally in unreachable when Down until leader removes it but its also possible to down a reachable member to skip the leavingexitingremoved steps
; general
okay thanks for the explanation
; general
Since were already returning a tuple why not return a Tuple3 with Stats included to avoid sideeffecting within the match
; general
No need for parens in the guard
; general
Do we prefer one style or the other
; general
I have never written a guard with parentheses so we might possibly not have that in the code base my preference is without
; general
is not a good operator since its already used for string concatenationwe have used  in other places in cluster code
; general
and then to be consistent this should be
; general
an alternative is to use withDefaultValue
; general
Thats what came to my mind I guess I could do overviewseengetaddressmap  versiongetOrElsefalseFeel free to suggest something better
; general
overviewseengetaddressexists  version
; general
Absolutely Will change
; general
Its cheaper to do     def totalClusterStats  resultsfoldLeftClusterStats  clusterStats
; general
Nevermind the old comment No need for toSeq here iteration over a Map is by tuples
; general
So perhaps something like    def formatStats String  if clusterStatsObservedByNodeisEmpty       else ClusterStats  clusterStatsObservedByNodemap case monitor stats  smonitortstats mkString n
; general
val lines  clusterStatsObservedByNode map  case monitor stats  smonitortstats
; general
Isnt this formatting quite inconsistent
; general
Yes this is why the scalariform in Eclipse does it this way
; general
I dont understand your comment Why did it create a newline for the extractor case but not a newline for the default case
; general
that was the point of my comment I dont know it is inconsistent and that is how it does it
; general
you mean swhybecause in your comment
; general
the why was the sarcastic piece sorry should have used XML markupAre we annoyed enough to file a ticket We have until now worked around by adding braces
; general
um Ill add braces around them  you should get rid of those old java  habits      setFailedchild Setchild
; general
at first I thought why thisthen I thought should be sclass nowthen I realized that there is a deeper issue we used to allow people to write logger configuration filtering on which kind of actor threw an exception this is not possible anymore since the parent does not know which actor instance was behind the failing ref unless we transport that in the Failed message as well Thoughts
; design
this is a change which needs to be documented it used to be that returning Escalate and rethrowing the exception did the same thing
; general
yes to not complicate it I have used the supervisorstrategy class ie the instance that performs the loggingI was also thinking about this and its good that you bring it upIm not sure how important that class filter is now when we provide a way to customize the logging of actor failures which we didnt had beforeThe fine grained logging configuration ticket is related httpswwwassemblacomspacesakkatickets1715
; design
wasis it documented that rethrowing the exception from the decider function means the same thing as returning EscalateThe reason why I added this was that some test failed without the logging If its important I can investigate which test it was
; general
Hmm it is not documented I think but we use it in tests somewhere I said this needs documentation because I think it is a good change
; general
Viktor just pointed out that users can do the logging in preRestart which even has access to the Throwable so we should just document it
; general
ok but I still dont really understand what the documentation should beThe only change is an extra logging which feels a bit wrong if rethrowing is normal because then it should be logged at the level handling the failurePerhaps this logging should only be done if e  cause and then this logging should log cause since e will be logged laterI will look again at the test that fails without this logging
; general
but that is in the child actor either we promote failure handling and logging in the supervisor or we scrap all this and do the default logging in the child actor as before but make it possible to turn off per actor eg failureLoggingEnabled property in ActorContext and document that custom logging can be done in preRestart
; design
lets keep the baby in the bathtub I meant that only as a future canned answer to someone asking for the failing actors class in the exception logging which I take to be a special case I just wanted to have a draft for that answer
; design
alright the failing test was here httpsgithubcomakkaakkablobmasterakkaactortestssrctestscalaakkaactorSupervisorSpecscalaL406I have changed occurrences  2 to occurrences  1 and removed this catchSorry I was a bit blind in making the tests pass
; general
good catch thanks
; general
Thinking about it couldnt we drop the akka part of the Address since you dont really have any choice
; general
Technically speaking it is part of the protocol stack In fact it is a  transport adapter although one that is automatically attached
; general
Which makes it boilerplateI vote for removing it
; general
In that sense the original akka field was also boilerplate I am happy  to change it though if everyone agrees
; general
Lets see what people say
; general
Power to the people
; general
Why use scalautilRandom and not ThreadLocalRandom
; general
case cancelled  expired
; general
why println and not log
; general
case as bs if as  bs  orderingcomparea b  0    case Down  Exiting  Joining   false    case  Down  Exiting  Joining  true    case   orderingcomparea b  0
; general
Can we avoid the repetition of the address parameters
; general
def leader OptionAddress       if membersisEmpty None      else membersfindm  mstatus  Joining  mstatus  Exiting  mstatus  Down                   orElseSomemembersminMemberleaderStatusOrderingmapaddress
; general
The code snippet above saves both copying to a new Vector then sorting that vector producing a new vector and then pull out the first item
; general
you describe a different ordering than Patrik here and I find Patriks more useful
; general
That was an undocumented feature but Im cool with that
; general
ah that usage of min is excellent  thanks
; general
exactly and Ill add the documentation    Orders the members by their address except that members with status Joining Exiting and Down are ordered last in that order
; general
should all these not be handled by stopping the actor system after the test
; design
Yes they are but at that point we have accumulated 51 threads Maybe Im being to eager to clean up
; general
ah okay maybe add so they dont accumulate to not send pendants like myself onto that particular hunt
; general
cant this be done in some afterEach or in a function wrapping bgetController usage
; general
ah right why didnt I think of that withController b
; general
Sorry about being so quick to merge I will fix this on the 21 PR and cherry pick it forward
; general
Nice netnegative PR
; general
no need for immutableSet PredefSet is immutable
; general
Really clean I like
; general
No need for creating an new collection members is a Set right    latestGossipmembers foreach       node  if localGossipmembersnode  nodestatus  Joining failureDetectorremovenodeaddress
; general
Why do the filter before the fold
; general
Would it be better to have allowed immutableSetAddressThen you operate on Address everywhere here and can also use contains instead of exists
; general
viktorklang I filter out the members that shouldnt be there from the starting map and then dont add them from the map I fold over Would it be better to just filter them out at the endpatriknw I thought it unnecessary to create a set of all member addresses just to use it for filtering Dont know which will be fastercostlier sequential scan vs hashcode calculation and object allocation
; design
Id skip the filter and instead do the check inside the fold to return the map unchanged effectively filtering them out
; general
you do rather many scans here so I would guess its better with the Set and it makes the function more uniform
; general
viktorklang I need to filter them both How would I do that in the fold
; general
patriknw Maybe youre right Ill change it
; general
patriknw Yes thats a great idea And also switch to mergedupdatedkey value instead of   Tuple2 to avoid allocations if possible
; general
I changed this around so that I fold over the allowed members and build up a the merged seen table instead No extra Set no unnecessary filter and lookups in Maps
; general
The statuscheck is probably cheaper to do before the members check right
; general
No need to make it an inner def IMO
; general
Yes its not that complicated will clean it up
; general
I think this val can be dropped and instead of hasUnreachable and allMembersInSeenHasLatest instead have    unreachableforallstatus  Down  membersforallm  seenByAddressmaddress
; general
this case should not really happen right I am not 100 certain but Id try it out and see what happens if you replace the RHS with
; general
So this is actually something that Im wondering about I absolutely think that it can happen since the version seen by a node can have traveled different paths and be conflicting But should I remove the clock like I do now or is there something better to do
; general
Yup so much cleaner Thanks
; general
Well now that you mention it wouldnt the clocks on a single node node always be ordered correctly since it does the merging locally and only add clocks that are fully merged I think youre right
; general
The seen table is updated by which version that host has told someone else about I dont see how one node can gossip out conflicting versions because before gossiping it will have merged them
; general
case EventTerminatedr  if r  readerorNull  publishAndThrownew EndpointDisassociatedExceptionDisassociated
; general
Isnt there a risk of silent issues here
; general
This should not be here this is specific to the TestTransport
; general
without it this test fails httpsgithubcomakkaakkablobmasterakkaremotesrctestscalaakkaremoteRemotingSpecscalaL139Let us verify that again but I think it had something with akkatest protocol not registered which is a good error to log
; general
No it does not mean that akkatest is not regisered  that would is  logged elsewhere This specific error message is the way of TestTransport  to tell you that there is no remote transport that listens to that  address This is an analogue of trying to connect to a port that no one  listens to
; general
ah then I misunderstood the error message Ill revisit that and probably have to delete that test or do you have a suggestion of how to test
; general
You might as well change the error message  You can listen to  AssociationErrorEvent as it will be published by the publishAndThrow call
; general
verified with Endre
; general
ssizesize in bytes
; general
or rather the number of bytes
; general
explicit return type
; general
explicit return type
; general
Any reason for Seq and not Set
; general
We just moved lines around here Not sure what the original reason was rkuhn Why would using Set be an advantage
; general
I dont think we should bake in stats into this
; general
the ack object is transparent to our implementation If provide something nonnull youll get it back as an Ack message
; design
Whats the usecase for the cause note that the Throwable need to be serializable otherwise were going to have issues in remoting
; general
Is it OK for retriesLeft to be negative
; general
Is it OK for retriesLeft to be negative
; general
ack is a user defined message to be sent back when the write is finished or null if no ack is wanted
; general
This is a simple facility providing introspection onto how many connections the selector actors are currently handling as well as how many connections they have handled so far Isnt this something valuable
; general
No retriesLeft will never be negativeJust realized that this message as well as all others underneath  INTERNAL should not be publicly visibleWill fixDo you usually add verification requires also for internal messages
; design
this will be called on every Restart directive is that the intention
; general
I think it should be a Set Is there a valid reason to have a duplicated option passed in
; general
Any reason why we dont use an Option here instead of manually checking for null references
; general
Note that you might still have two different options with the same type but different arguments in a set So a Set doesnt really buy you much However it makes construction slightly slower and leads to undeterministic ordering in option applicationFor simplicity Id prefer an immutableSeq but if there is a real advantage to a Set why not
; general
TcpConnection actors musnt be restarted so we thought that shouldnt be an issue Is it Is there any way to specify that an actor musnt be restarted
; design
You can use a SortedSet with a given Ordering which might be the name of the Class of the SocketOption if you want to avoid duplicates by type
; design
Should be an OptionAny in that case null is the Devils Value
; general
No we dont explicitly put monitoring code in it will be woven in everyone has their own preference of stats collection
; general
Ok that would work Looks a bit overengineered to me just for a few socket options
; general
This can happen quite often with a Nack protocol do we want to log it by default even if its debug
; general
Ok no problemWill be ripped outmathiassprayiohttpsprayioOn 16012013 at 1709 Viktor Klang  notificationsgithubcom wrote   case object StopReading extends Command   case object ResumeReading extends Command    case object GetStats extends Command  No we dont explicitly put monitoring code in it will be woven in everyone has their own preference of stats collection   Reply to this email directly or view it on GitHub httpsgithubcomakkaakkapull1030filesr2667283
; design
Its what we discussed last week How about using a special value instead of null for marking that you dont want an acknowledgement
; general
Dont we want to catch Terminated here
; general
We had it in there before but currently use the death pact to just die when the watched handler dies
; general
I understand but some additional logging could be useful
; general
There is exactly one pending write in this state so why is this needed And if its not guaranteed to have a pending write in this state then why can we use pendingWrite on line 76
; design
Yes require is good for detecting bugs
; general
At least you get the DeathPactException in the logging If you want a custom message you would need handlers in the other states as well
; general
Because doWrite may change the value of it
; general
Ok I see We could rely entirely on the logging on our side and change this to a case object ErrorClosedSounds good to me
; design
Hmm it would be nicer if we would be able to copy a part of the buffer not the whole and then take a slice
; general
OK I see We are not guaranteed to be able to write in one go
; general
I think thats a bug We dont have to use take at all because the ByteBuffer should have proper limits set and ByteStringapply should just copy the right amount of bytes Ill fix that
; general
Or we just make it an immutableIterableSocketOption and then the user gets to decide if he wants to use a Set or just a List
; general
jrudolph Yes thats a much better solution thanks And do requireack ne null
; design
technically we just need to traverse it  and I agree with the overengineered comment
; general
If someone sends a WriteByteStringempty myAck then it will be not WriteEmpty because of the nonnull ack field Maybe we should add protection against this
; general
Yes great solution sirthias
; design
You could always throw an exception in preRestart I guess
; general
it is the job of the supervisor to do this the exception in here to work against that would have to go into postRestart though
; general
of all threads from the dispatcher which TCP connection actors are using
; general
channelclose can throw right Which would make this a zombie if it isnt closed
; general
I dont see why this match is needed
; general
It may be nicer to pass the Settings in the constructor
; general
depends on what you look at import Tcp or import Tcp will then give you SOReuseAddress which looks quite nice to those who actually use this API
; general
What happened to the idea of making this an interface As it stands it is impossible to include the Write itself in the ACK
; general
Great point Roland that usage is slick
; general
no the user should watch this actor
; general
yes this should probably not be logged unless some extreme debug option is set
; general
Shouldnt this be done first
; general
didnt we say that the write responses should go to the sender of the Write
; general
okay Im assuming that all of those will go out right
; general
Somebody loves this comment but it is badass so it should stay
; general
do I understand correctly that one actor uses this buffer in a write then the next actor runs on that same thread and clears that buffer Is that safe
; design
As I mentioned above having a WriteByteBufferempty someAck might break this it depends on what should be the semantics of null writes
; general
what if we wrote everything which did fit into the buffer should we not just try again
; general
we dont like allocations  seriously though reading some comment above this will be fixed by using a marker reference to detect the nonacked case
; design
hmm in case we terminate because of the Selector failing should we tell the client or not
; general
they can of course always watch us
; general
AFAICS it does not matter apart from sending one more message to deadLetters
; general
better move this into the missing else clauses in order not to send multiple messages unnecessarily
; design
Just pure curiosity does it have any measurable effect to exchange lines 183 184
; general
so you want to call the actual selectors systemIOTCP0a systemIOTCP0b and so on I think Id prefer to name the router selectors
; general
Also we do not need to extract the attachment unless the key isValid
; general
btw the else structures are a bit confusing isWritable isAcceptable and isConnectable are mutually exclusive but isReadable is not Is this intentional If it is a comment would be welcome
; general
case x   Connect   Bind  selectorPool forward x
; general
Id move this into    val select  new Task       val doSelect   Int        def tryRun         if doSelect  0                So you dont need to close over this to call the function
; design
Yes Ill fix that
; general
So one needs to send multiple messages to register for more than 1 interest
; general
Always watch first The fine thing about watch is that it returns its input so you can write    val child  context watch contextactorOfAwesomeness
; general
where do we need to send more than one at a time
; general
since all the retriesLeft funneling is already done why not decrement by one and forward to contextparent instead of replying to the sender
; general
You mean the debug logs without any information in particular Yes those can go
; general
Yes good catch in the read case we already did that
; general
No I mean anything which is logged permessage which usually is not useful either way it would make the DEBUG loglevel setting in the applicationconf completely unusable if you want to keep some of them please put them behind a special flag Also think about what happens if someone decides to forward logging streams over remoting
; general
What do you mean exactly Would the actor be a zombie if close throws Or do you mean the actor is gone and the channel still open Wouldnt that case be caught by the additional channelclose in postStop
; design
the handler would not currently get a closedEvent but the actor would be cleaned up thanks to the stoppingStrategy in its supervisor
; design
I think this match can go in any case But we should still think about the semantics of an empty write
; general
So this means that the configured MaxChannels is a soft limit because we could potentially exceed it due to updating the count asynchronously no Im not saying that is a real problem just something to be aware of
; general
hmm not so sure it would actually help Id leave this in as a marker for potential benchmarking sessions though
; general
it should be writing should copy the buffer into the kernel buffer and afterwards the buffer can be reused even if not everything could be written we currently dont store the remaining direct buffer for later but we will instead copy the remaining again into a direct buffer when the write can continue i guess thats not yet the best strategy but the simplest
; general
will the channelclose then make sure to remove the key from the selector
; general
Id put this one in a finally
; general
Id probably shave a couple of allocations and do    val i  selectorkeysiterator    whileihasNext inextchannelclose
; general
which does imply that true zerocopy IO does not exist for Java just collecting a data point here
; general
httpdocsoraclecomjavase6docsapijavaniochannelsFileChannelhtmltransferTolong long javaniochannelsWritableByteChannel
; general
connectionHandlerexpectMsgTypeReceiveddatadecodeStringASCII must betestdata
; general
This shouldnt be here but in the extension
; general
Nice catch If we leave it a weak limit then we should document it
; general
yes that is the one existing special case using Linux syscalls you can mmap a socket and avoid all copying between userland and kernel for the general case
; general
The benefits are more readable failure messages and two lines less could be used throughout
; general
setup was imported
; general
this test name suggests more than the test actually verifies
; general
this is a neat test harness
; general
Is the Closed not sent by the connectionActor If so then this test is racy ie it could potentially take a while for that flag to return true Better watch the actor and expectMsgTypeTerminated
; design
Yes isTerminated is one of my Sins Even though the semantics of it is extremely clear people get it wrong
; general
why is no intervention from the selector needed  la ChannelWritable to slurp it through
; design
here expectMsgPF makes sense
; general
yeah thats a good one  But Id rather open port 0 see which number comes back close that one and use that port You never know
; general
should this not have a within with a lower bound to verify the timeout
; general
why not kill the userHandler that would verify the watch as well
; general
How about Empty rather than empty so it matches ByteStringempty Mapempty etc
; general
Very nice test frameworkWe should enumerate which tests we need1 Verify that all options are applied as expected2
; general
no fixed port numbers please
; general
Its often really useful to get some information about the cause of an error What about making cause into a String
; general
Brief docs for some of these would be useful
; general
What about a case statement for that conditionscalaval RegisterTimeout  getStringregistertimeout match   case infinite  DurationUndefined  case x  Durationx MILLISECONDS
; general
yes that looks a bit cleaner good one
; general
It looks like NrOfSelectors  MaxChannelsPerSelector can be less than MaxChannels due to rounding Is that intentional
; general
Actually that code wouldnt quite work due to x being a String but you get the idea
; general
Is including Write itself in the ACK the only use case for making it an interface Just to be able to support this case it complicated the code quite a bit so we got rid of it If you say we want to support this case Ill revert that change
; general
We discussed this and thought of DurationUndefined et al as examples for other constants being upper case
; general
Yes we should make sure a usergiven zerobyteWrite never ends up in pendingWrite
; general
Ive got some ideas about how to support transferTo but didnt want to put into the first draft Lets discuss this in the next round
; general
What would be the advantage If you would put it into the extension it would mean that if two actor systems share the same threads they would use twice as much buffers per thread without being able to use both of them at the same time
; design
Yes of course thats much cleaner
; general
its all one can test in a unit test but I agree the name is too strong
; general
This may be the cause of the instabilities weve seen with the tests Weve already got rid of most of the isTerminated but this instance was forgotten
; general
Apart from the messages being other ones on OS X as we found out
; general
yes I wonder where it has gone
; general
sirthias used his certified inbrain unique port number generator to generate this port so how could anyone else use it
; general
Can you stop a TestProbe Otherwise you would have to duplicate some code to use a real actor instead of a TestProbe for the userHandler We did that before but this is so much shorter
; design
Thats what pullFromServerSide is doing
; general
you can send it a PoisonPill or do it like in the test below
; general
ah of course
; general
Hint Buffer size
; general
How expensive is accessing the extension  Because that call would be in the hot path
; general
Or we spend a field in each connection actor to hold the thread local
; design
Also we shouldnt use ThreadLocals for this since the same underlying threadpool can be used for multiple systems
; general
I propose that we cache the Tcp Extension in the ConnectionActor    val tcp  Tcpcontextsystem    def registerTimeout  tcpSettingsRegisterTimeoutThen the buffer can be checked in and out directly from the extensionGetting an extension is a CHM access so on Java8 it will be completely lockless for reads
; general
Ok so Id vote an immutableTraversableSocketOption
; general
Sold To the man with the awesome hat
; general
Yes I like a case class ErrorClosecause String even better No problems with serializability and still transports some more details as to what happened to the user Since this case should be rare the extra allocation over a case object does not matter
; design
So whats the recommendation hereShould we throw an exception in preRestartpostRestart or leave it be and rely on the supervisor which we fully control to apply the stoppingStrategy
; general
So should we change anything
; general
tailrec def extractMsgt Throwable String        if t  null unknown      else         tgetMessage match           case null    extractMsgtgetCause          case msg  msg
; general
The downside though is that the cause string becomes public api and people will try to match against it to determine whatever
; design
Couldnt we just rely on postStop to close and publish store away closedEvent if need be for postStop
; general
that exception in postRestart would be the direct equivalent of a require Id include it to be sure
; general
We have tried this but came across an interesting issueHow do you express the type of the TcpcontextsystemSettings object as a type annotationThe weirdness of this is probably a good reason to change the current design of Settings as an objectIll propose a solution for this
; design
yes that would solve it nicely
; general
TcpExtSettingstype should do it
; general
Actually it doesntSee this discussionhttpsgroupsgooglecomforumfromgroupstopicscalalanguageqqbDyxaU24E on scalalanguage we started for this topicmathiassprayiohttpsprayioOn 17012013 at 1157 Roland Kuhn notificationsgithubcom wrote import javaniochannelsServerSocketChannel import scalaannotationtailrec import scalacollectionimmutable import scalautilcontrolNonFatal import akkaactor ActorLogging ActorRef Actor  import Tcp  class TcpListenermanager ActorRef                   selector ActorRef                   handler ActorRef                   endpoint InetSocketAddress                   backlog Int                   bindCommander ActorRef                   options immutableSeqSocketOption extends Actor with ActorLogging     val batchAcceptLimit  TcpcontextsystemSettingsBatchAcceptLimit  TcpExtSettingstype should do it   Reply to this email directly or view it on GitHub httpsgithubcomakkaakkapull1030filesr2679188
; design
Actually this is a bug It should be    contextwatchhandlerand should go first
; general
I think I found two bugs in the TestKit here1 TestProbewatch fails if the watched actor is terminated in the moment we try to watch itjavalangAssertionError assertion failed expected WatchTestActorakkaTcpConnectionSpecuserq found WatchTestActorakkaTcpConnectionSpecuserpinfo   at scalaPredefassertPredefscala179info   at akkatestkitTestKitBaseclassexpectMsginternalTestKitscala295info   at akkatestkitTestKitBaseclassexpectMsgTestKitscala281info   at akkatestkitTestKitexpectMsgTestKitscala641info   at akkatestkitTestKitBaseclasswatchTestKitscala155info   at akkatestkitTestKitwatchTestKitscala6412 Ive witnessed a deadlock in commit jrudolphakka5719aa0a67fe170ce2ae2bd4f3fdf5ef53e016ae maybe when the actor has already died when TestProbewatch is calledTcpConnectionSpecakkaactordefaultdispatcher3at sunmiscUnsafeparkNative Method parking to wait for  0x00000000e101e558 a javautilconcurrentlocksReentrantLockNonfairSyncat javautilconcurrentlocksLockSupportparkLockSupportjava156at javautilconcurrentlocksAbstractQueuedSynchronizerparkAndCheckInterruptAbstractQueuedSynchronizerjava811at javautilconcurrentlocksAbstractQueuedSynchronizeracquireQueuedAbstractQueuedSynchronizerjava842at javautilconcurrentlocksAbstractQueuedSynchronizeracquireAbstractQueuedSynchronizerjava1178at javautilconcurrentlocksReentrantLockNonfairSynclockReentrantLockjava186at javautilconcurrentlocksReentrantLocklockReentrantLockjava262at akkatestkitCallingThreadDispatcherrunQueueCallingThreadDispatcherscala224at akkatestkitCallingThreadDispatcherdispatchCallingThreadDispatcherscala204at akkaactordungeonDispatchclasstellDispatchscala106at akkaactorActorCelltellActorCellscala306at akkaactorRepointableActorRefbangRepointableActorRefscala154at akkaactorActorReftellActorRefscala108at akkaactordungeonDeathWatchclasssendTerminated1DeathWatchscala55at akkaactordungeonDeathWatchanonfuntellWatchersWeDied2applyDeathWatchscala71at akkaactordungeonDeathWatchanonfuntellWatchersWeDied2applyDeathWatchscala71at scalacollectionimmutableRedBlackTreeforeachKeyRedBlackTreescala84at scalacollectionimmutableTreeSetforeachTreeSetscala151at akkaactordungeonDeathWatchclasstellWatchersWeDiedDeathWatchscala71at akkaactorActorCelltellWatchersWeDiedActorCellscala306at akkaactordungeonFaultHandlingclassfinishTerminateFaultHandlingscala202at akkaactordungeonFaultHandlingclassterminateFaultHandlingscala159at akkaactorActorCellterminateActorCellscala306at akkaactorActorCellsystemInvokeActorCellscala369at akkadispatchMailboxprocessAllSystemMessagesMailboxscala256at akkatestkitCallingThreadDispatcherrunQueueCallingThreadDispatcherscala226at akkatestkitCallingThreadDispatchersystemDispatchCallingThreadDispatcherscala184at akkaactordungeonDispatchclassrestartDispatchscala91at akkaactorActorCellrestartActorCellscala306at akkaactorLocalActorRefrestartActorRefscala355at akkaactorSupervisorStrategyrestartChildFaultHandlingscala310at akkaactorOneForOneStrategyprocessFailureFaultHandlingscala386at akkaactorSupervisorStrategyhandleFailureFaultHandlingscala284at akkaactordungeonFaultHandlingclasshandleFailureFaultHandlingscala248at akkaactorActorCellhandleFailureActorCellscala306at akkaactorActorCellautoReceiveMessageActorCellscala400at akkaactorActorCellinvokeActorCellscala385at akkadispatchMailboxprocessMailboxMailboxscala230at akkadispatchMailboxrunMailboxscala212at akkadispatchForkJoinExecutorConfiguratorMailboxExecutionTaskexecAbstractDispatcherscala501at scalaconcurrentforkjoinForkJoinTaskdoExecForkJoinTaskjava262at scalaconcurrentforkjoinForkJoinPoolWorkQueuerunTaskForkJoinPooljava975at scalaconcurrentforkjoinForkJoinPoolrunWorkerForkJoinPooljava1478at scalaconcurrentforkjoinForkJoinWorkerThreadrunForkJoinWorkerThreadjava104pool2196thread2at sunmiscUnsafeparkNative Method parking to wait for  0x00000000e21a0da0 a javautilconcurrentlocksReentrantLockNonfairSyncat javautilconcurrentlocksLockSupportparkLockSupportjava156at javautilconcurrentlocksAbstractQueuedSynchronizerparkAndCheckInterruptAbstractQueuedSynchronizerjava811at javautilconcurrentlocksAbstractQueuedSynchronizeracquireQueuedAbstractQueuedSynchronizerjava842at javautilconcurrentlocksAbstractQueuedSynchronizeracquireAbstractQueuedSynchronizerjava1178at javautilconcurrentlocksReentrantLockNonfairSynclockReentrantLockjava186at javautilconcurrentlocksReentrantLocklockReentrantLockjava262at akkatestkitCallingThreadDispatcherrunQueueCallingThreadDispatcherscala224at akkatestkitCallingThreadDispatchersystemDispatchCallingThreadDispatcherscala184at akkaactordungeonDispatchclasssendSystemMessageDispatchscala113at akkaactorActorCellsendSystemMessageActorCellscala306at akkaactorLocalActorRefsendSystemMessageActorRefscala351at akkaactordungeonDeathWatchanonfunwatch1applymcVspDeathWatchscala21at akkaactordungeonDeathWatchanonfunwatch1applyDeathWatchscala20at akkaactordungeonDeathWatchanonfunwatch1applyDeathWatchscala20at akkaactordungeonDeathWatchclassmaintainAddressTerminatedSubscriptionDeathWatchscala159at akkaactordungeonDeathWatchclasswatchDeathWatchscala20at akkaactorActorCellwatchActorCellscala306at akkatestkitTestActoranonfunreceive1applyOrElseTestKitscala65at akkaactorActorCellreceiveMessageActorCellscala425at akkaactorActorCellinvokeActorCellscala386at akkatestkitCallingThreadDispatcherrunQueueCallingThreadDispatcherscala238at akkatestkitCallingThreadDispatcherdispatchCallingThreadDispatcherscala204at akkaactordungeonDispatchclasstellDispatchscala106at akkaactorActorCelltellActorCellscala306at akkaactorRepointableActorRefbangRepointableActorRefscala154at akkatestkitTestKitBaseclasswatchTestKitscala154at akkatestkitTestKitwatchTestKitscala641at akkaioTcpConnectionSpecassertActorTerminatedTcpConnectionSpecscala430Do you think those are valid ones Ill file issues then
; design
And it is meant to convey that we are relying on a DeathPactException rather than handling Terminated ourselves
; general
Yep and it is a badass comment
; general
Yes Good catch
; general
It seems strange to have to introduce another field to transport information to the postStop call Couldnt we just wrap the sending with tryfinally
; general
I find it more brittle to duplicate the cleanup code
; general
Its either that or call doCloseConnection on postStop
; general
We dont save anything by calling doCloseConnection on postStop because its parameters would have to be transported to postStop as well So Ill just introduce a field
; general
yes please file ticket dont have time to dig into them right now
; general
Yeah I can see the current solution be suboptimal Ill apply some more love
; design
I see Actually I wanted to name the selectors systemIOTCPselectors0 systemIOTCPselectors1 etcbut couldnt figure out how to do it Is this possible
; general
no unfortunately not a b  does not look too bad
; general
Yes right we talked about this Actually this also allows us to get rid of the Reject message type
; general
Yes its a soft limit Ill improve the docs in the referenceconf
; general
We now put a throw into postRestart
; general
This is now hidden behind a config setting tracelogging
; general
Theres now a dedicated case which directly acks zerobyte Writes
; general
Registered listeners or connections only close their channel before terminating themselves or in postStop Termination triggers unregistration in the selector So the current implementation should avoid any leaks here
; design
MaxChannels is a soft limit I have updated the docs in the referenceconf to also note that the implementation might accept fewer connections than the configured limit as well as more
; design
this should be switched with the empty line above
; general
these two cases can only ever match when the andcheck was pointless because if either of OPREAD or OPWRITE was set these case statements will not be reached
; general
They will also be reached when for example OPREAD  OPCONNECT is set which is sometimes the case depending on the plattform implementation
; general
missing copyright header
; general
ah I see thanks not sending the ChannelReadable for example right after ChannelConnectable makes it require one more roundtrip while keeping the ConnectionActor simpler or do we immediately try to read me goes looking
; general
we could potentially try to read immediately which may speed things up on the server side unless theres something I dont know about how sockets work which is entirely possible
; general
I think the reasoning was that the connection actor has to wait for a Register message before it can do anything with incoming reads So it waits before declaring ReadInterest for the Register message
; design
I agree we could try that The code shouldnt change more than replacing that line with a doRead call
; general
No ifs were involved here
; general
ruined arrow alignment
; general
this is an automatic formatting by scalariform in eclipse only when there is there is no setting for disabling this so I think we have to live with it
; general
quite possibly for the same reason as above
; general
those ifs can be oneliners
; general
hmm maybe it works with braces
; general
Why this name Might just put them into the SystemMessage companion
; general
I made SystemMessagenext package private and put the value classes in the  same package to be able to access the field
; design
Actually Rolands recommendation
; general
lots of duplication in these 3 no way to reduce that
; general
we decided that this kind of if statement should go on next line
; general
would it be more clean to have an operation that did unlink and head in one goperhaps returning both head and tail
; general
when will child be null and what should be done then
; general
We were talking about it Unfortunately it needs then an allocation of a  Tuple2
; general
Yes I should add that method
; general
ok but unlink can at least return itselfval msg  messagesheadunlink
; general
thanks that improves readability several more places than I pointed at
; general
Ok makes sense
; general
1Id suggest something like    message match       case sm SystemMessage if shouldStashsm  stashsm      case f Failed            shouldStash can be very efficiently implemented for the normal case    def shouldStashsm SystemMessage Boolean       state switch match         case DefaultState  false        case SuspendedState  smisInstanceOfFailed        case SuspendedWaitForChildrenState           smisInstanceOfFailed  smisInstanceOfRecreate  smisInstanceOfSuspend  smisInstanceOfResume        Wdyt
; general
Thats a fair point Id like to see what improvements the MPSC queue Ive been tinkering with could add
; general
This is a matter of taste The current approach was chosen by Roland and  adopted by me because it makes it more FSM like Not superimportant  though I like your approach too
; general
Quite a lot sourcewise This approach is I think close to the best that  we can make out from the SystemMessage as list node minimal overhead  approach considering codeniceness excluding macros
; general
Its not only taste imho code duplication is bad for maintainabilityAn alternative impl of shouldStash could be    def shouldStashsm SystemMessage Boolean       state switch match         case DefaultState  false        case SuspendedState  smisInstanceOfStashWhenSuspendedState        case SuspendedWaitForChildrenState  smisInstanceOfStashWhenSuspendedWaitForChildrenState
; general
So I recommend that we take the MPSC for a spin in this case we might even be able to skip the stash since we can just store a pointer to our current node if we want to continue to scan forward
; design
Terminate and Suspend can also become case objects with that queue
; general
Then this PR should be closed
; general
no you could just experiment taking this as a starting point
; general
Yes I mean closed as in not review ready  come back later
; general
makes Mad Scientist look
; general
yes I agree with Viktor on this one way cleaner
; general
Scalaif isTerminated dumptodoelse if todononEmpty invokeAlltodo newState
; general
it for sure is unexpected
; general
why can this happen should this not be covered in systemInvoke
; general
that would be  instead of  or
; general
this should probably be called reverse as it is on the standard List
; general
So the guard can be removed
; general
I am not sure This is a separate state then or is covered by the others
; general
while failed we are always suspended if not then that would be a bug AFAICSplease check if you come to the same conclusion
; general
Please introduce a marker trait and make this a single misInstanceOfStashWhenWaiting for symmetry Id prefer a StashWhenFailed then as well even if it is only used by Failed right now
; general
I like it
; general
Envelope creation is outside here now in the Cell trait so any serialization exceptions will be thrown directly on message send rather than published to event stream
; general
Yes most likely will check tmro morning
; general
Thats a strong demand Shouldnt it be Must not throw nonfatal exceptions
; general
where did the noSender replacement go
; general
could this check be placed in Envelope instead
; general
ok but why is it better to check in send
; general
shouldnt we use noSender instead of null
; general
It should actually be May only throw NonFatal Throwables
; general
We can but then we violate the tell contract
; general
Absolutely Good catch
; general
two times the same argument type I dont really know much about this but it smells fishy
; general
ActorContextsystem is implicit httpsgithubcomjbonerakkablobmasterakkaactorsrcmainscalaakkaactorActorCellscalaL108 so a mereimport contextsystem would most likely suffice
; general
Id probably do IOtakeAny map socketwrite
; general
This looks pretty needed right
; design
Probably shouldnt rely on that what do you wish to test for
; general
What iz diz gud fo
; general
Yep at one point ActorRefstop stopped working and forgot about this part after I figured out how to stop an actor again
; design
I want to just start up a single shared IOManager I believe ticket 1477 will take care of this
; general
Trying out different methods of triggering a select Right now there is an explicit Select message that it sends to itself and also after N messages I kept the SelectNanos things in there just for testing it out but it doesnt seem like it adds anything and will probably be removed
; general
Isnt it possible to implement the IO stuff as an Akka Extension
; general
The original created a StackBuilder httpslampsvnepflchtracscalabrowserscalatagsR291finalsrclibraryscalacollectionmutableStackscalaL26 which contains a ListBuffer
; general
Could be great to add as a comment so no one tries to optimize a line of code
; general
Probably havent looked at them too much If it lets me lazily create and lookup an ActorRef then it would probably work better
; general
yep that would work better I had it cleaner before by having the methods look for an implicit ActorContext but that seemed wrong
; general
Yep good idea I used that block for debugging at one point which is why it is so verbose
; general
Ill be sure to check them out
; general
Oh yeah I remember also why I wasnt concerned about this if the IOManager is not managing any channels it stops looping until it is needed again so there is little reason to shut it down since it will more then likely be needed again
; design
Yep Extension is the way to go Didnt realize they could be added to an ActorSystem on demand Good stuff there
; general
My Iterateefu is not strong enough is there a fundamental reason why write operations are not lifted in the same way as reads It feels a bit strange that you can build your reader without passing around the socket but that you need to change that for writing Or is it actually desired as some kind of poormans effect system
; general
What happens during a restart
; general
What happens when the Actor stops
; design
Needs moar docs
; general
Reading and writing to a socket is performed by sending messages to and from an actor the IOManager The iteratees arent needed and are completely optional To read bytes you receive the message in your actor To write bytes you send the bytes to be written to the IOManager performed by socketwritebytes so you dont have to worry about the IOManagerIt is very much the same reason why receiving messages and sending messages are handled differently with actors the receive method vs tellaskAlso the only reason I moved all this into a separate method is to minimize the state that would be captured in the closure
; design
In this tutorial I havent dealt with fault tolerance but typically the postStop method would contain a socketclose One of the things I have left to do in the actual implementation is the ability to handle the IOFailure iterateeWith IOFailure handling you would call stateIO Done Someexception which should cause an IOFailureexception to be propagated up the the nested iteratees until it is detected by the unwritten failure handler which could handle writing to the IOManager any error messages that are needed followed by a socketcloseFor now I should at least handle connection failures with retries in the test actors so some of this is tested and then we dont need the started latch either
; design
So everything is fine if the Actor fails and is restarted
; design
In this actor no the the socket should be closed during the restart because something it had received more then likely caused the actor to fail
; design
Latest version has much improved fault tolerance in the tests
; general
is this exception supposed to occur then I recommend EventFilterintercept and setting occurrences  N
; design
The amount of occurrences is unknown It will keep happening until the server port is open
; general
The started TestLatch was used to avoid that condition before I want it to happen now in order to test fault tolerance
; general
Before this is eligible for merging into master definitely needs more docsId love to be able to ship this as a part of M3 it will hopefully be released in about 24 hours so with a little bit of last minute effort you might just make itThanks
; general
ScalaDocs done at least to an acceptable level Still have the reST docs to finish so not sure if Ill make it for M3
; general
Im not sure prepending is that readable for Java devsa  bbecomesb prepend areverse orderI think it should be a addappend b
; general
Also you have a bug you a preprending that to that instead of this which means that youre lacking a test
; general
Damn I thought I can sneak the that  that in without you noticing Ill fix the prepend and add an append to SimpleWriteCommandWhile the append is easier to understand you cannot say    simpleWriteappendwrite1appendwrite2because append returns a general WriteCommand and append is only defined on the SimpleWriteCommandHowever when using prepend you can say    writeprependsimpleWrite1prependsimpleWrite2The fact that Java devs then have to think backwards is something that theyll just have to live with smirk
; general
Yes well spotted thanks
; general
how can this message get lost
; general
u ask me
; general
similar to the mystery of the Identify message
; general
in this case the shutdown start shutdown sequence is extremely quick see the timings here httpsjenkinsakkaio8498jobakkalocalrepeat3087consoleFull
; general
Add a comment about why this is needed now that we know that its needed
; design
I dont understand localMembers  changedMembers  changedMembers  removedUnreachable
; general
equals is based on the address of the member but the status might be changed replace  remove  addval newMembers  localMembers  changedMembers  changedMembers
; general
what does  m  m mean Quite confusing
; general
Yes we need to as far as I see
; general
equals of Member is based on the address only this is replace by remove followed by addI will add a comment
; general
What happens on changedMembers  localMembers
; general
that is a good suggestion thanks
; general
this does not seem to be used in this method
; general
this does not really prune anything is this the bug you meant
; general
if this happens 500ms after the hello then the test will fail right
; general
another interesting test would be to split the cluster in half join a node to the one half and then down the other and verify that the joining works without fixing the partition
; general
no this was not the bug but this is clearly not correct it should do recordsfilterNotobserver  observer
; general
sounds like a good addition will do
; general
It would be restarted and a new boom is scheduled but you are right that there is a small race if the Resume from the supervisor doesnt arrive it will be stuck Perhaps I can use oneway blackhole
; general
Is this really an error I know that the other node has gone down in an uncontrolled way or we have decided that we cant talk to him any more But its not like our system has to fail
; general
Very cool trick to make second become quarantined from third
; general
Do you have any guarantees here that you manage to set up the probe before second is quarantined by third You have already done a blackhole on second
; general
Maybe be more precise saying that it is the move to Down that can be performed automatically or manually To me it sounds like the reachability can be changed manually as well
; design
good point fixed
; general
very true changed in 36228fa
; general
Whats the impact on throughput due to this change
; general
Theres no significant impact Throughput benchmark results are at httpswwwassemblacomspacesakkatickets3574akkapersistenceprototypecomment355843673comment355843673
; general
Yes will change to mssreverseIteratorfilter1sequenceNr  toSnr
; general
Yes will change to processorId
; general
we have discussed alternatives and will evaluate carefully probably when you are back in town viktorklang
; general
if this is to simulate code from inside an actor it should be getContextactorOf
; design
wonder if we need to qualify this name more perhaps processorId
; general
I like the alternative when would it be better with Messagecreate
; general
is getCurrentMessage same as msg
; general
should have the experimental note see httpdocakkaiodocsakka221javaiohtml
; general
Does that mean that recover is mandatory Is it possible to skip recover for some reason
; general
it should be clarified if these two alternatives are equivalent or when to use which
; general
This is scary business there is no real ordering guarantee between messages sent with ActorSelection relative to those sent with ActorRef For example the last replayed message sends msg1 with ActorSelection and next msg2 is sent with ActorRef msg2 may be received before msg1
; general
interleaved actorSelection and actorRef might result in wrong delivery order
; general
I would prefer more describing parameter names
; general
I mean longer
; general
Optioncurrent does the same thing
; general
yes optional configurable dispatcher such as cluster
; general
or should it always be a dedicated dispatcher due to IO
; general
should we make it def processorIdref ActorRef String to make it consumable for java otherwise these should be INTERNAL API
; design
I guess there is a reason for private persistenceIt should then be marked as INTERNAL API it is public from javaI think this will also pollute the namespace of java actor extending UntypedProcessor
; design
I suggest that it should be named processorId
; general
might be more clear without overloaded method namesprocess vs processPersistent
; general
can we afford the allocation of Some
; general
sequenceNr  1
; general
not sure if this will ever be sent over the wire but if there is a chance so please add SerialVersionUID1L
; general
When would you not want to do thisIm not convinced of the value of this traitCould it be default behavior in Processor constructor with possibility to override
; general
should it be final
; general
Do we see any alternatives to this traitThe lifecycle methods call chain are difficult enough to remember and this adds to the complexity for the userWould an alternative be that the user has to do it themself from ordinary preRestart but provide some convenience helpers for the unwrapping and construction of Recover from the message OptionAny
; general
Should be INTERNAL API
; design
Should this create the Props only Passing ActorRefFactory if actor context and potentially using it in the wrong place outside the actor feels scary
; design
Will fix it
; general
Might be misleading to call this props since that is used for other things I think we have used Settings at several places for similar things
; general
Isnt it a bit redundant to have processorId on trait Processor For that reason Ive chosen id on purpose
; general
Might be better to place the test config inline and use ConfigFactoryparseString
; general
In the Scala API the idea was to have no difference in Message creation inside and outside a processor ie using Messagepayload The Java equivalent for message creation inside a processor is Messagecreatepayload getCurrentMessage But Im fine to recommend using msgwithPayload inside processors Scala and Java and using Messagepayload Scala and Messagecreatepayload null Java outside processors If someone by accident uses Messagepayload inside a processor it wouldnt matter because of implicit OptionMessage In Java getCurrentMessage must be called instead
; design
Im thinking of how it looks like in user code it will often be overridden it prevents the user to use a field id for other things
; general
Will add it
; general
yes this is worth thinking about
; general
Recovery is mandatory no possibility to skip Otherwise it would be impossible to consistently recover a network of processors as they could receive new messages from other recovering processor before their own recovery This would change the ordering of messages from previous application runs for example
; general
Im for recommending thisdiscussionr6122425 and additionally mention equivalent alternatives and caveats
; general
Maybe we should mention the tradeoffs more clearly here  atleastonce delivery conversation recovery  no ordering guarantees for unconfirmed messagesAlso receivers could use message sequence numbers generated by processor to reorder received messagesDo you see other alternativesmechanisms how this could be improved
; general
Same arguments as in this commentdiscussionr6122849
; general
Will fix it
; general
Right will change it
; general
Having a dedicated dispatcher is a reasonable first step We can make it configurable any time later if needed
; general
The reason for privatepersistence is that it is used by the RecoverOnRestart trait Depending on the alternatives to RecoverOnRestart see below journal will become either INTERNAL API or private
; design
Makes sense lets name it processorId
; general
Will change it
; general
Will change it
; general
You mean var currentMessage should have type Message and can be null if theres no current persistent Message Should method currentMessage still return OptionMessage
; general
Can be on wire will add SerialVersionUID1L
; general
This is what most processors may want to do So having it as default behavior with optout makes sense One example where one wouldnt do autorecovery is when two processor A and B depend on each other This means both must have been created before they can send messages to each other and message may already be sent during recovery In this case an application would first create instances of A and B and then recover them What about moving the above preStart implementation to Processor and make it final so that concrete processors can only override preRestartProcessor See also this commentdiscussionr6123602
; design
Similar to what I proposed herediscussionr6123408 we could move the preRestart and postRestart implementations to Processor and make them final This would recover on restart by default and concrete processors should override preRestartProcessor and postRestartProcessor if neededTo customize processor recovery the processor prerestart hook could return an OptionRecover which lets implementors define custom recovery parameters and make recovery optional too The same idea can be applied to def preStartProcessor OptionRecover tooReasonable default implementations for processor lifecycle hooks are possible
; design
This should create the actual ActorRef JournalFactory is preliminary and will likely be replaced when I start working on the journal plugin API Ill make it privatepersistence meanwhileI understand the issue of using an actor context in the wrong place but can you prevent that at all For example an actor could reply the context to a sender a PromiseActorRef and the context is then used in the onSuccess callback
; design
Will rename to Settings
; general
See this commentdiscussionr6123602
; general
I dont see any good alternatives but we must think this through thoroughlyA channel could perhaps stop delivering buffering until it has fully resolved the selection to a real ref using Identify
; general
yes that was my thought Im not sure it is neededmy assumption is that currentMessage is normally not called and only called once or a few times for each message
; general
Sounds good to me will try that
; general
sounds good reducing number of combinationswould RecoverOnRestart be the default behavior
; general
currentMessage wont be called if users follow the msgwithPayload approach discussed herediscussionr6122425 It will be called only if users create new outbound messages via Message This could be another good reason to recommend the msgwithPayload approach inside processors
; design
Yes would be default same as recover on start
; general
Right but will be def currentMessage  OptioncurrentMessage once this changediscussionr6123222 is implemented
; general
A few more thoughts on this First akkapersistence should completely free applications from dealing with ActorSelection directly to resolve potentially invalid stored sender references Resolving sender references is anyway only needed in two channel usage scenarios inside a processor1 when a processors forwards the stored sender of a replayed message to a channel channel forward Deliverm destination 2 when a processor replies to a sender channel  Deliverm senderThis means we can always hide resolution of actor references via Identify for replayed messages inside Channel and let applications only specify when they want to have a resolution This could look like channel forward Deliverm destination ResolveSender and channel  Deliverm sender ResolveDestination because sender is used as channel destinationA resolution will only take place for replayed messages that have not been retained by the channel This usually affects only a few messages after a crash for example The default is to do no resolution at all ie do not pass a Resolve argument to Deliverapply This change would also make the public Messagereplayed method obsolete because Channel s could get this information via an internal API and we could change Message pattern matching to case Messagepayload sequenceNrProcessors can still determine whether they are in recovery mode ie if messages are replayed by calling def recovering Boolean on Processor
; design
A different aspect that I think rkuhn mentioned at some point is if references to the processor itself should be stable after recovery stopstart ie the processor actor always gets the same uidTo me it is not clear what implications that would have Eg watchTerminatedI think it would also be complicated to implement as the uid is assigned before the actor is really createdAnyway all this needs discussion and we might not be able to make it perfect in the first iteration
; design
Yes I proposed that in an email but then decided to start without relying on persistent actor uid The alternative to persistent actor uids are the resolve strategies mentioned above which are IMO good enough for a first iteration Fully agree that this should be further discussed
; design
indeed a tricky one
; general
what happens if the leveldbwritebatch  call fails withBatch should probably accept a success and a failure thunk and send Written only if that write call acually did its job Btw is leveldbwrite synchronous
; general
use named parameters for clarity
; general
while I like short variable names here they are part of the API by being parameter names I recommend using slightly more readable ones cid particularly but I always confused by snr too I always think of signaltonoiseratio
; general
Shouldnt byte order be explicitly set
; general
You might want to inline confirmTarget and confirmMessage since they are named parameters anyway
; general
Names d and r are rather cryptic
; general
what does nid mean Please use more descriptive identifiers
; general
since the only valid sequence is started  0 ended  0  started  1 ended  0  started  1 ended  1 isnt it more clear to use only one variable with symbolic values NOTSTARTED STARTED FINISHED being slightly more readable IMHO and also disallowing the invalid started  0 ended  1 state
; general
can this be lost eg write failed
; general
I am not sure it can happen but might the user interfere with the internals by using the stash for his own purposes In other words can Processor actors use the stash they have
; general
If I understand correctly the need for this is to maintain order between persisted and nonpersisted messages by sending them through the same journal Maybe it deserves a comment Also please comment that the reason for separate Looped and Written messages instead of a simple flag persisted is that one stores Any while the other stores MessageImpl
; general
Hm I found this method a bit dangerous Another approach would be to still save the message with a flag eg failcount  1 maybe even saving some data about the failure and optionally ignore the message during replay WDYT
; design
Idea do we want to support markers Basically just named sequence numbers so upon recovery it is possible to go only up to a certain checkpoint Might be another optionaddition to deal with dangerous messages see my comment on the delete method httpsgithubcomakkaakkapull1700filesr6155494
; design
What I actually wanted to say that it is easy to ignore a saved message if there is appropriate metadata like  failcount for example while it is impossible to recover something that was not saved
; general
A small note on performance As long as nobody is overriding receiveAround the JVM will inline it and we will see no difference Have we done any test where one class is overriding it It doesnt have to be running the test as long as its loaded and instantiated
; design
With the current implementation the user can interfere with internals when using the stash What is needed is to isolate the stash used by Processor internally from the stash used by the processor implementation class One possibility to support that is to have named stashes for example stashmystash and unstashAllmystash where the Processor internally uses a special named stash and the processor implementation class continues to use the default stash using stash and unstashAll where only the default stash is part of the public API This would require an extension to the existing Stash or another NamedStash trait for examplePotential duplicates of replayed and unstashed messages during a restart can easily be filtered Processor internally using sequence numbers Duplicates may arise if a processor implementation stashes a persistent message and then crashesrestarts
; design
Already changed locallyhttpsgithubcomeligosourceakkacommit15d2e487fec271c859cfbd4efa76898ba9c034a3 Will be part of the next pull request update
; general
Yes leveldbwrite is synchronous and it throws an exception on failure This will restart the journal receive the next Write and the processor will never see message for which writing failed If a client wants to have a confirmation that a write actually succeeded it should expect an applicationlevel reply from a processor What a journal could do is to publish a WriteFailed to the event bus in case of a leveldbwrite failure
; general
Already changed locallyhttpsgithubcomeligosourceakkacommit15d2e487fec271c859cfbd4efa76898ba9c034a3 Will be part of the next pull request update
; general
Already changed locallyhttpsgithubcomeligosourceakkacommit15d2e487fec271c859cfbd4efa76898ba9c034a3 Will be part of the next pull request update
; general
Already changed locallyhttpsgithubcomeligosourceakkacommit15d2e487fec271c859cfbd4efa76898ba9c034a3 Will be part of the next pull request update
; general
Good idea will change it maybe using NOTRECOVERED RECOVERING RECOVERED
; general
See this commenthttpsgithubcomakkaakkapull1700discussionr6201299
; general
If I understand correctly the need for this is to maintain order between persisted and nonpersisted messages by sending them through the same journalExactly Maybe it deserves a comment Also please comment that the reason for separate Looped and Written messages instead of a simple flag persisted is that one stores Any while the other stores MessageImplWill do
; general
Fully agree on this I anyway planned to implement that as it is needed for an audit log
; design
I like the checkpoint idea Will keep it in mind for a separate ticket
; general
Does this constant offset have any special meaning or is it just arbitrarily chosen
; general
Exactly how it is implemented is up to the journal implementation I guess A journal that doesnt support update or think it is too costly could store the failed marker in a separate collection
; design
Maybe its just me but I prefer keyToBytesidToKeynidOffset
; general
Its always BIGENDIAN by default
; general
This is an arbitrary choice to reserve space for some specialpurpose keys
; general
Will change it
; general
I think that the word delete implies that it actually will be deleted from the journal Is Ignore a bad word Maybe Im just splitting hairs
; general
As long as we document that this a logical deletion I think delete is fine It also depends if were going to allow undelete operations in the future Need to think more about it and come back to it with a separate ticket
; general
can Processor actors use the stash they haveI meanwhile have a solutionhttpsgithubcomeligosourceakkacommit0bd66c0005aed040aa38f327cd90e31e68def296 implemented for that which will be part of the next pull request update It uses a specialpurpose processorinternal stash  processor stash  that is isolated from theStash maintained by akkaactorStash  user stash  I didnt implement named stashes as mentioned before unstashes all messages from the user stash on restart excluding messages of type Replayed and Written because they will be redelivered by the journal as Replayed messages This is the proper way of avoiding duplicates during restart mentioned in a previous comment Checking sequence numbers to avoid duplicates doesnt work because stashunstashAll reorders the sequence also supports cases where a processor is recovered restarted between stash and unstashAll calls Another commithttpsgithubcomeligosourceakkacommit40508ef1f563328742e2b7388cd9795128c14f1f that adds support for rerunning recovery when recovery fails also verifies that several recoveries restarts between stash and unstashAll calls are supported
; general
move the preRestart and postRestart implementations to Processor and make them finalMaking them final limits composition with existing traits For example making postStop final on Processor prevents mixing in the FSM trait I propose to leave the preStart postStop preRestart and postRestart nonfinal but still recommend overriding preStartProcessor postStopProcessor preRestartProcessor and postRestartProcessor if possible
; design
We decided that bantonsson will evaluate the alternatives for aroundReceive and perform the benchmarks this week
; general
make this little function statically available eg on the Actor object
; design
this reads a bit too generic should we rename Message to Persisted
; general
this means that Processors cannot reasonably opt out of having their children terminated during a restart
; general
And rename Processor to PersistentActor
; general
Staying in the metaphor it would be more like registered mail instead of a plain letter Processor is fine I think but Message is too generic
; general
can we enforce this and give good error messages
; general
I did enforce that in Scala using implicit current message couldnt find a way how to enforce that in Java
; general
it would be a runtime check Messagecreate sets something to false which is set to true while persisting it for example
; general
arguments used only in the constructor are prefixed with an underscore in Akka channelId
; general
we usually put the guard before the arrow
; general
Messagecreate is not necessarily related to persisting it when sending it over a channel But maybe Im not getting your point here Can you please elaborate
; general
The situation here is comparable to forwarding in Scala and Java ref forward msg where the context is implicitly setvs refforwardmsg getContext where the user is responsible for passing getContextas 2nd argument
; general
of course thanks
; general
After the arrow is correct Messages retained by the channel should not go to deadLetters and most replayed messages will be retained on every replay
; general
Yes that was clear I was commenting only on the coding style either use a guard to the left of the arrow or place the conditional on the next line that makes it easier to see the difference between the two which is exactly what you just explained
; general
I guess my question boils down to It is not allowed means that something will go wrong if you try it nevertheless What exactly will go wrong and can we give a good error message in this case
; general
nice little actors 1 only one small nitpick destination pairs better with source than with sdr
; general
Agreed on the preliminary nature but Patrik is right in that this pattern ActorRefFactory  ActorRef should not be used just create Props instead of course people can point the gun at their feet and pull the trigger but we should not show them how to do that
; general
since the sender is already part of the request why not let it travel full circle I have not read where this is used but I can imagine that that would allow users of this interface to keep less state
; general
the journal might later want to live somewhere below systempersistence instead of user
; general
please add a link to UntypedProcessor so that Java users find it quicker and copyadapt the doc to make a nice javadoc out of it as well
; general
The sender parameter will become necessary later when Im going to implement reliable channels Should I find another way to implement that Ill switch back to the sender that is part of the request
; general
this line needs to go outside the withBatch
; general
Whats the advantage
; general
This would change the impl to something like     val sm  withBatch  batch       val ps  if sisInstanceOfPromiseActorRef contextsystemdeadLetters else s      val sm  pmcopysender  SerializationserializedActorPathps      val pid  numericIdsmprocessorId      batchput       batchput       sm        ptellWrittensm sWhat do I gain
; general
My assumptions about LevelDB API might be incorrect but it looks like the gain is that the confirmation is now sent after the write has completed not before
; design
Doh of course
; general
yes Ive seen that you use the implicit sender now instead of an explicit one I remarked here mainly because of the visual inconsistency between Write and Written ie either use the implicit sender in both cases or not at all I tend to favor the latter because it is harder to get wrong
; general
This is not used elsewhere put it inside nodeRing
; general
Isnt this weird
; general
else slice wut
; general
I suspect this is a bug
; general
why not use sendGetContacts here as well
; general
why is this needed in state active
; design
Hmm actually Im thinking about making this pubSubMediator  msg pipeTo sender to allow the cluster client to operate without requiring inbound connections from all the other cluster nodes The problem obviously are multiple replies so instead wed need to create child actors for all clients DeathWatch would take care of cleaning them up AFAICS
; general
making this a TreeSet gets rid of some more lines further below
; general
we should package these features up as extensions which just do the right thing
; design
yes I suspect that too scalaval slice    val first  ringfromatailtakenumberOfContacts  if firstsize  numberOfContacts first  else first  ringtakenumberOfContacts  firstsizesender  Contactsslicemap
; general
this bonjour message should turn up at a testActor sooner or later shouldnt it
; general
I guess you wanted to assert that you only possibly get hi again but you might not In that case fishForMessage might be more appropriate since that actually fails when something unmatched is encountered
; general
That is an interesting suggestion I wanted to keep the server receptionist stateless of connected clients but one of the primary goals was to minimize number of connections on the client side I agree that the replies defeats that goal I will create child actor per client Cleanup cannot be done with death watch Its not reliable outside cluster Client may also change receptionist I think receive timeout based approach is fineIt will still be possible for client to talk directly to an actor but that decision is made by the client Makes a lot of sense
; design
Yupp this is indeed a bug thanks
; general
Usage of receive timeout in this actor is a thinko
; design
Well I was thinking ahead of time InitialContacts will be ActorSelection and contacts will be ActorRefs
; general
you mean like    fishForMessage2 seconds         case hi again  true      That doesnt work It fails with assertion failed timeout 2 seconds during fishForMessageThis is a more strict receiveWhile      receiveWhile2 seconds         case hi again         case other       failunexpected message   other
; general
Its received by the testActor on the node that is just about to be shutdownThe purpose of the bonjour message is to find out which node the client is connected to so I can shutdown that node
; general
Minor alternativescalaOptionrolefilterNot  isEmpty
; general
Why 4 I think this is used somewhere else too Maybe extract to common val
; general
I just have to say it I love for comprehensions 1
; general
True but that is 3 allocations instead of 1
; general
True Conciseness has a penalty at times
; general
ford  pruneDeadline if disOverdue context stop self
; general
Id check if subscribers contains ref before since if youre trying to remove a nonmember youll reset the deadline every time Or perhaps that is the semantics but it looks accidental
; general
requirerforallclusterselfRolescontains sThis cluster member selfAddress doesnt have the role role
; general
you could hide the version variable like so scalaval nextVersion    var version  0L        val current  SystemcurrentTimeMillis    version  if current  version current else version  1    version
; general
message should include an explicit hint that this Put is ignored
; general
add guard for refsisEmpty
; general
while Put is explicitly local Subscribe may happen from remote hence there should be an acknowledgement so that message loss can be counteracted
; general
topic should be any String right In this case it must be URLencoded further below
; general
this assumes that version  timestamp which is only true if the Put rate is  gossipInterval  1ms this could be fixed by not bumping the version in put if the current version has not yet been gossiped or you could measure the time in s instead simply multiplying by 1000
; general
ah it feels good that certain decisions already pay off
; general
NICE This is an extremely clear and concise pushpull gossip implementation
; general
scalaval names  receiveWhilemessage  2     case hello all  lastSenderpathname  namestoSet must beSetu8 u9
; general
I dont get it The version is bumped on Put and Remove It would only be a problem if the sustained modification rate is  1000s I dont understand why the gossipInterval would affect thisThe idea is that removed entries are first set to None and that is spread to all nodes and thereafter the entries can be pruned after a few minutesHowever I see that I did a mistake to compare with currentTimeMillis I should compare bucketversion  version
; general
yes it would only be a problem if the sustained Put rate is rather high but as I said you can retain the meaning of version  timestamp by not bumping it when that is not really needed or am I missing something
; design
ok then we are on the same pageDeferring bump of the version would complicate things and its only a theoretical problem
; general
I LOVE IT
; general
If undefined or if empty string
; general
I dont understand why we need to do all these allocations on every new actor We should only need to allocate things if we need to change what the user provided
; design
isnt this sort of weird that we call it dispatcherId in one place and dispatcher in the other
; general
This should be completely decluttered once we change Props to not hold anything but the creator and a Deploy anymore which I thought should be part of this ticket as well But lets discuss tomorrow since there is significant overlap with ticket 3081httpswwwassemblacomspacesddEDvgVAKr3QrUeJe5aVNrtickets3081
; general
yes me too
; general
I dont see why not it holds a public default value
; design
I disagree I dont want to removing the programatic API Example create child actor with preferred dispatcher the same as parent Im sure there are more dynamic scenarios as well
; design
no please read the thread linked to from the ticket it is a pure cleanup no semantics are lost
; general
ok I misunderstood your comment
; general
That is why it is in quotes I guess In code it is named dispatcherAnyway I will change the docs
; general
ok I have changed here and in cluster referenceconf
; general
thanks foreach it is
; general
viktorklang I changed to only create things when dispatcher is defined in conf
; general
when making genjavadoc I read that code is the usual markup for code if thats not correct then we should correct that
; general
since these kinds of code blocks are not so usual constructs in Java land AFAIK it might help to add a short example
; general
since a class by itself does not really return anything an example would also be beneficial here
; design
Im not sure I just looked at javautilList
; general
I think you are right I will change to codehttpstackoverflowcomquestions14537311ttvscodeelementswhenwritingjavadocs
; general
ok I have added snippet
; general
A Set is a predicate so you can write allowedTransitionsoldStatusstatus
; general
I know but I find that less intuitive to read but if that is a general opinion I will adjust
; general
hmm I would find requireallowedTransitionoldStatusnewStatus quite intuitive
; general
So to recap the only effect of the guards was to force these sloppy copies to be semantically correct transitions Thatd be good news indeed
; general
that will be added by bantonsson to all cluster events and related data
; general
Nice Perhaps put it as a  note
; general
I have no objection to that but where is note documented  I dont think I came across that directive in my skim of the pointedto guidelines
; general
Okay  figured it out and committed that  Still cant find it documented though
; general
Why this change
; general
Should we support datasize units in the config format
; general
This one shouldnt exist anymore
; general
Change this to a fixme so its caught in the FIXME searches
; general
Sexy But why lazy val objects are lazily initialized anyway
; general
instead of path  path  default you can get away with default
; general
What is this used for No docs
; general
Compression doesnt exist anymore
; general
1 was the default before also but it was specified in code1 makes sense because router  direct is the defaultOn Sat Nov 19 2011 at 1250 PM viktorklang replyreplygithubcom wrote        available direct roundrobin random scattergather                   leastcpu leastram leastmessages        or        fully qualified class name of the router class        default is direct        if replication is used then the only available router is direct           nrofinstances  3  number of actor instances in the cluster          nrofinstances  1  number of actor instances in the cluster Why this change  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull116filesr240574
; design
The config lib supports bytes in various units I can see if that can beused hereOn Sat Nov 19 2011 at 1251 PM viktorklang replyreplygithubcom wrote   15114 15015  akka            maxitems  2147483647           maxsize  2147483647           maxitems  2147483647          maxitemsize  2147483647 Should we support datasize units in the config format  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull116filesr240576
; general
The reason was to not load the defaultConfig if only referenceConfig wasused Do you see a problem with thatOn Sat Nov 19 2011 at 1252 PM viktorklang replyreplygithubcom wrote   1236 10248  object ActorSystem            object DefaultConfigurationLoader         lazy val defaultConfig Config  fromProperties orElse fromClasspath orElse fromHome getOrElse emptyConfig Sexy But why lazy val objects are lazily initialized anyway  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull116filesr240579
; design
It is to pimp the config with the additional methodsgetConfigOptiongetStringOptionOnly used at a few places and if you dislike the implicit I can rewritethat to ordinary inlined match conditionsSee usage in for example DeployerlookupInConfigOn Sat Nov 19 2011 at 103 PM viktorklang replyreplygithubcom wrote   00 128       Copyright C 20092011 Typesafe Inc httpwwwtypesafecom       package akkaconfig  import comtypesafeconfigConfig    object ConfigImplicits     implicit def decorateConfigconfig Config  new ConfigWrapperconfig      class ConfigWrapperconfig Config  What is this used for No docs  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull116filesr240583
; design
compression is used herehttpsgithubcomjbonerakkablobmasterakkaremotesrcmainscalaakkaremoteRemotescalaL133On Sat Nov 19 2011 at 105 PM viktorklang replyreplygithubcom wrote   00 155      Akka Remote Reference Config File        This the reference config file has all the default settings   Make your editsoverrides in your akkaconf    akka       remote        FIXME rename to transport      layer  akkaclusternettyNettyRemoteSupport        usecompression  off Compression doesnt exist anymore  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull116filesr240585
; design
I dont mind but it doesnt look like we have standardized on that Thereis 103 TODO and 83 FIXME in the code baseWhy not add FIXME to the search filterOn Sat Nov 19 2011 at 1252 PM viktorklang replyreplygithubcom wrote      val DebugLifecycle  getBoolakkaactordebuglifecycle false      val FsmDebugEvent  getBoolakkaactordebugfsm false      val DebugEventStream  getBoolakkaactordebugeventstream false        val DispatcherThroughput  getIntakkaactorthroughput 5      val DispatcherDefaultShutdown  getLongakkaactordispatchershutdowntimeout        maptime  Durationtime DefaultTimeUnitgetOrElse1 second      val MailboxCapacity  getIntakkaactordefaultdispatchermailboxcapacity 1      val MailboxPushTimeout  DurationgetIntakkaactordefaultdispatchermailboxpushtimeouttime 10 DefaultTimeUnit      val DispatcherThroughputDeadlineTime  DurationgetIntakkaactorthroughputdeadlinetime 1 DefaultTimeUnit        val Home  getStringakkahome      val BootClasses  getListakkaboot        val EnabledModules  getListakkaenabledmodules       TODO move to cluster extension Change this to a fixme so its caught in the FIXME searches  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull116filesr240578
; design
and I mean Why not add TODO to the search filterOn Sat Nov 19 2011 at 341 PM Patrik Nordwallpatriknordwallgmailcomwrote I dont mind but it doesnt look like we have standardized on that There is 103 TODO and 83 FIXME in the code base Why not add FIXME to the search filter On Sat Nov 19 2011 at 1252 PM viktorklang  replyreplygithubcom  wrote      val DebugLifecycle  getBoolakkaactordebuglifecycle false      val FsmDebugEvent  getBoolakkaactordebugfsm false      val DebugEventStream  getBoolakkaactordebugeventstream false        val DispatcherThroughput  getIntakkaactorthroughput 5      val DispatcherDefaultShutdown  getLongakkaactordispatchershutdowntimeout        maptime  Durationtime DefaultTimeUnitgetOrElse1 second      val MailboxCapacity  getIntakkaactordefaultdispatchermailboxcapacity 1      val MailboxPushTimeout  DurationgetIntakkaactordefaultdispatchermailboxpushtimeouttime 10 DefaultTimeUnit      val DispatcherThroughputDeadlineTime  DurationgetIntakkaactorthroughputdeadlinetime 1 DefaultTimeUnit        val Home  getStringakkahome      val BootClasses  getListakkaboot        val EnabledModules  getListakkaenabledmodules       TODO move to cluster extension Change this to a fixme so its caught in the FIXME searches  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull116filesr240578
; design
FIXME  Thing that needs attention before releaseTODO  Thing that is intentionally left blank until need to take care of arises
; general
But the DefaultConfigurationLoader should only be loaded if default configuration is used right
; general
Is this the Scala API of the config stuff
; design
Ah I think its misnamed since it doesnt allude to what gets compressed
; general
Ok got itOn Sat Nov 19 2011 at 655 PM viktorklang replyreplygithubcom wrote      val DebugLifecycle  getBoolakkaactordebuglifecycle false      val FsmDebugEvent  getBoolakkaactordebugfsm false      val DebugEventStream  getBoolakkaactordebugeventstream false        val DispatcherThroughput  getIntakkaactorthroughput 5      val DispatcherDefaultShutdown  getLongakkaactordispatchershutdowntimeout        maptime  Durationtime DefaultTimeUnitgetOrElse1 second      val MailboxCapacity  getIntakkaactordefaultdispatchermailboxcapacity 1      val MailboxPushTimeout  DurationgetIntakkaactordefaultdispatchermailboxpushtimeouttime 10 DefaultTimeUnit      val DispatcherThroughputDeadlineTime  DurationgetIntakkaactorthroughputdeadlinetime 1 DefaultTimeUnit        val Home  getStringakkahome      val BootClasses  getListakkaboot        val EnabledModules  getListakkaenabledmodules       TODO move to cluster extension FIXME  Thing that needs attention before release TODO  Thing that is intentionally left blank until need to take care of arises  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull116filesr240675 Patrik NordwallTypesafe httptypesafecom  EnterpriseGrade Scala from the ExpertsTwitter patriknw
; design
I can make like that by moving referenceConfig to another place which Ithink is a good ideaOn Sat Nov 19 2011 at 656 PM viktorklang replyreplygithubcom wrote   1236 10248  object ActorSystem            object DefaultConfigurationLoader         lazy val defaultConfig Config  fromProperties orElse fromClasspath orElse fromHome getOrElse emptyConfig But the DefaultConfigurationLoader should only be loaded if default configuration is used right  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull116filesr240677 Patrik NordwallTypesafe httptypesafecom  EnterpriseGrade Scala from the ExpertsTwitter patriknw
; design
No it was only a convenience thing I added After thinking about it I havedecided to remove it Its not motivated Stay tunedOn Sat Nov 19 2011 at 656 PM viktorklang replyreplygithubcom wrote   00 128       Copyright C 20092011 Typesafe Inc httpwwwtypesafecom       package akkaconfig  import comtypesafeconfigConfig    object ConfigImplicits     implicit def decorateConfigconfig Config  new ConfigWrapperconfig      class ConfigWrapperconfig Config  Is this the Scala API of the config stuff  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull116filesr240678 Patrik NordwallTypesafe httptypesafecom  EnterpriseGrade Scala from the ExpertsTwitter patriknw
; design
ConfigImplicits removed in latest commitOn Sat Nov 19 2011 at 700 PM Patrik Nordwallpatriknordwallgmailcomwrote No it was only a convenience thing I added After thinking about it I have decided to remove it Its not motivated Stay tuned On Sat Nov 19 2011 at 656 PM viktorklang  replyreplygithubcom  wrote   00 128       Copyright C 20092011 Typesafe Inc httpwwwtypesafecom       package akkaconfig  import comtypesafeconfigConfig    object ConfigImplicits     implicit def decorateConfigconfig Config  new ConfigWrapperconfig      class ConfigWrapperconfig Config  Is this the Scala API of the config stuff  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull116filesr240678  Patrik Nordwall Typesafe httptypesafecom  EnterpriseGrade Scala from the Experts Twitter patriknw
; design
Rename to rootPath
; general
systemSettings would be nice
; general
Could be rootPath instead
; general
Docs for the methods bitte
; general
Add FIXME comment to remove this
; general
def tempName    Helpersbase64tempNumbergetAndIncrement
; general
Alternative to have one field and then a CAS to put in an immutable datastructure with all the values
; general
Add comment to make the default scheduler configurable
; general
If this is called multiple times
; general
done Ive decapitalized it though
; general
changed all to system now
; general
I dont think thats worth it here I still have to make the vars private but then everything is controlled by the provider and cannot be fed with
; design
added an IllegalStateException in that case
; general
Do you really want to force the size to know if empty
; general
Why a val
; general
Possible to use testActor instead and do an expectMsgsum to get rid of latch
; general
Why a val here
; general
No reason Ill change to defOn Mon Nov 14 2011 at 1126 PM viktorklang replyreplygithubcom wrote    class ZooKeeperBasedMailboxExceptionmessage String extends AkkaExceptionmessage         author a hrefhttpjonasbonercomJonas Bon233ra      privateakka object ZooKeeperMailboxConfig     val zkServerAddresses  configgetStringakkaactormailboxzookeeperserveraddresses localhost2181    val sessionTimeout  DurationconfiggetIntakkaactormailboxzookeepersessiontimeout 60 TIMEUNITtoMillistoInt    val connectionTimeout  DurationconfiggetIntakkaactormailboxzookeeperconnectiontimeout 60 TIMEUNITtoMillistoInt    val blockingQueue  configgetBoolakkaactormailboxzookeeperblockingqueue true  class ZooKeeperBasedMailboxval owner ActorCell extends DurableMailboxowner with DurableMessageSerialization       val zkServerAddresses  appconfiggetStringakkaactormailboxzookeeperserveraddresses localhost2181    val defaultTimeUnit  appAkkaConfigDefaultTimeUnit Why a val here  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull110filesr228592 Patrik NordwallTypesafe httptypesafecom  EnterpriseGrade Scala from the ExpertsTwitter patriknw
; design
What is the questionOn Mon Nov 14 2011 at 1121 PM viktorklang replyreplygithubcom wrote   1409 14211  object QDumper          Systemexit0              val app  ActorSystem   Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull110filesr228567 Patrik NordwallTypesafe httptypesafecom  EnterpriseGrade Scala from the ExpertsTwitter patriknw
; design
Dont use symbols they are registered in a global object
; general
Use tryComplete instead of this bandaid
; general
What if the statements above throw an exception
; general
Might want to document that this does a busywait
; general
then match against them explicitly so that illegal states are not silently swallowed
; general
document the busy waiting
; general
Shouldnt stop make sure that resultisCompleted so that isTerminated shows the right stuff
; general
if path was never called nobody can possibly be watching us Id bet this can be omitted
; general
should directly transition to RefStopped no need for busy
; general
yes needs try publish finally unregister
; general
transition directly no need for busy
; general
Id rather use a volatile private var state AnyRef and update using akkautilUnsafe
; design
Ok no problemJust out of curiosity why are Symbols a bad thing here
; general
We need to fulfill the path contract and always return a valid path even after the ref has been stoppedHere I wasnt sure whether providertempPath could conceivably throw an exception and how wed best deal with this case
; general
you mean the problem lies in their implementation using WeakReferences and their associated extra GC cost right
; design
The prevent a compiler warning on an incomplete matchWe probably dont want to resort to a sealed trait based solution in order to have to wrap the hot case ActorPath
; design
This was not the case before and I didnt want to change the behavior
; general
Cool even better
; general
Right of courseAt first I had the stateset after the deathWatchpublish and providerunregisterTempActor which results in a deadlockSince it can be moved up the busy state can indeed be skipped excellent
; general
This is also giving me the creeps need to look more closely how long exactly it might be spinning
; general
Since temp path creation and temp actor registration were in the hot path before I assumed that they would be fast enough to not having to worry about the spinning hereBut maybe some analysis is needed
; design
Not only that it uses locks and its a shared global structure There is 0 value in using Symbols and a lot of cost so if you need a flag use a case object
; general
As far as my little REPLexperiments have revealed Symbols are cached in static final fields in those classes which use them so there should be no overhead after the class has been initialized That is not to say that we always use case objects for the other reasons though
; design
Ewww That was even worse Also Symbols arent typesafe so a slight misspelling can trip things up goodJust use case objects if you need states KTHXBAI
; general
this calls providertempPath while spinning wasnt Registering meant to be used to prevent wasting names like this
; general
Yes Im optimizing for the common case which is probably still quite uncommon in reality In rare cases it might indeed happen that two threads want to get a previously uninitialized path of a Ref that has already been stopped at the same time One is going to make it the other one will have wasted a temp path Actually there is no tempPath creation in a real spinning scenario here In order to waste 10 temp path creations 10 threads need to get to this branch at the same timeDue to the rather limited wasting in quite rare scenarios I took the shortcut routeFully protecting this branch would require another state token or renaming of the Registering state which I wanted to avoid for code readability reasons as well
; general
Why is the payload an array of bytes instead of just putting in an AnyRef and let Akka Serialization do the marshallingunmarshalling
; general
Havent looked at the akka serialization yetWill incorporate this thanks for the hint
; general
Youre most welcome
; general
Isnt this extremely unsafe
; general
Dont capture this in your callbacks Which you will do if you capture channelIm not keen about sending around closures either since it makes your program communicate using shared state
; general
So create a message that you send to channelActor that doesnt close over state and then use AskPattern instead of creating your own Promise
; general
What happens if this actor is restarted before onAvailable is triggered
; design
This doesnt make any sense
; general
Uses sharedstate concurrency dont do it
; general
Just remove all the numerous imports of this and place it at top level DRY
; general
Right Ill leave the callback only for specialized access to the channel but will make the messaging part more explicit by just sending the Message to the channel actor
; general
Ill rework this whole idea Dont really like it myself too S
; general
You mean restarted while being startingcreated
; general
needs to be privatecamel  we talked about it
; general
needs to be privatecamel
; general
needs to be privatecamel
; general
needs to be privatecamel
; general
Will this work what if you have 2 subtrees with the same name that are then created remotely then theyll conflict under remote
; general
Yes but youll have configured the conflict explicitly yourself This is the same kind of conflict you get when trying to create the same child twice BTW we need a strategy for that one as well My proposal is to return deadLetters
; general
Then we should make this a configuration error
; general
Yes if we can detect it Do we require that configs are in sync for collaborating remote systems In that case we have the full picture
; general
If you by collaborating mean where we support remote supervision then yes
; general
Okay got it
; general
I suggest elements or parts or something like that pathpathElements feels a be repetitive
; general
Is this user APII think I need convincing if it is Also the name of LookupPath is misleading it doesnt lookup a path
; general
Should it really be ActorRefpath wouldnt it make more sense to use URI ActorRefuri
; general
Or arent all akkasystemhostportxxxyyy  Perhaps a toURI method else
; general
Sweet API and test
; design
Use an akkautilSwitch instead
; general
Isnt this logically a write
; general
Cant we just do a mailbox status read before reading this its racy anyway so we only need to ensure memory visibility
; general
Terminate is prolly cheaper
; general
That is a good check
; general
Why List and not Seq or Vector or IndexedSeq
; general
Isnt this racy anyway and is null useful is it only for internal usage
; design
Whats up with the ActorPathseparator Are we back in Fileseparator country
; general
Is this premeditated Will eat memory
; general
yes elements is the way to go will change that
; general
Doh Its only for the root
; general
No its just a case class declared in the test
; design
Maybe collect the paths in collection and do mkString at the end to reduce string concatenation
; general
You guessed itAlso use pbhash
; general
All paths conform to URI when toStringed but they are different beasts internally and you should prefer to use them directly even thought using their toString also works in most cases Adding a toURI would be trivial even without the intermediate String please add a ticket if you want to see it done because I dont have a usecase for it
; general
Isnt that quite a bit too heavy in this context
; general
no the only thing which must be protected against concurrent enqueue which is a read is shutdown
; design
true will investigate
; general
check your javap this compiles to exactly one instanceof test
; general
and it was the only reason why I touched HWT at all to guarantee either execution or exception
; general
because the algorithms for traversing path structures rely heavily on headtail which is most effectively done using List All others would have to allocatecopy objects during the traversal
; general
Well its so internal that you can remove it and nothing breaks meaning that this is some residue of a discontinued solution to the problem
; design
tempName is sideeffecting use tempName
; general
Okay will change to hardcoded Cannot really be changed due to URI compatibility anyway
; general
Isnt that included in the package of making the whole class final
; design
tailrec would have told me already  Seriously inner methods are always final
; general
ah right oversight
; general
I will as soon as you point me to the research detailing how to mix in a different value using PBs code
; general
Should this be overridable
; general
Should this be overridable
; general
Should this be overridable
; general
Should this be overridable
; general
Damn clean Mr Kuhn damn clean
; general
yes eg TestActorRef
; general
DO NOT USE THIS EXCEPT INTERNALLY IN AKKA
; general
Are these methods seen from Java
; general
only if you downcast but there is nothing we can do against that We need these methods from FaultHandlingStrategy
; general
I have reviewed all parts of the shutdown and it looks good
; general
when will this happen It will stop the other tasks from close to executed but that is maybe fine
; general
Thanks I am currently chasing one slightly mysterious bug in this area but its good that you agree with the approach
; general
yes that was the intention it has been argued that InterruptedException should be propagated upwards as fast as possible on a besteffort basis and this is my interpretation in the context of forcefully stopping a timer service
; general
hashedWheelTimerstopasScala foreach execDirectly
; general
yup will do
; general
yes you can be sure that Ill check with the profiler after merge
; general
size is an ON op check isEmpty  tailisEmpty
; general
Ive seen some issues with this being null why null
; general
I generally prefer to use unit explicitly  Unit
; general
Users still cannot get to the provider right
; general
Add an explicit return type here
; general
Love the docs great work
; general
Add ScalaDoc Internal use only
; design
These two are
; general
Should this really default to null
; general
Should this really pipe back an exception
; general
I think I preferchildrengetnamehead match   case null  Nobody  case some     val t  nametail    if tisEmpty c    else cgetChildt
; general
this is schedule not exec
; general
Shouldnt this verify that the IllegalState was from it being stopped
; general
my research indicates that this is the case httpstackoverflowcomquestions3961881whydefiningclassasfinalimprovesjvmperformance
; general
Should we really mandate that all addresses are IPbased AMQP 0MQ etc
; general
Ive replaced it with a single StringBuilder instead and added a ticket about a possible further optimization if needed which would cost memory
; design
Why return instead of else if
; general
Y NO MARKET
; general
Check the causemessage
; general
This name isnt really that awesomized
; general
is a wonderful thing
; general
This wont work this is loaded from config in master
; general
case RemoteActorPathremoteAddress elems if elemsisEmpty
; general
If this method is really invoked there are no child paths to consider so this should not be a problem If there are children the method is overridden
; general
because that is what it is on ScalaActorRef  Seriously though it is converted to deadLetters in ActorCelltell and we cannot really require that implicitly because then everybody would need to have an implicit ActorSystem around
; general
well usual answer you can downcast an ActorSystem
; general
It doesnt really break anything plus its privateakka already but I added a scaladoc comment
; general
Thats for another patch series
; general
is there an animated unicode character which somehow sparkles
; general
yes because thats what ScalaActorRef does but I have added a check to guard against humongous stupidity
; general
Yes the contract of actorOf is that it throws an exception in case of an invalid eg alread taken name so this must be propagated to the true caller
; general
Nope our HWT throws ISE instead of RejectedExecution is all
; general
well thats why I left it open hostPort is just that part of the URI where normally host and port are found you can put in there anything which is valid for that part of a URI
; general
will see during merge
; general
its only used on those two lines but I can change it
; general
then Id have to import systemdeadLetters as  does not play nice with backticks
; general
On Mon Dec 5 2011 at 332 PM viktorklang replyreplygithubcom wrote   4597 6059  class DefaultSchedulerhashedWheelTimer HashedWheelTimer log LoggingAdapter            Check if the receiver is still alive and kicking before sending it a message and reschedule the task           if receiverisTerminated              receiver  message            timeoutgetTimernewTimeoutthis delay            try timeoutgetTimernewTimeoutthis delay catch               case  IllegalStateException   stop recurring if timer is stopped Shouldnt this verify that the IllegalState was from it being stoppedIf not already done the IllegalStateException should be well documented inthe api of the Scheduler because now we rely on that behavior for properdispatcher shutdown and the Scheduler is in theory replaceable  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull119filesr269820 Patrik NordwallTypesafe httptypesafecom  EnterpriseGrade Scala from the ExpertsTwitter patriknw
; design
val path  rootPath  bubblewalker is there an animated unicode character which somehow sparklesLOL
; general
Like it a lot Good work Davy Jones
; general
Why not make procotol a type Why not separate host and port Using hostPort relies on convention with
; general
The basis of my implementation is that an ActorPath should be representable as and represent a URI meaning that the protocol part is a string and following the  there is something of the form authserverport where the three parts are just named according to convention we actually use the auth part as ActorSystem name and different transports may use serverport in different ways but eg none of it can contain any slashes If that is not okay Ill have to change it But I see great utility in having a welldefined string representation which is powerful enough to serve as serialization format
; design
Ok I trust your design Go with what you think is bestOn Tue Dec 6 2011 at 1201 PM Roland Kuhnreplyreplygithubcomwrote   package akkaactor import javanetURI import javanetURISyntaxException     The address specifies the physical location under which an Actor can be   reached Examples are local addresses identified by the ActorSystems   name and remote addresses identified by protocol host and port   abstract class Address   def protocol String  def hostPort String  transient  override lazy val toString  protocol    hostPort  The basis of my implementation is that an ActorPath should be representable as and represent a URI meaning that the protocol part is a string and following the  there is something of the form authserverport where the three parts are just named according to convention we actually use the auth part as ActorSystem name and different transports may use serverport in different ways but eg none of it can contain any slashes If that is not okay Ill have to change it But I see great utility in having a welldefined string representation which is powerful enough to serve as serialization format  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull119filesr272877 Jonas BonrCTOTypesafe  EnterpriseGrade Scala from the ExpertsPhone 46 733 777 123Twitter jboner
; design
why not 60 seconds
; general
oops 0ms was a typoOn Mon Nov 21 2011 at 426 PM viktorklang replyreplygithubcom wrote         corepoolsizefactor  80       No of core threads  ceilavailable processors  factor         maxpoolsizefactor   80       Max no of threads  ceilavailable processors  factor         taskqueuesize  1              Specifies the bounded capacity of the task queue  1  unbounded         taskqueuetype  linked        Specifies which type of task queue will be used can be array or linked default         allowcoretimeout  on           Allow core threads to time out         throughput  5                    Throughput for Dispatcher set to 1 for complete fairness        throughputdeadlinetime  1     Throughput deadline for Dispatcher set to 0 or negative for no deadline        throughputdeadlinetime  0ms   Throughput deadline for Dispatcher set to 0 or negative for no deadline sexiest  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull118filesr242134 Patrik NordwallTypesafe httptypesafecom  EnterpriseGrade Scala from the ExpertsTwitter patriknw
; general
you mean with implicits from akkautilduration sureOn Mon Nov 21 2011 at 426 PM viktorklang replyreplygithubcom wrote   147 157  class TellThroughputPerformanceSpec extends PerformanceSpec       def createDispatchername String  ThreadPoolConfigDispatcherBuilderconfig        new DispatchersystemdispatcherFactoryprerequisites name 5        0 UnboundedMailbox config 60000 ThreadPoolConfig        DurationZero UnboundedMailbox config Duration60 TimeUnitSECONDS ThreadPoolConfig why not 60 seconds  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull118filesr242130 Patrik NordwallTypesafe httptypesafecom  EnterpriseGrade Scala from the ExpertsTwitter patriknw
; design
what if the cause is not serializable endless loop
; general
javalang Class ThrowablejavalangObject  javalangThrowableAll Implemented InterfacesSerializableDirect Known SubclassesError Exception
; design
Yes but our world being Java Serializable does not have anything to do with whether a class is actually serializable or not So youre basically saying if you have a factually nonserializable exception in there and happen to send RemoteClientShutdown over the network then you should be prepared to handle the endless loop
; design
What are our options
; general
implement private void writeObjectjavaioObjectOutputStream out throws IOException which tries outdefaultWriteObject and substitutes the exception by null if that fails
; design
I dont think that will work since what do you do if it is the message that cannot be serializedTry to write your writeObject youll see what I mean
; general
This will allocate a new PF every call to it
; general
This will allocate a new PF every call to it
; general
final override val
; general
final override val
; general
final override val
; general
You arent using it as a PartialFunction so whats the purpose of having it return a partialfunction
; general
You arent using it as a PartialFunction so whats the purpose of having it return a partialfunction
; general
should it just silently swallow messages
; general
I strongly advice to make it a method from Any to Any
; general
I strongly advice to make it a method from Any to Any
; general
The first thing the user would do in transform they would cast it so partial function seems to be good from the usability point of view ieoverride val transformResponse   case msg CamelMessage  msgbodyAsString  so if we change it to Any  Any we are forcing user to type moreoverride def transformResponsemsgAny  msg match  case msg CamelMessage  msgbodyAsString  I agree with the val vs def lets change it to val
; general
yes it is not silently  it has to be explicitly configured by user
; general
Please dont expose ActorSystemImpl like this it will be abused and something will break use composition instead of inheritance
; design
This will be used automatically if you use the factory method dont pass in a loader and the context loader is nonnull
; design
undocumented naming convention is that all args with shall not become fields ie only passed to super constructor get leading underscore please add them no such rule for secondary constructors because their arguments dont become fields
; general
why not use MigrationSystem
; general
This facility is intended to be permanent right Then it should have very clear warnings that it is not suited for serious work because you should properly design an actor system as a hierarchy where toplevel actors form the Error Kernel ie creating them is not the rule but very much an exception
; design
Please put the same warningsexplanationsrationale as on the trait people might overlook them
; general
if s ne null s    else           or    tlget match       case null       case x  x
; general
this wont fly breaks horribly in all kinds of cases not even thinking about remoting ActorRefs MUST be properly registered with the provider because they must just work we cannot add crippled ActorRefs
; general
mutable queue and synchronized is not how we roll this looks more like a ConcurrentLinkedQueue to me The rest is threadlocal so what needs guarding
; general
this is begging for memory leaks please adhere to inorder reception policy
; general
this blows up toString and everything else see comment above
; general
this will be fixed once you switch to CLQ
; general
please have a look at TestKitTestProbe because that does nearly exactly what you want here
; general
background to the question you have smart actor creation here but not on the MigrationSystemAlso all systems should be configurable please read in something like ConfigFactoryloadgetConfigActorDSLSystem
; design
This trait is supposed to keep working once it moves into stdlib right Then it should be in the envisioned package already now otherwise it will be incompatible On the other hand who would actually use this type on a value Exchanging implementation will not be a sourcecompatible operation anyway unless Im missing something
; design
this is not used anywhere right if it were the mydispatcher would not be defined
; general
I usually prefer to explicitly use EventFilterExceptionoccurrences  N intercept  around every such site because it ensures that expected exceptions are thrown
; general
calling this self conflicts with many preexisting uses consider renaming it to threadActor or something equally descriptiveexplicit
; general
why not use forcomprehension here also whilevar just smells bad
; general
commented tests are not nicePlease add tests for looking up threadActors using systemactorFor and examining their path printing them etc
; general
Would you like to create delegate method for all public methods in the API of ActorSystem or just for actorOf that is used in migration
; design
I think the best compromise would be to directly have the ActorDSL on it and otherwise expose the rest via a val system ActorSystem
; design
To clarify youre suggesting object MigrationSystem extends ActorDSL right Sounds good
; design
Yes and it would save quite some lines  effort to put the implementation inside that trait with just an abstract def system ActorSystem in which the two objects would differ
; design
Fixed I replaced the queue with a LinkedBlockingDeque leading to a dramatic simplification of receive
; general
I guess there will be some functionality coming later which uses this right Anyway dont forget to null out the ref once done
; general
Id still argue for retaining that information by queuing Any ActorRef and then exposing the sender like in TestKit ie lastSender
; general
This line makes 0 sense to me
; general
This probably will risk shadow self in Actor right Is that intentional
; design
Why have multple TLs instead of just one with different states Keeping multiple TLs up to date is complecting things
; general
Why is start called here
; general
When are these cleaned up
; general
Stop the entire ActorSystem if not Exception
; general
This was INFO in your other pull request
; general
mark this as inline final
; general
This is only an sample in the documentation I only fixed the wrong changed configuration of it
; general
done thxOn Mon Nov 28 2011 at 1022 AM viktorklang replyreplygithubcom wrote        case InitializeLogger          loginfoSlf4jEventHandler started         sender  LoggerInitialized          def withMdcname String value StringlogStatement  Unit  mark this as inline final  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull125filesr253826 Patrik NordwallTypesafe httptypesafecom  EnterpriseGrade Scala from the ExpertsTwitter patriknw
; general
Is there any sensible reason why we have 2 different log levels stdout and the other
; general
I think it would be good to clarify what the point of this option is
; general
I generally omit braces when theres only one line
; general
I think we need to clarify extensions here Akka Extensions link to docs
; general
I think theres a ticket for restoring this functionality if there isnt create it and assign it to 20
; general
I feel that there are too many names at play herename clustername nodename
; general
I suggest making this named findExtension and return Option avoid NPEs
; general
this should beextensionsgetkey  null
; general
Then problem here is now weve made internal API userlevel API for those users who write extensions but perhaps that is ok
; design
Shouldnt this be a part of the serialization extension
; general
This should also be a part of the serialization extension
; general
The apply method seems like boilerplate for every and all keys
; general
I dont think this is a good pattern in general Extensions should be registered beforewhile initializing the ActorSystem and then only used Otherwise it will be quite hard to debug in user code I mean if something goes wrong during registerExtension
; general
Yes this separation of init  key is a good thing
; general
will this fail horribly enough with clear indication if somehow the lazy vals are forced too soon My stylistic preference would be to keep all that init code within the actual init method
; general
and then extension would need to be changed to handle ie await the CountDownLatch case
; general
Hmm we might well choose to introduce a new interface for this level of access just so we can shuffle around the implementation just a little bit
; design
you could directly extract the TestEventFilterLeeway here
; general
I would change all these to be just extractors without the getorcreate semantics
; general
The CountDownLatch was the reason for x ExtensionI think that if registration is in progress CountDownLatch then the extension doesnt exist yet and therefore this returns falseI think current impl is correct Tell me if Im wrong I bet you will but just saying
; general
Im not sure what to do with these comments Ill add a FIXME so we dont forget
; general
another view might be that while being under construction hasExtension should return true because given no errors calling extension will return a valid answer maybe blocking for a bit
; general
yup good enough
; general
Serialization is initialized from SerializationExtension I could move all of it to SerializationExtension but I think it is better to have it separated like it is now but I dont have a strong opinion about that
; design
I dont agree I think extensions should be registered on demand when first used Otherwise we have the dependency issue that ActorSystem need to know about all extensions or users need to configure all extensions they useI can remove boilerplate if we add the byname parameters to registerExtension
; general
it will be one line with byname parameter Yes or no
; general
lazy failure will throw exception and then it will try to initialize the lazy val on next accessI think lazy val is less ugly than all volatile var but I would prefer something totally different for all this init stuff unfortunately I cant come up with a good alternative
; general
We should do the byname param in any case do it
; general
ok Ill merge in the minor fixes and merge it into master then Ill dothe byname thingy separatelyOn Thu Nov 24 2011 at 231 PM viktorklang replyreplygithubcom wrote  import comtypesafeconfigConfig  import comtypesafeconfigConfigFactory  import comtypesafeconfigConfigParseOptions  import comtypesafeconfigConfigRoot  import akkautilDuration  import javautilconcurrentTimeUnitMILLISECONDS    object BeanstalkBasedMailboxExtensionKey extends ExtensionKeyBeanstalkBasedMailboxExtension    object BeanstalkBasedMailboxExtension     def applysystem ActorSystem BeanstalkBasedMailboxExtension        if systemhasExtensionBeanstalkBasedMailboxExtensionKey         systemregisterExtensionnew BeanstalkBasedMailboxExtension            systemextensionBeanstalkBasedMailboxExtensionKey     We should do the byname param in any case do it  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull121filesr250773 Patrik NordwallTypesafe httptypesafecom  EnterpriseGrade Scala from the ExpertsTwitter patriknw
; design
SystemcurrentTimeMillis usually has about 30ms of inaccurracy Id definitely recommend switching to SystemnanoTimeAlso bear in mind that our beloved Jenkins isnt the fastest car on the racetrack
; design
5 secondsinstead of the Duration
; general
typo  Ill fix
; general
I find it a bit weird to have a method called toValue that returns a keyvalue pair
; general
Does it throw anything if it cannot find any config if so can you add that to the ScalaDoc for this method
; general
Why no val If not a val and is captured it may not be guaranteed to be visible
; general
application config is not mandatory defaults are always available andits runnable with thatOn Wed Nov 30 2011 at 1105 AM viktorklang replyreplygithubcom wrote     def createname String ActorSystem  applyname    def applyname String ActorSystem  applyname DefaultConfigurationLoaderdefaultConfig          Uses the standard default Config from ConfigFactoryload since none is provided         def applyname String ActorSystem  applyname ConfigFactoryload Does it throw anything if it cannot find any config if so can you add that to the ScalaDoc for this method  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull129filesr260468 Patrik NordwallTypesafe httptypesafecom  EnterpriseGrade Scala from the ExpertsTwitter patriknw
; general
applicationConfig is not intended to be used outside the constructor itsturned intoval configOn Wed Nov 30 2011 at 1107 AM viktorklang replyreplygithubcom wrote   2737 2937  abstract class ActorSystem extends ActorRefFactory      def hasExtensionext ExtensionId  Extension Boolean      class ActorSystemImplval name String val applicationConfig Config extends ActorSystem   class ActorSystemImplval name String applicationConfig Config extends ActorSystem  Why no val If not a val and is captured it may not be guaranteed to be visible  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull129filesr260472 Patrik NordwallTypesafe httptypesafecom  EnterpriseGrade Scala from the ExpertsTwitter patriknw
; design
Add return type
; general
Add return type
; general
Add return type
; general
So its impossible to transform the AnyVals and should be a MatchError
; general
I guess so Whats your thinking
; general
Is there an elegant solution for this problem or we should drop it on the floor like we do now Poor java guys
; design
just do messageasInstanceOfAnyRef
; general
This method only returns Unit not Any
; general
fair enough  it will just box the primitives Wouldnt it
; general
This still is wrong
; general
Sorry for this pingpong
; general
Viktor do we want to keep it that way or should we just use curly braces instead
; general
I think we can leave it as it is
; general
This shouldnt return Any Its Unit
; general
Should return the current number of messages held in this queue may    always return 0 if no other value is available efficiently Do not use    this for testing for presence of messages use hasMessages instead     def numberOfMessages Int
; general
I would have found that if it was also on MailboxnumberOfMessages  will copy the comment
; general
Also if there was support for unsigned integers in Java
; general
I think this is not needed If you specify anything in the natwhitelist youre saying that you accept natwhitelisting
; design
This should most definitely not be a list since multiple entries which are equal should be discarded and since its only used for lookups it should most naturally be a Set which usually have a very fast test for inclusion
; general
I think the natAddress should be passed into natOK and not host  port
; general
Ouch undocumented behavior that an empty whitelist makes ALL unknown addresses whitelisted surprising behavior
; general
This is probably not what we want Cant we just check if the Scheduler is Closeable
; general
Great changes here
; general
Good point Ill make the DefaultScheduler CloseableOn Fri Dec 2 2011 at 1019 AM viktorklang replyreplygithubcom wrote   4008 40311  class ActorSystemImplval name String applicationConfig Config extends Actor           protected def stopScheduler Unit  scheduler match       case x DefaultScheduler  xstop      case                          case x DefaultScheduler  This is probably not what we want Cant we just check if the Scheduler is Closeable  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull134filesr266233 Patrik NordwallTypesafe httptypesafecom  EnterpriseGrade Scala from the ExpertsTwitter patriknw
; design
Why not 1 SECONDS
; general
changed to 1 second
; general
Id be surprised if this is the way to create RoutedActorRefs Jonas
; general
No this is cheating by using lowlevel API that shouldnt even be exposed It should be configured to be a routed ref But that will change when Roland is done
; design
Same here Should not be used
; general
Ok Ill wait for Rolands fix then
; general
Already fixed remove this
; general
Is this correct
; general
Is it also used somewhere
; general
Remove this fixme
; general
Is this used somewhere
; general
I dont know how it is intended to be used The system is passed in so Ican agree to that its not reallythe responsibility of BootableActorLoaderService to stop it Ill removethe systemstop here if no objectionsOn Wed Nov 30 2011 at 405 PM viktorklang replyreplygithubcom wrote   588 587  trait BootableActorLoaderService extends Bootable      abstract override def onUnload         superonUnload        FIXME shutdown all actors       systemregistrylocalshutdownAll      systemstop Is this correct  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull131filesr261063 Patrik NordwallTypesafe httptypesafecom  EnterpriseGrade Scala from the ExpertsTwitter patriknw
; general
Nope I removed itOn Wed Nov 30 2011 at 406 PM viktorklang replyreplygithubcom wrote   88 87    akka       remote        FIXME rename to transport      layer  akkaclusternettyNettyRemoteSupport      transport  akkaclusternettyNettyRemoteSupport Is it also used somewhere  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull131filesr261066 Patrik NordwallTypesafe httptypesafecom  EnterpriseGrade Scala from the ExpertsTwitter patriknw
; general
nooo it should get used somewhere Ill add a ticket to make use of it
; general
alright Ill put it back On Fri Dec 2 2011 at 935 AM viktorklang replyreplygithubcom wrote   88 87    akka       remote        FIXME rename to transport      layer  akkaclusternettyNettyRemoteSupport      transport  akkaclusternettyNettyRemoteSupport nooo it should get used somewhere  Ill add a ticket to make use of it  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull131filesr266161 Patrik NordwallTypesafe httptypesafecom  EnterpriseGrade Scala from the ExpertsTwitter patriknw
; general
Perhaps clarify when an actor is started
; design
That is not true its not a synchronous call
; general
Id replace logged with thrown
; general
Id add that the start is executed asynchronously
; general
What does Actor Internal API mean
; design
imports1 is just a name of a block of code in ActorDocSpec what will beincludedOn Wed Dec 7 2011 at 227 PM viktorklang replyreplygithubcom wrote   4621 4122  along with the implementation of how the messages should be processed   Here is an example     includecode codeActorDocSpecscala     include importsmyactor     include imports1myactor imports1  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull137filesr276414 Patrik NordwallTypesafe httptypesafecom  EnterpriseGrade Scala from the ExpertsTwitter patriknw
; design
Open a ticket for this
; general
Add that sender should never be closed over since its not valid outside of handling a message
; general
actor reference   actor reference by default
; design
This is not true if you want to propagate exceptions you need to do so manually but you can do so bytry   operation catch   case e Exception  sender  akkaactorStatusFailuree throw e
; general
You tell me I havent changed I also stumbled over that heading for a while because I think it makes one think of internal implementation of akka which is totally uninteresting Maybe simply change it to Actor API
; design
I love this
; general
Worth documenting that its not a synchronous operation
; general
sof currentof the current
; general
Should document what happens to those messages
; general
What does the actor object mean object Actor or the instance of the Actor
; design
sis lostisdiscardedsit in lifecycle callbacksit in preRestartpostRestart
; general
Yeah drop Internal
; general
Ticker for describing Identifying Actors 1448On Wed Dec 7 2011 at 233 PM viktorklang replyreplygithubcom wrote     Identifying Actors      An actor is identified by its address If no address is associated with an actor  then a unique identifier is used instead The address of an actor can be  accessed using selfaddress  FIXME Actor Path documentation Open a ticket for this  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull137filesr276428 Patrik NordwallTypesafe httptypesafecom  EnterpriseGrade Scala from the ExpertsTwitter patriknw
; design
oops should be PropsMyActor
; general
sure but what happens Nothing they will be garbage if the mailbox isnt durable or something
; general
or are they sent to deadLetters
; general
Thats not very intuitive is it I think it worked like I described in Akka 12
; general
Yes it worked like that when we had both senderFuture and sender
; general
does it work with simply importing it could be a def and not a val
; general
I think we should write the tests as we want the users to write their code I recommend importcontextbecome
; design
Very good thanks for the excellent docs
; general
How about UntypedActorContext
; general
Could you make ActorCell a final class
; general
It should be noted that it currently doesnt support submillisecond timeouts
; general
If I make ActorCell a final class then its not needed on the methodsOn Tue Dec 6 2011 at 1137 AM viktorklang replyreplygithubcom wrote   1206 19611  privateakka class ActorCell     inline     final def dispatcher MessageDispatcher  if propsdispatcher  PropsdefaultDispatcher systemdispatcher else propsdispatcher           JavaActorContext impl         def getDispatcher MessageDispatcher  dispatcher final  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull136filesr272818 Patrik NordwallTypesafe httptypesafecom  EnterpriseGrade Scala from the ExpertsTwitter patriknw
; design
Agreed because that means that our tests break when we change something that would break user code
; general
So if you make this implicit then import context just fixes that Same goes for system
; general
But then again who does
; general
I dont think the import is a big deal I think some users will actuallyprefer to usecontextbecome instead ofimport contextbecomebecomeDepends on how much of the context that is used in that case Beingexplicit is actually rather pedagogic BUT we have a lot of convenience methods in AkkaSpec such as actorOf thatshouldnt be there because they provide delegation to something that is notavailable in plain user codeOn Tue Dec 6 2011 at 1204 PM Roland Kuhn replyreplygithubcom wrote   377 377  class HotSwapSpec extends AkkaSpec              case init                log  init               barrierawait            case swap  become            case swap  contextbecome Agreed because that means that our tests break when we change something that would break user code  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull136filesr272889 Patrik NordwallTypesafe httptypesafecom  EnterpriseGrade Scala from the ExpertsTwitter patriknw
; design
I like UntypedActorContext
; general
But is it needed to have implicit dispatcher and system Where is it needed in user code
; design
I agree with the sentiment but the point remains that we should have test cases covering all use cases to see what breaks during a changewrt AkkaSpec httpswwwassemblacomspacesakkatickets1439
; general
currently needed for creating Futures which is why you had to make your implicit def dispatcher in some cases
; design
Fixed Documented and impl
; general
I made system and dispatcher implicit in ActorContext and changed to imports
; general
I have changed system and dispatcher to be implicit in in ActorContext so now it works with import instead
; general
Changed to UntypedActorContext thanks
; general
it might be nice to remove the default argument and add withFallbacktestConf before passing on
; general
Why is this commented outEither it should be a FIXME or it should be deleted
; general
I am working on it but it is not done yetOn Tue Dec 6 2011 at 255 PM viktorklangreplyreplygithubcomwrote  00 1134   package akkaremote   import akkaactorActor  import akkaremote  import akkarouting  import akkaroutingRoutingBroadcast   object GossipMembershipMultiJvmSpec  Why is this commented out Either it should be a FIXME or it should be deleted  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull135filesr273195 Jonas BonrCTOTypesafe  EnterpriseGrade Scala from the ExpertsPhone 46 733 777 123Twitter jboner
; design
Why is this a val
; general
Why is this a val
; general
Why is this a val
; general
What do you mean
; general
I mean why is it a val and not a def
; general
I dont care You tell me
; general
If it doesnt need to be retained in the object it should be a def if not a val
; design
Not a biggie at all since its in the test I was just curious why it was a val
; general
Where hint URL
; general
Every single messagequeue has its own settings hideously wasteful
; general
Pass the settings into the constructor instead
; general
which one I could generically link to akkaiodocs
; general
Boyscout rule might be nice in principle but I have no idea what to document Shall I start researching
; general
see the Testing Actor Systems section of the Akka Documentation at httpdocakkaiosounds ok
; design
Add TODO docs
; general
yes thats what I had in mind
; general
Fixing this would mean passing system to MailboxType in the constructor which would potentially make sense Yes I think I will do that
; general
requires a change to how mailbox types are instantiated see above
; general
hmm not sure this will have to be turned into a system property somehow to enable Jenkins to use it right
; general
Sounds great open a ticket about it also so it goes into the changelog
; general
Something similar toparallelExecution in GlobalScope  SystemgetPropertyakkaparallelExecution falsetoBoolean
; general
created httpwwwassemblacomspacesakkatickets1863 instead
; general
doesnt work there is no system available while constructing MailboxType
; general
Then we need to rethink this structureSettings should be created once in the MailboxType then it can be passed into the MEssageQueue def create
; general
Ill change the objective to just include systemsettings in DispatcherPrerequisites which fixes your complaint
; general
Soon Prerequisites will be ActorSystem Full circle
; general
Nope it only includes those items which are constructed and ready at the point when the default dispatcher is created settings were the last omission
; general
Famous last words
; general
This name is a bit misleading it should be testdurablemailboxes Ill fix it
; general
one missing backtick
; general
Whats the purpose of this test to verify that messages are not dropped during normal circumstances
; general
If its under normal circumstances I think that should be included in the test name as to not give readers the wrong impression
; general
please make the tags different just for kicks
; general
what about making this 1000000
; general
changed to 300000 which takes 5 minutes on my machinewe should change back to something smaller if we decide to merge this to master
; general
thats 5000 msgssec which go over remoting which does not sound like an awful lot  we should benchmark this more
; general
yes but this is not a benchmark it waits for each round with expectMsg and its delay
; general
Shouldnt we change both sides here
; general
Why the change at all
; general
yes it should be changed on both sides of coursethe reason is that it saves a line break otherwise it must be    var membersByAge immutableSortedSetMember        immutableSortedSetemptyageOrdering
; general
would it work on both JVMs if we passed in the spec itself and just used specgetClass
; general
I have no idea and I dont plan to test that on the PPC box today if I can avoid it
; general
could you give it a short try on MacOS If it works then it must work on all JVMs unless Im severely mistaken
; general
does this actually help what does it do
; general
why 130 only here
; general
ah forget it
; general
Yes and no it forces maven to check for updated dependencies but since we dont publish any real maven metadata for the snapshot repo it wont pull down the new files
; general
what if theres an exception raised here
; general
This logic should be in the ChildrenContainer
; general
please avoid anonfuns explodes the core lib
; general
Could we try to address the code duplication here
; general
children foreach stop
; general
Im pretty sure it created a new TreeMap for every empty since it needs the Ordering use a cached value for the empty
; general
Id suggestchildrenRefsgetByNamename match   case None  actorOfprops name  case   throw new InvalidActorNameExceptionactor name   name   is not unique
; general
if childrenRefsisInstanceOfTerminatingChildrenContainer dispatcher suspend this
; general
Why this check here
; general
What happens if theres a failure here
; general
is on its way out anyway
; general
you mean to the children because otherwise its like a normal failure
; general
then we should make sure that this actor gets suspended good catch
; design
which means that it would need to be a nested class is that worth it
; design
your fix is a nice one  ah if only we could compile with optimize
; general
no it isnt
; general
Because otherwise NPEs and other funny things occur We should only ever call preRestart once on one Actor instance
; design
this should go inside RemoteWatcherpropssame thing at other places that use props factory method pattern
; design
you changed this to throw please explain
; general
returning an EmptyLocalActorRef from actorOf is not consistent with the other error cases where we bail out with an exception
; general
akkaactorserializecreators is defined in several referenceconf filesIs the merge order of referenceconf files definedhmm
; general
it is in classpath order but youre right Ill add a test which just verifies that this setting was applied in each of the projects
; general
ok I looked at what kind of exceptions could be thrown here and it is mostly from localAddressForRemote and that is in the IllegalArgumentException category so all fine Good
; general
yes that is a good solution
; general
that is not necessarily a good idea in all cases
; general
Ill leave it as is for now because I dont see a clear downside to my approach and the change is somewhat cosmetic so it can also be done after RC1
; general
well for these internal actors that are not intended to be remote deployed it must be better to define all props in the props factory why notof course I didnt mean all as in those in contrib
; design
Good samples but add the typical ask with onResult callback thing also
; general
Which one do you mean
; general
Wrong as in 3chars or wrong as in the code block has wrong indentation
; general
why calling postStop which is supposed to be called only exactly once in an actors life
; general
why calling preStart which is supposed to be called only exactly once in an actors life
; general
maybe add a paragraph here explaining that callbacks on that Future need to be careful not to close over the actors state
; general
oh I noticed that you just copied from Actor That is wrong but Ill create a ticket to fix that then That means that your change is currently okay since it is consistent with the Scala side of things Sorry for the confusion
; design
so Viktor convinced me that writing that ticket is not actually the right thing to do
; general
Its an exact copy of what is done in Actor trait Check with Viktor whyits done like thatI guess the reason for having override of these methods in UntypedActor isfor documentation and make it clear what the the API of UntypedActor isOn Fri Dec 9 2011 at 1106 AM Roland Kuhn replyreplygithubcom wrote          override def preRestartreason Throwable lastMessage OptionAny     override def preRestartreason Throwable message OptionAny  postStop  why calling postStop which is supposed to be called only exactly once in an actors life  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull143filesr282430 Patrik NordwallTypesafe httptypesafecom  EnterpriseGrade Scala from the ExpertsTwitter patriknw
; design
All fine then
; general
Isnt ActorCell an implementation detail that shouldnt be seen in log exception messages
; design
no need to subclass in remoting
; general
Make this return truefalse if succeeded
; general
Make this return truefalse if succeeded
; general
What does this do
; general
What does this do
; general
What does this do
; general
What does this do
; general
Id probably avoid the extractor and instead in the default case do the checkcase other  extraNamesgetsgetOrElsesupergetSingleChildname or avoid the allocation of getOrElse using pattern match
; general
Nullobject pattern sounds more academic
; general
Shouldnt we delegate this to the LocalProvider
; general
This path mangling logic seems to be rather spread out couldnt we try to put it in one place
; general
I cannot imagine any meaningful use of this information if it fails something is wrong Should I throw an exception instead The distinction would be between favoring the old or new contents
; general
same as above
; general
it pipes the exception back to the guy who was actually ordering that new actor see ActorSystemactorOf
; design
mine does the very same allocations and looks nicer  Shall I change it to avoid the allocation
; general
no docs yet docs would be for other ActorRefProvider implementers do we care yet Ill add ScalaDoc anywayno racy supposed to happen in ActorRefProviderinitsystem will be in docs
; general
Id call it net negative
; general
thats part of the routing changes to be completed
; general
hmm I didnt do that because that one always gives the child the path parent  name which is not right in this case
; general
well its all here in this method unless Im overlooking something how can it be more local
; general
if elemsisEmpty  elemshead  remoteNever check size when the size is irrelevant
; general
refactored ActorRefProvideractorOf to always expect an ActorPath and did the delegation
; general
Okay wrote a whole novel in a comment explaining this
; general
Why is this turned off if all is fine and dandy
; general
Nice but wouldnt it be more appropriate with withRouter
; general
Shouldnt this be dead letter queue
; general
Is there any JAva test for verifying that these work from Java
; general
easy I just forgot about that  all fine now
; general
I assume that the recipient will know how to deal with it given the default just above
; general
none besides javap and common sense
; general
Awaitready and Awaitresult is sweet
; general
What exception Document
; general
what is the history file
; general
Any exception detailing why the T couldnt be produced
; general
do we have a policy of repeating type parameters in initializers just askin
; general
lol I can change that if you want to drop 6 chars here
; general
I guess this timeout does not need to be implicit anymore
; general
no it really was just a question how much intention was behind this
; general
Im not sure about the semantics or perhaps just the naming of orElse here  The name orElse suggests something similar to recover but that obviously doesnt match up with picking the first completed future Itd be nice if this were renamed or perhaps modified to have the same semantics of OptionorElse with the firstCompletedOf operation moved to a different method  maybe call it race
; general
Im curious as to why the signature of  still includes a timeout Since it returns a Future which will no longer time out isnt the timeout superfluous
; general
Why does Future extend Awaitable  I thought the goal was to make it actively harder for users to block on Future results  With this mixin its impossible to have a Future which is not blockable
; general
You do realize the weirdness of not being able to wait for something to happen
; general
val l  new CountDownLatch1future onSuccess  case   lcountDown lawaitLongMaxValue TimeUnitDAYS
; general
Thats a good point  This really isnt the monadic orElse nor can it be as Future does not have a zero  This implies that you cannot modify this method to have the same semantics as OptionorElse  With that said Im not sure what the name should be  The idea of calling it race is amusing and not entirely facetious  Technically thats what it is and so race is more accurate than orElse
; general
For those of us who just need the good old days of C pipelining
; general
The implementation will likely be tweaked in M2 to be the first successful result or if both failed the LHS exception as failure
; design
Whats wrong with thisscalaval f FutureA  Awaitresultf timeoutI dont have a problem with providing a semiconvenient API for waiting though I would rather if it mentioned kittens I just dont want to make it trivially easy to call that function on a Future directly  Its almost a psychological thing  Its way too easy to block right now  You want to carrot people to find a better way  The few who really do need to block will dig deeper and find Awaitresult  Those who dont need to block will find an alternative within Future itself like a callback or a flatMap  The path of least resistance should be the most performant path
; design
I believe the proper name was blockOnResultAndKillSevenInnocentKittens
; general
Its already like    val f FutureA      Awaitresultf timeoutAlso you cannot call block directly since it requires a private witness
; design
Why would there be a memory leak
; general
That doesnt make it any more orElseish
; general
Because we need to hold onto the backing Actor that gets created to serve as the sender of that message And we need to hold onto it to service the reply message So when do you throw that reference away It cant be kept in a WeakHashMap since if the message gets forwarded or sent to a remote host how would you ever know when it is eligible for destruction
; design
Depends on your definition now doesnt it
; general
Also you cannot call block directly since it requires a private witnessAh I missed that part  You may want to make CanAwait extend NotNull to avoid anyone sneakily from Scala anyway passing null for that parameter
; design
Yeah I really cannot avoid people from aiming at their feetIn any case you always have the issue with Reflection
; general
Depends on your definition now doesnt itI think almost anyone who sees this and has any prior Scala experience is going to think of OptionorElse  that is the monadic orElse function  Its a reasonable name for what youre doing the problem is that there is a prior squatter on that name and it has been given a specific semantic meaning  People fiddling with Church numerals rarely call them Int  Names should convey meaning and the meaning of names is very dependent on reference and context  In this case the context is Scala and the most immediate reference is OptionThis is analogous to what would happen if I were to write a charting library in Scala with geographic capabilities with a method called flatMap on the GeoChart class that smooths the topography  It would be accurate but highly deceptive
; design
Ah that makes sense  Ok timeout it is
; general
We could always rename it to or
; general
We could always rename it to orI would certainly prefer that  Its going to throw the Lift guys for a loop  Then again Lifts naming conventions are quite inconsistent so the association between or and orElselike semantics is probably much weaker than with Option  In any case the Lift community is a strict subset of the Scala community so or is an improvement over orElse
; general
How about an alternate mechanism then actor  M Tm MT toFulfill PromiseT FutureT  where the Future is simply the Promise that was passed in On second thought I guess that doesnt really avoid the issue because you cant actually send the Promise to the remote host for fulfillment It would have to be a different type of actor that was guaranteed to reply probably with the result of the PF that forms the actors handler
; design
Though given that this proposed method would require two parameters it really should be sendPromise or something like that  Operators and nary functions dont mix
; general
Unfortunately the more I think about it the more it wouldnt help my use case anyway because Im using  to send explicit blocking flushes to an actor that is responsible for managing a cache where nonflush messages are sent via  If you wanted to mix the two on the same actor youd have to have an actor with two separate handlers  a responding handler and a fireandforget handler The queue would then be of Either where Left requires a response and Right cannot be replied to
; design
Nice Id missed the private witness too But I agree that using NotNull would be appropriate  for someone coming to the API without a full understanding of why blocking is bad they may well try using null to circumvent the check
; design
Not only that but I dont believe that Lift uses akka futures anyway or is definitely better than orElse though I still like race
; general
Trust me I have spent quite some time pondering these issuesThe ask we have for 20 is the least of all evils
; general
Doesnt help at allscala trait T extends NotNulldefined trait Tscala val x T  nullasInstanceOfTx T  nullscala val x T with NotNull  nullasInstanceOfTx T with NotNull  null
; general
The fact that they have to cast will at least be a signal that theyre doing something wrong  As you said you cant prevent people from aiming at their own feet  You can helpfully hint in the right direction though  Inheriting from NotNull is essentially free and it does a better job of declaring the intent of CanAwait  I dont see any reason not to do it
; general
In Scala people already know that nulls are bad which they dont know in Javaland and your proposed fix doesnt deal with that anywayI understand your point but to me its like wearing a helmet while swimming its just not worth the effort
; general
Feels more like wearing a swim suit that says remember to breathe  Certainly extra effort but only slightly  In this case the extra effort is 16 characters  Seems worth it if only for the declarative aspect
; general
note to self remove logLevel its wrong
; general
Change Set to 1 for complete fairness to Set to 1 for as fair as possible
; general
Perhaps clarify why it doesnt matter
; general
When are entries removed from here
; general
What does this do
; general
No that is not the way A PinnedDispatcher enforces that only one Actor can use it Dispatcher does not do that
; design
Perhaps include a link to jucBlockingQueue
; general
This is not true anymore You cannot specify any RejectedExecutionPolicy manuallyWhat will be used is SaneRejectedExecutionHandler its a nonbroken version of CallerRuns
; general
Is 5 still the default just making sure
; general
The new version of the BalancingDispatcher is not workstealing its worksharing so all actors that use the same BalancingDispatcher will share message queues
; general
They are never removed until Dispatchers is garbage collected together with the systemI dont think its a problem to keep them around since a Dispatcher is shallow the actual ExecutionService is shutdown and removed
; general
ok so we dont have a way to configure a PinnedDispatcher I guess its not much to configure Ill change this to code sample instead with newPinnedDispatcher
; general
done and several other links to juc
; general
Ok then I remove all that and instead writeWhen using a bounded queue and it has grown up to limit defined the message processing will run in the callers thread as a way to slow him down and balance producerconsumercorrect
; general
yes 5 is default in referenceconf
; general
I think its really bad especially with PinnedDispatchers since they create a new Dispatcher for every actorWe must fix this
; general
ok changed in several places
; general
AFAIK theres no way to configure a pinned dispatcher from conf We might want to create a PinnedDispatcherConfigurator
; general
PinnedDispatchers are not configured and therefore not placed here Itsonly used for the lookup methodWe might want something more advanced when we complete the 1458 fullyI can unregister when the dispatcher is shutdownShall I add register and unregister methods that can be used fordispatchers created programmatically alsoOn Tue Dec 13 2011 at 216 PM viktorklang replyreplygithubcom wrote   629 6930  class Dispatchersval settings ActorSystemSettings val prerequisites Dispatc      val defaultDispatcherConfig  settingsconfiggetConfigakkaactordefaultdispatcher      TODO PN Shouldnt we fail hard if defaultdispatcher is wrong    lazy val defaultGlobalDispatcher       fromdefaultDispatcherConfig getOrElse newDispatcherAkkaDefaultGlobalDispatcher 1 MailboxTypebuild    lazy val defaultGlobalDispatcher MessageDispatcher       fromdefaultDispatcherConfig getOrElse         throw new ConfigurationExceptionWrong configuration akkaactordefaultdispatcher            private val dispatchers  new ConcurrentHashMapString MessageDispatcher I think its really bad especially with PinnedDispatchers since they create a new Dispatcher for every actor We must fix this  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull149filesr289597 Patrik NordwallTypesafe httptypesafecom  EnterpriseGrade Scala from the ExpertsTwitter patriknw
; design
No its probably for the best that pinned dispatchers arent registered thereOpen a ticket about making sure  that it gets cleaned up and assign it for 20 we might want to use a WeakHashMap or equivalent
; general
This also aligns with the ticket to specify dispatchers by id in props
; general
WeakHashMap is bad for gc but ticket is created 1494I leave it with a FIXME refererence to that ticketOn Tue Dec 13 2011 at 232 PM viktorklang replyreplygithubcom wrote   629 6930  class Dispatchersval settings ActorSystemSettings val prerequisites Dispatc      val defaultDispatcherConfig  settingsconfiggetConfigakkaactordefaultdispatcher      TODO PN Shouldnt we fail hard if defaultdispatcher is wrong    lazy val defaultGlobalDispatcher       fromdefaultDispatcherConfig getOrElse newDispatcherAkkaDefaultGlobalDispatcher 1 MailboxTypebuild    lazy val defaultGlobalDispatcher MessageDispatcher       fromdefaultDispatcherConfig getOrElse         throw new ConfigurationExceptionWrong configuration akkaactordefaultdispatcher            private val dispatchers  new ConcurrentHashMapString MessageDispatcher No its probably for the best that pinned dispatchers arent registered there Open a ticket about making sure  that it gets cleaned up and assign it for 20 we might want to use a WeakHashMap or equivalent  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull149filesr289614 Patrik NordwallTypesafe httptypesafecom  EnterpriseGrade Scala from the ExpertsTwitter patriknw
; design
Add a sentence to understand from where the Cancellable comes fromWhen you ask the Scheduler to run things in the future you get a handle to the scheduled task as a Cancellable
; general
I think we should have a short Scala and Java example here
; general
AddYou can schedule sending of messages to actors and execution of tasks functions or Runnable
; general
uummm what dont you need to check the transport address What if people write their own transportsI also see a big risk here if people cant get it to just work it means that their code will be hardcoded to the transport being used
; general
Or rather how can a LocalActorRefProvider have an external form with a protocol
; general
is that true What if the transport just doesnt exist
; general
I think we must support omission of the desired protocol mainly because having to manually specify protocol in code means that your application is no longer transparent in the remotingI propose to change so that it is configured with transport protocol to use by externalization then the logic can beFirst check currentTransport if there is none fallback to configuration default external protocol
; general
filtermap  collect but it doesnt matter here and now
; general
collect that sht
; general
love that one I also like this one find  map  collectFirstOn Thu May 30 2013 at 107 PM Patrik Nordwallnotificationsgithubcomwrote In projectPublishscala   1026 10311  object Publish      def akkaCredentials SeqCredentials        OptionSystemgetPropertyakkapublishcredentials null map f  Credentialsnew Filef toSeq     def pluginPublishLocallydefault File OptionResolver       Optionsyspropspublishpluginlocally filter toLowerCase  true map    filtermap  collect but it doesnt matter here and now  Reply to this email directly or view it on GitHubhttpsgithubcomakkaakkapull1515filesr4465613
; design
One question I haveWhy do we stop the reader AND disassociate the handle shouldnt that be the same thing Disassociate message going to the reader
; general
This felt a bit safer than the original does anyone disagree
; general
So the rationale here is that I assume that calling disassociate on the handle will send the Disassociate message to the reader
; general
Dont use this one use comeaioUuid
; general
Why do we need AMQPActor at allIt could send itself the Connect message in its constructor or in preStart
; general
Why have Settings extends Settings
; general
If you scrap AMQPActor fold class Settings into object Settings and rename it to AMQP you can hide thecontextactorOfPropsnew FaultTolerantConnectionActorcrconnectionParameters amqp  UUIDrandomUUIDtoStringTake a look at the TypedActor extension for more inspiration
; design
How do they use SeqAddress from Java
; general
Stopped here for the day will continue tomorrow
; general
Great thanks again for the review will address them ASAPOn Mar 13 2012 at 1014 AM viktorklang wrote    Needed for Java API usage   def thisexchangeParameters ExchangeParameters channelParameters ChannelParameters      thisOptionexchangeParameters None OptionchannelParameters None     Needed for Java API usage   def thisexchangeParameters ExchangeParameters returnListener ReturnListener channelParameters ChannelParameters      thisOptionexchangeParameters OptionreturnListener OptionchannelParameters None     Needed for Java API usage   def thisexchangeParameters ExchangeParameters returnListener ReturnListener channelParameters ChannelParameters errorCallbackActor ActorRef      thisOptionexchangeParameters OptionreturnListener OptionchannelParameters OptionerrorCallbackActor     Needed for Java API usage   def thisexchangeParameters ExchangeParameters channelParameters ChannelParameters errorCallbackActor ActorRef      thisOptionexchangeParameters None OptionchannelParameters OptionerrorCallbackActor   Stopped here for the day will continue tomorrow     Reply to this email directly or view it on GitHub httpsgithubcomakkaakkapull370filesr552733
; design
Good question  The short and probably incorrect answer is that they could use scalajcollection create a list and use asScala  I made this change based on an earlier comment  Originally this was an ArrayAddress but the mutability of an Array was distasteful  Can you suggest a happy middle ground
; general
Use javalangIterableAddress and use scalacollectionJavaConverters to turn into Seq
; general
Java why do you hate programmers so much
; general
Will do  Thanks  Im glad I rejoined the world of software dev after Scala came onto the scene  I basically went from C 20 years ago skipped everything in between then Scala
; general
I started programming professionally in C like 14 years ago Its a fun little language
; general
Youll need to add a constructor that only takes the message therell be no constructor permutations added
; general
Why a Settings for each FaultTolerantChannelActor
; general
Remove replyTo here
; general
replace line 2834 with    val shutdownListener        val replyTo  self      new ShutdownListener  def shutdownCompletedcause ShutdownSignalException Unit  replyTo  ChannelShutdowncause     No need to store replyTo as a field
; general
Id avoid the for comprehension here and instead do the check in the guard of the match
; general
What happens with messages that are in the mailbox between the current message and the new Start message
; general
youre closing over self here
; general
Just make sure youre not leaking it to another thread
; general
where are you delegating to the parent class
; general
What happens with messages in the mailbox between the ChannelShutdown message and the Start message being processed
; general
What happens with messages in the mailbox between the Failure message and the Start message being processed
; general
Why not delegate to superpostStop
; general
Whats this used for
; general
Why get the extension every time and not cache it if you need it 3 times
; general
I still think Settings is a too vague name and that it should be named AMQP
; general
Why not instead create children that represents each channel Then the ConnectionActor can be in charge of supervising them
; general
Is this method safe to close over
; general
Id strongly suggest you Let It Crashtm and have postRestart and preRestart set up the connection
; general
Why not delegate to super
; general
You are closing over sender here in a future callback
; general
No kidding  At least my 11 years at Sun were mostly on the infrastructure side
; general
this is pretty much cleaned up I think  Ive got a newConnection method with a bunch of Java supporters  It may be nice to add methods for newProducer and newConsumer as well  Will wait for feedback on the current work
; general
to avoid this compilation message  Im probably missing something obvious here but Im not sure what it isinfo Compiling 1 Scala source to Usersjstanforddevelgithubakkaakkaamqptargetclasseserror UsersjstanforddevelgithubakkaakkaamqpsrcmainscalaakkaamqpFaultTolerantChannelActorscala126 could not find implicit value for parameter executor akkadispatchExecutionContexterror       channel  SomePromisesuccessfulcherror                                        error one error found
; general
Well adding another field in the class is not optimal at allAnd also youre saying that the Promises callbacks should be executed on the default dispatcher which is probably not what any user would expectjust doPromisesuccessfulchcontextdispatcher if its only needed in one placeor doimport contextdispatcherat the most appropriate places otherwiseIf thats the only place that needs
; design
fixed in next push
; general
Now AMQP but not clear on what I would do  Pull the settings out into an object
; general
Yes I think Im going to tackle this next  Hopefully this will address a few of the questions about what happens to messages when channels restart
; general
fixed in next push
; general
fixed in next push
; general
Do you mean something like thiscase AcknowledgedeliveryTag  channel match       case Somecf if cfisCompleted  cfmapc  acknowledgeDeliveryTagc deliveryTag true      case          sender  StatusFailurenew AkkaAMQPExceptionconsumer   self   could not acknowledge message  channel not available        self  Start    One of the reasons I was doing it the way its done currently was to compensate for the slow channel setup  I think this will all get better when the channel is wrapped in an actor and we can start it in prestartprerestart  As long as the actor is alive the channel should be there
; design
oh good question  seems like we might have a bunch of failures and start messages   This is another case of channel missing so channel in an actor should help
; design
cleaned up in next push
; general
comment corrected in next push
; general
was concerned about the mutability of channel  maybe was overkill  removed
; general
going to rework channel into an actor
; general
going to rework channel into an actor
; general
fixed in next push
; general
will look into this
; general
will fold the resolution into the LetItCrashtm approach
; general
What is this needed for
; design
What is this needed for
; design
Add explicit return type
; general
val p  Propsnew FaultTolerantConnectionActorparams  if nameisDefined contextactorOfp nameget else contextactorOfp
; general
I dont agree thatdeliverypayloadAsArrayBytesis better thandeliverypayloadtoArray
; general
You might want to put these messages inside the AMQP object and instead of having the getInstance method offer a java method    object AMQP          case object Start         def start Starttype  Start    which in Java allows forimport static akkaamqpAMQPifmsg  start
; design
Dont use JavaConversions use JavaConverters
; general
is this javalangIterable If so import it at JIterable so its obvious that its not scalas Iterable
; general
How do you provide this from Java
; general
use explicit return types for all getInstance methods please
; general
I think once the channels are children this will clear up a lot of code
; general
Isnt it weird that the user cannot control which dispatcher is used And that the same dispatcher is used for all AMQP consumers
; general
Same here WRT dispatcher id Why isnt it in the ProducerRequest
; general
Btw whats the reason for not connecting right here
; general
you could use with ActorLogging
; general
why not getContextgetSystem I know its a slippery slope though
; general
up to four only
; general
Good tip I added that as an alternativeOn Tue Dec 13 2011 at 1242 PM Roland Kuhn replyreplygithubcom wrote   00 159   package akkadocsevent    import akkaactorActorSystem  import akkatestkitAkkaSpec  import akkaactorActor  import akkaactorProps    object LoggingDocSpec       myactor    import akkaeventLogging      class MyActor extends Actor  you could use with ActorLogging  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull150filesr289403 Patrik NordwallTypesafe httptypesafecom  EnterpriseGrade Scala from the ExpertsTwitter patriknw
; design
We dont have getSystem in UntypedActorContext Duplicating all methodsfeels wrongOn Tue Dec 13 2011 at 1244 PM Roland Kuhn replyreplygithubcom wrote      Test    public void useLoggingActor       ActorSystem system  ActorSystemcreateMySystem      ActorRef myActor  systemactorOfnew UntypedActorFactory         public UntypedActor create           return new MyActor                    myActortelltest      systemstop          myactor    class MyActor extends UntypedActor       LoggingAdapter log  LogginggetLoggergetContextsystem this why not getContextgetSystem I know its a slippery slope though   Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull150filesr289411 Patrik NordwallTypesafe httptypesafecom  EnterpriseGrade Scala from the ExpertsTwitter patriknw
; design
why different order of the parameters compared to apply
; general
No good reason apart from just adding one parameter here and apply mimicking the single class version
; design
what precisely is this good for
; general
Are you asking about me or why I made it private
; general
Im asking whether this line has any effect because if it has then it lacks a comment The private val me   is redundant unless some other code accesses this field using reflection
; design
So the me is a field in the TypedActor  class that holds the user implementation of the typed actor
; design
When is this GCedreleased
; general
In actor postStop just like a local TypedActor
; design
oh I see now which line I missed everything is fine
; general
why do you use Runnable instead of ordinary function
; general
ouch in case parent is or becomes a final field this will not work VERY strange things will happen I dont like
; general
Looks like you forgot to do the same change in UntypedActor This is second time this happens What shall we do Remove the 4 overridden lifecycle methods in UntypedActor The only reason I see that they are there is for documentation of the UntypedActor API but its not worth it when it is so easy to do misstakes like this
; design
why not match on pathparent instead of ifelse
; general
because I wanted to have a class I could give a name to
; design
okay I am changing it to volatile var httpswwwassemblacomspacesakkatickets1504
; general
LOL I have heard that functions can have names alsoOn Wed Dec 14 2011 at 1134 AM Roland Kuhn replyreplygithubcom wrote      def run          val iter  heapentrySetiterator        while iterhasNext           val soul  iternext          deathWatchsubscribeLockerthis soulgetKey  in case Terminated got lost somewhere          soulgetKey match             case  LocalActorRef   nothing to do they know what they signed up for            case nonlocal          nonlocalstop  try again in case it was due to a communications failure                                  private val heap  new ConcurrentHashMapInternalActorRef Long      schedulerscheduleperiod period new DavyJones because I wanted to have a class I could give a name to   Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull151filesr292649 Patrik NordwallTypesafe httptypesafecom  EnterpriseGrade Scala from the ExpertsTwitter patriknw
; design
why not just make them all call superwhatever
; general
yes good point
; general
On Wed Dec 14 2011 at 1147 AM Roland Kuhn replyreplygithubcom wrote          def preRestartreason Throwable message OptionAny  postStop     def preRestartreason Throwable message OptionAny  why not just make them all call superwhateverThats fine but scala docs needs to be updated anyway  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull151filesr292680 Patrik NordwallTypesafe httptypesafecom  EnterpriseGrade Scala from the ExpertsTwitter patriknw
; general
Add comment explaining why this is here
; general
Same as above
; general
isnt this an interval and not a period
; general
might be faster to doval newRefs  childrenRefs  childpathnameif newRefs ne childrenRefs   childrenRefs  newRefs
; general
Is this method documented to be potentially blocking
; general
I dont fully follow but changed it to reaperinterval anyway
; general
premature  whatever
; general
now it is
; general
this is what I get for using while
; general
here as well
; general
this is the only thing indicating that the server has hit its capacity for accepting incoming connections so it should be logged at warning level the one above is fine though
; general
ok I thought that the signal on the next line was enough
; general
this is similar to the above there is nobody on our side which asked for it so nobody gets notified
; general
should it then be logged with full exception stack trace
; general
connections can be opened by client request which is covered by CommandFailed or upon incoming connections which is not
; general
hmm thinking a bit more this can probably also fail if the connection was reset by peer in the meantime not so sure anymore
; general
changing it back to logerrore Accept error could not accept new connection
; general
good to get rid of that
; general
FYI we have ticket 1390 for later
; general
I think this is wrong we should use default location of configuration as defined by the config lib ie applicationconf which will be used if you create the ActorSystem with plain ActorSystemname
; general
ah you want to read the name from config before creating the system Is that setting really necessary Could it be an option main arg instead
; general
when we use extensions instead of Bootable I think the idea is to not have shutdown hook in extensions but let the extension registerOnTermination callback if needed
; general
Perhaps include XXOnOutOfMemoryErrorkill 9 p
; general
Agree with Patrik here
; general
Could this be tackled as well here httpswwwassemblacomspacesakkatickets1085
; general
Yes just copying the existing setup for now
; general
Yep was going to ask if we were switching to the default applicationconf Saw that there was still an akkaconf in config dir so just kept it compatible with previous microkernel Can switch over
; general
Not necessary Just easy to put it in the config as akkaconf was being read first anyway Think easiest is to just move the creation of the actor system into the boot class  user can do whatever there even have multiple actor systems
; design
The runtime shutdown hook is for catching interrupt signals like C on command line and then doing a graceful shutdown by calling ActorSystemshutdown
; general
For Microkernel this might make sense Worst case its preventing things from being GCd
; general
I would expect the booted actor systems to stay up for whole the lifetime of the JVM when using the microkernel
; design
Okay good idea Will add the out of memory handler
; general
Yes can look at 1085 Its easy enough to change the jvm opts but we could detect the jvm first
; general
Spend at most 1520 mins on it if it takes longer it can stay in the backlog for M2
; general
yes use default applicationconfOn Wed Dec 14 2011 at 807 PM Peter Vlugter replyreplygithubcom wrote  trait Bootable     def startupsystem ActorSystem Unit    def shutdownsystem ActorSystem Unit      object Main     val quiet  getBooleanakkakernelquiet      def logs String  if quiet printlns      def mainargs ArrayString        logbanner      logStarting Akka      logRunning Akka   ActorSystemVersion        val config  ConfigFactoryloadakkaconf Yep was going to ask if we were switching to the default applicationconf Saw that there was still an akkaconf in config dir so just kept it compatible with previous microkernel Can switch over  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull152filesr294207 Patrik NordwallTypesafe httptypesafecom  EnterpriseGrade Scala from the ExpertsTwitter patriknw
; design
Ill leave it for the users boot class to start the system giving complete control there Will change empty configakkaconf to configapplicationconf
; design
ah it is an interesting idea with the boot classes then boot classes arenot same as extensions as we sketched 1390 but that is fine it makesa lot of sense to be able to start several systemsOn Wed Dec 14 2011 at 831 PM Peter Vlugter replyreplygithubcom wrote  trait Bootable     def startupsystem ActorSystem Unit    def shutdownsystem ActorSystem Unit      object Main     val quiet  getBooleanakkakernelquiet      def logs String  if quiet printlns      def mainargs ArrayString        logbanner      logStarting Akka      logRunning Akka   ActorSystemVersion        val config  ConfigFactoryloadakkaconf Ill leave it for the users boot class to start the system giving complete control there Will change empty configakkaconf to configapplicationconf  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull152filesr294307 Patrik NordwallTypesafe httptypesafecom  EnterpriseGrade Scala from the ExpertsTwitter patriknw
; design
Actually 1085 is for the windows script as well I dont have a way to try things out on windows right now Wont look at it now
; general
I think every ActorSystem instance should have its own counter right
; general
if you make it a final val without type ascription itll be the constant instead
; general
Instead of the magic value put a field in Timestamp that has a more proper name for the semantics of this value
; general
well that would be difficult but your question got me thinking we dont need a counter at all a17cb07
; general
bonus points for remembering osgi please update config to 102
; general
very good to have this check in place
; general
thats an useful operator
; general
was this fixed in new protobuf version
; general
Sure Ill do that
; general
It seems so It no longer generate the private BuilderBuilderParent parent version
; design
looks correct to me    def fromLessThanTcmp T T  Boolean OrderingT  new OrderingT       def comparex T y T  if cmpx y 1 else if cmpy x 1 else 0
; general
Doesnt getOrElse allocate a thunk for each invocation
; general
That is an interesting question One would think so but the jvm does some awesomeness here I think it is escape analysis that does its jobHere is a Thyme run with the two ways only difference in code is replace of getOrElse with get    scala paste     Entering paste mode ctrlD to finish        import akkacluster        val addresses  1 to 1000mapn  Addressakkatcp sys node  n 2552toVector        val rnd  new scalautilRandom0        val shuffledAddresses  rndshuffleaddresses        import scalacollectionimmutableTreeSet        val addressOrdering2 OrderingAddress  OrderingfromLessThanAddress  a b            cluster node identifier is the host and port of the address protocol and system is assumed to be the same          if a eq b false          else if ahost  bhost ahostgetcompareTobhostget  0          else if aport  bport aportget  bportget          else false                val th  ichibenchThymewarmedverbose  print        val w1  thWarm           val sorted  TreeSetemptyAddressMemberaddressOrdering  shuffledAddresses          sortedhead                val w2  thWarm           val sorted  TreeSetemptyAddressaddressOrdering2  shuffledAddresses          sortedhead             Exiting paste mode now interpreting    Creating Thyme instances and warming busywork methodsdone in 294 s    Warming up benchmarkingdone in 2136 s    Warming up headtohead benchmarkingdone in 5152 s    Warming up computational complexity benchmarkingdone in 10056 s    import akkacluster    addresses VectorakkaactorAddress  Vectorakkatcpsysnode12552 akkatcpsysnode22552 akkatcpsysnode32552 akkatcpsysnode42552 akkatcpsysnode52552 akkatcpsysnode62552 akkatcpsysnode72552 akkatcpsysnode82552 akkatcpsysnode92552 akkatcpsysnode102552 akkatcpsysnode112552 akkatcpsysnode122552 akkatcpsysnode132552 akkatcpsysnode142552 akkatcpsysnode152552 akkatcpsysnode162552 akkatcpsysnode172552 akkatcpsysnode182552 akkatcpsysnode192552 akkatcpsysnode202552 akkatcpsysnode212552 akkatcpsysnode222552 akkatcpsysnode232552 akkatcpsysnode242552 akkatcpsysnode252552 akkatcps    scala thpbenchWarmw1    Benchmark 140 calls in 2860 s      Time    5821 us   95 CI 5650 us  5993 us   n19      Garbage 2344 us   n3 sweeps measured    res0 akkaactorAddress  akkatcpsysnode12552    scala thpbenchWarmw2    Benchmark 140 calls in 2911 s      Time    5933 us   95 CI 5637 us  6230 us   n20      Garbage 2344 us   n3 sweeps measured    res1 akkaactorAddress  akkatcpsysnode12552    scala thpbenchWarmw1    Benchmark 140 calls in 2891 s      Time    5779 us   95 CI 5591 us  5967 us   n19      Garbage 2344 us   n3 sweeps measured    res2 akkaactorAddress  akkatcpsysnode12552    scala thpbenchWarmw2    Benchmark 140 calls in 2986 s      Time    5925 us   95 CI 5716 us  6134 us   n19      Garbage 2344 us   n3 sweeps measured    res3 akkaactorAddress  akkatcpsysnode12552    scalaw1 is the original codew2 is the optimizedEscape analysis is enabled by default in Java SE 6u23 and later This is the result of the same code with escape analysis disabled XXDoEscapeAnalysis    scala thpbenchWarmw1    Benchmark 300 calls in 3486 s      Time    6522 us   95 CI 6319 us  6725 us   n20      Garbage 3125 us   n4 sweeps measured    res5 akkaactorAddress  akkatcpsysnode12552    scala thpbenchWarmw2    Benchmark 140 calls in 2970 s      Time    5880 us   95 CI 5655 us  6105 us   n20      Garbage 1563 us   n2 sweeps measured    res6 akkaactorAddress  akkatcpsysnode12552    scala thpbenchWarmw1    Benchmark 300 calls in 3485 s      Time    6484 us   95 CI 6295 us  6673 us   n20      Garbage 2344 us   n3 sweeps measured    res7 akkaactorAddress  akkatcpsysnode12552    scala thpbenchWarmw2    Benchmark 140 calls in 2989 s      Time    5932 us   95 CI 5701 us  6162 us   n20      Garbage 1563 us   n2 sweeps measured    res8 akkaactorAddress  akkatcpsysnode12552
; general
Interesting never trust anything  okay Akka team excluded
; general
What happens if this is actor is Restarted
; design
Can we get an ABA problem here
; general
An idea create a child actor to autoDown for each node to watch then you dont need the scheduler not keeping track of things here Wdyt
; design
for a restart it will just start over the worst thing that can happen is that the downing is delayedI have not seen a problem but please clarify if you have a scenario in mindWhat would such child actora do except waiting for receive timeout
; general
I suspect spawning a child might make the code smaller and with less vars
; general
I explored the idea wrote code and it just gets more complicated thanks anyway
; general
this assumes a deprecation PR against 22 right
; general
This doesnt explain what its used for what is a router and what does it do
; general
This I do not like we shouldnt specialcase this it should be always implicitlyClassManifestTerasureasInstanceOfClass  RouterConfignewInstance
; general
Specialcasing is bad
; general
This isnt true you use the same actorOF but different Props
; general
only needs one configuration
; general
only needs one configuration
; general
Actors are created by passing in a Props instance into the actorOf factory method
; design
I just copied the docs from the method above I think you have to go through ScalaDoc for the whole class then
; design
Tried that first It doesnt work You cant instantiate a Router class like using empty constructor
; design
So what do you suggest That gives us withRouterRouterType I could add a special set of case classes for this config usage only if you want One for each router type
; general
I didnt write it Fix it boy scout
; general
Right Bad english
; general
Can change it
; general
I can of course fix it for you Ill do it
; general
Check if it has a zeroargs constructor and invoke that if it hasnt throw the exception You can use ReflectiveAccess for this
; general
Cant you just use the FQN Or provide the same type of iface as the DispatcherConfigurator
; general
Its not superimportant but there isnt any way right now to specify your own router impl in the config right
; general
Boy scout rule says that the first one to see it fixes it I think it was you
; general
They dont have a zero arg constructor I know that Dont want to mess with ReflectiveAccess for this Then matching on class is much nicer
; design
No boy scout says that you should leave the code in better shape than how you found it
; general
It was in my old impl but not anymore Roland removed that
; general
But this hardcodes routers which makes it impossible for users to create their own routers no
; general
FQN You mean I should get the name of the class and match on the string Are you serious
; design
No Im saying dont patternmatch on the class take the manifest get the erasure check if the class is assignable from Router if it is try to find a noargs constructor if there is one invoke that one and return the new instance if there isnt throw an exception done
; design
But thought it was fine If dont like it then change it to somethingyou like betterOn Wed Dec 14 2011 at 325 PM viktorklangreplyreplygithubcomwrote     def withRouterr RouterConfig  copyrouterConfig  r       Returns a new Props with the specified router config set No boy scout says that you should leave the code in better shape than how you found it   Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull155filesr293162 Jonas BonrCTOTypesafe  EnterpriseGrade Scala from the ExpertsPhone 46 733 777 123Twitter jboner
; general
these should be parentheses instead of braces
; general
what is this good for
; general
We should open a ticket to move this option into the actual dispatcher conf
; design
We should have a line of whitespace between each attribute because icky to read otherwise
; general
should DEBUG be the default
; general
its a bit contradictory at first it says 2552 and then 2562
; general
Misstake thanksOn Wed Dec 14 2011 at 341 PM viktorklang replyreplygithubcom wrote   516 517  class DeployerSpec extends AkkaSpecDeployerSpecdeployerConf      A Deployer must         be able to parse akkaactordeployment with all default values in         printlnsystemsettingstoString what is this good for  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull156filesr293212 Patrik NordwallTypesafe httptypesafecom  EnterpriseGrade Scala from the ExpertsTwitter patriknw
; design
This isnt default values Its an example of a custom user specified configuration
; general
same thing here read it in context
; general
Is this a sensible default
; general
Hey this has nothing to do with default values Its examples of user defined configuration
; general
My point is that we must expect users to copypast config at times so having examples which make for good defaults might be preferable
; general
This default is about as good as any probably Most people will get four to eight threads and if you are running on a big box you definitely WANT to tune this
; general
yeah that sounds about right
; general
But that bikeshed has still some bare wood shining through in the bottom left corner what about indenting the comments to match up with the equals sign or whatever and this way make the actual settings stick outDoesnt need to be done now of course Just a thought
; general
We should make the TestLatch an Awaitable
; general
perhaps change all 2000 milliseconds to either 2 seconds or reuse some testtimeoutvalue
; general
Good idea Ill create a ticket for it since Awaitable isnt in master yet
; general
See the line below
; general
akkaamqp doesnt exist in 20M1
; general
akkaamqp doesnt exist in 20M1
; general
Or is this a reST comment
; general
Yeah  is comment So I commented them out just because it is not in 20M1
; general
Sure Ill fix
; general
Also add that we might backport it to 20
; general
Add also that it might get backported
; general
second Alright sounds boring
; general
an Akka Actor
; general
If you do want italics with the will I think it needs to be will Or will for bold
; general
Just tried the actual generated docs This example comes out a little strange because of the different indenting I think as two blocks is better for this     includecode codeTypedActorDocSpecscalatypedactorsupercharge     includecode codeTypedActorDocSpecscalatypedactorsuperchargeusage
; general
prefer loginfo to avoid outputs when running tests
; general
Perhaps useval r ActorRef  similar to what you have done below
; general
Might be good to clarify that a typed actor instance will only execute one method invocation at a time in the same way as actors process one message at a time
; design
Why lazy val
; general
because I need to get this only once and system is not available in the constructor
; general
This creates a val no ie is retained until the ref is GCed
; general
Doesnt an extra level of indirection cost
; general
Ie both in changed interface for users and in overhead
; general
This can be made public now IMO
; design
Hmmm doesnt deadLetterMailbox belong in Mailboxes
; general
Yes just like about every other object we create why are you so worried about this If someone leaks Akkas objects then theyll leak Akkas objects Every ActorCell links to its parent  Id much rather remove those ugly hacks and not muck with final fields than introduce one more such hack
; design
Passing in the Configurator makes sense for the API it was either this or passing in the Config in addition The prerequisites are used only during construction of things not per message so saving one level of indirection sounds premature We can put the individual things into fields if you prefer
; design
who would want to call it
; general
hmm maybe it does will investigate
; general
is this line within the pdf line width
; general
two space one at the end of previous line and one here
; general
Why do we have defaults here that doesnt do anything with the mailboxtype above
; general
Users that create their own MessageDispatcher implementations
; general
they should call it from within their dispatcher then no
; general
This section contains the default values for all mailbox types we provide It also happens to double as the description of the default mailboxI discovered the need for default values when writing the tests for requirementdriven mailbox selection
; general
perhaps define  as a constant somewhere NoMailboxRequirementGiven
; general
should it be public
; general
Hasnt some config properties moved Should that also be mentioned here
; general
yes you are right
; general
Are these special mailboxtypes explained in the docs somewhere
; general
Good point Bjrn perhaps would make sense to scrap them now when we have a lot of different mailboxes and instead require putting the FQCN instead
; general
1 Very good writeup
; general
these are compat bridges for existing configs will add a TODO to remove them for 23 and add them to migration docs
; general
Is this sound
; general
nobody raised their voice you liked it tests pass
; general
no matter whether its true I still dont feel guilty for scalariforms crimes fixed anyway
; general
can also better be written as if
; general
This systemService flag was it used before the LocalScope change What does it mean
; general
its the difference between actorOf and systemActorOf among other things it bypasses remote deployment
; general
why with and without EndpointWriter prefix
; general
Would it be possible to use FlushAndStop  Death Watch instead of StopReading  StoppedReading with death being a more robust way of detecting that reading has stopped
; general
is ep endpointthen I think you should spell it out since same is used two lines below
; general
what happens if we are in Handoff right now
; general
why the roundtrip AFAICS this is not synchronized with anything else hence it feels like sleep 100ms to make sure that all sheep are in
; general
Are you gonna blame Eclipse for this hideous indentation wink
; general
no this comes from scalariform in our build
; general
Ah sorry about that Not your change initially It would be nice to be able to fail the PRvalidator if scalariform did any changes during the build
; general
Where is this used in this method
; general
I am not sure I understand this formula  Isnt seenSize is the number of nodes potentially sending to the seenDiff amount of potential candidates
; general
thx residue after refactoring
; general
I started with the formula you suggested in the ticket which corresponds to seenDiff  1 one candidate leftDo you prefer seenSize  seenDiff
; general
Yes that is probably better This is the probability that the node will gossip to exactly one random straggler or multiple ones
; general
ok makes sense thanks
; general
Can you refactor it like thisGossipDifferentViewProbability  stragglerCount  maxupToDateNodes  smallClusterBias 1where stragglerCount  seenDiff and upToDateNodes  seenSizeI feel a bit more comfortable with this form Sorry for changing my mind all the time
; general
I dont think that is good the result should be less than GossipDifferentViewProbability  10eg 3 stragglers in a 10 node cluster
; general
Then you get P  3  7 ignoring the bias factor now This keeps the expected amount of gossips to any individual straggler at constant But yes this can actually increase the resulting probability if there are more stragglers than uptodate nodes We can cap it though Maybe rkuhn wants to comment on this
; general
in other words my mind is melted down and I trust my basic arithmetic skills even less than before
; general
to be strict shouldnt host and port be optional fieldsnow None is serialized as  and materialized as Some
; general
JavaConverters should be used instead of JavaConversionsJavaConversions is too much invisible magic
; general
here is one example of the unwanted magic here you should probably iterate the java way instead of converting the collection
; general
Yes that is correct I just didnt question the way it was before Let me look at it
; general
Is the collection really converted I thought it just pulled out a Scala iterator wrapping a Java iterator
; general
Ok didnt know we had that policy Will change
; general
please verify that that is the case and use asScala
; general
So we really shouldnt get an Address without hostport here since you need remoting to be part of the cluster Now throws an exception on failure
; general
How do I obtain a reference to an actor on another machine
; design
You should also mention that you need to add akkaremote as a dependency
; general
There are quite some examples in the tests for the remoting this for examplesystemactorForakkaremotesyslocalhost12346userecho  ping
; general
could you instead create another actor watch it send it a PoisonPill and awaitTermination
; design
why not speed it up by using 1second
; general
uidexists  receivedUid
; general
Yes sorry originally I had a 1s gate installed so the retry interval needed to be higher
; design
Yes that could work
; general
trying to understand thisso this is a trick to create an EmptyLocalActorRef to be able to test invalid refswhat defines an invalid ref can that be created in some other wayI dont like that we use internal api if not needed
; design
what caused this to change
; general
so this is a trick to create an EmptyLocalActorRef to be able to test invalid refsyes what defines an invalid ref an actor ref that doesnt point to an existing actor instance For the test its only important that the empty refs path is the same as that of an actor created immediately afterwards so that it can be resolved by a channel can that be created in some other waybefore I created it with actorOf but the problem here is that I cannot stop that actor and wait for its termination as it will not let me reliably create an actor with the same name I could run all these tests inside a special purpose actor but think that it complicates the test much more than needed Can you image another way of creating an invalid actor ref I dont like that we use internal api if not neededagree but I felt it was the best compromise in this case
; design
Thats a mistake will undo
; general
ok I have no other suggestion than using another actor that createsstops the childI agree that it would complicate the testI think this is alright
; design
AwaitresultdemocratsResult 1 seconds must be  3
; general
AwaitresultrepublicansResult 1 seconds must  2
; general
Then you can scrap these
; general
should probably document that it replies on the same thread might be useful to know that ask does not actually lead to blocking
; general
Yes I will add that Thanks
; general
Why are you using the name only Shouldnt it be the whole path or the ActorRefsIts not mandatory to use same parent for the router as the routees or is it
; general
oh good catch why not just routees
; general
I used the name instead of the ActorRef because I wasnt sure which one was better We have both representations internally in the RemoteActorRef and I was unsure which one would make most sense to expose Ill update to return the refs instead
; design
why is this faster than match just trying to learn
; general
I think the naming here is a bit strange this should be named v1 it is a VectorClock
; general
rename one  seen1 and another  seen2
; general
Because in this new version I just want to check Some and then v1 or v2 depending on the value so my options would have been    v1 tryCompareTo v2 match       case None                    Do nothing pointless branch      case Somex if x  0  builder  node v1      case                          builder  node v2     or     v1 tryCompareTo v2 match       case Somex  builder  node if x  0 v1 else v2      case                Pointless branch do nothing     or    v1 tryCompareTo v2 match       case Somex if x  0  builder  node v1      case Somex              builder  node v2      case                            Pointless branch do nothing     And I didnt want to use Option combinators to avoid allocation of closuresLike    v1 tryCompareTo v2 foreach       case x if x  0  builder  node v1      case   builder  node v2    or    v1 tryCompareTo v2 foreach  x  builder  node if x  0 v1 else v2   Prefer this one but allocates closure
; general
I mean v2 for this one and v1 for oneNode
; general
I see makes sense
; general
So the idea is to run the polling on another dispatcher and run each connection with its own threadDo the connection actors do any blocking ops Otherwise it might make sense to have a dispatcher with only 1 thread that runs a set of connection actors
; general
afaik the only blocking operation was the polling so it can be a dispatcher with 1 thread that runs a bunch of socket actorsThis duplicates some functionality that is already in zeromq  paramscontext is a zeromq context that actually holds the IO threads and that one also takes a thread already So with the current solution for a single socket we actually occupy 3 threads which leaves a bit of a bad taste if a dispatcher is shared it would already be a somewhat less dirty
; design
Yeah thats no coolWhy not do the polling on the same dispatcher as the connection actor since thats already got a dedicated thread
; design
because that thread would block until the poll expires or a message comes in so you wouldnt be able to send messages while polling for incoming messages
; general
But the socket can only be used by one thread anyway so you cant send to it from other threads
; general
you can poll it from an other thread but you cant readwrite to it from another thread So the creating thread needs to be used to readwrite fromto the socket But polling is a separate operation in zeromq which blocks and when that completes you get a result code that needs to be 0 to indicate success Once you know there is a message you can read it in the creating threadBut the actual polling happens somewhere else so that the actor wouldnt be occupiedIve had no issues in my tests anymore since i used this pattern well no more issues with zeromq plenty of other ones
; design
Alright Ill merge into release13 so it will be a part of RC5
; general
Sorry for commenting on this before I havent had much time lately to put into Akka stuffI think the changes done in this changeset specifically newEventLoop should be scrutinized a lot more if not reverted completely I prefer the latter one1  The code is much more complex than it used to be and I am far from being convinced that these changes improve the code It is clear that  new messages cannot be sent until the polling for new incoming messages completes but I do not really see the issue here If there is an issue eg performance then show me some hard numbers2  ZeroMQ is clear about whats and whats not threadsafe and therefore the socket must be used in the very same thread that it was created in Lets keep it that way across polling as well3  I hate this commit because not only does it do a lot of things incremental changes with good commit messages would be preferred but introduces zero tests and doesnt even try to explain how to reproduce this issue or issuesBefore I am willing to move on with the forward port for Akka 20 this code must be either reverted or cleaned up along with adding appropriate tests
; design
Hi Karim13 has not been released yet propose a fix and Ill have a look at it for the next RC which should be out sometime later this week
; general
Writing a test for this would result in a nondeterministic test and if thats not bad enough it will actually exit the jvm thats running the test if it turns out the issue does occur resulting in an unstable test suite that cant be run reliably automatically all because of a logic error  But the error occurs frequently enough in our own code because we have a larger number of tests which we do have in an inhouse project that has 200 tests exercising zeromqThe bug that would trigger the assert is resolved by using a ThreadBasedDispatcher Pinned in akka 20 This is the only type of dispatcher you can use with the zeromq socket there is no other dispatcher that guarantees that the socket will be accessed by the same thread that created it One of the rules from zeromq is that you need to access the socket from the same thread that created the socket And there is exactly 1 dispatcher in akka that gives that guaranteeThen to justify the Future based polling loopThe problemSay I have a throughput configured of 1 and a receive timeout of 5 seconds Considering that there are no incoming messages on the socket I can only send 1 outgoing message every 5 seconds because that is how it was configured By using the future you dont block the thread that created the socket by polling an idle socket leaving it free to process its own mailboxAny solution that blocks inside the actor thread will significantly impact throughput for the socket
; design
This line is big nono spotted it for the 20 stuff as well Is it needed
; general
not really it only gets there when the actor is stopping so that logic can be moved
; design
Great thanks then Ill strip it out
; general
Great explanations Ivan thanks
; general
the idea here is to run the tests against a different scala version than was used for compilation to test binary compatibility of scalalibrary please revert or redo this part
; general
Is it the responsibility of Akka to test Scala binary compatibility And in any case why wasnt this fact important enough to add as comment on that line
; general
I think it is reasonable to expect that people read a comment even if it is a multiline comment directly above the section they are editingAnother use of this subproject is to run tests without compiling them IIRC Bjrn was working on something using that at some point or set up a jenkins job I dont remember
; general
Ill fix and add comment
; general
But thinking about it isnt my change more appropriate According to the multiline comment the version is intended to be set from the outside anyway which would override Its going to be much worse to try to keep things in sync manually in the AkkaBuild otherwise
; general
With your change this subproject does not serve any purpose any more AFAICS it only adds value if the scalaVersion differs from the main one or if the artifacts being tested are taken from an external repository which is not implemented here
; general
not true it will soon be used by atmos trace project
; general
defaulting to same scala version would be good
; general
that is what I meant earlier but it is not yet visible in the source
; general
okay so we leave the customization comment for testing against a different Scala version in and change the default which means that Viktors change is exactly what is needed
; general
Maybe another property for testing against a different scala version that defaults to requestedScalaVersion
; general
Not a fan of this looks hacky
; general
How about just wrapping IOExceptions with new IOExceptions with the same message as the original but with scalautilcontrolNoStackTrace mixed in
; general
so if you want to you can do getCausegetStackTrace etc
; general
The problem is that the user doesnt get to see these exceptions All they do is crash the connection actor
; general
I was looking for a way to reduce unhelpful logging output without disabling stack traces completely so that for certain debugging cases users can turn it back on ideally without needing to recompile
; general
Yeah my point is that it should ideally be configured for the logging library and not the akka configuration in fact we already have too many discrete logging options we should reduce these imo since it is hard for the user to know what affects whatSince the stack trace wont help the user in any way and it is possible to get the cause exception  stack trace then one can decide if one wants to pull out the cause trace or not
; general
is there a substantial benefit to this change I personally find  more obvious eq seems like an implementation detail
; design
please include remote address
; general
True actually I didnt want to include it and will change it backJust for the sake of discussion By using eq instead of  on a case class we could trade an instanceof against a simple comparison Since ConnectionClosed is a type with 5 subtypes the simple comparison is going to be a very small amount faster However doing this is probably only warranted in the hottest of all loops which this site is certainly notSide question Aborted  closedEvent would be a tiny bit faster than closedEvent  Aborted no however I find the latter more natural
; design
I would not worry about any of these as the precise evaluation order for example is an obscure implementation detail which might change The performance difference of  on a case object will only in rare cases justify deviations from the most obvious and therefore correct syntax
; design
Cant we just avoid allocating these cache them
; general
Sure the extra bitfield is really not an issue here
; general
Ill do that
; general
is this better or the same as superhashCode
; general
not much value in a case class any more
; design
What happens if scalautilhashingMurmurHash3productHashthis ever returns 0
; general
patriknw that is whats done inside a case class The super is Objectdrewhk There will be no caching I didnt want to special case that It will be fixed by changing to a lazy val
; design
Pretty printing and equals
; general
Great work Bjrn
; general
Timestampzero becomes a thunk we should do this    val cmpVersions  versions withDefaultValue Timestampzero    version match  case n t  t  cmpVersionsn
; general
No need for this method anymore just inline the code in the ifelse
; general
we should use withDefaultValue here as well
; general
can you use these constants in receiveGossip would make things more readable
; general
would it make sense to always use withDefaultValue for the VectorClockversionin that case remember to add it in merge also
; general
Im not sure about that so I didnt want to change it
; general
I see why you use a var but Im not sure that I like it
; general
didnt you define constants for these
; general
perhaps match on receiveGossipType in the gossipStats match
; general
Yeah we should remove PartiallyOrdered and use constants for comparison instead
; general
Yes youre right Should use them here as well
; general
should we make VectorClock privateakka so that we can change itIn that case it feels a bit overdesigned to have Node NodeImpl just to wrap a string for our internal implementation of vector clockswdyt of using type Node  String instead
; design
Great idea Patrik Lets offer services on top of it but not expose it directly
; design
Id match on Older as the trait is sealed
; general
Is this the most likely case ie why test it first
; general
new String Really
; general
This is still a 3pass solution with lookups
; design
This is going to be slower than the replaced version as it still uses lookups why not iterate and merge
; general
why allocate a new String instance    def applyname String Node  hashname    def fromHashhash String Node  hash
; general
Yes it is Those optimizations were deferred until after 220
; general
is this more efficient than statusversionversionskeystoVector
; general
I dont think that I understand what you mean This does what the replaced version does only it doesnt do replacements for equal times And yes this could also be rewritten with iteration using the TreeMap but RC2 is coming up
; general
Nice catch You are right it probably is the least common case
; general
No apparent reason Will clean up
; general
Nope just got fooled by the old code and IntelliJ IDEAs broken highlighting
; general
This method has a terrible performance profile It creates so many intermediate collections I cant even start to count itI sincerely hope its only called once every blue moon but I have a nagging feeling thats not the case
; general
Its called once for every gossip message that we send out once a second is the default If the cluster stabilizes we change to GossipStatus insteadYes the performance is bad for much of the code in here Ive opened a ticket for optimizing it httpswwwassemblacomspacesakkatickets3456
; general
I dont see why the var is needed here why not explicitly return the result from each branch
; design
this will hopefully give an exhaustiveness warning Id prefer introducing a common sealed trait for the nonIgnored statuses to get around this without ugly commentonly cases
; general
was this not SameBefore previously I dont know what is right just commenting on the diff
; general
please add override
; general
Same is now the first case we check for and it really doesnt matter if we take v1 or v2 if they are the same
; general
okay thanks I dimly remember corners where it matters which of the equal ones we take
; general
I just think that having the value returned in the 5 first if statements that are just 1 line loggers just to keep it a val looks way uglier but I can change
; general
Shouldnt this respect the remote dispatcher setting
; general
I though about that but I couldnt create a HashedWheelTimer from an Executor and you cant pull the ThreadFactory out of the ExecutorAlso people might be confused if one of the threads in their Executor is hijacked by the HashedWheelTimer
; general
Was there a HashedWheelTimer created implicitly before
; general
Yes In the depths of the NioClientSocketChannelFactory it created a HashedWheelTimer with no arguments and that used javautilconcurrentExecutorsdefaultThreadFactory
; general
I backtracked the constructors of HashedWheelTimer through Netty into our code and this was the only place except for the TestConductor but that one is just for testing and uses the ExecutorsdefaultThreadFactory for everything anyway
; general
Is there a possibility to reuse HWTs I bet we use more than one for the netty parts
; general
Yes viktorklang We can probably reuse one HashedWheelTimer for the whole NettyTransportSo drewhk correct me if Im wrong This seems to be per outbound association Are we creating this for every connection to a new remote system
; general
Isnt the factory assigned to a val I will check Btw NioDatagramChannelFactory cannot be fed with a HashedWheelTimer
; design
bantonsson I think we should do that to keep thread count down
; general
No I checked this is created when the driver is loaded Shouldnt you apply the same to serverChannelFactory
; general
Thanks then we only create one The NioServerSocketChannelFactory doesnt create one neither does  the NioDatagramChannelFactory
; general
One per driver to be exact but that is fine I think Can you add a comment explaining that serverChannelFactory and datagram channel factory do not create a HWT Otherwise next time we will look at this code will be confusing
; design
Yes thats what I meant and I think thats fine too Ill add comments
; general
rename to getInstance and ScalaDoc it as JavaAPI you can reuse the same text
; general
Add an empty line between all of these for readability
; general
What if members is empty
; general
Shouldnt we include the ActorSystem name here
; general
Cant be empty It will at least have the node you are currently talking to
; general
It is used by the ping command to just check that a node is up and fine Could be improved to send more info than pong But it will do for now I think
; general
Good question Bigger question Discussed with Roland some time ago Currently a cluster can include multiple actor systems but this should be changed to only allow a single one
; design
But why is it a public method that returns a String Isnt this an implementation detail
; design
I can use the memberstatus instead and remove this method
; general
Is the delay really necessary I know that it existed in the old code as well but it has a really bad smell and is quite arbitrary
; general
Should we send to dead letters Or too inefficient
; general
Ok I see so sending to dead letters is not in NoRoutee but here Probably makes sense maybe add a comment to NoRoutee that references this place
; general
This class is a nice one
; design
Intentionally not sealed I like the idea of keeping it open but then it might need some documentation
; general
Not necessarily a connection
; general
Negative value is allowed
; general
I have a relatively shallow understanding of the original routers so my question might be totally stupid Given that we have the aroundReceive interception API is this strictly needed Im a confused soul
; design
Again a question just to educate myself Why is the specialized cell needed
; general
This deprecation message is slightly confusing
; general
What is the relationship between RouterPoolActor RouterActor and RoutedActorCell
; general
yes I have been pondering about that as wellThe reason is explained in the comment It is only a trying to do my very best effortSince it now is possible to add and remove routees more easily users might complain if some messages are routed to deadLetters due to a removal of a routee
; general
yes it is only a note for ourselves since this is privateakka but I can improve
; general
RouterPoolActor is more specific than its subclass RouterActor adds some more mananagementBoth types have the RoutedActorCell as context cell
; general
yes all classes in this file needs more api docs
; design
this code was only moved so I assume so
; general
but isnt that in Actor not in the cell or what do you mean
; design
its an optimization
; general
This will want to be documented a router implementation cannot assume that all routed messages are properly recorded since we create a new instance here and messages going through between the copying and the writeback will be routed by the old instance and not seen by the new
; design
yes it should all management messages go one side of normal messages since they are also processed by the head actor
; general
why not contextsystemschedulerscheduleOnce10seconds self ReceiveTimeout
; general
this might want to become a wildcard possibly
; general
you dont need the doublequotes
; general
case valid  whitelist  blacklist  validcase invalid  throw new IllegalArgumentExceptionakkaremotenatfirewall is set to invalid and not to whitelist or blacklist
; general
val NATFirewallAddresses  getStringListakkaremotenatfirewalladdressesasScalatoSet
; general
NiceThe following version has 0 allocation for the allornothing cases which includes the default setting and doesnt repeat the natAddress validity check for both branches    private def allownatAddress Address Boolean        import providerremoteSettings NATFirewallAddresses NATFirewall       if natAddresshostisEmpty  natAddressportisEmpty false Partial addresses are never OK      else NATFirewall match         case whitelist  NATFirewallAddressesnonEmpty  NATFirewallAddressescontainsnatAddresshostget    natAddressportget        case blacklist  NATFirewallAddressesisEmpty  NATFirewallAddressescontainsnatAddresshostget    natAddressportget
; design
To aid in debugging might be nice to know why the message didnt get throughcase ActorPathExtractornatAddress elements    if allownatAddress systemactorForelementstellremoteMessagepayload remoteMessagesender  else logerrorFirewall dropping message  for nonlocal recipient  at  local is  remoteMessagepayload r address providertransportaddresscase r
; general
Nice  had to add this val settings  providerremoteSettings   have to do this to do the import or else err stable identifier required import settingsNATFirewallAddresses NATFirewall
; general
Cant we move the if to the case line
; design
but then there must be another case or
; general
yes the None None can move to the bottom and become
; design
Im not totally convinced that that is easier to understand and None None is the normal most frequent case
; general
I think it is clear enough as it is perhaps add a comment to the None None case that it is the most frequent one
; general
please add comment here that superpreRestart is called is called from preRestartDefault already so they dont duplicate the call
; general
Classes overriding preRestart should be able to call superpreRestart as shown in this examplehttpsgithubcomeligosourceakkablobwip3618cleanuplifecyclehookskrassermakkasamplesakkasamplepersistencesrcmainscalasamplepersistenceProcessorFailureExamplescalaL21 first delete message then run recovery as defined in ProcessorpreRestart A subclass calling superpreRestart will only call ProcessorpreRestart whereas the superpreRestart call in preRestartDefault calls StashpreRestart  as it should be No duplicate call of any preRestart definition
; general
rkuhn  or do I misunderstand your comment
; general
ah yes you are right
; general
now if the eventStream would also preserve the sender instead of always using deadLetters then I would probably say send from self include original sender in message Does that qualify as a usecase
; general
Update all java doc samples that use UnhandledMessageException The idea was to illustrate a good default behavior in onReceive ie throw  UnhandledMessageException as scala Actor does Now that should be changed to publish to event stream I guess
; design
missed sender here will fix
; general
Its also in TestKitDocSpecdemonstrate unhandled message in
; general
Its also described in testingrst search for unhandled
; general
this method is overridden in UntypedActor also needs fix invoke superunhandledor remove it from UntypedActor since it is not really part of UntypedActor API never called by akka
; design
Do we need UnhandledMessageException any more Remove class
; general
Thanks will fix
; general
Yeah good point
; general
Removed override in UntypedActor
; general
oh thats weird github did not show me the latest then but it seems that you just fixed UnhandledMessage instead of preserving sender in EventStreampublish there is this ticket where I stipulate that that might be useful  think about using an EventStream for pullrouting of messages to actors then having the sender right would definitely help
; general
Not included in this ticket
; general
Alright so Ill add it to 1542
; general
Wow this is going to be expensive but its only done at ActorCell creation so open a ticket under Performance to make this more efficient with low prio
; general
If this isnt being done in REflectiveAccess we should add it there makes no sense rethrowing InvocationTargetException
; general
Whats the purpose of having this here as a def instead of using the createInstance that takes a FQNstring
; general
Why do we still need these Cant we drop them
; general
Id like to drop these as well
; general
Great stuff Patrik I like the approach
; general
Done separate ticket 1555 and commit but pushed to this pull request
; general
This introduces an extra allocation try marking withErrorHandling as final and inline
; general
Yes Its always possible to use new CustomMailboxTypeakkaactormailboxRedisBasedMailbox in case of programatic definition
; general
ah thanks fixed
; general
have you observed threadpoolexecutor to be better than forkjoin for these dispatchers
; general
I think this should be aligned with akka serializers They can not be the same because of the stream vs byte array but they should be as close as possible For example the classloader should be grabbed from the systemdynamicAccessclassLoader See akkaserializationJavaSerializerThat will also make it possible to create a SnapshotSerializer that delegates to an akka serializer converting the stream to bytes
; general
These are used for blocking IO which is the bottleneck not the dispatcher type the write dispatcher is a dedicated thread used for sequential blocking writes to LevelDB the replay dispatcher are dedicated threads used for concurrent blocking potentially longrunning readsscans over the journal
; general
yes that feels important
; general
how are write failures propagated to the processor
; general
Good idea will do
; general
BufferedOutputStream and BufferedInputStream
; general
My plan is to work on journal IO failure handling when implementing the journal plugin API ie with the next PR
; design
Makes absolutely sense will add it
; general
what is the advantage of this Base64 which adds another dependency over javanetURLEncoderULRDecoder
; general
URLEncoder should do it as well and even has the advantage that one can read the processor id in the snapshot filename Will change it
; general
Why not pipeTo
; general
Maybe a more descriptive name
; general
can PID contain dashes
; general
Because I find     saveSnapshotAsyncmd snapshotmap       case   SaveSnapshotSucceededmd    recover       case e  SaveSnapshotFailedmetadata e    toself pless readable although its less redundant Anyway I should change Successm to Success
; general
Will change to load
; general
Yes but this is still working then These extra dashes are correctly matched by
; general
I think Timeout has to go Or we need to create Timeoutcreatet TimeUnitSECONDS
; general
Perhaps add a link to the wikipedia article for ACID
; general
Since this is the Java version you might want to clarify that were talking about Scala scalacollectionimmutableMap and sciVector so the reader doesnt confuse it with Java juM and juVector
; general
What kind of datastructure a normal mutable a transactional or immutable
; general
Okay Ill add Timeoutcreate for java usage Using an implicit or explicit Timeout for Coordinated lines up with other timeouts
; general
Okay Thanks Just copied this over from previous example
; general
This is straight from the original docs from Jonas I guess I read it as needing to share a datastructure in the general sense of datastructure across threads is a good usecase for STM
; general
Yes this is just a copy of the Scala docs Originally we provided our own persistent datastructures with Scala and Java interfaces Not even sure if Scala vector and map are that usable from Java Will remove this section
; general
Actually I see there is already this constructor httpsgithubcomjbonerakkablobv20M1akkaactorsrcmainscalaakkautilDurationscalaL548
; general
Great use that
; general
Note the withCreator is used in many of the java examples Will create separate ticket for this
; general
Should be a very simple regex to replacenew PropswithCreatorx with new Propsx
; general
Yes But Ill just keep this pull request focussed to transactors
; general
Why a List in particular
; general
Perhaps implement akkadispatchAwaitable
; general
Yes its been a long time since I last used javautil
; general
Yes an Array is more straightforward though I guess it doesnt make much difference
; general
Not sure what it gains here
; general
I was thinking more along the lines of perhaps Seq
; general
Uniformity of API
; general
This is not a part of akka API just a common interface for local and distributed barriers I dont see the reason to burden with extra API here
; design
IndexedSeq since it should allow for a constanttime applyindex Array should be fine as well
; general
Not to be extra picky but for collections I really prefer not to have concrete implementation leak out into user API
; design
Changed that Didnt expect it to become part of the user API
; general
Id probably use Seq
; general
while the actor system is shutting down
; design
I guess you mean  0 here
; general
which means that since preRestart is not overridden this actor will no longer be subscribed after a restart
; design
yes of course thanks
; general
what do you mean the subscription is not removed in case of restart self ref is the same
; general
ah Im so stupid  or this api is so stupidI got it
; design
it was an existing actor that was exactly what I needed for this test
; design
Dead letters does not have to be a problem  existence of dead letters does not necessarily indicate a problem
; general
that is better thanks
; general
We should definitely not require people to set this to be able to use remoting it should be some UUID or something if not speificied
; general
Are they in the same package
; general
Id add actorFor somewhere here
; general
And add actorOf somewhere here
; general
We desperately need to add the remotemounting ASAP so people dont loiter their code with absolute URIs
; general
There is a ticket for that httpwwwassemblacomspacesakkatickets1564But I guess we have to have it in there until that ticket has been implemented
; general
No Ill add the whole package to the example
; design
please do not abbreviate we must establish the term and the best way is repetition repetition repetition
; general
very nicely showing off our shiny new configuration
; general
Okay I will key my new keyboard
; general
Yeah its really slick isnt it
; general
We should add so that if theres any options that we dont expect in the config could be typo etc should be outputted at startup
; general
What does this config meanis it valid to omit the corepoolsize  corepoolsizefactor
; general
I think we should call it id and not Key to align with things like ExtensionId etc
; general
Is this threadsafe
; general
Or needs to be threadsafe
; general
I vote to rename dispatcherFactory to dispatchers
; general
Perhaps well have to require that people subclass the UnboundedPriorityMailbox and override a method to provide the ordering and then they just use the FQCN of that class in the config
; design
I suggest just default instead of defaultdispatcher
; general
Shouldnt this check be done in lookup
; general
Dont think we should have it here anyway Perhaps put it in ActorSystemImpl for Extensions to hook into
; general
Should perhaps clarify that it might create a new instace for each call so it is not a guaranteed lookup
; general
CAnt we scrap this now and just make a configurator and a lookup
; general
What does it do if the key does not exist anywhere
; general
Might be possible but we must consider that users can subclass in various ways incl mailbox Create a separate ticket for it
; general
we dont have corepoolsize in config This means that the core pools size will be exactly 60 independent of  corepoolsizefactor It might be nice with corepoolsize config property for this use case Create ticket if you think it is useful
; general
I used key because it corresponds to a config property key but I can change it to id np
; general
It doesnt need to be threadsafe because it is a test and individual test methods in same instance is not running in parallel or in different threads as far as I know but I can change it to AtmomicInteger to be on the safe side More important is that all this is a hack for the MessageDispatcherInterceptor Cant we do something better
; general
sounds good you have my vote as well
; general
Might work Ill try The way I did the mailboxType config is that the fqcn is the class name of the actual Mailbox That works nice for the durable mailboxes But here we need to support the fqcn of the MailboxType Maybe we should support both load the class and then check if its a MailboxType or a Mailbox and then instantiate appropriately WDYT
; design
Yeah the config lib rocks
; general
This name will be used for threads so I think defaultdispatcher is very good
; general
good idea Ill move it too lookup and return defaultDispatcher if id  PropsdefaultDispatcherKey
; design
Oh I think it should always be a MailboxType
; general
defaultDispatcherKey is a null so it must be treated special somewhere
; general
Lets say that we solve the prio mailbox without it we still have the ActorModelSpec which creates its own Dispatcher I would really like to remove the method so its not that
; general
but that depends on the impl PinnedDispatcherConfigurator returns new instance each time but not DispatcherConfigurator
; general
Cant ActorModelSpec just require that the tests create a class that extends DispatcherConfigurator and just have that in the ActorSystem config and look it up there
; design
Thats my point the contract of the method is not to return the same dispatcher instance each call Can be good to document that at the interface level
; general
That might work Ill try
; general
as it says or if not defined it uses the default dispatcher
; general
Could be a source of hard to diagnose problems if it just silently uses the default Perhaps log a warning
; general
then I have to write one MailboxType for each durable dispatcher lots of work just joking Ill change it to MailboxType
; general
I think the problem is that its not top level class there Ill see if I can rewrite it but I leave that for last so if run out of time you can complete that part
; design
ok Ill clearify that I thought an instance was fuzzy enough to mean any of the alternatives but I agree better to clarify
; general
On Wed Dec 21 2011 at 508 PM viktorklang replyreplygithubcom wrote       FIXME Dispatchers registered here are are not removed see ticket 1494    private val dispatchers  new ConcurrentHashMapString MessageDispatcher    private val dispatcherConfigurators  new ConcurrentHashMapString MessageDispatcherConfigurator             Returns a dispatcher as specified in configuration or if not defined it uses Could be a source of hard to diagnose problems if it just silently uses the default Perhaps log a warningThats why I log a Debug but I can change it to Info Dont think its aWarning because I think as a start defaultdispatcher is a good defaultbut still with possibility to tune a specific dispatcher if needed  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull182filesr309168 Patrik NordwallTypesafe httptypesafecom  EnterpriseGrade Scala from the ExpertsTwitter patriknw
; design
No my point was if I say that foo should be my dispatcher and there is no foo registered and it falls back to the default I want a WARNING
; general
On Wed Dec 21 2011 at 524 PM viktorklang replyreplygithubcom wrote       FIXME Dispatchers registered here are are not removed see ticket 1494    private val dispatchers  new ConcurrentHashMapString MessageDispatcher    private val dispatcherConfigurators  new ConcurrentHashMapString MessageDispatcherConfigurator             Returns a dispatcher as specified in configuration or if not defined it uses No my point was if I say that foo should be my dispatcher and there is no foo registered and it falls back to the default I want a WARNINGAlright I have another point but Ill change it to Warning  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull182filesr309229 Patrik NordwallTypesafe httptypesafecom  EnterpriseGrade Scala from the ExpertsTwitter patriknw
; design
The thing is that it might be that its using the wrong config or a nameis misspelled in the configcode so its good to know whats happening
; general
changed to id
; general
dispatchers it is
; general
FQCN is to the MailboxType that solved the issue with priority mailbox
; design
The register method is left but only used from ActorModelSpec and CallingThreadDispatcherModelSpecI created separate ticket for rewrite of them 1563With that the register method can be removed
; general
Yes That worked out fine Thx
; general
Shouldnt this be the PropsdefaultDispatcher
; general
PropsdefaultDispatcher  nullfor some reason Probably an optimization of mem size or serializationsize I dont knowIf it wasnt for that I would have done it the other way I thinkPropsdefaultDispatcherId  DispatchersDefaultDispatcherIdThen the special case in lookup wouldnt be neededOn Wed Dec 21 2011 at 1110 PM viktorklang replyreplygithubcom wrote   29251 30196  case class DefaultDispatcherPrerequisites     val deadLetterMailbox Mailbox     val scheduler Scheduler extends DispatcherPrerequisites   object Dispatchers           The id of the default dispatcher also the full key of the      configuration of the default dispatcher         final val DefaultDispatcherId  akkaactordefaultdispatcher Shouldnt this be the PropsdefaultDispatcher  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull182filesr310193 Patrik NordwallTypesafe httptypesafecom  EnterpriseGrade Scala from the ExpertsTwitter patriknw
; design
My point was why not just make PropsdefaultDispatcher  akkaactordefaultdispatcher and scrap DispatchersDefaultDispatcherId
; general
Yes that or the other way around could work removing one of thembut still do you know why it was  null Setting something to null must be done for to a good reason or is it justaccidentalOn Wed Dec 21 2011 at 1123 PM viktorklang replyreplygithubcom wrote   29251 30196  case class DefaultDispatcherPrerequisites     val deadLetterMailbox Mailbox     val scheduler Scheduler extends DispatcherPrerequisites   object Dispatchers           The id of the default dispatcher also the full key of the      configuration of the default dispatcher         final val DefaultDispatcherId  akkaactordefaultdispatcher My point was why not just make PropsdefaultDispatcher  akkaactordefaultdispatcher and scrap DispatchersDefaultDispatcherId  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull182filesr310224 Patrik NordwallTypesafe httptypesafecom  EnterpriseGrade Scala from the ExpertsTwitter patriknw
; design
It was null because it couldnt be an instance of a Dispatcher since therehas to be an ActorSystem to get the default dispatcher instance
; general
ah forgot that it was a MessageDispatcher fixedOn Wed Dec 21 2011 at 1134 PM viktorklang replyreplygithubcom wrote   29251 30196  case class DefaultDispatcherPrerequisites     val deadLetterMailbox Mailbox     val scheduler Scheduler extends DispatcherPrerequisites   object Dispatchers           The id of the default dispatcher also the full key of the      configuration of the default dispatcher         final val DefaultDispatcherId  akkaactordefaultdispatcher It was null because it couldnt be an instance of a Dispatcher since there has to be an ActorSystem to get the default dispatcher instance  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull182filesr310259 Patrik NordwallTypesafe httptypesafecom  EnterpriseGrade Scala from the ExpertsTwitter patriknw
; design
GreatId love for someone else but me to have a chance to have a look at itbefore merging it in any volunteers
; general
too late sorryI will not work tomorrow thats why it felt good to close it nowOn Wed Dec 21 2011 at 1151 PM viktorklang replyreplygithubcom wrote   29251 30196  case class DefaultDispatcherPrerequisites     val deadLetterMailbox Mailbox     val scheduler Scheduler extends DispatcherPrerequisites   object Dispatchers           The id of the default dispatcher also the full key of the      configuration of the default dispatcher         final val DefaultDispatcherId  akkaactordefaultdispatcher Great Id love for someone else but me to have a chance to have a look at it before merging it in any volunteers   Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull182filesr310305 Patrik NordwallTypesafe httptypesafecom  EnterpriseGrade Scala from the ExpertsTwitter patriknw
; design
Alright merge it in squashed so its easy to revert if someone findsanything explosive in there
; general
should probably change range to 02GiB
; general
which unit is this in
; general
same here whats the unit
; general
Ill add a description here
; general
Ill add a description here its number of connections
; general
this is the only deferred option parsing Im aware of why not put it in ActorSystemSettings
; general
Oh no its perfectly recommended to put config parsing in Extensions as they may or may not be usedSee Serialization for instance
; general
ah okay wasnt looking at a large enough piece of context here
; general
Are we sure that were calling clearAll at all times when the Thread cannot be recovered so we dont grow the heap indefinitiely if the scheduler thread dies
; general
Why do we need the companion
; general
a mutable toString
; general
Missing tailrec annotation
; general
add a comment here as well that this is peekNode inlined
; general
Is this performant enough
; general
Does this error get escalated somewhere or only logged
; general
yes this is done only once at shutdown
; general
there is no escalation possible which is what ships going down is supposed to convey
; general
But it actually brings down a system or just lets it crash
; general
just one case would be enough
; general
please use a subtree of the default config here otherwise there will be conflicts between this and real actor systems    ConfigFactoryloadgetConfigmigration
; design
No this is not going to fly but well discuss alternatives offline
; general
Having a separate ActorSystem for all DSL usage is not that useful if the DSL is nice people will want to use it for their real systems Therefore every action of the DSL must take an implicit system and this special thing must go
; general
Threadbased communication should reuse existing infrastructure I see no need to do this special dance with containers and refs
; general
This should throw an exception if used from an eventbased context ie within an actor of future
; design
this shouldnt be necessary
; general
any reason why you didnt port futureFlowLoops from the old tests
; general
this file belongs into the akkadataflow directory for us poor eclipse users
; general
Oh since Derek didnt document it I deleted it
; general
Ill try removing it
; general
I always get that wrong argh
; general
an alternative would be to throw a PersistenceFailureException and let it be handled by the supervisor but that is perhaps not what we want Proscons
; general
what is returned BoxedUnit for java api
; general
are these defaults used automatically if the plugindispatcher is not specified
; general
processors and snapshot
; general
is the mutable map needed for performance
; design
INTERNAL API marker
; design
perhaps collapse into one if line
; general
PersistenceFailure is a notification about a problem in the journal actor so a restart of the processor by a supervisor wouldnt help much here Its actually the journal that must be restarted by a supervisor as done by SyncWriteJournalhttpsgithubcomeligosourceakkablobwip3641storagepluginapiskrassermakkapersistencesrcmainscalaakkapersistencejournalSyncWriteJournalscalaL28 if write throws an exception AsyncWriteJournal OTOH delegates fault handling to implementation classes eg this could be even located in the async storage backend driver  Ill remove the erroneously placedhttpsgithubcomeligosourceakkablobwip3641storagepluginapiskrassermakkapersistencesrcmainscalaakkapersistencejournalAsyncWriteJournalscalaL45throw e in AsyncWriteJournal with the next commit A processor can still decide to throw an exception for whatever reason when receiving this failure message But it likely may want to inform the sender to resend the message or trigger some applicationspecific compensations The latter is also the reason why a generic failure reply from the journal to the sender is not flexible enough
; design
This should be Void of course
; general
plugindispatcher must be specified at the moment Will change it to make it optional
; general
We agreed with Mark that all files that have a significant amount of existing eventsourced code should keep the Eligotech license header This is the case for most journalsnapshot related files In case of this file however a Typesafe header would be more appropriate Will change it
; general
I had the same discussion with drewhk already and my argument was that I find this a bit more readable although it introduces more redundancy Will change to maprecoverpipeTo as that style is used in many other places in the Akka code
; general
I didnt measure that I implemented this algorithm several years ago using a mutable map and then never changed the implementation
; general
NO shutdown of dispatchers are done by themselves as you know and Roland and I have spent considerable time to make it work together with shutdown of scheduler They cant be shutdown here
; general
Ok then there is no solution to this Ill clean up and invalidate theticketCheersV
; design
ok The dispatchers are shallow and doesnt consume much memory when the actual ExecutorService is shutdown so it should not be much of a problem to keep the DispatcherConfigurators in the map Might be a problem for pinned dispatchers if a lot of actors are created with pinned dispatchers but I guess that is a rare use case
; general
What is the purpose of this If it is only for defining default value to undefined that should be done in referenceconf instead of
; general
Good point I first had newUuidtoString here Thx
; general
Perhaps using the logging instead of stdout
; general
final here as well
; general
use    new PropsJCreationActorclass
; general
use     new PropsJAdvancedCalculatorActorclass
; general
Why is this here
; general
use    new PropsJLookupActorclass
; general
We use println in the Scala example and I wanted them to be similar
; general
Its to prevent this sample from bombarding the actors We only want to show how to communicate not that we can load the crap out of our things Its the same in the Scala sample
; general
I know Im late but anyway I think that in our Java samples we should send unhandled messages to deadLetters to promote that as a good convention See samples in Actors Java doc
; general
Yes a bit late but I can fix this anyway
; general
Thx for pointing this out btw
; general
I noticed that it is maybe not correct in the Actors Java docselse throw new UnhandledMessageExceptionmessage getSelfI think the correct way should beelse unhandledmessageIll create a separate ticket for thisPatrikOn Dec 28 2011 at 1852 Henrik Engstromreplyreplygithubcom wrote package sampleremotecalculatorjava  import akkaactorUntypedActor  public class JAdvancedCalculatorActor extends UntypedActor      Override     public void onReceiveObject message throws Exception          if message instanceof OpMultiply              OpMultiply multiply  OpMultiply message             SystemoutprintlnCalculating   multiplygetN1      multiplygetN2             getSendertellnew OpMultiplicationResultmultiplygetN1 multiplygetN2 multiplygetN1  multiplygetN2          else if message instanceof OpDivide              OpDivide divide  OpDivide message             SystemoutprintlnCalculating   dividegetN1      dividegetN2             getSendertellnew OpDivisionResultdividegetN1 dividegetN2 dividegetN1  dividegetN2           Thx for pointing this out btw    Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull194filesr317294
; design
It was ok in masterelse unhandledmessagePatrikOn Dec 28 2011 at 1852 Henrik Engstromreplyreplygithubcom wrote package sampleremotecalculatorjava  import akkaactorUntypedActor  public class JAdvancedCalculatorActor extends UntypedActor      Override     public void onReceiveObject message throws Exception          if message instanceof OpMultiply              OpMultiply multiply  OpMultiply message             SystemoutprintlnCalculating   multiplygetN1      multiplygetN2             getSendertellnew OpMultiplicationResultmultiplygetN1 multiplygetN2 multiplygetN1  multiplygetN2          else if message instanceof OpDivide              OpDivide divide  OpDivide message             SystemoutprintlnCalculating   dividegetN1      dividegetN2             getSendertellnew OpDivisionResultdividegetN1 dividegetN2 dividegetN1  dividegetN2           Thx for pointing this out btw    Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull194filesr317294
; design
I would have written this as two separate tests verify creators and verify messages
; general
Is this for messages Do we have something similar for creators
; general
Sure I can do that
; general
Ah here was the answer to my prev question
; general
Dont like the word empty That word does not exist in the actor vocabulary Id rather have TerminatedActorRef
; design
Shouldnt this validation be in ActorPath
; general
Are all MinimalActorRefs Local Always
; general
now they are in both meanings
; general
Why does that look so cludgy cant  just skip nulls and s
; general
well terminated implies that it once was which is not guaranteed empty means that it does not actually contain an Actor
; general
Does this work for Java
; general
ActorPath does not care about what its toString means and also I prefer to terminate the stack trace for the exception in this obvious place rather than deep in the LocalActorRefProvider which could even be remote I guess
; general
There should probably be a FIXME somewhere here where Props is to be used
; general
yes I also came to that conclusion just not yet pushed
; general
Why remove that People have been asking me to put it back whenever I remove it
; general
oops you are right will fix
; general
we already have a ticket for changing this 1461 should be moved from performance to M3
; general
added it a few lines above without the extra allocation and clumsy deserialization etc will make this send variant private not referenced anywhere else to document the fact
; design
can this actor be restarted and is the scheduled AttemptSysMsgRedelivery valid for a restarted instance
; design
how do we know that this loop has an end
; general
This actor is never restarted
; design
because we get the StartupFinished message from above This is a very short window btw
; general
jet lagged code is jet lagged
; general
Theres already a SHUTDOWN CommandType why not just add another one called QUARANTINED
; general
I am not sure what other type of information we want to provide in the future so I left it open
; general
btw SHUTDOWN should be DISASSOCIATE the name is a remainder from the old remoting
; general
Nice catch That was a subtle bug
; general
Yes it did not cause message loss just unnecessary retransmits
; general
Just rename it Protobuf uses ordinals and not names anyway
; general
Regarding DisassociateInfo I still think we should just add a new commandtype DisassociateInfo is an enum anyway so theres not really that much info we could add in the future without breaking things
; general
Not one but two The idea was that the DisassociateInfo is optional if not set then the reason for the Disassociate is Unknown
; general
True but it creates an invariant that has to be enforced in code that DisassociateInfo shouldnt be present when CommandType is not SHUTDOWN DISASSOCIATEI would also argue that if we get an AkkaControlMessage then we know the reason and if we know the reason we can put it as the CommandType Ie DISASSOCIATE QUARANTINE etc Wdyt
; general
There is also such a code enforced invariant with handshakeInfo and I wanted to be more or less symmetric with disassociateInfo but I see what you mean
; general
What do you think about DISASSOCIATE DISASSOCIATESHUTTINGDOWN DISASSOCIATEQUARANTINED It is more verbose but it conveys the proper meaning
; general
If we can fix that issue with handshakeInfo Id love that as well
; general
Unfortunately that is a proper record not an enum
; general
this is a very necessary message we would have had quite some questions on the mailing list otherwise
; general
Id rather say that this may spin for an arbitrary number of times it would be better to schedule it 10ms into the future to keep the load down
; general
That would work as well
; general
no reason I dont usually like default arguments
; general
The reason would be Unknown here I think if there is a special reason that should be expressed explicitly Also disassociate is an API by the AssociationHandle providing a reason is Akka Protocol specific which we know to be accessible here but I need a default version to implement the interface
; design
why not require a reason everywhere that would ensure that it is not easily lost
; general
thanksThat means that we should enable more things remoting is systemendpointManager and cluster is systemcluster and systemremotewatcher Will that enable tracing for all actors below that path or do we have to add wildcards    systemcluster    systemclusterCan we enable all system actors system system
; general
Yes that we enable tracing for all system actors The defaults that make these actors untraceable can be found herehttpsgithubcomtypesafehubatmosblobmastermonitortracecoresrcmainresourcesreferenceconfL17L28
; general
That will enable tracing for all system actors
; general
Im a tad skeptical to the name mainbus how about some alternatives events eventbus eventstream
; general
Use intercept here for brevityinterceptThrowable  actor  Failureget getMessage must be Expected exception to test faulttolerance
; design
No unsubscription tests
; general
Shouldnt this just ignore IOException
; general
Whats the difference between these two
; general
We definitely need to get this initialization order and visibilitysafe publication issue sorted
; general
Really really like this
; general
This logic should be in the startmethod of AkkaApplication so its not spread out inside the constructor
; general
Really catch Errors here
; general
This is racy
; general
Is this what we fall back on
; general
Are there any Java API tests for the logging
; design
Whats the purpose of the reaper
; general
What is this useful for Why no return type
; general
You can have any number of event buses but the app has only one which it uses for logging and which users may use for other purposes as long as the listeners are actors Hence I was reluctant to call it eventbus although Im not opposed specifically and borrowed the term from spacecraft electrics ignoring thatas with all thingsthere usually are two of these on a spacecraftLong story short feel free to chose a different name
; general
well ahem yes okay I know boyscout rule right
; general
test suite is by no means even started was waiting for general go on the design
; general
I have no idea declaring you as master boyscout
; general
you are right documentation is still missing The very limited stdoutlogger has its own level setting because users may want to silence STDOUT
; general
well in this case I started with the sorting in that I did not pass this but only the parts which are needed This transformation must also happen for the other cases where I would like the provider to have complete power for creating actors currently lacking at least the dispatcher
; design
Hmm then we cant use vals right The startup is somewhat complicated so I would like to present it as linearly as possible within the code
; general
We could consider switching to lazy vals volatile reads are cheapOn Mon Oct 31 2011 at 603 PM Roland Kuhn replyreplygithubcomwrote       TODO think about memory consistency effects when doing funky stuff inside constructor     val deadLetters  new DeadLetterActorRefthis     val deathWatch  providercreateDeathWatch       chain death watchers so that killing guardian stops the application    deathWatchsubscribesystemGuardian guardian    deathWatchsubscribeguardianInChief systemGuardian Hmm then we cant use vals right The startup is somewhat complicated so I would like to present it as linearly as possible within the code  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull101filesr199627 Viktor KlangAkka Tech LeadTypesafe httpwwwtypesafecom  EnterpriseGrade Scala from theExpertsTwitter viktorklang
; general
I believe there is another ticket which covers this question no need to mix it in with the logging changes
; design
true as its not a hot path Ill fix it with a normal lock
; general
this is used to cover the startup and shutdown periods where normal actors cannot be used for logging I discarded the Future idea because then startup failures would never make it to the user better be reliable here
; general
what do you mean Getting the logger That is indeed one thing I forgot The logging interface itself looks very Java friendly to me already
; general
getting rid of dead listeners that deathwatch thing you wrote looked really nice for doing this and traffic on this channel should really be low
; general
used to initialize the reaper above will add more doc and return type
; general
I like EventBus or EventStream Probably EventStream best
; general
Eg do not use the name MainBus
; general
Dont format for comps like this one line Harder to read
; general
typo Thurough  Thorough
; general
Hmm should spuriousSelectWakeups also be declared volatile Im not sure if select could be called by multiple threads and thus suffer from not having a happensbefore via volatile
; general
Hmm maybe a little tailrec lovescaladef terminate   tailrec def terminateNextChannelit JIteratorSelectionKey     if ithasNext       val key  itnext      try keychannelclose catch          case NonFatale  logerrore Error closing channel             terminateNextChannelit        try     val selector  current    try terminateNextChannelselectorkeysiterator    finally selectorclose   catch     case NonFatale  logerrore Error closing selector
; general
No select will only be called from one thread So its fine The volatile is primarily for wakeup as described in the class scaladoc for AkkaSelector
; design
Yeah good suggestion it resonates well with the other code in the PR
; general
Ah makes sense I missed that in the scaladoc for AkkaSelector Nice
; general
This means that the Selector will be alive for a while after postStop finishes If the old behavior was intentional it shouldve been documented and hopefully tested I can switch back and use the same stunt as with wakeup for stop but Id rather keep it as is nowThoughts
; general
SystemnanoTime  start  timeouttoNanos  4  3
; general
I find that less clear to read and its 2 DIV  a toNanos  Any reason in particular
; general
What about returning 0 here to handle potentially enqueued commands It is not immediately clear to me that this cannot be an infinite loop in the worst case
; general
Im always uncomfortable using the FPU thats all could make it scalaSystemnanoTime  start  4  timeouttoNanos  3
; general
If its imperative I could always switch to strictfp
; general
Ill add a retries parameter
; general
Actually this is the right calculation thanks for reminding me def returnedtooEarlystartNs Long finishNs Long timeoutNs Long  timeoutNstoDouble  finishNs  startNs  075d
; general
The FPU version is also easier to tweak as the ratio is changed in a single place
; general
Several points AFAICS all connections and listeners registered on the selector close themselves in their own postStop methods  I dont remember whether we already had this discussion but is it really required that the selector also closes all the channels via its postStop Since the selector is the parent of all connections and listeners they will have been already shut down when the selector postStop runs ie it shouldnt matter whether we run the cleanup code synchronously as before or asynchronously as with this patch When I call systemshutdown in which order are the actors and dispatchers stopped I know the child actors first rule but how do dispatchers fit in the picture Ie if I schedule something to a dispatcher in my postStop can I be sure it still gets run before the ActorSystem is shut down
; general
Hi Mathias1 Ill add wakeupdetection to differentiate between spurious returns Epoll bug and wakeup requests2 Ill add stop detection as well if we are to terminate the selector from the outside3 When the system shuts down there is no guarantees for tasks that are separately scheduledI just pushed some new code for this PR please review if you have time
; general
if someone called wakeup within the last 7 lines then the selector will already wake up will it not this could benefit from a comment
; general
or rather I usually use those which batman does not have
; general
so we bounce a cache line hopefully not shared with other stuff across cores to eliminate unnecessary system calls sounds fair at first sight
; general
It depend on whether the other wakeup was called before or after the select selectNow or selecttimeout
; general
Yes here we sacrifice an extra wakeup as not to miss a wakeup
; general
if currentOps  op  0
; general
is  0 faster than  op
; general
no should be the same right but 0 is always correct whereas yours assumes single bits only less assumptions  profit
; general
True Ill switch to  0 and change the name to ops
; general
But if it is intended to support enabling of multiple interests this is wrong  if currentOps  ops  0 keyinterestOpscurrentOps  ops Ill have to change it to be  if currentOps  ops  ops keyinterestOpscurrentOps  ops ie if not all bits are set set them
; general
Thinking some more about it I find this easier to maintain    def enableInterestops Int connection ActorRef     new Task       def tryRun         val key  childrenKeysconnectionpathname        val currentOps  keyinterestOps        val newOps  currentOps  ops        if newOps  currentOps keyinterestOpsnewOps              def disableInterestops Int connection ActorRef     new Task       def tryRun         val key  childrenKeysconnectionpathname        val currentOps  keyinterestOps        val newOps  currentOps  ops        if newOps  currentOps keyinterestOpsnewOps
; general
weve got a winner
; general
use must matchers instead of asserts for fun and profit
; general
you dont really need to wrap things inside an object like this
; design
That was so that fsmref and assertTimersActive could refer to each other Do you think I should do something else
; general
does it not work if you just remove the enclosing object
; general
That gives a forward reference error Local values cant refer to names that havent yet been definedUsing an object is one solution I can also make one value lazy to delay its evaluation until the other is defined Maybe Ill do that
; design
ah okay if theres some nonobvious reason the usual policy is to add a oneline comment unless it is really nonobvious andor inside the dungeon then make it a novel
; general
OK Ill neaten it up as much as possible I think a lazy val might read nicer and then comment whatever I cant neaten
; general
I thought we had decided to drop this naming convention
; general
braces not needed in case clauses
; design
Where can I find out about the new naming convention
; general
Its one of those horribly undocumented things I think isStateTimerActive is a good name for a YesNo question
; general
agreed we should deprecate that other method in there Rich could you do that please
; general
So deprecate timerActive and make a new method isTimerActive in both FSM and TestFSMRefIm guessing I cant just rename the method in TestFSMRef because its also a public interfaceAlso Ill change all references to the deprecated methods in code and docsShould I do the deprecatingrenaming work in a separate pull request Otherwise this pull request might get quite noisy
; design
precisely new ticket and pull request as you just outlined
; general
Rich what Patrik means is that sideeffecting calls should always use parens
; general
Can the lookup and underlying values change during the evaluation of the
; general
The same question as below I dont have enough context so I assume it is the right thing but please confirm
; general
Thats a really good question and yes the value of lookup and underlying can change but the critical change of underlying swapCell is protected by the the lock in the unstarted cell And this test is only used from inside that lockMaybe there should be a comment that cellIsBeingReplaced and can only be used from inside the lock
; design
We could always just inline it
; general
Inline is fine with me
; general
having names for things is also nice Id propose to add a comment at the use site then
; general
Is this guaranteed to exist on all major JVMs  Dalvik
; general
Whats the usecase
; general
This will be terrible both for performance and memory usage
; general
classOfJavaLogginggetName didnt work
; general
Why is this needed at all How does one discern a companion from the class
; design
Instead of this Id recommend just logging the LogRecord as a LogEvent to the systemeventStream then in your JavaEventHandler unpack messages that are LogRecords and just use them straight off the bat
; design
it is optional with the default being off Note that this is not used by the ActorLogging framework its only if someone wants to have the AkkaLogging API available in a nonActor context and here it will be implemented by Java Logging
; design
I tried that and got a weird exception I can look into it again but it was hard to diagnose
; general
Feel free to remove it I frankly didnt understand why the  sign was there If it is the distinguisher between trait and companion then it makes sense
; general
viktorklang this part of the code is not used by the ActorSystem its just to make your Akka Logging API available to nonAkka parts of the applicationThe only part of JavaLogging used by the ActorLogging is the logger field
; design
IMO it doesnt make any sense to add a logging API that doesnt integrate with the Akka Logging backend My suggestion also removes the need for synchronous and Futurebased logging
; design
You might want to check AkkaSpecgetCallerName for a quicker way to obtain this information
; general
message is already a string
; general
I still say that it should log LogEvent an EventStream and not use Futures or ExecutionContexts
; general
ok cool this is the bit you meanscaladef getCallerNameclazz Class String      val s  ThreadcurrentThreadgetStackTrace map getClassName drop 1 dropWhile  matches AkkaSpec    val reduced  slastIndexWhere  clazzgetName match       case 1  s      case z   s drop z  1        reducedheadreplaceFirst replaceAllazAZ09   Is there any profiling that shows it is faster to use the Thread instead of the Throwable
; design
The aforementioned function is more important IMO  that theres a JulLoggingAdapter that ships LogRecords to the JulEventHandler that logs them
; general
Im happy to remove the Future if you really want but I think this it is a perfectly reasonable approach for many sensible use cases and Ive turned it off by default anyway I can only see there being a problem with Future creation if the underlying handlers are unable to write to disc quickly enough I understand Futures are very cheapThe way I look at it if somebodys logging requirements become so intensive that they really need to use the power of Akka to overcome limitations in their legacy backend choice then at least theyll not need to change their log calls All theyll need to change will be the name of the trait they imported to get logging supportId love to see some performance studies of where Java Logging breaks down  do you have any numbers on thisI dont think it makes sense to have the JavaLogging trait send information to the EventStream since it is supposed to be a logging implementation of the Akka Logging API without depending on any ActorSystem being in placeIm surprised that what youre suggesting  a trait which exposes a log field exactly like ActorLogging  but doesnt depend on an ActorSystem being in place  doesnt already come with Akka Did I miss that in the docs I really think it would be a good thing to have Developers would then have 3 logging choices1 ActorLogging when Im coding an Actor2 AkkaLogging which uses the EventStream as you suggest3 Implementation specific eg JavaLogging Useful for applications that dont have an actor systemBut the API remains exactly the same in all cases an akkaeventLogging field called log
; design
thats what I get for copying and pasting
; general
OK Im now using the Thread It is cleaner to keep the rest of the code the way it is because I need to grab several entries from the find result
; general
Oh sorry mixed that up on the phone I actually meant ActorSystemfindClassLoader which uses sunreflectReflectiongetCallerClass if available I did some profiling before resorting to that extreme measure getting a stack trace takes 50s while each getCallerClass takes 700ns on some popular hardware and you need only a handful working your way up the call chain
; general
I can see that you have had a long discussion and I admit that I have not read all of it but my instinct tells me that this specialized LoggingAdapter doesnt belong in akka If you want to log directly to jul then you should use that api directly Exactly what does this JavaLoggingAdapter solve that the ordinary LoggingAdapter together with the above JavaLoggingEventHandler cant handle
; design
It allows the Akka Logging API to be used outside of Actor systemsMy argument for why it should be included in Akka is that it consolidates usage of various adhoc Logging APIs to be the Akka Logging API
; design
My vote for JavaLoggingAdapter 1 I dont think that is something akka should try to do Maintenance burden Why should only jul be supported
; general
I think JavaLoggingEventHandler is a good thing An advantage over slf4j with jul is that it doesnt require any dependencies but I guess it solved some problem also
; design
That is the epoch milliseconds Have you verified that it can be easily formatted in logback configuration Otherwise I suggest that you format it here
; general
True but I dont want to waste CPU formatting something that might not be used and then the user cant really reformat easily Wdyt
; general
I could not find anything about reformatting MDC values so this will just print a mildly meaningless 10digit number I fear What we can do is to print the time of day in UTC sidestepping the expensive calendar formatting issues This will usually be well correlated with the SLF4J timestamp because the delay between the generation of the Event and the call to log should not be that long
; general
Im sorry which format function do you suggest Should we have it configurable the date format in the akka config
; general
Its possible to create a custom logback converter which can format the millis httplogbackqoschmanuallayoutshtmlcustomConversionSpecifierThat is not something we can provide since it is logback specific but possible to document if we prefer thatIf we dont want the overhead of formatting it in Slf4jLogger we can output the millis diff to the log date I guess that can only be an approximation by calling SystemcurrentTimeMillis again
; general
I guess the downside would be that it would require to reparse the string to an int and then convert it into a date or somethingIf we call SystemcurrentTimeMillis again were calling it 3 times per log message
; general
For slf4j the usage will be as a sorting column since I dont think it can replace date Therefore the raw millis is not totally bad I vote for that and documenting what the number is
; general
1 for that
; general
hmm I still like the idea of doing scalaval timeOfDay  millis  86400000Lval hours  timeOfDay  3600000Lval minutes  timeOfDay  60000L  60val seconds  timeOfDay  1000L  60val ms  timeOfDay  1000val timestamp  fhours02dminutes02dseconds02dms03dUTCbecause it is more useful as a printed value than the millis themselves and it still is reasonably cheap maybe put both in the MDC
; general
MOD isnt cheap and generating a larger string introduces more GC pressureThen its much cheaper to do currentTimeMillis and set the drift
; general
well let me explain where I come from this is for logging and the output should be useful for the one seeing it raw millis are not useful offsets are also not really useful because all those calculations in the head are not easy Hence my conclusion that if we include something then it should be humanreadable
; general
the formatted timestamp is fine by me place it in an protected method and it is super easy to subclass and override if something else is preferred
; design
please include a hint what this is about
; general
This will print the time of day in UTC when the log entry was originally created
; general
val serverSocket GeneralSocket        if udp DatagramChannelopensocket      else ServerSocketChannelopensocket
; general
And it nicely aligns too
; general
Can you explain why you need this typeArent those used from different separate testsWouldnt it be enough with one temporaryServerAddresses variant for tcp and one for udp
; general
I wanted to be DRY and the cost of reflection does not matter here
; general
Its a bit over dry in my taste but ok fine
; general
Id just have one for TCP and one for UDP and avoid the boolean parameter which is also defaulted so if you arent aware of the difference itll silently fail
; general
Switch to using Akka Logging instead its in master
; general
Switch to using Akka Logging instead its in master
; general
Switch to using Akka Logging instead its in master
; general
Switch to using Akka Logging instead its in master
; general
Switch to using Akka Logging instead its in master
; general
Switch to using Akka Logging instead its in master
; general
Switch to using Akka Logging instead its in master
; general
Drop all constructors except for this one
; general
What is this needed for Might want to look into using ConcurrentSkipListSet which works just like this but is concurrent
; design
If this is only used for the logging just use Akka Logging instead
; general
If this isnt absolutely critical this can be removed
; general
If this is only used in one place for one usage Id rather just use ConcurrentHashMap and make sure that whatever gets put into it only has identity equality defined
; general
Im guessing that this can be dropped if we use Akka Logging instead
; general
When using Akka Logging this is no longer needed
; general
Looks much better
; general
What should be the semantics if receiver  message throws an exception
; general
The orgjboss dependencies shouldnt be present in the general interface
; general
This could preferrably be placed in the orgjbossnettyakka package as to not pollute the interface with an implementation detail
; design
Remove this val use appscheduler explicitly
; general
Should we put this in the base class so we dont need to override it and type the same thing every test We can still override if needed
; design
What if a null is passed in here lastShouldnt we have a Queue that records all updates or similar
; general
I dont think that is possible because roles comes from import SunnyWeatherMultiJvmSpec ie the configuration object but perhaps there is a way
; design
members will never be null that must be part of the MembershipChangeListener contract ie tested elsewhere if needed
; general
This didnt work out in field test and when thinking on it we are mixing two different things here I think we have two alternatives1 notify listeners when there is a change in convergence but then its more like a ConvergenceChangeListener which should pass the Gossip to the listener2 notify the listeners when there is a change in members including there statusIm playing with number 2 now WDYT
; general
its possible in MultiNodeSpec but rkuhn  has written scaladoc about that so I guess there is a thought that it should be user defined
; general
I have fixed this for the cluster tests initialParticipants are by default same as number of registered roles httpsgithubcomakkaakkacommit56735477b8758c51ed762629ca1afac7dcbbb96d
; general
The idea was that it may not always be necessary that all nodes are there to begin the test in general as in for the TestConductor It may well be that we always want that line for cluster tests though
; general
I still think it would be good to have a default Now we have the same line in 20 tests Dont see any value in that
; general
as I said I have fixed it for cluster testsOn Fri Jun 8 2012 at 926 AM Jonas Bonr replyreplygithubcom wrote            class SunnyWeatherMultiJvmNode1 extends SunnyWeatherSpec  class SunnyWeatherMultiJvmNode2 extends SunnyWeatherSpec  class SunnyWeatherMultiJvmNode3 extends SunnyWeatherSpec  class SunnyWeatherMultiJvmNode4 extends SunnyWeatherSpec  class SunnyWeatherMultiJvmNode5 extends SunnyWeatherSpec    abstract class SunnyWeatherSpec    extends MultiNodeSpecSunnyWeatherMultiJvmSpec    with MultiNodeClusterSpec       import SunnyWeatherMultiJvmSpec      override def initialParticipants  rolessize I still think it would be good to have a default Now we have the same line in 20 tests Dont see any value in that  Reply to this email directly or view it on GitHub httpsgithubcomakkaakkapull523filesr949416 Patrik NordwallTypesafe httptypesafecom   The software stack for applications thatscaleTwitter patriknw
; design
yup looking good
; general
Missing must be true
; general
this diff looks weird the only change is this if statement
; general
Nah it looks like youve changed indentation
; general
If we want to guard execution like this then I think that if executeMultiJvmTest should wrap the whole if multiNodeEnabled  else
; general
yes but I was thinking that multiNodeEnabled is something that is actually enabled explicitly with system prop but I can change to that np
; general
case  sensibleName  otherSensibleName       val newSensibleName  sensibleName  otherSensibleName
; general
Im just thinking that I want the difference to be minimal
; general
Thats not Patriks fault its mine Youre right something like this would be nicercase  testResults  multiNodeResults   val results  testResults  multiNodeResults
; general
Its no ones fault it shouldve been caught in review but now it falls under Boy Scout Rule
; general
bindingscollectFirst  case c s  if cisAssignableFromclazz  s
; general
can Identity work here instead of c Class  c
; design
I tried that first but compiler complained and said that I had to specify type ugly
; general
yes that works
; general
findmap is collectFirstserbindingsfind  case a b if a  addrgetClass  bgetClass
; general
the java binding should already be known from akkaactorreferenceconf right same below Would it make sense to remove proto stuff from akkaactor and properly describe it in the docs
; general
by properly I mean mentioning that depending on akkaremote brings in protobuf
; general
that is a huge margin 20 should be enough
; general
Ok if you think it is enough
; general
otherwise the failure detection is broken I have other tests that use 15 s
; general
please add return type here to avoid bridge method
; general
probably better to document a custom dispatcher here instead of changing the global default
; general
please remove thisActor name
; general
privatethis has some special side effects and the instanceonly semantics are not needed because actors are encapsulated anyway so Id prefer a plain private here
; design
exception message should require only DequeBasedMessageQueue but maybe give hint about how to configure the unbounded one
; general
shouldnt this be super
; general
please add a test with a restart to verify no messages are lost and everything is working
; general
Who do you handle capacity violations In case of bounded Deque
; general
that reminds me there should also be a configurable limit for the stash size
; general
Good point Fixed
; general
Yes this is now super Previously I couldnt use super because only the self type was Actor but Stash didnt actually extend Actor Now it does
; design
Should this really be able to grow unbounded There should at least be a config option to set a limit which when reached will clear the stash and throw a StashOverflowException so that the supervisor knows what happened
; general
I would prefer to declare the supertrait before the subtraits so the reader knows whats coming
; general
remove superfluous braces
; general
lock is not needed here because capacity cannot shrink
; design
ouch this hurts What do you gain by making unstashAll atomic In case of overflow there will be an exception anyway which should probably be used to clear the mailbox stop the actor call systemexit or something like that depending on the contextBackground we switched to ConcurrentLinkedQueue in order to decouple head and tail and avoid parking threads which is insanely expensive This would be the only lock in an actor hotpath
; design
this importalbeit usedis not really needed right
; design
an alternative would be    implicit val sender  testActor  which would be default with ImplicitSender    boss  slaveProps    val slave  expectMsgTypeActorRef
; general
technically its more a bounded mailbox the bounded stash is not yet implemented
; general
forget about this one I missed the required constructor arg for reflection
; general
Ive added a test with a restart to ActorWithStashSpec
; general
Calling unstashAll now throws a MessageQueueAppendFailedException in case of a capacity violation this is also properly documented now Moreover the stash size limit is now configurable using stashcapacity an int in the dispatcher section of the config
; general
This is fixed now with the config option see above Calling stash will throw a StashOverflowException when the limit is reached
; general
Actually I had taken the order from the existing QueueBasedMessageQueue traits  But I agree and I have changed the order now both for QueueBasedMessageQueue and DequeBasedMessageQueue
; general
Ive removed the lock after giving up on the atomicity of unstashAll see below
; general
The original thought was to make the semantics of unstashAll as easy to understand as possible But I agree that the price for making it atomic is probably too high so Ive removed the lockThe behavior of unstashAll is now to simply try and unstash as many messages as possible into the mailbox and throw an exception as soon as thats no longer possible
; general
Yep I kept the name though since the bounded stash is now implemented and has its tests in the same fileclass
; general
this is now redundant isnt it
; general
This way you encode a default value directly We have made an effort to put all defaults into referenceconf to keep them central and testable    val dispatcher  contextsystemsettingsconfiggetConfigcontextpropsdispatcher    val config  dispatcherwithFallbackcontextsystemsettingsconfiggetConfigakkaactordefaultdispatcher    configgetIntstashcapacitywhich will never fail because there is a default in the defaultdispatcher section
; general
With this setup which ensures the right linearization order right users would probably write    class MyActor extends Stash which looks a bit weird Perhaps rename to StashingActor
; design
You should most definitely check that stash isnt called twice for the same message
; general
what happens if you call unstashAll twice in a row
; general
Id recommend not adding def enqueueAllFirstreceiver ActorRef handleIterator IteratorEnvelope size Int Unit and just instead dofore  theStashreverseIterator enqueueFirstreceiver e
; design
Thats completely racy
; general
Why extend Actor at all There is a selftype to Actor already Then user could write     class MyActor extends Actor with Stash Which is more clear I think
; design
OK I added the default to referenceconf Thanks for the snippet
; general
I agree enqueueAllFirst is not really necessary since unstashAll is no longer atomic Removed in a recent commit
; general
Is now always configured see above
; general
Makes sense I added this check stash now throws an IllegalStateException if the same message is attempted to be stashed twice
; general
It is but at least the race was harmless fail fast if you dont have a chance to succeed anyway By the time we do the rest the remaining capacity might be even smaller and the subsequent enqueueFirst would failThis method is gone now anyway see above
; general
I agree that its best to allow only one way of using the Stash Having only the self type looks nice indeedHowever there are two things that this requires first I had to duplicate the implementation of ActorpreRestart The reason is that calling selfpreRestart leads to an infinite loop when preRestart is overridden in a user class that extends Actor with Stash like in the test in ActorWithStashSpec The other thing that has to be kept in mind is that the Stash trait has to be mixed in right after the Actor trait Its not possible to write Actor with MyActor with Stash if MyActor overrides preRestartRemoving the self type and only extending Actor would remove these two issues but it would have the problem that Roland mentions namely that users could write class MyActor extends Stash  in which case we should probably rename to StashingActorThe current solution uses only the self type adding a note saying that Stash has to be mixed in before any traitclass that overrides preRestart
; design
Its true that calling this variant of unstashAll twice in a row is problematic since it calls become So I think the simplest solution is to remove this version of unstashAll It doesnt add much anyway If someone likes it they can write it themselves and then they are aware of whats going onIn contrast the semantics of the parameterless version of unstashAll should be completely clear calling it twice in a row is the same as calling it once
; design
Yes I fixed it see below
; general
How do users use this from Java
; general
If unstashAll throws an exception if for instance the mailbox is bounded then preRestart will throw an exception
; general
This needs to be updated to latest master thissettings ActorSystemSettings config Config
; general
This needs to be updated to latest master thissettings ActorSystemSettings config Config
; general
I added an abstract class UntypedActorWithStash that can be used from Java in a way analogous to UntypedActor but with the additional stashing methods There is an example in the JavaDoc for the class I also added tests for the Stash Java API
; design
Good point In commit f4b7993 I made preRestart more robust It now catches AkkaException but avoids to swallow other exceptions like InterruptedException
; general
hmm this method now has a rather large discrepancy between what it says and what it does I think it should just unstashAll and superpreRestart in that order Then if the queue is full the supervisor will have to decide whether to kill the guy or not I dont think it should silently swallow exceptions here and specialcasing AkkaException sounds rather arbitraryin case you wonder ActorCell will catch any exception thrown from here and wrap it inside ActorInitializationException before telling the supervisor of this failure
; general
I agree RolandAfter that change things are good to go into masterrelease20
; general
immutableIndexedSeq as api type Perhaps this is just internal
; design
no exc message
; general
no exc message
; general
I trust you you trust the sprayio guys who trust the Netty guys
; general
Are you sure this is the best possible name D
; general
I have to trust you on this part I have no experience with SslEngine
; general
its pretty internal
; general
well it is quite precise
; general
I have no idea either I just trust the spray guys
; general
pretty  OK
; general
Does this need to be immutable
; general
Yo Dawg I put an ack in your Ack so you can acknowledge while you acknowledge
; general
What does this mean
; general
ticket If there is link it from the comment
; general
No separate client code for Scala
; general
no Java must be better served somewhere
; general
So the handler forwards the events to this actor
; general
I mean people will copypaste from examples and it would be not the nicest pattern Can be fixed later though
; general
what do you mean events are sent here after being decrypted and become is what makes sense when the connection is established no
; general
I know where the 16665 and the first 1024 come from but the extra 1024 for compatibility I have no clue Seems to work for them wink
; general
This is the connection manager actor no Shouldnt there be separate actors for each inbound client handling the Received events
; design
Added Bjrn to trust list
; general
Should we use  here as well even though its a test
; general
Ok but create a ticket then
; general
no this is the perconnection actor only
; design
Is that your most modestly priced receptacle
; general
you know it
; general
Why is this using its own ByteBuffer allocations instead of using thea pool
; general
these are user writes of arbitrary size why would we want to spend the effort without benchmarking
; general
Btw why dont we just store the Writes
; general
I can only guess probably to reduce object allocation counts sirthias
; design
For the record this is the sourcehttpsgithubcomnettynettyblobnetty365FinalsrcmainjavaorgjbossnettyhandlersslSslBufferPooljavaL38However a git grep 16665 on the current Netty 4 master turns up empty Maybe normanmaurer has access to the latest Netty wisdom as to the required buffer size for preventing BUFFEROVERFLOWs from the JDK SSLEngine
; general
Yes exactly The Send class here is intentionally mutable through the ByteBuffer because we want to work with a single instance until its buffer has been encrypted completely which might take several encrypt calls each of which drains a chunk of the ByteBuffer Working with ByteStrings here would potentially entail several slicings and repeated copies to a ByteBufferIt might be however that in the large majority of cases a write can be encrypted in one single go If so it could be more efficient to get rid of the Send intermediate structure and copy the write ByteString to a ByteBuffer from the pool in the encrypt method itself We could then save the creation of a new HeapByteBuffer at the cost of ByteString slicing and repeated ByteString  ByteBuffer copies if the write cannot be written in one single encrypt call Profiling realworld applications would provide an answer here
; design
would it be conceivable to construct a heuristic which switches strategies eg based on size or would it also need to consider history
; general
One thing that we can be sure of is large writes will always be broken down and encrypted in several passes From the SslBufferPool sizing question above we know that there is a max number of output bytes the SSLEngine will generate with a single wrap call This size is  20K So if no compression is involved we can assume that every write larger than the max output buffer size will not be written in one go One could assume that writes which are smaller than the max output buffer size minus a safety margin will always be encrypted in one go So provided this hypothesis proves valid in testing we could use a threshold size of maybe 15K as a heuristic for switching strategies here
; general
Id suggest removing Send and just cache the Write for now then we could see if using a pooled ByteBuffer is faster or slower than allocating a new Send and a new ByteBuffer for every thing going thru
; general
Yes Thinking about it again the best approach might be to remove the Send and in the encrypt method copy only the next maxBufferSize bytes from the write ByteString into a ByteBuffer from the pool and have the SSLEngine wrap these bytes into another ByteBuffer from the pool which we already do We can then drop the actually wrapped number of bytes from the ByteString and recurse until everything has been writtenThis costs us two allocations per subsequent iteration one for the ByteString drop and one for the iterator performing the copy to ByteBuffer but saves us the creation of a HeapByteBuffer per write
; general
According to discussion in another PR we should use DurationUndefined for disabled
; general
shouldnt there also be a case for Inf
; general
Does that work with FiniteDuration
; general
document off and possibly infinite
; general
Do we want support for infinite quarantining
; general
perhaps check for disabled and dont do anything here
; general
That is handled by the caller This class has no access to settings
; design
Then it must be a Duration and you pattern match when you use it That is at least how I did itThat is a good indication at the type level that disabled is supported
; general
Perhaps not important can always be set to a long duration Inf is a potential memory leak I agree skip that
; general
Would that mean that RemoteWatcher also must check for this setting
; general
No no this class is an internal structure EndpointRegistry This is only used by EndpointManager who does the check and who gets the Quarantine command from the external worlds
; design
Oh I missed to hook in that command yikes Thanks
; general
ok I just doublechecked this is where the feature will be completely disabled when configured to off since DurationUndefined is not a FiniteDuration Same thing at one other place
; general
Thanks I checked Undefined too
; general
Shouldnt the title be more general like other concurrency abstractions or something like that
; general
Cluster before remoting Is this because we prefer people using clustering to plain remoting
; general
This might later go into a Deployment section
; general
Will you remove the test too
; general
ooh yeah right
; general
I liked the sound of this better more handson
; general
I hate that test you know
; general
no worries its history
; general
Shouldnt this be in some external file
; general
the doc ends early it can be used to access
; general
instance of the Camel class
; general
Creates a new instance of
; general
Is the rethinkrewrite still necessary
; general
of the Camel subsystem
; general
little ambiguous it in It has to be shut down by the user Camel or actorSystem Rather The actorSystem has to be shut downMaybe remove in typical scenario part of the sentence
; general
Is this TODO still valid
; general
nice catch no pun intended as well as the one below
; general
no other issues
; general
It is better than it was but I am still uneasy about the way this thing works and there is something wrong with names of the methods which is a smell of something else
; general
Ive played with the proxy class loader idea but it doesnt quite work I suspect ObjectInputStreamThe main difference is that with the Java Hack the code operates directly with the targeted class loader ie Remote or Original But with the Proxy it operates with Proxy instance In theory they should be equivalent butI get the classic RCL deadlock CL waits for Bytecode Bytecode comes over the wire but waits until the CL request timeouts before being deserializedBecause of this RCL communication has its own thread group and uses the original actor system class loader While RCL is done with RCL Class Loader and on the primary thread groupBut with the Proxy CL it deadlocks anyway I suspect Java Serialization does some strange things under the hood I looked at the Java sources but they look ok I started looking at jvmcpp if ClassforName0 is doing some strange things I surely missed somethingId prefer to just keep the Java Hack
; design
Why is this Java
; general
Cant be null httpdocsoraclecomjavase6docsapijavalangClasshtmlgetDeclaredFieldjavalangString
; general
Dont use return
; general
Cant be null httpdocsoraclecomjavase6docsapijavalangClasshtmlgetDeclaredFieldjavalangString
; general
Never use return
; general
Because if I did it in Scala the Scala Compiler said Method classLoader needs to be a stable immutable value But I explicitly intended the ClassLoader to be ThreadLocal and very much mutable but thread safe
; general
A lot of repeated code here please abstract and reuse DRY
; general
Use collectFirst instead of find
; general
Problem is if the Scala Compiler inlines the classLoader ifwhen optimise is enabled then this class will be broken
; design
Whats the rationale for having two OrderedMemoryAwareThreadPoolExecutor  Do the settings make sense
; general
Why a lazy val
; general
We never use braces after casestatements please remove all occurrences
; general
entire case can be rewritten as    case someOrigin ByteString         threadLocalDynamicAccessdynamicVariablewithValuegetClassLoaderForOriginsomeOrigin  superreceiveMessageremoteMessage
; general
arpgetMessage getMetadataList exists  getKey  rclChatMsg
; general
afaik this are non local returns return is required The whole ReflectionUtil is quick and dirty copy paste from Java I was tired Just wanted to have something that is working Will clean it up
; general
The Scala compiler cannot give the same guarantee for Java code as it can for Scala code I cannot imagine that this will get inlined Will compile and look into the generated bytecode
; general
Use tailrec and write it as a recursive lookup instead then no need for return
; general
The first one should just be MemoryAwareThreadPoolExecutor The first one is the one that exclusively handles the RCL stuff so it doesnt get blocked by us blocking in the classloader
; general
Because the address we depend on is loaded on demand We are guaranteed to call this lazy val only when the address is initialized
; general
The new way of remote tests is incompatible with RCL tests because both work as a custom remote transport One whould have to be a trait to be mixed in or something along those linesI copied the guts of the old remote tests infrastructure to be used for RCL tests I mention this in the description
; general
Hmgave it some more thought The content of ThreadLocalReflectiveDynamicAccessclassLoader isreturn dynamicVariablevalue  java code therefore return even if this gets inlined it is still dynamicVariablevalue which is fine I did some compiles and decompiles and failed to see this optimization in action
; general
No I meant what happens if Scala decides to use the field the val instead of the accessor method
; general
Youre right With the val in ReflectiveDynamicAccessval classLoader ClassLoader weve just given a public guarantee that the classLoader is stable and immutableBut   We are saying we are dealing with DynamicAccess and not ReflectiveDynamicAccessprivate val pm DynamicAccess  createDynamicAccess def dynamicAccess DynamicAccess  pmHere we have a mutable guarantee with the highest API being DynamicAccessclassLoaderThe compiler cannot change anywhere a dynamicAccess is used to use a field of RDA In runtime the JVM canIf it would be def dynamicAccess ReflectiveDynamicAccess then sure weve just given a more robust guarantee   Our extended class was compiled from Java that has no notion of vals and thus cannot respect our Scala guaranteeAll this goes in favor in Scala should not decide to use the field I just cant see this happeningBut ok I dont like this either Its a hack because I didnt want to duplicate RDA code and I explicitly didnt want to modify any existing akka code It solved bothWhat do you recommend we do
; design
How about creating a ClassLoader that just delegates to the DynamicVariable
; general
And pass that ClassLoader into the ReflectiveDynamicAccesss constructor
; general
Ok yeah this satisfies both conditions I am a bit uneasy since weve just created a proxy Class Loader that delegates to a Thread Local ClassLoader I dont like proxies We have an additional method call that cant be optimizedBut yeah I can totally see this work If there are no other alternatives Will make it soo
; design
I should have known  I took it across as is Will fix it
; general
yes sure not a big deal
; general
I guess protectedthis would be ok here as well as in the Consumer
; general
nice catch was there before removed both cant think of a reason
; general
Id probably not check superclass here and just check the passed in class first then interfaces then recur over getSuperclass until null    tailrec def resolvec Class OptionSerializer  c match       case null  None      case some  lookupsome match         case x  Some  x        case None  cgetInterfaces collectFirst    match            case s  Some  s           case   resolvecgetSuperclass
; design
and then if this returns None you just map the class to serializersdefault to make future lookups faster
; design
all interfaces must be resolved recursively as well so that doesnt workMy first approach was to try to get collectFirst working but I didnt find a good way and it is really only some extra HashMap lookups that are performed initiallyI would be glad to see a tailrec version but I dont think it is necessary since inheritance depth is limited
; general
cant we do right here Serializer  if bindingsisEmpty serializersdefault else   resolvethat shit
; general
With the benefit that def resolve is defined in the logical branch that uses it
; general
Downside of approach is that the first failed lookup in serializerMapgetclazzgetName match  will lead to yet another serializerMapgetcgetName in resolveNot a real problem though just a wasteful operation first time it fails
; general
cgetInterfacesiterator  IteratorsinglecgetSuperclass flatMap resolve headOption
; general
I think I tried that but headOption doesnt exist for IteratorI can of course do two steps and use hasNext if its better with iteratorSeriously I think the stack based solution is rather slick It stops on first find as well    tailrec    def resolvestack StackClass OptionSerializer  if stacknonEmpty       val c  stackhead      serializerMapgetcgetName match         case null           resolvestackpoppushAllOptioncgetSuperclasspushAllcgetInterfaces        case x  Somex           else       None
; design
I just think the stack bacsed solution uses quite a bit of memory andcomplicates the code Would rather see something based on collectFirstinstead then and no stack
; design
The problem I saw with collectFirst was that I had to call resolve 2 times like this    classes collectFirst  case x if resolvexisDefined  resolvexget but there is maybe a trick around that
; general
perhaps classesview map resolve collectFirst or something
; general
yeah that is a nice case for view I have changed to thatThanks for feedback
; general
Np mate great work
; general
Wow thats really mean
; general
Couldnt this just be foldLeft00x y  x  ytoDouble  newMean
; general
00d  newIntervalsForConnection  mean interval  mean  intervaltoDouble  newMean
; general
import math sqrt   val newDeviation  newVariance
; general
This constant 10000 is it related to the 10000 in the failureStatsFirstHeartbeat Then we should maybe name it something
; general
oops no that was first attempt will remove that change
; general
you have to do that commit yourself man
; general
That is definitely an improvement
; general
So we use  for division but now  for sqrt WTF
; general
use another duration here 20 because inital delay is already 30 and it will remain 30 even if you dont do this
; general
here I guess you have forgot contextsetReceiveTimeoutDurationUndefinedbut I think it is confusing to do that on receive of ReceiveTimeout combined with throwing excclear the timeout when receiving another ordinary message instead
; general
for java it should be DurationUndefined
; general
this basically begs to be automated in some form
; general
which is a weak form of said automation
; general
yes I dont think its that simple to automate the sample code is committed sourceScalaVersion shouldnt change that often
; general
What is the reason for those new from methods Java API Should that be annotated in the docs as we normally do
; design
That documentation comment is an implementation comment and should not be visible in public API docs
; design
I might miss something but where is the encoding utf8 specified here What serializer is used here Isnt it JavaSerializer javaioSerializable
; general
what is this how is protobuf involved here
; general
It isnt visible in public API docs since it isnt public
; design
Good point it is Java API will fix
; design
ByteString loadTopic   230                ByteStringfromArrayserserializehealthloadget
; general
Remnant from the old API which also handled ProtobufMessages Should be removed
; design
in the javadoc that we might have some timeits simply not something you should write in
; general
yeah but I mean here when deserializing bytes to Stringit looks like you do it in a different way in the scala sample utf8String
; general
Fair enough Ill add the extra comment as a normal comment below
; general
this could in principle break source compat while keeping binary compat hence it could not be done in 21x x  0
; general
vmajor  2 would be sufficient in the second check
; general
different ticket possibly would be nicer with proper extractors
; general
How about offering an optionally imported AnyRef  ByteString Then you could do    import ZMQMessagefromAny    ZMQMessagemytopic payload
; general
Yep thats been the plan all along
; general
True do you foresee an issue with it
; general
Absolutely and Ill open a ticket to add that
; general
add JAVA API
; general
yes thats better
; general
this header line is wrong remove
; general
header line here
; general
This test is wrong Will fix
; general
I dont understand this one what does it mean
; general
Is this message helpful to the user I dont understand how I know what I put and when
; general
something wrong with this sentense
; general
Ill update this with some describing textexample like in the docs Something along the lines ofIf your Actor implements akkadispatchRequiresMailboxQueueT then when you create an instance of that actor its mailbox type will be decided by looking up T in this mapping
; design
Yup cutn paste issues Will fix
; general
feels backward but there might be a reason    boundedmailbox  akkadispatchBoundedMessageQueueSemantics
; general
The reason is that its a mapping from type to mailbox and not mailbox to typeYou say that your actor requires akkadispatchBoundedMessageQueueSemantics and then we look up the mailbox configuration to use
; design
together with that sentence just proposed I think it is fine apart from the wrong its
; general
etoString is the same as e here
; general
parseStringid  id
; general
the if expressions could now be inlined I think that was not previously the case because everything was on two lines
; general
the outer braces can go
; general
perhaps clarify the order of things who wins or is that done somewhere
; general
this means that if Props did not configure a mailbox deployment section did not configure a mailbox and dispatcher DID configure a mailboxthen the dispatcher section trumps the automatic lookupThis might be what we want I just wanted to spell it out clearly and it should be in the docs as well
; general
this file might want to have its lines shortened
; general
then youd need to properly quote and escape
; general
Id suggest to name this lookupByQueueType
; general
yup has a bit of a macrocodeish feel
; general
is it conceivable that we might want to cache the result this might take a while for larger class hierarchies
; design
more succinct would be scalaval q  expectMsgTypeMessageQueuetypes forall  isInstance q
; general
consumes creator functions and is typed  I like it
; general
I dont like this This is run for every actor and is going to generate a lot of garbage
; design
as I commented below we might want to cache the getRequiredType call since there will be only a finite amount of different actor classes but even without caching it is not actually that bad for actors which do not inherit from the RequiresMailboxQueue trait it is basically one List node and one call to isAssignableFrom
; design
I think youre right but we shouldnt even need to call it unless actorClassisAssignableFromclassOfRequiresMailboxQueue right
; general
I dont think the potential doubleevaluation is worth saving one List allocation but we can sure benchmark it
; general
those lists want reverse instead of
; general
Since we are just iterating isnt it cheaper to keep it lazily evaluated
; general
Not only that but the allocation of the foreach closure as well
; general
This method seems wasteful to me higherorder functions optionallocations  getRequiredTypeWhat can we do to improve on this
; general
Im not sure I like caching failed lookups just do like in Dispatchers and return the defaultCould we also try TrieMap instead of CHM as Java 6  7 CHM locks on reads
; general
Good catch Meant egetMessage
; general
Yes the lines are a bit long
; general
Good name change
; general
The classOfRequiresMailboxQueueisAssignableFromactorClass should be blazingly fast and generate no garbage
; general
Thanks Great catch We shouldnt cache failed lookups
; general
Wanted more feedback hence the original version Turned it intoval q  expectMsgTypeMessageQueuetypes foreach t  assertt isInstance q sType qgetClass is not assignable to t
; general
Absolutely We could store things in a WeakHashMap to not leak classes  class loaders
; design
noo not WeakHashMap
; general
Yes it give me this feeling as well scream but unfortunately the class is the keyMaybe we should go with some fixed size LRU cache with a max age instead Does anybody have any good ideasAnd yes this is for later
; design
hmm good point so it should be a ListType and here we just prepend cgetSuperClass
; general
I made it into an IteratorClass Is that ok
; general
yes that would be even better why do I never think of iterators
; general
hmm this order is wrong the deployment is more specific than the dispatcher and should hence win I had the impression that that was also how it is actually implemented
; general
So if you define a mailbox and a dispatcher with a configured mailbox in deployment then we shouldnt get the mailbox from the configured dispatcher
; general
yes which I think is also what happens if the deploy has a mailbox configured which is successfully looked up then that is taken the Props are then tried next by virtue of being the fallback of the deploy then the dispatchers mailbox type then the requirement I think it is just wrong in this list
; general
Yes you are correct
; general
Currently its commaspace separated
; general
we dont want ListString
; general
What is the format of said address String
; general
ok I will change it to comma only
; general
I think that is problematic from the command line script
; general
AddresstoString Ill add more docs about that
; general
actually it is more like isTerminated which should be made more clear here otherwise it could be interpreted as this node is UP
; general
Ill rename isRunning to isTerminated in the cluster extension and remove this attribute from jmx because it doesnt make sense there the MBean is deregistered when the cluster extension is shutdown
; general
No need to redo the reduceLeft for every r right    forc  OptionconfigreduceLeft withFallback  r  role nodeConf  r  c
; general
No need for a 2pass    nodes foreach       case myself t  thunkt      case
; general
nodes collectFirst  case myself i  yesi  getOrElse no
; general
See my comments on the other PR
; general
If we decide that removing fNode should be removed existing usages in tests should be updated together with this PRMy opinion is that ordinary scala control structures ifelse should be used instead ifNode We will discuss this next week when Roland is back
; general
This might want to be a reduceRight instead since that would allow shortcircuiting not a huge effect for sure
; general
looks greatwould it make sense to abort the loop if too many discarded
; general
patriknw I dont think we should abort Or if we should it needs to be configurable in a setting
; general
ok skip the abort then this is ready to be merged
; general
a small readability improvement would be to place the init and start calls inside the scope of the val creation ie    private val actorCell ActorCell        val actorCell  newActorCellsystem this props supervisor      actorCellinitThreadLocalRandomcurrentnextInt sendSupervise  true      if actorCellShouldStart actorCellstart      actorCell
; design
Would it make sense to place the call to init and start inside newActorCell insteadWould that remove the need for the actorCellShouldStart flag
; general
Yes I thought that too but its not possible since the object field actorCell needs to be written to before the code in init and start is run to ensure proper visibility since we basically can start using it at any time after we send the Supervise message in init
; design
See comment above Not possible due to visibility and concurrent access
; general
Should probably comment this in the code
; general
Im not sure if the actorCellShouldStart call is nicer since its only overriden in TestActorRef or if we should simply do underlyingstart in TestActorRef Im afraid that the underlyingstart call will be forgotten at some point during a rewrite while this is more explicit
; general
What about passing a start  true into init and remove def start and the flag altogether
; general
I really cant remove the start methods since I need to start the cell separate from creationinit in the normal case see Childrenscala line 195 right after initChild which is not this init but is related to the child container The path to this constructor call is a couple of lines higher upMaybe just a constructor argument cellShouldStart with default value false that can be overridden in TestActorRef is nicer
; general
Is this guaranteed to only be invoked once
; general
The only guarantee is that its only called in one place and only once for every new ActorRef in that place if thats what you mean
; general
clientsexistsfsm  sender
; general
Does it matter if the barrier is in an after block or inside the test methodI did like this in my testscalavar afterBarrierNumber  0after   afterBarrierNumber  1  testConductorenterafter  afterBarrierNumber
; general
As I wrote in the commit comment Its no problem using after but scalatest will output the test method  as completed green before running after so it looks confusing in the logs Using unique barrier names adds extra traceability in case of failures
; general
Sorry That is definitely confusing will not use after
; general
I think this comment is misleading high frequency  short delay increase frequency  do more oftendo you need special config for this test
; general
Yeah True Should be decrease
; general
remove unused with ImplicitSender with BeforeAndAfter
; general
we just decided to not use after see httpsgithubcomakkaakkacommite4104cfd0687ca09943a64e8a42706e1a97ebf1c
; general
do we need a barrier after starting firstmost tests have that but Im not sure if its needed what happens if second tries to join before Cluster extension of first is started
; design
Ill continue review later
; general
isnt frequency the wrong wordFrequency is the number of occurrences of a repeating event per unit time  httpenwikipediaorgwikiFrequency
; general
That piece of code is not obvious what its good for
; general
why the exists
; general
Shouldnt this be some form of assertion
; general
I think this is misnamed should be interval or similar httpenwikipediaorgwikiIntervaltime
; general
clusterconvergence must bedefined
; general
it is the latch must be countdown within the timeout otherwise it will fail with an exception thrown
; general
I agree frequency is not the right term
; general
Well of course it just doesnt give any nice error message on what is asserted
; general
This config comment is confusing
; general
Just any node needs to be leaving Can it be more deterministic
; general
I dont like that syntax at allIts not type safe and therefore doesnt prevent silly misstakes or help in refactoring    foo must bedefined    clusterconvergence must bedefinod
; general
I think there is a race here If first leave runs first and that is completed on third before this registerListener happens you will never get the notification need some more barrier
; general
why do you need long 1s gossipinterval timing issue
; general
What does this test compared to NodeStartupSpec Do we need both
; general
Should I use interval instead Eg rename the config option to  leaderactionsinterval
; general
ah you removed NodeStartupSpec
; general
It is calling the cluster method to trigger it to start In reality you would just do Clustersystem
; general
To check that there is a member in the node ring with the status Exiting Is that not clear
; general
isnt it possible that convergence can be lost immediately after the latchcountDown ie race here
; general
This twostep await for Joining and Up feels timing sensitive racy Another way would be to have only one registerListener and collect all notifications and afterwards check that you got both Joining and Up notifications
; general
If you know what the reaper does what reaping is and unreachable node set is then I think it is very clear If you dont read up on the config option and code
; general
Sure I can add a check for the node address as well But it can only be one
; general
I agree I dont like it either I hate symbols in general
; general
To be able to check for JOIN before checking for UP
; general
Right Will fix
; general
Im assuming that the comment is to aid and as such shouldnt be confusing if you need to read the code to understand the comment then I think the comment should be removed
; general
Adding a utility method with clear name
; general
I suggested that in the other pull request where I used the same scheme but then you said I should keep it as is But I can split it up Ill do that in both tests then
; general
renamed all options
; general
Changed the option name Splitting up the tests so no need for the extra long interval
; general
Ok I just didnt think it was clear why it was set to 30 seconds
; general
No I meant it doesnt matter which node is Exiting nor that it is only one exiting
; general
Added check now
; general
I know Im older and wiser now Actually it was not at all this split into two test classes that I was thinking of now You want to test that transitions Joining and Up are notified to the registered listener Use one listener and inside that send something representing the notification to testActorRef and then afterwards use expectMsg No need for latch You dont need to change this but it can be a technique to keep in mind
; general
That is a good idea More actorish But on the other hand I think a latch is easier to understand
; general
Does this empty line somehow contain secret information is it some side channel 429  31113 hmm what do these primes tell us
; general
why keep these commented lines
; general
OHNOES Good that theres scriptsfixprotobufsh try it
; general
Encode this as a kind of ChildRestartStats instead of a separate Set
; general
Theres no apparent semantics tied to this method
; general
Whoa this section needs some commentslove
; general
Why include this case at all then
; general
Same goes here
; general
This seems like duplicated code collapse and reuse
; general
I think this shouldnt be enforced here why dont we make the guardian and systemGuardian LocalActorRefs in the Impl
; general
Doing that will greatly simplify the rest of the code in this pull request so Im holding the review here
; general
Looks flaky Id prefer try actorsystemInvokemsg or try  actor systemInvoke msg
; design
The general semantics of this method should be documented here I thinkRight now I think youre silently ignoring problems instead of reenqueueing on failure
; general
I think this should be broken out to a method so it can be reused in cleanup no
; general
The enclosing braces can be removed
; general
The encosing braces can be removed
; general
or some movetheROBERTout massage  done
; general
because that is the only way to shut up the compiler I fear
; general
will fix when completely changing this part anyway
; general
Ah so much nicer Great
; general
Why pass the extension around
; general
worth noting is that thismembers  thatmembers was wrong because it is a Set you dont get the duplicates that you want
; general
needed to change that to make it testable using subclass of Cluster in test
; design
needed to change that to make it testable using subclass of Cluster in test
; design
to be able to make it testable override that in subclass of Cluster in testI dont know if we prefer privateakka privatecluster protectedcluster for this
; general
Got why the protected modifier
; design
Ah good catch Thank you
; general
Ok Dont really like it when testing pollutes the code but no other way to do it I guess
; general
I think privateakka should be good enough
; general
ok Ill change to privateakka
; general
Great Probably much more probable to be right No weird rounding errors
; general
Three is a magic number Why 28
; general
28 is a nice numberI changed from 30 to 25 yesterday Saw a failure today30s is the barrier timeout and I would like to be less than 30 but still longI think there is something else that is broken We have several tests that sometimes fail when we shutdown
; general
This is niceWhat happens if you do both startCluster and awaitClusterUp wont the cluster move the node to JOINING again
; design
I hope not that is an interesting test to join when already joined please create a ticket
; general
Why the watch
; general
Shouldnt this be    case Terminatedchild
; general
How can this be right
; general
Also assigning vars inside a transformation
; general
formsg  lastMessage aref  lastSender contextparent  aref msg
; general
killing the child with stopping strategy and I dont want adeathpactexception Let me know if Im mistaken thereOn Sat Dec 8 2012 at 1214 AM Viktor Klang notificationsgithubcomwrote In akkacamelsrctestscalaakkacamelProducerFeatureTestscala   2546 26747  class ProducerFeatureTest extends TestKitActorSystemtest AkkaSpectestConf       object ProducerFeatureTest     class ProducerSupervisorchildProps Props extends Actor       override def supervisorStrategy  SupervisorStrategystoppingStrategy      val child  contextactorOfchildProps producersupervisorchild      val duration  10 seconds      implicit val timeout  Timeoutduration      implicit val ec  contextsystemdispatcher      AwaitreadyCamelExtensioncontextsystemactivationFutureForchild timeoutduration      contextwatchchild Why the watch  Reply to this email directly or view it on GitHubhttpsgithubcomakkaakkapull933filesr2354974 Raymond Roestenburgcode httpgithubcomRayRoestenburgblog httproestenburgagilesquadcomtwtr RayRoestenburgbook httpmanningcomroestenburg
; design
On Sat Dec 8 2012 at 1217 AM Viktor Klang notificationsgithubcomwrote In akkacamelsrctestscalaakkacamelProducerFeatureTestscala      override def oneway  true        var lastSender OptionActorRef  None      var lastMessage OptionString  None      def endpointUri  uri        override def transformOutgoingMessagemsg Any  msg match         case msg CamelMessage  if upper msgmapBody           body String             if body  err throw new ExceptionCrash            val upperMsg  bodytoUpperCase            lastSender  Somesender            lastMessage  SomeupperMsg                else msg       How can this be right  Reply to this email directly or view it on GitHubhttpsgithubcomakkaakkapull933filesr2355013Its maybe a bit of a strange test but I want to see that I can capture asender at an ok message the reason for the test the sender ref did notreflect correctly then crash the actor with a bad message and then sendthe last message to the last sender if I receive a msg on the last senderthe test actor ref then it works Raymond Roestenburgcode httpgithubcomRayRoestenburgblog httproestenburgagilesquadcomtwtr RayRoestenburgbook httpmanningcomroestenburg
; design
On Sat Dec 8 2012 at 1219 AM Viktor Klang notificationsgithubcomwrote In akkacamelsrctestscalaakkacamelProducerFeatureTestscala      override def oneway  true        var lastSender OptionActorRef  None      var lastMessage OptionString  None      def endpointUri  uri        override def transformOutgoingMessagemsg Any  msg match         case msg CamelMessage  if upper msgmapBody           body String             if body  err throw new ExceptionCrash            val upperMsg  bodytoUpperCase            lastSender  Somesender            lastMessage  SomeupperMsg                else msg       Also assigning vars inside a transformationYep just to see if the sender ref is ok during transformOutgoingMessage   Reply to this email directly or view it on GitHubhttpsgithubcomakkaakkapull933filesr2355028 Raymond Roestenburgcode httpgithubcomRayRoestenburgblog httproestenburgagilesquadcomtwtr RayRoestenburgbook httpmanningcomroestenburg
; general
SureOn Sat Dec 8 2012 at 1214 AM Viktor Klang notificationsgithubcomwrote In akkacamelsrctestscalaakkacamelProducerFeatureTestscala   2546 26747  class ProducerFeatureTest extends TestKitActorSystemtest AkkaSpectestConf       object ProducerFeatureTest     class ProducerSupervisorchildProps Props extends Actor       override def supervisorStrategy  SupervisorStrategystoppingStrategy      val child  contextactorOfchildProps producersupervisorchild      val duration  10 seconds      implicit val timeout  Timeoutduration      implicit val ec  contextsystemdispatcher      AwaitreadyCamelExtensioncontextsystem activationFutureForchild timeoutduration      contextwatchchild      def receive          case msg CamelMessage           child forward msg        case aref ActorRef msg String           aref  msg        case Terminated  Shouldnt this be case Terminatedchild    Reply to this email directly or view it on GitHubhttpsgithubcomakkaakkapull933filesr2354977 Raymond Roestenburgcode httpgithubcomRayRoestenburgblog httproestenburgagilesquadcomtwtr RayRoestenburgbook httpmanningcomroestenburg
; design
trueOn Sat Dec 8 2012 at 1220 AM Viktor Klang notificationsgithubcomwrote In akkacamelsrctestscalaakkacamelProducerFeatureTestscala      var lastMessage OptionString  None      def endpointUri  uri        override def transformOutgoingMessagemsg Any  msg match         case msg CamelMessage  if upper msgmapBody           body String             if body  err throw new ExceptionCrash            val upperMsg  bodytoUpperCase            lastSender  Somesender            lastMessage  SomeupperMsg                else msg              override def postStop         lastMessageforeachmsg  lastSenderforeacharef  contextparent  aref msg formsg  lastMessage aref  lastSender contextparent  aref msg   Reply to this email directly or view it on GitHubhttpsgithubcomakkaakkapull933filesr2355032 Raymond Roestenburgcode httpgithubcomRayRoestenburgblog httproestenburgagilesquadcomtwtr RayRoestenburgbook httpmanningcomroestenburg
; general
I have no clue will remove Weird
; general
how do you know that 300 is enough
; general
those should be def preStart Unit
; general
INTERNAL API marker
; design
we dont care on Jenkins and this is only optimizing the test output when running on my machineand possibly others but I dont care about those as much So it works on my box
; general
might want to bump this one
; general
Is this for JavaDoc Do we need to add that in all places that we have declared deprecated as code annotation
; general
List instead of Vector
; general
that was the idea but before we go overboard someone needs to figure out which IDEs display what how since I could not get Eclipse to show me these in a halfway decent form it seems that Eclipse does not actually use the javadoc artifact instead it parses the attached source if presentSo in conclusion Id like to keep this in an figure out later whether that can fill the gap left by Javas weaker deprecation support ie without message
; general
well the purpose is calling toArray on it sometime which is why I wasnt sure thats a win
; general
sunknown actor creator clazz
; design
sender use null
; general
I think this read funny right now Cant it just be  it is recommended to create
; general
Same thing here
; general
ok I was hoping that it was only a cleanup thingy
; general
good catch must be getSelf of course
; general
oh this crept in as well will add RST docs for that
; general
Name of the test case might be improved
; general
I know this message is private but the name Watch might be a bit confusing
; design
Very nice tests
; general
So why dont we remove the interestedInResume list then Isnt fail fast better
; general
What do you mean by completeness of delivery
; general
Maybe a note here that contrary to the simple NACK case this allows duplicateless nonlossy delivery to the network interface of course if proper userside buffering is implemented
; general
that is a looong line
; general
eclipse formatting due to the break it to two lines or enclose in
; general
Maybe a note that the reader should have some spare buffer space when sending the SuspendReading othewise it will be overrun because of the async nature of backpressure notification
; general
sequence charts would be very helpful Maybe not in this PR but a ticket at least
; general
java constant MAXSTORED
; general
it would not be failfast it would result in stuck actors because people are allowed to assume that the WritingResumed message is not lost on a local system
; general
that every single message must be delivered
; general
yes good point
; general
what do you mean I cannot even see that it ends
; general
I like this name change
; general
Just looking at the property name I thought it was something elseI was thinking timeout on the sender side that it expects the ack within this timeCould we use something else than timeout flush
; general
no equals and hashCode for this one why not case class
; general
It can be a case class it is almost always boxed anyway
; design
No flush would be misleading I am thinking right now that I might have  to change the timing logic of acks and resends
; general
perhaps immutableIndexedSeq as the api type
; design
TreeSet vs immutableSortedSetI dont know if this will be public api but if it will I think we should use immutableSortedSet as api type
; design
Yes make sense also for IndexedSeq above
; general
I like those classes We should open source them I mean they will be useful for implementing similar things at the application level
; general
dont save characters
; general
INTERNAL API marker
; design
You can encapsulate the var    val nextSeq        var seqCounter Long  0L                val tmp  seqCounter        seqCounter  1        SeqNotmp
; general
Ah nice Thanks
; general
looks like you always go back to receive from idle and gated then you can use discardOld  false and unbecomeDont know if that is more idiomatic or better in any way
; general
just forget it I missed gatedidle
; general
I prefer explicit state transitions unbecome makes it a bit harder to see  where we transition This could be an FSM btw but I wanted to remain more  lightweight in this actor
; general
named parameter for the last param
; general
Definitely IntelliJ even warns about it
; general
place the timer name in a val
; general
around variables in log and error messages
; general
if it is None then it is a bug and we should throw an exception I should have added a comment here
; general
So why is it an Option There is probably a reason Then I suggest that you add a require in the constructor to detect it as early as possible
; general
Because the Send envelope carries nonsystem messages too and they have  no sequence number
; general
what is the key add comment
; general
Hmm this is a common pattern of localAddress  remoteAddress It might  make sense to create a case class for this purpose
; design
missing space at end of line
; general
require in constructor
; general
ok it might be used together with reliableDeliveryEnabled
; general
No because None is a valid value The only thing that is invalid is using  it in an acked buffer if it is None
; general
val ackAndEnvelopeBuilder  AckAndEnvelopeContainernewBuildersetAckackBuilderack
; general
why not chain these
; general
if msgPduhasSender Someelse None
; general
pattern match since you are grabbing the values anyway
; general
not that the secure cookie adds that much security but is it really good to log the cookie
; general
ThreadLocalRandomDoes it matter here That testcase is singlethreaded
; general
what is info
; general
use log or remove
; general
This is used when the test fails to get some debug info similar to how  SupervisorHierarchySpec does it Log would work too but will cluster the  output with timestamps and other things
; general
dont write new tests with actorFor    def there        systemactorSelectionroot  user  temp  sysMsgVerifierpathname  IdentifyNone      expectMsgTypeActorIdentityrefgetasInstanceOfInternalActorRef
; general
Ok Ill fix them
; general
code is better than documentation
; general
it doesnt matter but why not use the good random
; general
Could this be solved with recursion to avoid the duplication Something along the lines of case DeadLetterm   if minstanceOfSend  m Thx
; design
No that would unwrap arbitrary deep nesting which is not what I intended
; general
It helps debugging and no security is violated as there is none
; general
Adds additional output to the test case colored green if everything OK Useful in stress stests
; general
not cluster but clutter
; general
why is this required and why is it a number
; general
in akkaserializationSerialization    TryserializerByIdentityserializerIdfromBinarybytes clazzasInstanceOfT
; general
yes but there is no mechanism for synchronizing these IDs on both sides AFAIK I sure think that it would be a good idea to implement that but even then the ID should be optional here
; general
my guess is that this number is too small but well see that during testing
; general
so in case of no traffic flowing back we will see four resends even if the message was already received at the first attempt
; general
Log files tend to be sent around so I dont we should do this The received cookie can possibly be logged but not the expected
; general
thanks didnt know
; general
Yes one more zero is needed
; general
Only if the immediate ack is lost I will clarify the comments
; general
Btw most of the default settings should be finetuned after benchmarking carefully
; general
should this not be a  to enforce strict monotonicity
; general
please use parentheses for such statements no braces
; general
Why I dont want to allow buffering the same message twice
; general
Ah stupid me I see Thanks this sia bug
; general
this code optimization has deoptimized the value class Function0 returns T which means boxing it might well be that sending system messages is rare enough to justify this I just wanted to have said it
; design
It is a case class already There is too much boxing anyway so it did not make sense at all to keep it a value class
; design
Although we can change that back but that needs some care then
; general
this sends to deadLetters in an order which was not the original one I guess we should honor the implicit assumption that deadLetters falls into the same recipient category
; general
this does not do anything such code needs to go into postRestart so that it fails again and context stop self before throwing
; general
What do you mean by that I mean the order is not violated as far as I see only there are holes
; general
this SystemnanoTime call is unnecessary if the deadline was just moved three lines above
; general
I need to correct myself since the result of nextSeq always goes into a Some boxing will happen immediately anyway an optimization would be to encode the optionality of a SeqNo by reserving LongMinValue as undefined
; general
If we get rid of overwrap handling than we can just go with Long and then MinValue can be used safely
; general
why not send the Ack directly to the grandparent
; general
if the SeqNo is completely out in the woods ie 1e9 greater than what we know about then this will generate weird errors I think there should be a maximum permissible distance here and it should be waaay less than a million say
; general
It does not always exists For readonly inbound connections we dont allocate a ReliableDeliverySupervisor But it can be optimised I just have to pass down the ref in an option if present
; general
So it is always guaranteed that all nacked are sorted before all nonAcked It seems that that would be the common case but I was not instantly sure that it is a given
; general
we can also leave it as is for now and think about optimizing once we have benchmarked
; general
please move comment before if to make it align properly
; general
I think this was changed to an Extension on Patriks branch
; general
It is nonAcked is always the messages with larger seq than the cumulative ack and nacked ones are the explicitly nacked which has to be below the cumulative ack
; general
I trust you
; general
okay then its fine
; general
Lets be extrasafe then I will add a configurable limit If we detect such a stray seq we should quarantine
; general
I wanted the pseudoelse statement to be below Scalariform changed the identation though
; general
Ok I will port it
; general
yes I know having Scalariform is a huge overall win so we have to live with its warts
; general
In fact the sender should abort too if the gap between the lowest buffered and highest ones is too large Unfortunately this is not the same as the buffer size
; general
If we make it optional then we would have to require either an id or a manifest to be able to deserialize the message
; general
Problem solved     protected val counter  MTFtfCounter
; design
right I wanted to keep the keep em separated semantics which we had previously not sure who could possibly depend on that though
; general
Id prefer my solution over using a seedapproach sine the seed approach doesnt solve the problem of similarly named threads
; design
Normally we always add          INTERNAL API     viktorklang mentioned something yesterday that I had not thought about before privateakka doesnt even show up in scaladoc so why why do we have this ceremony with INTERNAL API One argument would be to make it super clear for Java developers looking at the source code that this is not supported API  and that is good enough argument for me but then we should use that convention consistently Sorry for the novel I was just thinking aloud and it was not meant as criticism to this minor oversight here
; design
yes good points will add the doc comment
; general
Hmm which problem exactly is not solved If my proposal solves the issue at hand and is a tad less invasive than yours then for 20x Id say we go with the smaller fix henrikengstrom should confirm that this works before we go forward with this backport
; design
val m1  MonitorableThreadFActory    val m2  mcopy    val t1 t2  mnewThreadsomeRunnable    val t3  m2newThreadsomeRunnableYour solution gives same name to 2 of the threads right
; design
yes but that is not what happens in an ActorSystem the copy is made per dispatcher and dispatchers have distinct names hence the same number may be appended to different strings
; general
I should probably add that I verified that within our codebase copy is only ever called with a new name argument
; general
It smells like quick and dirty since it makes assumptions on usage rather than semantics It is also more code than the other solution which also incidentally solves the aforementioned issue
; design
Of course thats all correct however my base assumption is that BC fixes for oldstable releases do not work the usual way since a lot more weight is put onto keeping existing semantics
; general
True we arent expecting manyany other changes to the 20x release track once 21 is out anyway
; general
do you have a better idea
; general
our convention is to enclose variables in square brackets in log and error messagessbound to unknown SocketAddress socketgetLocalSocketAddress
; general
move up 1 line
; design
So if this message is never delivered we leak in terminatedQueued
; general
I dont understand this line why use an ON
; general
you mean join the lines the result will not be aesthetically pleasing I did this to make the arrows align
; general
all the others are on the same line consistency
; general
well there is a conflict here a choice to be made perfect consistency is impossible
; general
when will that happen feels wrong
; general
ok its back as auto receive then note to self dont forward Terminated use a WrappedTerminated
; general
this will be removed once actorFor is gone if you call contextunwatchcontextactorFor we should actually remove all watches at the given path which was not previously done and which unfortunately will need to be On
; general
ok true then it is no problem just another motivation to do the right thing
; general
yes the alternative is to deliver Terminated immediately ie with system message semantics and nobody liked thatIll argue that an actor for which this leak is a problem has bigger design issues that this
; design
actor had terminated
; design
I like the oneliner too
; general
How will the user know if the callback fails
; general
How do I remove a callback
; general
logging is a godd suggestion thanks
; general
you dont and I dont think there is a need for that this is similar to ActorSystemregisterOnTermination
; general
So if I have an actorservice that wants to unload at runtime after a while it cannot
; general
yes you can that is in your control since you started itthis actor is just a listener that runs the registered callback at the right time onceif you change your mind and dont want to do anything in your callback that is also fine
; design
But the callback will never be garbagecollected right
; general
it will when it has been called this actor is stopped
; design
AlrightHow do I specify which ExecutionContext the callback will be executed on
; general
Do you really think that is needed The purpose is to kick off other things like starting some top level actor Wouldnt default dispatcher be good for that I can of course add a ec parameter that without problem but not just because I canWe dont have that for terminationCallbacks
; design
How about user passing in a PromiseCurrentClusterState as the callback and then they can just add callbacks to that with whatever EC they need    val p  promiseCurrentClusterState    pfutureonComplete       clusterregisterOnMemberUppThen it hooks in with existing FuturePromise machinery and it is clear that the same rules for closing over state applies to the callbackthunk passed into the registerOnMemberUp call
; general
Or even having registerOnMemberUp be    def registerOnMemberUpTf CurrentClusterState  Timplicit ec ExecutionContext FutureT         val p  promiseCurrentClusterState       val f  pfuture map f       currentClusterStateListenerActor  AddListenerp       f
; general
if go down that path we could just expose a     def onMemberUp FutureCurrentClusterStateand users can register onComplete callbacks on thatIm not sure what api is best Will think about it and expect other team members to join the discussion
; design
Very good suggestion
; general
syntax error  The callback will receive X as argument
; general
this would better be done as    getInt ensuring   0  must be
; general
yes using the Future API for callbacks sounds like a good plan
; design
created ticket for that since ensuring is an assert httpswwwassemblacomspacesakkatickets2798
; general
I discussed the api design of this callback thing with rkuhn and while the Future suggestion is a nice idea it doesnt fit in with other similar things such as registerOnTermination Therefore we keep it as a simple thunk callback We decided to simplify by not providing the CurrentClusterState in the callback Now it is a plain thunkRunnableIn Rollins this will be replaced by passing in Props of a top level actor to ActorSystem or Cluster extension
; design
One is a class of implementations the other is a scope these two are not any longer aligned since there may be nonlocal cells
; design
WDYM Nothing changed apart from using named parameters for Boolean
; general
then I might as well cgetname
; general
Hey atleast I gave you options
; general
no but addChild is a spinCASing bastard and we dont need that volatile write to ruin everyones day
; general
perhaps a good comment
; general
there is a comment three lines further up which explains this in great detail
; general
okay will add bounds to breadth of printed tree zipper is beside the point because a String is what is needed in the end
; design
Sorry man mustve been tired
; general
Thinking a bit more I just added big warnings to the docs It only serves its purpose if it prints the whole tree nothing else
; general
Im not sure I agree there a signle String is not needed at all which is my point perhaps better to chunk it into multiple Strings that are pulled out instead of generated strictly StreamString
; design
Its part of the illusion that there might be a different implementation of ExtendedActorSystem But I suppose I should change the guardians type
; design
which Ive done
; general
I really do hope that nobody tries to call this method who has trouble deducing that from the existing ScalaDoc But Ill add a dare in any case
; general
will add a comment explaining expected semantics
; general
yes it looks a lot more funny outside of Eclipse
; general
Theres nothing being inferred and Unit is not actually an object when used as a return type  is an empty block which is precisely what I mean in this case Id actually prefer def suspend
; design
null never was allowed but the check was not actually executed because nullisInstanceOfAnyRef returns false
; general
To avoid an object creation the result of c get name is an OptionChildStats
; design
because of the bounded waiting time for tryLock which has not yet been implemented here
; general
apart from that super is an ActorCell while precipient is an ActorRef and unfortunately the real method is  in one case and tell in the other Hmm
; general
Why the distinction between ActorRefWithCell and RepointableRef
; general
c get name plz
; general
systemService popped up again
; general
why check isEmpty prior does addChild throw up if already exists
; general
Needs some introduction
; general
Needs some introduction
; general
say what Is it wise to publish this prior to being constructed
; general
I do not like this one Its better if it was a Zipper or something you risk having millions and millions of actors being put into this string creating a huge blob that OOMEs
; general
Shouldnt this be caught earlier Make systemGuardian LocalActorRef
; general
Perhaps add that it shouldnt be called twice
; general
Soooo this is UNGUARDED and shouldnt be called in more than one thread at one place
; general
Wow this does a bit more than just creates a new Cell it creates and Activates a new cell
; general
wow unorthodox to say the least add a dot pleasetry celltellenvelopemessage envelopesender
; general
Unit   use that instead of getting it inferred as when using
; general
is null not allowed any more reason for change
; general
why is the cast needed
; general
why use ReentrantLock why not synchronized
; general
tell vs for two adjacent lines of code I think you should stick to the same
; general
This is equivalent to nextStateDatadeadlinetimeLeft which is available by implicit conversion from nextStateDatadeadline
; general
This is included in the next line automatically
; general
hmm maybe add compare ops to Deadline looks like an omission to me and Im allowed to say that
; general
please dont use default arguments for internal convenience they are a PITA when refactoring due to missing errors and thus should only be used in stable user interfaces when they make the API that much more slick
; design
val stop  Deadlinenow  timeoutdurationand then use stoptimeLeft and friends
; general
the scaldoc problemneed to run the scriptsfixprotobufsh
; general
we should add the scriptsfixprotobufsh to the instructions or better make a script generateprotobufsh that does both proto and the fix
; general
might want to rename this to enterBarrier for clarity
; general
Yup they where called that at one point Will change
; general
As this is part of the build Id prefer having one script which does it all and which can be invoked by a task from SBT Obviously this would not be run by default as that would require everyone to install protoc
; general
Ive added instructions to the comments Changing how this is generated is ticket 1798
; general
Id rather include that in the Data so that it is available during error handling
; general
and this would need to effect possibly a shortening of the timeout the easiest solution would probably be to keep a Deadline inside the Data object and calculate a new deadline here and reschedule the StateTimeout in case this client wants to fail earlier
; design
Hmm youre placing part of the failure handling inside the actor while all other failure handling is done in the supervisor Probably better to just keep it as it is and do failBarrier in the supervisorStrategy for this case
; design
see my comment below this is replicating the supervisors faulthandling so Id simply throw an exception in this case
; general
given the points above Id leave this method as it was
; general
two bools with bad names while youre changing this I think it would make sense to switch to an enum BarrierOp here which has four cases enter fail succeeded failed In principle these could all be mapped onto a single bool because the different meanings occur on different message directions but that would be ugly for no gain the enum takes exactly the same space
; general
ah good one
; general
it would simplify the code then to have required BarrierOp op  2 ie nonoptional
; general
why not jucTimeoutException
; general
why not wrap this and include the failed barriers name
; general
Maybe I should have added a comment this call is somewhat equivalent to a barrier when done for the first time which is why I chose that On the other hand our tests all require all participants to have joined before doing anything else which makes this moot Hmm
; general
So how would I get hold of the value during the transition
; general
First one in wins was a design choice  Sure that would be nicer
; design
sayjust out of curiositydid you have some debugging trouble inspiring this change
; general
Yes all the logs come first and the test results afterwards making it kind of hard to read For me at least
; general
yes you are right better make it configurable separately defaulting to 5sec slow multinode Jenkins can override using system properties right
; general
yes this looks like a good one to me
; general
yup good one
; general
Yes Ill untangle it and clean it up
; general
You can remove this line Terminated is no longer sent as normal message and this is a synthetic actorref so it does not generate it either
; general
We discussed it and agreed on int
; general
yes and it is supposed to always be used together with an Address
; general
Ill call the newline police
; general
Id prefer disabled or some such to turn this feature off can internally also be represented as DurationUndefined
; general
You mean that the property should be allowed to be both a string and a duration Isnt that confusingWe have similar at other places           Use 0s to skip delay          stopdelay  1s       negative number means infinite timeout It is only used for typeDispatcher       and only if mailboxcapacity  0      mailboxpushtimeouttime  10s
; general
yes we have not been consistent from the start but recent additions eg IO layer have been done like I suggested maybe I only reacted to your choice of magic value because 0s could well mean retry immediately whatever that entails
; general
ok then I look at IO layer
; general
sometimes I miss good ol C a  b  a  b
; general
I think the UID should be in an Extension instead and everyone just references it through that keeping the API footprint of RARP one tiny bit smaller
; design
ok that will probably be the smallest extension ever
; general
I think it would be good to harmonize this so its clear when something is used or not ie using Undefined internally and off or similar in the config file
; general
It always depends on what constitutes an intuitive value in the given context Id also not like to break peoples working config by reinterpreting it behind their backs hence my proposal to do it like this for all new additions maybe we can slowly migrate the old settings where needed but the costbenefit ratio is prejudiced heavily in the cost direction on this one
; design
If we want to change this for 22 what would potential solutions be
; general
That depends on the problem which remains unstated in other words what does this mean in your questionIn particular the skip delay example above is completely fine since a delay of 0s means no delay mailboxpushtimeout could grow an additional infinite syntax without breaking anything
; general
extension added in 0270e90
; general
fixed in cdf9fbb note the cleanup of io settings
; general
yesI cant understand that  is so popular just because it is in a match case
; general
it has never been releasedwe added serialversionuid in cluster last week or something
; general
should also say that joining only works once for a given system
; general
ok and I see that I should update this 0s thing to off
; general
configure sounds pretty imperative given that the return type is Option  and the method definition is 95 types
; general
removed and added to migration docs
; general
Should we not run this spec with both the FDs
; general
Fold config into a one liner
; general
This will break if we ever change the node ring sorting from plain name to something else right
; general
Well this spec does nothing but gossip and the intention is to test real healthy cluster Testing with puppet would tests nothing at all so I dont think that is necessary
; general
You can use just clusterstatus it is the same thing as clusterselfstatus Same throughout the file
; general
no it is actually using the real cluster Ordering via OrderingRoleName which is defined in MultiNodeClusterSpec
; general
Ah got it
; general
Just curious why we want max of these values Is it so you can disable each of them individually by configuring the intervals very high or is there something else going on
; general
That line answers my own question I think Disable tasks individually it is
; general
Its those settings    periodictasksinitialdelay    gossipinterval    heartbeatinterval    leaderactionsinterval    unreachablenodesreaperintervalFor tests we need a simple way to disable all or one of these Disable all is no problem but disabling one was not possible because it was run once due to the initialdelayAlso I think its rather logical to not run the first task earlier than the specific interval
; general
yeah you got it
; general
Id definitely recommend against stringifying a Message since that could potentially be huge
; design
ah thats a good point will take out
; general
Id avoid using origCause in message
; general
nooooooo please cant we have this somewhere else
; general
It has a certain odor
; general
Make it a oneliner for teh eyes
; general
false  DirectiveResume
; general
Cant we detect this so the need for the boolean disappears
; general
Always put unlock in finally clause
; general
How many times is the standard import statement repeat factor
; general
Clean up these NonFatal should be grouped wit h the others from util
; general
Isnt this method wrong Dont you need to check getByRef every tailcall
; general
Why create the intermediate collection
; general
Since youre doing removeChild anyway just do it at the top of the method
; general
Why assumed to be normalterminating leave as abstract
; general
not case object
; general
not case object
; general
why not view here
; general
get the imports cleaned up
; general
clean up imports
; general
When should the nonrecursive be used and when not
; general
Needs explanatory comment
; general
Needs explanatory comment
; general
comment this line
; general
When does restart throw an exception
; general
Cant we make this 2 different messages instead
; general
Is this still true
; general
no false means not in response to failure in this case it means in response to the suspend five lines up
; general
WDYM I dont think its a problem
; general
I asked myself that very same question and came to the conclusion that the detection mechanism would qualify as black magic at least from the users perspective and I dont like making userfacing API magic If you have a better suggestions shoot
; design
Why In case that is actually relevant were blown out of the water already anyway This can only fail when interpreted and we hit a SOE for calling suspendCount in which case the actor will be defunct afterwards or when facing a VME I can of course change it but please give me a reason for doing so
; design
As high as Scala IDE likes to roll it Last I heard they used a D20 for that
; general
No because the change cannot happen in that direction as a race the only entity removing a child is the actor itself and the only entity which could be racing is somebody who calls attachChild and there we are guaranteed that that child cannot yet have died since it has not yet been createdIll put the above in a comment
; design
Doesnt gain much will need override anyway Its not about assuming its about not repeating
; general
Thats a LOT of ceremony in this case Still want it
; general
because it was not documented that the result shall be lazy done that now also for children
; general
there is a comment nine lines down which explains this
; general
whenever eg sendSystemMessage feels like it
; general
We could but I couldnt come up with a good name which was not Resume and that one is obviously taken Dispatch within ActorCell is also a bit more concise like this
; general
That was a good one with this change no actor system stops anymore  So no this is not a good idea  I did have some memory of having a reason for this since every single test fails does this really need a comment or should people who change this not find out by themselves
; design
Just a spontaneouos reaction to the name mangling We have tests that will cover this
; general
I didnt think this was userfacing
; general
Some day someone will either add some code in there or refactor it to be a method call insteadPutting tryfainally is just a very cheap way to ensure structural integrity and harmonize the way locks are handledIt would also make me sleep better
; general
Thank God its not a D100
; general
Great Its one of those things that could just silently break
; general
SupervisorStrategy is not currently privateakka and I introduced these methods specifically to make it possible to meaningfully subclass it The comment at the top makes it very clear who is NOT expected to roll their own
; general
Can it be both terminating and normal Otherwise Id recommend just having the isTerminating and perhaps implement the isNormal as a final method that returns isTerminating To avoid the truetrue or falsefalse case
; design
I thought the standard was to use caseobject if it is an ADT
; general
Yeah itll allow us to aggressively remove methods that are factored out less code  more joy
; general
We have to doublecheck that stats isnt use in a strict way then
; general
Add a comment that points to the 9linesdown comment
; general
hmmm should we allow that Ideally a sendSystemMessage failure should put it on resendduty for the guaranteed delivery of system messages right
; general
Resume and TryResume
; general
I thought we had the suspend count in a var I thought I saw that somewhere in the PR
; general
Wow what happened I assumed that val n  removeChild was moved to the top and that the second removeChild was removed
; general
Ties into this httpwwwassemblacomspacesakkatickets2205
; general
yes ca 90 fail if this is wrong
; general
They cannot both be true but both can be false during a restart
; general
toString is overridden in all cases and pattern matching not done so I dont see the value it brings On the negative side we have the problem that NormalChildrenContainer cannot become a case class as is because of the resulting duplicate apply
; design
okay checked again result still the same
; general
the question is not about allowing the trycatch here is just for robustness
; general
Nope there is not trying involved in either case Its a Resume for two different reasons
; general
I am still convinced that the mailbox status is the intuitive place to put this logic suspend two times resume once no go If you put a counter somewhere else it will only get more messy The thing you saw is in UnstartedCell to keep track of suspend before actual creation
; general
removeChild may well change the type of ChildrenContainer thats the whole point of it Added a comment
; general
Yes The methods mentioned in that ticket have been removed inlined in cellFaultHandling and these methods added to complete the picture Do you think this fixes ticket 2205 I would not like to put an actual example with description into the rst docs because that is too prominent
; general
I have corrected the comments and renamed the becomeOpenbecomeSuspended methods below to make this more clear
; general
msggetClass will be None or Some right
; general
okay will make this smarter and then merge it in
; general
Are we sure that suspendresume is only used in restarts
; general
Yes but your question triggered some fortunate neuron which made me realize that without keeping count of how many times a ref was suspended we cannot really be sure that everything remains correct Ill whip up a supervision stress test and crosscheck
; general
Should this extend AkkaException
; general
This smells quite heavily of dead code
; general
I think you want to return true here
; general
Fixed both Thanks
; general
No it is not ok Damn How can we fix it I wanted to avoid the more complicated solution that I had first in mind in which the first leader1 moves himself UP  LEAVING2 steps aside as leader somehow  dont know how3 new leader is elected4 new leader moves does handoff moves old leader to EXITING and to REMOVED5 old leader received REMOVED message and shuts himself downThis is rock solid I think but how to handle 2
; design
Ok Ill change it I just like to fold things
; general
Ok I think we solved it during lunch
; design
I like folding also     localSeen  removedMembers  seen removed  seen  removedaddress
; general
I also like folding but not for such a simple thing like removing a bunch of entries from a Map I think the built in high level functions should be used when appropriate and fold when appropriateIts all about readability and how quickly  one can see the intentPatrik18 jun 2012 kl 1524 skrev viktorklangreplyreplygithubcom                 member copy status  Exiting                else member                         localGossip copy members  newMembers  update gossip             removing REMOVED nodes from the seen table           val newSeen  removedMembersfoldLeftlocalSeen  seen removed  seen  removedaddress   I like folding also   localSeen  removedMembers  seen removed  seen  removedaddress    Reply to this email directly or view it on GitHub httpsgithubcomakkaakkapull547filesr1001080
; general
Yep I agree I fixed it to your favor Along with all the other stuff Take a look
; general
Dont need the MemberStatus prefix here
; general
Would it be possible to set selfstatus to removed and do away with isRunning
; general
No Since the node is no longer part of the node ring or any other part of the gossip state
; general
Well then technically self should be an option or status should be an Option if there can exist such a state where it doesnt exist
; general
No REMOVED is the tombstone state Never present in the gossiping exchange but part of the semantics and the model A node can only have status REMOVED if if is removed and not part of the cluster any more I am only returning REMOVED now to the user since that is what the user would expect from a REMOVED node self should not be an Option since then we would have to maintain the nodes state in two different places The current impl is the way to do it
; general
Thats a great explanation to put in a comment above this method
; general
Ok Ill do that
; general
Adding this          Member status for this node MemberStatus             NOTE If the node has been removed from the cluster and shut down then its status is set to the REMOVED tombstone state             and is no longer present in the node ring or any other part of the gossiping state However in order to maintain the             model and the semantics the user would expect this method will in this situation return MemberStatusRemoved           def status MemberStatus         if isRunning selfstatus       else MemberStatusRemoved
; general
This one looks pretty ugly to me multiple vars and sideeffecting in filter
; general
why map  foreach
; general
why map  foreach
; general
Why toSeq here
; general
The only alternative I see is to duplicate basically the same logic one more time to search for the ones I have moved from EXITING  REMOVED in this section and from LEAVING  EXITING below And if you want to get rid of the hasChangedState var then I also need to duplicate the code for the JOINING  UP section That is both less efficient and move verbose Or do you have a better solution
; design
I found it more clean than the alternatives
; general
I dont know I think Patrik wrote that line Can perhaps be removed
; general
But I can change it to this if you like it better     removedMembers foreach  member        val address  memberaddress       clusterCommandConnectionForaddress  ClusterLeaderActionRemoveaddress
; general
What about    val newMembers removedMembers  localMembers partition status  Exiting    val hasChangedState  removedMembersnonEmpty    newMembers map
; general
this is incorrect if Member already exists in localGossipmembers it will not be replaced by the new member LEAVINGtest coverage
; general
also what happens if the member doesnt exist in localGossipmembers for example moved to unreachable then you get it a two places
; general
Thats nice Forgot about partition Thanks Still need to repeat the logic but it wont be that bad I think
; general
yes the order is not needed for this compare
; design
Isnt this the same as    seen  removedMembersmapaddressI think that is easier to read than foldLeft for simple removal
; general
ah but what if the gossip fails eg picks a node that happens to just become unavailableis that still ok
; general
so for unreachable there is a check only for self but not for unavailablejust asking so that it was a intentional change
; general
is this same as unreachablenodesreaperinterval then it should be read from config
; general
should values in this cache expire a node could go down start a new remote transport and try to rejoin could it not
; general
I second this concern Why do we need a cache Is the performance of node lookups critical
; general
Does it make sense to use the same role name for a node started on another address If that is the case we should definitely not add this cacheAs next step I would prefer that we use role names in the tests instead of mix of address and role names thats why I added the implicit conversion as suggestion towards that Lookups can be done in tight loops such as awaitCond Of course one can cache that locally in a val but knowing that its no cost to do noderoleaddress means that you dont have to think about that partIf you think its a bad idea and I have no problem with that we simply dont merge this
; general
Okay I just wanted to raise this point so that everyone is clear about it reconnecting the same JVM with a different Address is simply not possible there is currently neither a test which does it nor is there any facility which would support restarting the RemoteTransport but the restriction on the test side should be clearly documented nevertheless One thing which could be done but wont work is having a test case which creates multiple ActorSystems one after the others failure
; general
Ill move the cache to MultiNodeClusterSpec to not put any constraints on the general testing framework
; design
addresses foreach failureDetectorremove
; general
dead foreach failureDetectormarkNodeAsUnavailable
; general
dead foreach failureDetectormarkNodeAsUnavailable
; general
make it a oneliner
; general
If we make nrofnodes a section we can cut down on the BP a bit
; general
I usually use val idCounter  Iterator from 0
; general
it is not obvious how this could ever be false maybe explain the mechanics of this test driver in its class comment
; design
that makes each of the trees localonly since these Props would not be serializable just clarifying my understanding that only the top Worker router is going to be spread out across the cluster
; general
why shutdown after start of successor
; general
nice will try that here
; general
ok will do its simple possible flow controlthe scheduled SendBatch messages will be ignored if not enough acks received
; general
yes that was the plan and not that unrealistic
; general
For each iteration I want to start one member and shutdown one therefore I shutdown the one that was started in the previous iterationDo you see a problem with that Is there a better way
; general
I meant to ask why this line is not moved three lines up
; general
yes that would look better thanks
; general
So it looks like we added back the member two lines down when we received a MemberDowned before this fix Is that correct
; general
bantonsson That is correctrkuhn the problem is that we never go from Down to Removed which will be fixed in another existing ticket
; general
ah okay good to know
; general
first test run on jenkins was successful which doesnt mean that its fixed but anyway a good startIll keep it runningIll fix review comments also
; general
thought some more about this you are right that was a safe net that was not needed removed thanks
; design
Nice catch Sorry about the broken merge
; general
np it was a mess with fwback porting and not back porting this change
; general
now we also have a test that actually catch it
; general
this looks suspicious but you only use it in the internal diff functions so thats fine
; design
double import of SortedSet
; general
shouldnt this be removed
; general
Thanks IntelliJ seems to go for collectionimmutable by default Will clean that up
; general
Nice catch It should Not referenced from anywhere
; general
this is more elegantly solved by changing the supervisors strategy which is where the logging happens
; design
and thanks for pointing me towards this issuehttpswwwassemblacomspacesddEDvgVAKr3QrUeJe5aVNrtickets3222
; general
Oops I wasnt aware of this behavior Good to know
; general
Right good ideaIll update the PR
; general
I had a match before but it really doesnt add any value since I dont need the cast anywhere So I found the single isInstanceOf actually a bit more readable
; general
Anything here that is likely to throw anything
; general
Not sureI simply copied the logic from the OneForOneStrategy superclasshttpsgithubcomakkaakkablobmasterakkaactorsrcmainscalaakkaactorFaultHandlingscalaL334which unfortunately is private and therefore not directly useable from this derived strategy We could mark the publish method of the OneForOneStrategy protected if there is no argument against such a step
; design
yes making that protected sounds good for me
; design
is this sent over the wire serialVersionUIDnot likely to change but
; general
I dont see any scenario where wed bump that number
; general
If you dont define it it will be computed at runtime based on methods and fields of the class so if the implementation of a case object changes then it will change magically Maybe getting in the way of rolling upgrades
; design
private case object NullResponse       override def toString String  null
; design
I dont think we should add that toString then log messages will be very confusing is it null or the NullResponse
; general
Will add the serialVersionUID
; general
override def toString String  nullWouldnt that be confusing
; general
Oh sorry cant do that for 20 as SerialVersionUID isnt fixed in 29TODO add SerialVersionUID1L when SI4804 is fixed
; general
My intention was not to suggest that you should add toString it was an example scenario where we would add a method and break serialVersionUID We concluded at the dinner the other day that there is no such thing as a perfect crystal ball
; general
I dont like this conceptually as were truning something we need guaranteed delivery on to something that doesnt provide any such guarantees Thoughts
; general
scalaSerialVersionUID1L case object HeartbeatSerialVersionUID1L case object HeartbeatRequestSerialVersionUID1L case object EndHeartbeatRequest
; design
Youre right That is unreadable without syntax highlighting
; general
due to our own watch this will never be true
; general
not true forall returns true if empty
; general
rkuhn I want to understand what you mean Do you refer to the watch that is done between the RemoteWatcher actors that is added when receiving HeartbeatRequest That is in the other direction That is added to watching Set at the other side not here
; general
that other watch will trigger a counterwatch leading to the two watchers watching each other
; general
I see what you mean good catch will filter that here
; general
after 1335 this must be a WrappedTerminated again
; general
I dont think we have to be that strict dnamestartsWithakkakernel should be enough Those name schemes tend to change as we have seen
; general
Yeah but if we add another dep that starts with akkakernel then weve accidentally messed things up
; general
please add a newline
; general
lowercase nameAlso needs docs that it defaults to NoAck
; general
is position allowed to be negative is count allowed to be negative
; general
Why does it need its own dispatcher Cant it use managed blocking
; general
so if this call fails we leak a buffer
; general
as I just commented blocking is less managed in a sense
; general
if dropcopied fails we leak a buffer
; general
so if this is violated we leak a buffer
; general
hasRemaining never use size for isEmpty
; general
Alright but by default it is going to use the defaultdispatcher rightI want to keep thread creation down so we dont end up with Akka eating 1000 threads because everyone felt they needed their own thread
; design
the default given somewhere above is a PinnedDispatcher meaning that for this purpose we allocate one thread per actor system that might want to be a lazy val though so people not using WriteFile dont suffer
; design
But that means that you can only transfer one file at a time So then instead I suggest using a SerializedSuspendableExecutionContext over some dispatcher and use scalaconcurrentblocking This will serialize transfers but wont mandate a thread of its own
; general
No this pending write is still registered and will be cleaned up when the actor stops
; design
Are you saying you want all code that could potentially leak a buffer through a bug in this class or in eg ByteString to be protected against leaks
; design
I think we discussed this matter before and agreed that it was more consistent to give a constant an upper case name But I agree that especially for empty the precedent is definitely on writing in lower case So I will change it
; general
under which circumstances will copyToBuffer throw an exceptionMy point being that an Akka application should be able to run for months if not years so we need to parry for leaks especially large ones
; general
under which circumstances will copyToBuffer throw an exceptionIt doesnt as far as I know its a method of ByteString btw If it would suddenly start to throw there could be greater troubles than this memory leak So thats why Im asking If you say we should protect against any leaks even those that shouldnt happen to the best of my current knowledge Ill accept that and look out for it
; general
Ok cool I just know that there was a regression in 2101 regarding copyToArray so paranoia is warranted
; general
Would you still be able to configure a bigger thread pool if you decide that it would help with your particular setup I dont think we should completely remove the option to specify higher levels of concurrency
; general
Ok so lets be paranoid
; general
How long will these tasks actually block From my limited understanding the task should not block in the usual case unless the disk is slower than the network but that assumes that it returns early whenever the network buffer is full doing the WriteInterest roundtrip If the blocking periods are only short then we should just leave all code as it is and just change this default to akkaactordefaultdispatcher
; general
You are basically right with your assumptions A task will only block if the disk is actually slower than the network However if this happens it might block for the complete data in the worst case I tried piping a file from an USB stick to localhost where 400MB were transferred during one blocking call with 20 MBsSo what I would additionally propose is a configurable limit on how much data is attempted to be transferred in one blocking call Thats also what nginx seems to do with its sendfilemaxchunkhttpnginxorgendocshttpngxhttpcoremodulehtmlsendfilemaxchunk parameter
; general
yes that sounds good
; general
this was previously privateakkanot possible any moreperhaps add INTERNAL API comment
; design
It looks like this doc section is duplicated in two places now Keep it DRY
; general
Well the implicit conversion is returning AskableActorRef so its quite weird to have that class be package protected What we could do is to make the constructor package private but if we change the class to have multiple parameters it cannot be a value class anymore so I dont see the needWhat do you think
; design
Its always been duplicated Where do we put it on the trait or in the value class
; general
Could it fit into AskSupportask since that is what the user imports
; general
true its not really internal api
; design
I totally agree thanks Patrik
; general
Id recommend not using  for a destructive update
; design
if its configured and fails I think we should throw instead of defaulting
; general
isnt there a risk that you have moved the noderoleaddress lookup to after the shutdown
; general
yes for this unit test it is perfect to use FailureDetectorPuppet
; general
I think this can be rewritten to use FailureDetectorPuppet
; general
move to srctest
; design
I think any real failure detector would need some config and logging so I think we should say that the constructor takes a system as parameter
; general
what do you need connectionsToStartWith forRemove that and we can use configuration to instantiate FailureDetectorPuppet also
; general
Sure I can remove it Not used
; general
Or I just change it to
; general
Not used in this impl but needed in real FDs
; design
I used to just throw but then I changed it to log an error I can change it back
; general
Cant see why In normal mode it will take a while for the real FD to detect failure
; general
It does takes ActorSystem ClusterSettings and it is well documented in config already
; general
Ok Im not using that ctor arg anyway Will fix
; general
because you changed it to lazy val previously it was val secondAddress  nodesecondaddress that was performed before the beforedownsecondnode barrier
; general
Removed it instead
; general
Removed from interface
; general
Yeah but it should be fine now right
; general
Simpler alternativesJust grep for 16 in the first linebashjava version 21  head 1  grep qF 16  fail Java version is not 16Split using cutbashjava version 21  head 1  cut d   f3  cut d  f2
; general
Thanks for the bashing PeteI think number two looks like the winner
; general
I would personally go for the simple F grep Doesnt assume any particular columns just that the literal string 16 must be somewhere on the first line
; general
Will that work for the initial 16 release Id rather avoid assuming anything else than looking at the 3rd char of the version no
; general
You mean if you had exactly java version 16 That wouldnt match but I think java version would always have 160 for the initial version
; general
Whatever works is goodThinking about the motivation for this this check doesnt necessarily mean that the build is using the java 16 on the command line Its possible that the sbt start script is pointing directly at a different version If you want to be more cautious then parsing the result of sbt eval SystemgetPropertyjavaversion or similar would check the version running the build
; general
Yeah I thought about adding it to SBT initially but we only want to prohibit a new release being pushed to our repoWhenif we switch to some other payload delivery mechanism we will want to revisit thisWDYT
; general
Since htis is essentially the only place where behaviorStackPlaceHolder is used how was it deemed safe to remove it
; general
so if someone does    context become ActoremptyBehaivorthey mean     context become receive
; general
Ah What if I use a different placeholder null to representinstreceivesRpOn Jun 12 2012 1039 AM viktorklang replyreplygithubcomwrote   52110 5217  privateakka class ActorCell         if instance eq null           throw new ActorInitializationExceptionself Actor instance passed to actorOf cant be null         behaviorStack  behaviorStack match           case behaviorStackPlaceHolder  Stackemptypushinstancereceive          case newBehaviors                StackemptypushinstancereceivepushAllnewBehaviorsreversedrop1                behaviorStack  behaviorStackmap  b  if b  ActoremptyBehavior instancereceive else b  so if someone does    context become ActoremptyBehaivor they mean    context become receive   Reply to this email directly or view it on GitHub httpsgithubcomakkaakkapull534filesr967890
; design
That was what behaviorStackPlaceHolder was doing until it was retired
; general
what do you mean pulseinterval heartbeatpulsewe use interval for everything elseheartbeat is the normal term for this kind of messages I think
; general
Lol yes I agree but the common terminology for the interval of heartbeats is known as the pulse
; general
Why not Protobuf
; general
we will do protobuf when everything has stabilized avoid dev overhead
; general
This is expensive SortedSetemptyMember  memberCache the SortedSetemptyMember in an object
; general
Also in case you need it somewhere else
; general
Is the system scheduler configuration tuned for the heartbeats given the way the default scheduler works
; general
No when running I have a pulse of 150 beats  minute ie pulse is a frequency not interval
; general
Haha youre right my bad
; general
We will turn all these into proto once the protocol have stabilized Not now
; general
Ok but then there should be a FIXME so intent is preserved if someone else is to do that task
; general
we have ticket for it
; general
So the ticket includes which classes need to be converted
; general
No I dont think we should
; general
trust me we will not miss that I can sprinkle FIXME if that makes you sleep better but I wouldnt trust the fixmes when doing the ticket anyway
; general
I will sleep better if quick and dirties are clearly flagged
; general
Kind of confused here We are trying to heartbeat the unreachable members on the lines below What is the FIXME referring toI think we need to try to talk to unreachable nodes until they are downed and removed
; general
good point Ill change to scheduleOnce and adjust the delays
; general
Change all the scheduled tasks
; general
Should we cache all messages that are broadcasted
; general
Why would we need to continue to talk to unreachable nodes If it is a convergence on the unreachable set then none of the nodes in this set will ever be allowed to join the cluster again But have to go through regular joining phase It is not needed to communicate with a node when it is moved to DOWN but that can happen on any node followed by a convergence So to sum up if a node is moved to the unreachable set then it is considered DEAD If it reJOINs then it is considered a NEW node Considering this why should we need to continue sending heartbeats to him What am I missing
; design
Could be a good optimization One for each address  Will be the same every second  forever
; general
Nothing I was probably a bit confused about reachability and overlap between failure detection and cluster gossip
; general
OK So patriknw if you agree will you change the code to reflect this
; general
Sure11 jun 2012 kl 1652 skrev Jonas Bonrreplyreplygithubcom  8786 88725  class Clustersystem ExtendedActorSystem extends Extension  clusterNode          INTERNAL API       privateakka def heartbeat Unit       val localState  stateget      if isSingletonClusterlocalState        val liveMembers  localStatelatestGossipmemberstoIndexedSeq       val unreachableMembers  localStatelatestGossipoverviewunreachable         FIXME use unreachable  OK So patriknw if you agree will you change the code to reflect this    Reply to this email directly or view it on GitHub httpsgithubcomakkaakkapull533filesr960119
; design
Any member in Joining or can we be more precise
; general
yeah original author seems to like empty Ill change
; general
emptyT rockar fett
; general
The question is if REMOVED should ever be in the unreachable Set Probably not It is part of my the REMOVED status ticket So leave it for now
; general
due to unreachable nodes
; general
ok yes I just added it because it was treated like that in convergence but all that will be revisited in the other ticket
; general
Should the log be more semantic than technical Cluster Node   No cluster convergence since not all nodes have seen the same state yet
; general
fixed here and in other similar tests
; general
save allocation by using behaviorStackPlaceHolder instead of Stackempty
; general
behaviorStackPlaceHolder instead of Stackempty
; general
Whoa nice catch completely unsuspectingscala import scalacollectionimmutableStackimport scalacollectionimmutableStackscala Stackempty eq Stackemptyres1 Boolean  false
; general
Would it be better faster to only call pop once
; general
I think we should switch to just using an immutable List immutableStack is ludicrously implemented
; general
no eqne needs parens and I dont want to make it look like the RHS has priority over the LHS thereof the balanced parens
; general
could use case callback  moreinstead of ctail
; general
ok I was thinking about contextStackisEmptyI dont understand why this would be less readable but its up to you    if contextStackisEmpty  contextStackhead eq null
; general
SetemptyMember  a  bgroupByaddress  acc members  acc  membersreduceLeftMemberhighestPriorityOf Ie no need for the Vector turn algo from N2 to N
; general
This line should be changed to wipe out everything yourself will be added at the end
; general
Would be nice to have a linter for stuff like this
; general
reduce is sort of an implementation detail cant we just rename it to getHighestPriorityMembers
; design
Might make sense to import MemberStatus in this file so we can have mstatus  Down etc
; general
yes Ill name it pickHighestPriority
; general
Whoa nice catch bad IDEA
; general
Im not sure that this is as efficient as clazznewInstancesee javalangClass newInstance0 some caching going onyou might want to do this as fallback if clazznewInstance fails
; general
isnt it good practice to change it back to original value when done or is the Constructor object a throw away instance
; design
If its a throwaway instance we dont care and if it isnt we dont want to race with others doing the same thing
; general
Good point fixed and pushed so that it is a fallback
; general
move down such as also
; design
move this down
; design
move down if using
; design
move down if using a
; design
Id move down The nodes to join at startup if
; design
Id move down the gracefulStopactorRef
; design
Capitalize the run and just
; general
Id move down no matter
; design
Id move down if off
; design
Id move down if off
; design
At least capitalize just since at the beginning of a sentence  And change the order of to and below
; general
will add docs
; general
ah forgot to check license but this is szeigers
; general
Id consider final def noMatchT T  throw NoMatchsince thats on an object it becomes a static method which there is limited type inference forSo in the Java code you can write else  return noMatch
; design
java code then missing
; general
this is junit right Then you can use    Test expectedExceptionclass
; general
This is too broad for my taste you cannot assert that the exception originated from a specific action this is a consequence of not having function literals sucks
; general
Ah well this is not actually Java code people are supposed to know that Akka is written in Scala  Will add one here though
; general
Pondered it shifted it around at the back of my head and I still lean towards making it explicit that a throw is happening here Ive added one sentence above WDYT
; general
What was the reason we couldnt use Typesafe Config
; general
So this is jus t way to make the configuration of the build and tests from Jenkins more manageable and readable We currently use properties to control a number of things in the build and this allows us to read them in from a file as well as from the command lineWe also use properties to communicate with the sbtmultijvm plugin if we dont want to pull in the config library there as well
; general
Great thanks for the clarification
; general
why not new InputStreamReadernew FileInputStreamfile UTF8
; general
not production quality but good enough for build I guess
; general
amazing that sysprops  actually update Systemproperties
; general
Yes sysprops is specialized to be a two way mutable mirror of Systemproperties
; general
wow just wow
; general
Yup I had to publish it before I could use it It also includes the cygwin fixes
; general
this cant be correct the test should verify that gracefulStop throws AskTimeoutException now you have changed it so that the test is ok if the Awaitresult times out 200 millisWasnt the failure because of to small margin 200 ms is not much
; general
Yes Patrik you are of course right I shouldnt trust my reviews today thanks a lot for catching this
; general
Patrik saves the day Ill fix
; general
Youre welcome sorry to not being able to keep up with your PR rate today
; general
Sorry for messing up the fix did you see the new PR with the fix 20
; general
Doing 2 lookups instead of one is pretty expensive
; general
Alternative is to allocate an instance of Option Btw the map is really small
; general
try serializerByIdentityserializerId catch  case  NoSuchElementException  null  match       case null  Failurenew NotSerializableExceptionsCannot find serializer with id serializerId The most probable reason is that the configuration entry akkaactorserializers is not in synch between the two systems      case some  TrysomefromBinarybytes clazzasInstanceOfT
; general
I have to admit that I didnt dare to write the above code
; general
null is a valid value in a Map so treating it equal to NoSuchElement covers both cases null value and absent value
; general
now deserialize can throw anything but NoSuchElementException which is not expected for a method returning Try Id recommend something along the lines of TryserializerByIdentityserializerIdtransformfromBinarybytes clazz ex  Failure
; design
It can throw NoSuchElementException since only the lookup is protected by the trycatch What is your point here I am a bit confused I think
; design
previously everything was wrapped in Try meaning that no NonFatal exceptions would ever be thrown from this method this is not the same anymore but the return type still suggests this behavior
; general
My first approach was to test that serializerId is actually in the map and depending on the result returning an appropriate Failed or Try This was rejected for performance reasons double lookup I dont like allocating an Option neither creating an unnecessary Try with transform Do you have another idea
; general
Also how realistic is serializerByIdentityserializerId throwing any other NonFatal exception than NoSuchElementException
; general
I prefer the code to be correct and readable first when we see that that is a performance problem well fix it but not before
; general
The solution is both simple and easy NonFatal t instead of matching against NoSuchElement then I suggest putting t as cause in the newly created exception
; design
in that case please make it a normal trycatch thing instead of this baroque tryTry mixture
; general
I prefer code to be the best possible tradeoff between performance and readability We are a library and people cannot make our code faster For enduser code I agree with Roland as the end user at any point in time can tweak their own code
; general
I understand Rolands view as well but I agree with you here Also making this a normal trycatch thing will break the API And all that for just adding an error message that makes more sense and was also reported by a userI am fine with any solution but we should arrive to a consensus
; design
scalaTry   val deserializer      try serializerByIdentityserializerId    catch       case e NoSuchElementException  throw new NotSerializableException e      deserializerfromBinarybytes clazz
; general
Ok that makes sense to me
; general
Looks great very nice suggestion rkuhn
; general
I think that its harder to read with a comment at the beginning of the line Could we keep the extra valAnd the test doesnt test the same thing 2000  399  2000 Is that intentional
; general
Same thing here with comment at beginning of line
; general
I disagree regarding the val imo its just pointless repetition    val foobarbaz  expr    foobarbaz must be awesomevs    foobarbaz    expr must be awesome
; general
Should we not have an Echo lying around somewhere
; general
didnt we like ActornoSender better
; general
ah no we didnt forget it
; general
Maybe be explicit about that offforwindows means on for all other platforms
; general
What would be the difference between off and offforwindows if it wasnt on for everyone else
; general
Yes I know that and you know that Im just thinking mainstream
; general
faith in humanity  1
; general
The normal behavior for an Akka actor is to drop the message it is currently processing if an exception occurs when processing it and then continue with the next message after it has been restarted
; design
It would be interesting with a Retry Directive
; general
Why the braces
; general
Why the braces
; general
what would that mean for the children of the failed actor or when the failure had been escalated
; design
Same thing as Restart
; general
form  msg if m  DIE context stop self
; general
I think this section could benefit from a small detour of atmostonce onceandonlyonce and atleastonce guarantees
; general
may also discuss bounded mailboxes
; general
I think we can leave facebook out of this
; general
I think the usecase for dead letters should be described before the explanation how one hooks into it
; general
I think it is important that we reiterate that the EventBus is not clustered so that deadLetters will be the ones that are known to be dead locally
; general
What does this mean The failed message is not available in the supervisor strategyDo you mean that all messages proxy through the parent
; general
I think doc demo code belongs to srctestscala or akkacontribdocscode
; general
Reading a sentence that starts with The normal behavior of an Akka actor is to drop a message just gives bad vibesI would like the first sentence to to be flipped around to something likeWhen an Akka actor is processing a message and and exception occurs the normal behavior is for the actor to drop that message and then continue with the next message after it has been restarted
; design
I agree But maybe we should flesh it out in The General Rules where we now only mention at most once
; general
if the receiving actor fails while processing the message or is already terminated
; design
Shouldnt we validate the maxtries value
; general
Why is 0 a special case here How does it differ from case n
; general
what does it mean if ack is called and tries  Marker
; general
Thanks Bjrn your version won on the leastconvoluted score
; general
hmm people can do that Id like to keep it deadobvious
; general
yes good one
; general
added a discussion point of the three terms
; general
hmm any native speakers with an opinion
; general
boundedness does not change ordering AFAICS
; general
There should be a warning like that which follows right Do you have a better suggestion for the title of that paragraph or shall the title just go
; general
changing to nonerror condition tests
; general
yes good one
; general
Is that not covered by the previous sentence in this paragraph
; general
hmm I liked how you can run this with sbt akkacontribrun will see whether that can be done otherwise
; general
yes we should
; general
I wanted to group 0 with Marker because they conceptually are similar last was ACKed explicitly or implicitly you are right that handling 0 there is not really needed logicwise
; design
it means that it would be a duplicate ack good point BTW if tries  0 it should not poll
; general
Im a bit uncertain about the word implementationwise more important is performance tradeoffs
; general
perhaps also add something about dont pay for what you dont need I mean atmostonce is cheapest and other things can be added on top when needed but not earlier
; design
I think it is worth repeating enqueue requests from different senders here to avoid misunderstanding
; general
idempotent receiver is the important thing and that can be achieved with discarding duplicates or having no sideeffects or sideeffects ends with the same result
; general
ok here it was
; general
you are of course right
; general
yes good one
; general
Native speaker here IMO will is better if the intent is really to indicate always Another suggestion would be to use the terminology given in RFC 2119 httpwwwietforgrfcrfc2119txt which in this case would mean using shall
; general
Sorry I was looking at the wrong word yeah for the may in line 82 Id leave it asis
; general
This should most definitely not be here AMQP should create actors in the system that the extension belongs to
; general
What kind of timeout is this and why isnt it confgurable
; general
Arrays are mutable Use something like a Seq
; general
Add return type
; general
Add return type
; general
So there is no constructor for Java API usage that allows the Map Im assuming Java would use juMap
; design
Might want to drop this approach and instead using the immutable builder approach ConsumerParametersessentialswithFoofoowithPigdogpigdog
; general
You shouldnt create all of these as toplevel actors Create an amqpactor that is toplevel and spawn the kids below that one
; general
This method is strange in this case since it does not verify that the connection actually belongs to the internal system which should be removed anyway Id suggest dropping this method altogether and just tell people to send a PoisonPill
; design
Uncool to do blocking here just return a FutureActorRef
; general
Same as above here
; general
also always have return types on your methods Trust me will save everyone involved a lot of headache and will add documentation
; general
Use Akka Serialization Extension for all serialization that will give you awesomeness for free and streamline things
; general
Id suggest removing all these hardcoded StringProducer and ProtobufProducer and whatnot since it both pollutes the namespace is hardcoded and doesnt really provide any value from my perspective When using Akka Serialization I dont even see the need for them Wdyt
; general
Is this method needed And why
; design
Drop this and use Akka Serialization
; general
Roses are red violets are blue arrays are mutable they go into the loo
; general
Dont you want Optionproperties here since its Java and they like to null
; general
Add return type
; general
over here as well
; general
whats the difference between message and body
; general
What are people going to do with all this info
; general
Why pull out the deliveryTAg then import envelope and then call getDeliveryTag again at line 57
; general
Not recommended in general see akkautilNonFatal
; general
private def acknowledgeDeliveryTagdeliveryTag Long remoteAcknowledgement Boolean Unit     forc  channel         cbasicAckdeliveryTag false        if remoteAcknowledgement deliveryHandler  AcknowledgeddeliveryTag
; design
use logwarningConsumer is rejecting delivery with tag   requeue  deliveryTag requeuesince the current code will create the message anyway even if warnings are not enabled
; general
Why log and rethrow
; general
That doesnt make any sense preRestart is called on the old instance and the old instance will be orphaned
; general
All children will be stopped when parent is stopped anyway
; general
fortag listenerTag ch  channel if chisOpen ch basicCancel tag
; general
All copyright notices need to be updated to the new ones
; general
A bit too magic for me whats it used for why isnt it pulled from the config
; general
Why blocking here
; general
newChannel foreach setupChannelInternal
; general
Also why can it reply with None
; general
Can it have multiple Channels
; general
use the logging formatting insteadloginfo got normal shutdown thistoString
; general
You might want selftoString though
; general
Id suggest using normal Restart logic crash yourself do restart in preRestart and postRestart reinventing wheels is so 2011
; general
forcp  channelParameters sdl  cpshutdownListener chgetConnectionaddShutdownListenersdl
; general
private def closeChannel Unit  channel  channelflatMap c   if cisOpen cclose  notifyCallbackStopped  loginfo channel closed self  None
; design
private def notifyCallbackmessage AMQPMessage Unit   forcp  channelParameters cb  cpchannelCallback if cbisTerminated cb  message
; design
You can drop this method and in your constructor doself  Start
; general
Id doval connectionFactory    val c  new ConnectionFactory  c setUsername username  c setPassword password  c setVirtualHost virtualHost  c
; general
Can such a scenario exist such that both connection and reconnectionFuture is Some  If not you might want to encode it as OptionEitherConnection Cancellable
; general
Can you connect when already connected
; general
Kill will simply crash the actor and make it eligible for restart is that the desired behavior or is context stop self whats desired
; design
val reply  connection match   case Somec  SomeconncreateChannel  case None     logwarning    Nonesender  reply
; general
Why this Exception
; general
case cr ConsumerRequest       val reply  if connectionisDefined SomenewConsumercrconsumerParameters                     else                         logwarningUnable to create new consumer  no connection                        None                           sender  reply
; general
Using smae approach as above you can scrap half the LoC
; general
Not safe use akkautilNonFatal
; general
This should most probably go into a finally
; general
Children are automatically stopped when parent is stopped
; general
dont use vars in guards
; general
Use TestLatch its an Awaitable so you can use Await
; general
I definitely agree  I almost took them out but opted for as close to a pure port as possible while I was getting familiar  Ill start pruning this stuff out
; general
HI ViktorRegarding this comment Im trying to determine which timeout value from the config would be most appropriate  Any guidance would be appreciated  Is there a timeout config param that is meant to control how long to wait for a response to an ask  ThanksJohnOn Feb 23 2012 at 211 AM viktorklang wrote abstract privateamqp class FaultTolerantChannelActor   exchangeParameters OptionExchangeParameters channelParameters OptionChannelParameters extends Actor     protectedamqp var channel OptionChannel  None    implicit val timeout  Timeout5 seconds  A bit too magic for me whats it used for why isnt it pulled from the config
; design
removed  this is now implemented as a ConsumerRequest message to the connection actor
; general
removed this is now implemented as a ProducerRequest message to the connection actor
; general
removed  Using connection  PoisonPill
; general
fixed  There is now an AMQPActor that accepts a ConnectionRequest message
; general
Removed  Bring your own system and fire up an AMQPActor
; general
removed  now you can either PoisonPill your AMQPActor or shutdown you system
; general
If you make the AMQP an Akka Extension just use the same pattern as for the otehr extensions add your own config option in your referenceconf for the akkaamqp module
; general
Twas overkill  Stripped out all the unnecessary info  message was a string representation of all the other params  I left message and removed everything else  It might have been structured that way to allow the sender to reconstruct and resubmit the message but I suspect theres a better way to do that than pulling it all out of an exception  Will wait to see if anyone screams
; general
Removed all but message  It might have been structured that way to allow the sender to reconstruct and resubmit the message but I suspect theres a better way to do that than pulling it all out of an exception Will wait to see if anyone screams
; general
I dont know  Cleaned up
; general
dont know  fixed
; general
added extension setting for akkaamqptimeout
; general
changed tocontextparent  ChannelRequest map asInstanceOfChannel map setupChannelInternalThats pretty slick
; general
It appears not  Im not completely sure whats going on inside rabbit but this case gets hit during various recovery scenarios  Basically the method checks to see if the channel actor already has a channel defined and if so it closes the one sent in the message if it is open  Im not sure I want to tamper with this since it appears to work  I would like to get a better understanding of it at some point
; design
Cleaned up  I was a little confused about whether to do self  Kill or self  Failedcause but the results appeared the same so I went with Kill
; general
for some reason that didnt work out so well
; general
nice  updated
; general
done  This was fun  I have used both options and eithers but never together  Is there a nicer way to express thisif connectionStatusisEmpty  connectionStatusgetlefttoOptionmapisOpengetOrElsefalse
; general
no  this was handled by a condition in connect but I moved the condition to the case for clarity
; general
fixed  not sending back options any more  either you get the connection or you get a timeout when you try to get it
; general
fixed now uses akkaamqptimeout
; general
What type do I get back here
; general
The example should possibly avoid blocking as users generally mimic the documentation
; general
Way too much internal blocking here Use Future Composition insteadInstead of timing out on failure I suggest replying with an akkaactorStatusFailure if akkautilNonFatal so the client can react to errors
; design
if message  DisconnectedgetInstance
; general
Use Akkas Logging facility instead of SYSOUT
; general
This should most definitely go into testresources and not mainresources
; general
Why contextsystemactorOf That creates toplevel actors all over the placeShould most definitely be contextactorOf
; general
Needs explicit return type and you can use simply this instead of Settings
; general
Dont you want default broker etc here
; general
still needs fixing
; general
Add explicit return types for all of these
; general
The defaults should go into the configuration file we have no defaults in code
; general
Should be Option and not Some
; general
Should be Option and not Some
; general
Should be Option and not SomeSame goes for all Java constructors using Some
; general
case SomeLeftl  sender  lcreateChannelcase SomeRight  what do you do when its a Cancellablecase None
; general
connectionStatus match       case None                        connect      case SomeLeftr if risOpen   connect      case   all good
; general
Use pattern matching like the above examples
; general
Avoid capturing self hereadd val replyTo  selfand then close over replyTo instead
; general
you most likely dont want this since this will be executed every time just pass in addresses
; general
Wouldnt it be better to store an OptionPromiseConnection and then register all inbound channel requests as callbacks so that when the Promise gets completed all waiting guys can get a new channel
; general
fors  connectionStatus c  sright ccancel
; general
Wayyy too much blocking in this demo
; general
Dont catch anything the test will fail if theres an exception thrown
; general
use explicit charset
; general
Dont put code in docs look at the other Akka docs for how to include compiledtested code into the docs
; general
Multiverse should definitely not be added we use ScalaSTM
; general
This shouldnt go in here use your sbtpluginsbuildsbt for that
; general
I still need to go through all of the Java stuff  I think thats on the agenda for todaytomorrowOn Feb 27 2012 at 232 AM viktorklang wrote  import javautilconcurrentCountDownLatch import javautilconcurrentTimeUnit  SuppressWarningsunchecked public class ExampleSessionJava       Timeout timeout  new TimeoutDurationparse2 seconds     ActorSystem system  ActorSystemcreateExampleSessionJava  ConfigFactoryloadgetConfigexample      final SettingsImpl settings  new SettingsImplsystemsettingsconfig     Timeout timeout  new TimeoutsettingsTimeout      ActorRef amqp  systemactorOfnew PropsAMQPActorclass      defaults to amqpguestguestlocalhost5672     FutureObject future  Patternsaskamqp new ConnectionRequestnew ConnectionParameters timeout  What type do I get back here    Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull350filesr490574
; design
This example class is cleaned up and has been moved to the test package  Run with testrunmain
; design
Lots of blocking avoided though currently when we create a producer or consumer there is no guarantee that the underlying channel has been started  We return the actor and it is up to the caller to verify that the channel is up by using a channel callback to monitor the state  So in the examples and tests we potentially block before sending  a message from the producer  Im open to other alternatives but the only one that comes to mind is blocking within the AMQP extension when we make the request for a new consumerproducer  I dont think thats a great idea since these things are supposed to be fault tolerant and it seems reasonable to get one that will eventually start when an underlying fault has been resolved
; design
Lots of blocking avoided though currently when we create a producer or consumer there is no guarantee that the underlying channel has been started We return the actor and it is up to the caller to verify that the channel is up by using a channel callback to monitor the state So in the examples and tests we potentially block before sending a message from the producer Im open to other alternatives but the only one that comes to mind is blocking within the AMQP extension when we make the request for a new consumerproducer I dont think thats a great idea since these things are supposed to be fault tolerant and it seems reasonable to get one that will eventually start when an underlying fault has been resolved
; design
I dont think so  There are already native default values in the rabbitmq client code  See ConnectionFactory httpwwwrabbitmqcomreleasesrabbitmqjavaclientv271rabbitmqjavaclientjavadoc271  The default broker then would be localhost  Id rather let the user of the extension define their own app params if they want to have those type of defaults  Sound reasonable or am I crazy
; general
fixed all tests consolidated to AmqpIntegrationTest
; general
I think this is pretty cleaned up now  What do you think  Still doing some blocking but basically to ensure the channel is started
; general
fixed all tests consolidated to AmqpIntegrationTest
; general
fixed all tests consolidated to AmqpIntegrationTest
; general
fixed all tests consolidated to AmqpIntegrationTest
; general
fixed all tests consolidated to AmqpIntegrationTest
; general
fixed all tests consolidated to AmqpIntegrationTest
; general
As a sidenote why the Systemexit0
; general
Saw your similar comment below  Seems like you would prefer having the defaults in the config  Ill add it to the list for next commit
; general
Will do this next commit
; general
I think I fixed this and other one way sends to self  Could you explain why this is important
; general
Because closing over seal actually means close over this thisself and since this is the Actor that instance couldve been replaced restarted between now and the shutdownlistener triggering
; design
if channelParametersisDefined chbasicQoschannelParametersgetprefetchSizeShorter and doesnt create an anon inner class
; general
ummm why is replyTo  self and then only used to do replyTo  Failurecausethat essentially means self  Failurecause which will not restart self if you want to restart self just dont bother catching the exception at all
; general
shouldnt this be logged
; general
delegate to superpostStop or not
; general
I dont understand the replyTo pattern
; general
I think what you mean to do was to move val replyTo  before the shutdown listener
; design
Whats the purpose of the code here above just for my understanding of the use case for this logic
; general
dont understand the above why not just sender  self
; general
why is this here
; general
I recommendif connectionisEmpty connect
; general
well technically its not terminating its throwing an exception which will be handled by the supervisor
; general
instead of match just useif connectionisDefined  else
; general
whyjust use consumertellStart sender
; general
whyjust use consumertellStart sender
; general
replyTo must be outside of the closure otherwise it has zero effect
; general
Youre swallowing the exception
; general
youre referring to sender inside a Future callback big nono
; general
Ill clean all of these replyTo things up  I was confused about an earlier comment about referring to self inside a closure  I think I have a better understanding now well see
; general
logged but I just realized why I was ignoring the exception  when we get here because the connection actor was stopped it was spitting out a connection clean shutdown exception which we dont really care about  I put in some logic to ignore just that scenario and log anything else
; design
yes fixed  I have a better understanding for the reason behind this now  Thanks
; general
request a channel from the connection actor then handle the setup of the channel by sending the returned channel to self then depending on the result send back the ActorRef or the failure  It ensures that the channel is started and ready to process messages when the ActorRef is handed back to the sender  That minimizes the need to have a channel callback listener in the client though you may still want to have one in case the channel bounces later
; design
leftovers  fixed
; general
I reworded the message to be more meaningful I hope
; general
fixed in new branch
; general
fixed I dont think this was even restarting the channel as advertised  Removed notification of sender  They can create their own return handler if they want notification set the channel to None and then send a failure message to reestablish a channel
; general
wanted the response back from Start to ensure that the channel has been set up and is ready to accept messages  Avoids the need for a channel listener at least initially   Using tell in my tests I would get the actor back then block waiting for the channel listener Started notification to fire or risk the chance of sending a message to the actor before the channel was available  I would really like to some ideas on how to handle this better I can probably do fire and forget on the producer side and leverage then do the basicPublish when the future is completed  The consumer side seems like a different story since fireforget would result in an ActorRef but the consumer not ready to receive messages yet since the channel may still be in the process of being constructed  Im not sure how applying a future channel will help when its purpose is to consume incoming messages  That puts me back at using a channel callback to let the client know the state of the channel which isnt a bad thing   Im very interested in your thoughts
; design
it is this barrier that fixes the problem
; general
yep Ive run the test locally hundreds and hundreds of times without being able to reproduce it
; general
no need for volatile here there is only one thread
; general
No thats not really true target is captured by the props    proxy  systemactorOfPropsnew ReliableProxytarget 100millis proxy
; general
ah good point I would make it a lazy val instead and use actorFor
; general
Yes thats a good suggestion which I used initially but then I thought that the code became brittle avoiding to force evaluation of target until its supposed to I can switch it back to lazy val if theres a consensus on that
; general
1 the volatile var jumps into your face in an appropriate way should be obvious enough
; general
Agreed though it would have been a smaller fix without volatile vars to just put the barrier into the original code The sendNexpectN is an improvement regardless
; general
hmm maybe add something like repliesvalues count    0  must be  connectionCount  2
; general
Increasing the count of replies helps too
; general
ok will do
; general
Is this userlevel API
; general
Are you expecting to create many of these In that case I recommendstrongly suggest that you create an actor that has the ActivationTracers beneath it since otehrwise it will create a very shallow but broad tree
; design
use  for Unit
; general
CleanIs this userlevel API
; general
Not recommended Avoid creating tons of toplevel actors just as you wouldnt create tens of thousands of toplevel files on your harddrive
; general
Might it make sense to be a real URI
; general
Add return type
; general
You also need to do thisoverride def getsystem ActorSystem CamelExtension  supergetsystem to get the Java API return type will be barfed for Java otherwise
; design
Is this idempotent Since it will be called every time the Actor is Restarted
; design
Should this really be code configId suggest pulling the config from the applicaiton config falling back to akkacamels referenceconf
; general
Wouldnt it be possible to drop blocking and just check if replyTimeout is  0
; general
Should be a FIXME
; general
Java doesnt respect Scala access control so add commentscaladoc on all such and write that they are for internal use only
; design
Why is this trait needed Seems like namespace pollution at a first glance
; design
This does not delegate to super is this intentional
; general
Shouldnt this be CamelMessages s otherwise I dont think anyone will be able to distinguish it from any other Message
; general
use addHeaders instead of plus since plus is not setaddAlso method does not mention how it handles duplicates
; general
Needs careful documentation since it is a mutable class with nonthreadsafe members Also RichMessage doesnt really say anythingWhat is its usecase
; design
Is this to be done every time the Actor is Restarted Ie is registerProducer idempotent
; design
doneSync isnt used intentional
; general
I would probably write this as    def donedoneSync Boolean Unit  producertell         if exchangeisFailed FailureResultexchangetoFailureMessagecmsgheadersheadersToCopy        else MessageResultexchangetoResponseMessagecmsgheadersheadersToCopy         originalSender
; general
Is this userlevel API
; general
Should these survive a Restart
; general
No delegation to super needed
; general
All of these needs docs
; general
That doesnt sound good
; general
Ill hold off commenting on this class until I know if it is residue or will be replaced or how it is supposed to be used
; general
Since this class requires an Activation and Activation already has a def system ActorSystem etc is this really needed
; design
I didnt think CamelContext was threadsafe
; general
also why match on the ref if you dont use itcase msg EndpointDeActivated
; general
remove pointless exercise in reinventing negation
; general
Whats the logic here
; general
Cant use URI and get the scheme from that
; general
Are we expecting anything but one Camel
; general
Also how is this class used Is it threadsafe
; design
Why is this a ConcurrentHashMap
; general
Why is this registered on top level
; general
Not recommended Have a look at the uses of akkautilNonFatal
; general
do a match instead
; general
Do you want to publish prior to register
; general
Why is this Unsupported
; general
Why does this have vars
; general
Is this userlevel API
; general
add return type
; general
Is this userlevel API
; general
Should be documented as blocking
; general
Why not just use Duration
; general
Not big on the rich thing Needs a better name
; general
Is this thread safe
; general
Why is a method needed here
; design
Instead of having to override methods Id prefer something likeoverride def consumerConfig  ConsumerConfigactivationTimeout  10 seconds endpoint  filedatainputCamelConsumerThat means that ConsumerConfig can be evolved in the future to add moer fields without risking method name clashes in the actor
; general
all of these onhold  things should be removed
; general
Use TestLatch instead
; general
why semicolon just have 2 lines
; general
Thinking about it Whats the point of awaitActivation when you can just do Awaitreadycamelthemethodthatreturnsthefutureactorref timeout
; general
no need for protected
; general
You can dointerceptCamelExecutionException   getCausegetClass must be
; general
use TestLatch everywhere you use CountDownLatch as TestLatch is an Awaitable
; general
This can be too small for a slow box write the tests so that the timeouts wont be giving me a headache when we run them on a slow integration test box
; general
Do you verify that this exception is indeed thrown
; general
case expected  All good
; general
I see no test for concurrent registrations
; general
yes it is part of the Camel trait
; general
There is only one per ActorSystem ActorSystem to CamelCamelExtension is always one to one
; general
It is part of an implicit the userlevel API is onRouteDefinition on the Consumer which allows you to customize the Camel route for the consumer at definition httpakkaiodocsakkamodules11modulescamelhtmlinterceptingrouteconstruction and the configuration of routes uses the fromto so it uses it but you dont see itso you can do fromurisomecamelendpointtomyActorRef
; design
removed def system from Camel trait it is not needed in the end for the user you can always get to the system using the normal routes Added a comment that Camel is shutdown when the associated ActorSystem that uses a Camel extension is shut down
; design
done override def getsystem ActorSystem Camel  supergetsystem
; general
done Should akkacamelMessage be renamed to akkacamelCamelMessage to be consistent
; general
protected because you might want to access it from the Producer Actor yes it is idempotent
; design
intentional we always send back async irrespective of doneSync in camel processor
; general
no its internal
; general
wait addHeaders suggests modification in place and mutability of the messageIve intentionally chosen plus as for  As far as I am concerned plusHeaders clearly states that we are not modifying current object but creating newPlease revert unless vetoed by the BOSS
; design
Clean as of you like it or clean this mess up you moron
; general
this is left by accident  there is no longer blocking mode
; general
its used for tests only  lets move it there and mark private
; design
I dont mind getting rid of it
; general
yeah if we want to avoid confusing users toString should be consistent with the class name
; design
This class needs more love  if I only had time
; design
BIG NOIt is not mutable At least it was not intended to be so if I miss something tell me otherwise this class is immutable
; design
read the package names No but seriously I was learning package visibility rules for scala when I moved it there and I didnt realise hierarchies apply so we could do privatecamel
; design
no need  it is protected by trycatchall below  or maybe I am naive and we need to review it
; design
why  its not meant to be extended
; general
well this is a legacy code I had no time to beautify so I am leaving this remark for those who will come after us It is internal so users wont see it  resources versus time battle
; design
please comment in the code or change it  it works  its just not pretty
; general
yeah but its a driveway couplinghttpwwwtheregistercouk20080418emergentdesignpartthreeprinthtml ConsumerRegistry doesnt need to know that Activation actually provides it It wants a system by itself
; general
In this case one could argue that the only thing thats needed is withHeaders and then you can domsgwithHeadersmsgheaders  newHeadersBecause otherwise youll have to add minusHeaders etc etc
; design
I was waiting for this  You win
; general
error handling made simplerDid I break any of the actors principles Teach me
; general
legacy  ported as is
; general
It is not TS but it wasnt intended to be as it is used in the extension only which I am assuming is TS
; general
Intentional  when you want to execute multiple dangerous statements at all cost
; design
Theres nothing Akka can do to make arbitrary Extensions TS The only thing Akka can guarantee is that therell be at most one instance created of the Extension Youll need to make sure that the Extension is TS
; general
I guess this would be for the case fromactortosomewhere elsebut I think it is covered by the ProducerRay comments
; general
It has to  its a camel bean
; general
no see my previous comment about visability
; general
I swear I changed it to use Durationparse  dunno what happened
; general
agreed  any ideas
; general
to support poor java user Scala users get implicit conversion for free
; general
I did a spike and tried to do this  it created horrible experience for java users
; general
tell me about it Any ideas how to rewrite this test
; general
No need  as header is set by camel only if previous call failed
; general
No WordSpec here
; general
If we follow what scala collections are doing I am happy to have minusHeadersWhat is wrong with itOn 25 Feb 2012 at 1020 viktorklang wrote       def setBodyAsTimplicit m ManifestT Message  setBodyAsmerasureasInstanceOfClassT   def plusHeadersAheaders MapString A Message  copythisbody thisheaders  headers  In this case one could argue that the only thing thats needed is withHeaders and then you can do  msgwithHeadersmsgheaders  newHeaders  Because otherwise youll have to add minusHeaders etc etc    Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull344filesr488547
; design
What about systemregisterOnTerminantion  Is this TSIf so combined with above this is good enough guarantee
; general
What No IF DefaultCamel isnt TS and is called by multiple Actors at the same time then its not TS At all
; general
Use akkautilNonFatal New decree
; general
then it should be removed
; general
But its not plus or minus thats my issue with itPlus 3  3  6Map concat scala Mapfoo  bar  Mapfoo  baz  Mapfoo  bazSo it shouldnt be called plus because it doesnt have plus semantics
; general
Isnt CamelContext mutable
; general
Cool but it should be commented since it might trip someone up
; general
Then it should be final
; general
Open a ticket
; general
So it only needs some methods from Activation Whats so special about system
; general
Prolong the time
; general
Only startstop isnt TS so thats ok Piotr GabryanczykOn 25 Feb 2012 at 1335 viktorklangreplyreplygithubcom wrote import orgapachecamelCamelContext import orgapachecamelimplDefaultCamelContext import akkautilDuration import scalaPredef import akkaeventLogging import akkacamelCamel     Creates an instance of the Camel subsystem     param system is used to create internal actors needed by camel instance   Camel doesnt maintain the lifecycle of this actor system The actor system has to be shut down by the user   In the typical scenario when camel is used with akka extension it is natural that camel reuses the actor system it extends   Also by not creating extra internal actor system we are conserving resources   privatecamel class DefaultCamelval system ActorSystem extends Camel   What No IF DefaultCamel isnt TS and is called by multiple Actors at the same time then its not TS At all    Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull344filesr488621
; design
Thats a pretty funny design decision but if thats true then youre fine
; design
when I think about it even if multiple threads call startstop it will be fine so in a sense it is TS even though wasnt designed to beThis methods are only used by CamelExtension in controlled environment so we are safe here I wanted to avoid adding started guard as the assumption was this class is going to be used by camel extension only
; design
Created a ticket
; general
it is only used in test moved it there
; general
Ill pick it up
; general
it is Ill think up something new there is a strange smell here
; general
done private and final
; design
Zooming outDefaultCamel has the same lifetime as the actor system it is associated with There are a couple of internal actors used in akkacamel mainly idempotentConsumerRegistry activationTracker producerWatcher all started by start of DefaultCamel lifetime but there is no overall supervisor for them All of these are mainly for registerunregister state and notifications of ready state of registerunregisterconsumerRegistry and activationTracker have some state producerWatcher has no state so survives restart automatically but ProducerRegistry has state which has lifetime of system and defaultcamel  DefaultCamel shuts down on system termination but does not stop the internal actors which is not correct I think they should be stopped will add this Since this is all so similar and now in quite a thought through state Im going to take a crack at refactoring it to one generic solutionIF for some reason outside of akkacamel the internal actors are restarted and camel and system keep on going we lose information about registration of producers and consumers and activation status so listeners will timeout and you could get double registrations I am assuming that now or in the future akka can restart anything without warning I have a dream where I suspend my akka cluster serialize it and switch it to another cloud provider and flip the switch  but thats for another dayIf that is something that needs to be fixed viktorklang how do you recover state across prepostStartstop from within an actor
; design
it is threadsafe in implementation of DefaultCamelContext when it comes to registration of endpoints and componentsI count 39 synchronized statements in that codehttpwwwjarvanacomjarvanavieworgapachecamelcamelcore290camelcore290sourcesjarorgapachecamelimplDefaultCamelContextjavaformatokThat could change of course it is not documented on the CamelContext interface but the intent clearly seems for it to be threadsafe
; design
its there 1677
; general
Because it needs to be safe but will change this in refactor of register unregister activation for both producers and consumers
; general
will change that in refactor of registerunregisteractivation will add a top level supervisor per Camel and put everything underneath that one
; general
moved it a line down
; general
changed line to case NonFatale  logwarningSafe operation failed Swallowing exception  eIs that what you meant
; general
You have 2 options1 Store it somewhere safe and then read it back in on postRestart think EventSourcing or similar2 Delegate all risky operations to children
; general
The Actor Endpoint  part of the  Camel Actor Component plugin right now only supports receiving messages from Camel The createProducer not to be confused with producer actor is used to send messages into the endpoint The ActorComponent is only there to send to actors registered through an actor endpoint URI So you can use an actor as an endpoint to send to in a camel route so fromsomeuri to actoruri but not the other way aroundsupporting createConsumer would mean that you could consume messages from an Actor endpoint in a route which I think doesnt make sense because an actor does not necessarily send out messages and it is not fixed to where It can always receive messages of courseProducer Actors can be used for sending stuff to some other uri component type registered in Camel so yes that is covered in a sense
; design
If anyone has ideas to make this make sense or if I missed something Im interestedkrasserm
; general
This is all nice but Camel wont survive this serializedeserialize events especially if users add there own custom routesIn my opinion doing this would be unnecessary complexityI think Viktor is picky on this point by principle In this context it doesnt make sense to preserve the state Also if the actor system dies everything needs to be reregistered
; design
why this complicated dance why not just implicit def camel
; general
Since the message itself is untyped Any this method is giving a false sense of typesafety It should either be Any  Any or you need to attach a type parameter to CamelMessage which can get out of hand quickly
; general
This type parameter does not help anything why not take a MapString Any
; general
Ah I see no covariance in Javaland Carry on
; general
same comment as in Consumer
; general
I hope Camel cleans this up if nobody ever replies
; general
Why not make this an FSM This gives you onTransition stuff external observability if you want a rolling event log
; general
youre leaking registrators since you didnt call superpreRestart
; general
why invent this special thing looks baroque  and it does not fundamentally improve upon try  catch finally
; general
try templatestart catch  case NonFatale  contextstop throw e This has the advantage of not having to look up which exceptions are caught and what else happens
; general
Should some of this not go into ScalaDoc for this method andor class
; general
I assume that you have thoroughly researched that modifying the exchange from some random other thread is okay right
; general
ouch why allocate an object in a default argument
; design
dont use Any in Javafacing signatures Paul warned that there is pain lurking on that path
; general
Thanks for the review Ronald Ill pick up your comments tomorrow morning
; general
Youre welcome Im still called Roland though
; general
haha sorry about that maybe early signs of dyslexia
; general
done I have also removed the Try object
; general
private made it privatecamel added note for internal use
; design
True good catch Did think about it when I first saw the code to mention but thought FSM would mean more dependencies but now I see it is  in akkaactor
; general
this is only called from within the processor which is safe
; general
Changed to AnyRef
; general
added a separate ticket for this 1923
; general
What do you mean with this  The callback the exchange at timeout Looking at the camelk code if the exchange is transacted the callback is always called Otherwise the processor implementation is responsible for calling the callback I cant immediately find an issue
; design
on hold removed
; general
getCamelContext is thread safe
; general
I removed the rich stuff java users need to pass in a CamelContext to the methods of CamelMessage that need it Scala uses an implicit CamelContext please review in next pull request
; general
Added some text on the method
; general
created a separate ticket 1924
; general
Ive removed the comment the code works fine nothing wrong with it in my opinion
; general
code is fine
; general
added ticket 1925
; general
created ticket 1926
; general
no problem in corresponding java file
; general
no no problem there
; general
ah because there is no old io for java
; general
yes thats the way
; general
I think Id understand this better if it was written likescala    val newMember  Membernode Joining    if localUnreachable contains newMember failureDetectorremovenode    val newMembers  localMembers  newMember
; general
not needed use roles instead it is in MultiNodeSpec
; design
with ImplicitSender with BeforeAndAfter not used remove
; general
you can use roles instead of addresses here
; general
then this will be handled by implicit conversion from RoleName to Address
; general
privatetestkit def roles
; general
and this written as    clusterlatestGossipoverviewunreachablemapaddress must beotherstoSet map address
; general
use addressvictim instead or rely on the implicit conversion
; general
cluster down victim
; general
I think you look at the wrong place L151 in MultiNodeSpec          All registered roles          def roles SeqRoleName  roles
; general
oh you meant roles I thought you meant roles
; general
Yes I forgot that you had added that you had added that after I wrote this test
; general
Yes I see what you mean Its kind of contrived I wanted to skip doing the same work twice but I probably ended up iterating through the collections three times insteadIs this any betterscala remove the node from the unreachable set in case it is a DOWN node that is rejoining clusterval newUnreachableMembers rejoiningMember  localUnreachable partition  address  node val newOverview  localGossipoverview copy unreachable  newUnreachableMembers remove the node from the failure detector if it is a DOWN node that is rejoining clusterif rejoiningMemberisEmpty failureDetectorremovenode
; general
thats nice perhaps change order and the negation    val rejoiningMember newUnreachableMembers  localUnreachable partition  address  node isEmpty  nonEmpty
; general
Explain why you wipe the state in the comment
; general
good catch indeed
; general
No you are both wrong it is roles
; general
This is nice
; general
Cool some BSR to give RelativeActorPath some Scaladoc
; general
ok for 22 it might be possible to use def applyanchor ActorRef elements immutableIterableString ActorSelection
; general
Im not sure I follow can you illustrate with a test caseshouldnt ActorSelectionuserfoobar have rootGuardian as anchorperhaps this case is not  but then what about akkaMySysuserfoobar
; general
RelativeActorPath means relative URI where usera is an example not path relative to some actor hence this patch should do exactly what you say and what the ticket saysIll add doc to RelativeActorPath to make this more clear
; design
yeah I always mix that up relative for me is something that not starts with  but you are of course right
; general
this is effectively a minimized backport 22 does what you say
; general
Magic value is magical
; general
Isnt it cheaper to test version prior to set membership
; general
Im not sure about that equals of version is comparing a map of VectorClocks
; general
So this is only used temporarily Its only for the testing right
; general
Good point thanks
; general
I needed the counter for stats in LargeClusterSpec Can probably be removed when we start microoptimize
; design
well it has at least a name gossipToDifferentViewProbability
; general
How is this tuned Do we have empiric evidence that this is optimal Should it be configurable
; general
and I just wanted it be in symmetry with the other probability we have gossipToDeputyProbablity
; general
Yeah but is it 08 or 80 or whathaveyou D
; general
I doubt any user will need to tune that Its only a way to say that we should sometimes gossip to any random node and most of the time to nodes with different view old or newer version I can of course move it to config if that is what we prefer
; design
08  80 in this case we use randomnextDouble
; general
If the actual percentage value has no practical impact on the gossiping then leave it but I assume this is not true If it has impact then I think it should be configurable different clusters have different needs better to be overly tunable
; general
fixed moved the probability to config
; general
Is it always 5 seconds
; general
Why is the implicit val needed Also shadowing the parameter system should be avoided
; design
Of course not Silly me To fast cutnpaste
; general
Its needed for dilated Its only inside this block for that exact reason
; design
it might be easier to pass this argument explicitly instead of implicitly
; general
you might want to name the system parameter something else to make it clear that is not the same as system in AkkaSpec
; general
no actorSystemResource here
; general
This is part of the docs and the AkkaJUnitActorSystemResource is internal to akka
; design
ok I see that explains my questions
; general
Remove this sentence it is repeated belowOne CamelExtension is only loaded once for every one ActorSystem which makes it safe to call the CamelExtension at any point in your code to get to the  110Apache Camel objects associated with it
; general
shutdown and shut down in the same sentence
; general
What does this mean in practice Or rather what is intended to be communicated with it
; general
Does Akka create producer actors
; general
Is it wise to link to trunk
; general
When I read Acknowledgements I expected a list of namesPerhaps something like Delivery acknowledgements
; general
Why the line break
; general
Should we revisit this URI pattern to harmonize on actor identifiers insteadakkasystemhostportasdasd
; design
Im all for it That was originally something I asked for but at that time someone cant remember who or why was opposed to itIt is far more universal if we use the standard akka actor path syntax Dont know how users are going to use it but one less translation would be nice The only thing is the options of course which is the camel way of passing in options but the options we actually support autoAck and replyTimeout are not really something I think the user would set on the path So we could change it to just be the actual actor path in akka syntax or the actor path in akka syntax with the options at the end which is less compatible what do you think
; design
If we make the change in an isolated commit then its easy to revert it iftheres any problemsCheers
; general
added a ticket 2326 so we can do an isolated commit later
; general
AddedYou can access the CamelExtension inside a Producer or a Consumer using the camel definition or get straight at the CamelContext using the camelContext definition
; general
Akka creates all actors Dont you know that PThe actors are created like any other so maybe the wording is a bit confusing I have changed it toActors are created and started asynchronously When a Consumer actor is created the Consumer is published at its Camel endpoint more precisely the route is added to the CamelContext from the Endpoint to the actorWhen a Producer actor is created a SendProcessor and Endpoint are created so that the Producer can send messages to it
; design
probably not Ill link to version 280 since that is now the dependency in akka BTW Camel 2100 just came out 3rd of july which I think has breaking changes Ill add a ticket for upgrade
; general
Opened a week ago httpwwwassemblacomspacesakkatickets2322
; general
Ah ok Ive added a commit to this pull request based on your review you can merge it I think
; general
Alright Tackling Java documentation now
; general
Yep Sent from my iPhoneOn Jul 12 2012 at 205 PM Viktor Klang replyreplygithubcom wrote   includecode codedocscamelIntroductionscalaCamelActivation  The above code shows that you can get a Future to the activation of the route from the endpoint to the actor or you can wait in a blocking fashion on the activation of the route An ActivationTimeoutException is thrown if the endpoint could not be activated within the specified timeout Deactivation works in a similar fashion   includecode codedocscamelIntroductionscalaCamelDeactivation  Deactivation of a Consumer or a Producer actor happens when the actor is terminated For a Consumer the route to the actor is stopped For a Producer the SendProcessor is stopped A DeActivationTimeoutException is thrown if the associated camel objects could not be deactivated within the specified timeout   Camel httpgithubcomakkaakkablobmasterakkacamelsrcmainscalaakkacamelCamelscala  CamelContext httpssvnapacheorgreposasfcameltrunkcamelcoresrcmainjavaorgapachecamelCamelContextjava  ProducerTemplate httpssvnapacheorgreposasfcameltrunkcamelcoresrcmainjavaorgapachecamelProducerTemplatejava  SendProcessor httpssvnapacheorgreposasfcameltrunkcamelcoresrcmainjavaorgapachecamelprocessorSendProcessorjava  Endpoint httpssvnapacheorgreposasfcameltrunkcamelcoresrcmainjavaorgapachecamelEndpointjava  Alright Tackling Java documentation now   Reply to this email directly or view it on GitHub httpsgithubcomakkaakkapull562filesr1148983
; design
Why this level of indirection I can only see it used once
; general
well I just wanted to document that the AskTimeoutException is related to the join procedure
; general
Im not sure I understand what i the selection refers to multiple actors
; general
doesnt cut it you missed the toString calls
; general
Looked too expensive
; general
An equals that allocates a lot of garbage is a baaad equals
; general
Is the underlying assumption that toString will always be cheap for the implementations
; general
akkautil would be a much better place for Murmur just sayin
; general
no the assumption is that toString is the only way to structurally compare two Pattern instances am I missing something
; general
Here the elements are String or Pattern so toString is cheapIts to bad that Pattern doesnt implements equals
; design
target is the anchor of the selection you get the first reply as discussed on the ticket
; general
cant we change this Array to immutableIndexedSeq  this bug is just another sign that the small performance advantage of array when parsing the original string is not worth itIt would have been a bug anyway but only for wildcard selections
; general
I agree with the sentiment but since Pattern does not play nice wed have to keep the same comparison dance which Im currently tailrecing meaning that Array is still the thing with least overhead
; general
please verify the correlationId also which in this case is the actual selection
; general
you need to override toString since this is used in ActorSelectiontoString
; general
ah crap thanks
; general
this TODO can be removed now
; general
indicates that a test is needed
; general
can this be extracted to a method
; general
interestingly the TODO never was covered by the ticket it referenced
; general
yes it can
; general
byteSerializertoBinaryba must be theSameInstanceAs ba
; general
those two are not equvivalent but I would say ClassforName is correct for our usage but I think bantonsson should confirmhttpstackoverflowcomquestions8100376classfornamevsclassloaderloadclasswhichtousefordynamicloadinghttpblogbjhargravecom200707whydoclassfornameandhtml
; general
Yes the change will force early resolution of the class which tries to ensure that the class is well behaved and initialization by running the clinitI assume that the idea is that the class will be used just after calling this method which will trigger those things anyway so we might as well do it here
; design
wow that one is ugly but Ill change
; general
I can turn off the initialization I needed to change to forName otherwise B does not resolve loadClass failed
; design
Doesnt work error UsersviktorklangDocumentsworkspaceakkaakkaakkaactortestssrctestscalaakkaserializationSerializeSpecscala189 overloaded method value must with alternativeserror   notWord SerializeSpecthisNotWordSerializeSpecthisResultOfNotWordForArrayByte anderror   haveWord SerializeSpecthisHaveWordSerializeSpecthisResultOfHaveWordForSeqByte anderror   rightMatcher orgscalatestmatchersMatcherArrayByteUniterror  cannot be applied to SerializeSpecthisBeWorderror       byteSerializertoBinaryba must be theSameInstanceAs ba
; general
ok because of Array keep it as it is np
; general
I 1uped it    for a  SeqfoogetBytesUTF8 null ArrayByte ArrayByte       byteSerializerfromBinarybyteSerializertoBinarya must be theSameInstanceAs a
; general
this looks unnaturalunorthodoxId prefer to reuse the nested protocol notation akkatcp
; general
is not a valid character in URI path elements and we need to use protocol descriptors in there
; general
Yes name mangling was the reason to choose  as a separator
; general
After a heated and fun debate with Roland we agreed that  would be more awesome but cant be used because it needs to be a valid path element as well so  it is
; general
newbie mode where do I get this EnclosingActor thing
; general
What do you propose
; general
this needs to be more clear since we do not recommend using getSelf within a closure that is executed elsewhere I guess you are talking about the schedule variant which does not take a Runnable
; design
In practice this means that you should not call methods on the enclosing Actor from within the Runnable
; design
Yes that is why I said schedule a message I clarify the wording then
; general
the first to on this line is too much sorry for not noticing during first review
; general
too long line doesnt fit pdf
; general
in other Settings we have named the constants with first as capital letter
; general
CoolOn Thu Sep 27 2012 at 1026 AM Viktor Klang  notificationsgithubcom wrote In akkacamelsrcmainresourcesreferenceconf   1218 1222  akka         enabledisable streaming cache on the Camel Context       streamingCache  on       consumer           Configured setting which determines whether oneway communications between an endpoint and this consumer actor          should be autoacknowledged or applicationacknowledged          This flag has only effect when exchange is inonly         autoack  on         Configured setting which determines whether oneway communications between an endpoint and this consumer actor thanks  Reply to this email directly or view it on GitHubhttpsgithubcomakkaakkapull751filesr1704156 Raymond Roestenburgcode httpgithubcomRayRoestenburgblog httproestenburgagilesquadcomtwtr RayRoestenburg
; design
This will be an excellent spotlight
; general
Good idea I added the Spotlight
; general
that trailing dot might want to fight and replace the dashes possibly
; general
I think it would be better to just use the same basic text as for Scala replacing trait with interface and fixing some syntax What is missing in both cases is to mention UnrestrictedStash and its hopefully existing Java companion which do not force this mailbox selection so that derived classes can be more specific in what they require
; general
Also do we really want to go into UnrestrictedStash here I think it is better to mention it in the ScalaDoc of Stash
; general
btw is this usable from Java trait UnrestrictedStash extends Actor
; general
UnrestrictedStash is not for java
; general
1 for adding these links between traits to the ScalaDoc and we are indeed lacking two classes in UntypedActorWithStashscala ie versions without the restriction could you please add those as well Thanks
; general
Ok I will try to figure out how that works from Java  Now lunch and then I update this
; general
you forgot UntypedActor with somewhere  and a test I guess
; general
Thanks true I added tests for all 3 Java base classes now
; general
Maybe put into a Warning block
; general
Hmm I think info level is enough
; general
can you have a diff but found  false Perhaps return an OptionChanges
; general
this makes no sense
; general
This is a bit too opaque
; general
This doesnt return Changes anymore right it returns all subkeys
; general
Great catch its just residue from an intermediate solution Will revert it
; design
It never returned Changes It used to return the subkeys of the current node not used anywhere now it returns all the subkeys of the newly integrated node
; general
Youre right Will rewrite
; general
why isnt v used here
; general
Its the curse of the multiple inheritance The diff we get back is only indicative of which keys have changed and we then need to find all values for those keys in the whole tree since a key can exist in multiple places and have different values in those different places
; general
Alright so if the v is not supposed to be used here name it  as per convention
; general
Will do Didnt know about that one
; general
Coolio  is the placeholder for dont care in pattern matching
; general
well more precisely it is a fresh name every time you use it and those names are guaranteed not to be referable to  it boils down to what viktor said  sorry couldnt resist
; general
Total misunderstanding I know what  is
; general
this might be good enough but its not perfectit highlights the version number in all search resultsI think it would be better to use site as described here httpw3bguywordpresscom20120126googlecustomsearchrestrictedtospecificdirectoryandfiletypeI understand that you dont want to avoid hardcoding the url and do the snapshot replacement but it would give a better user experience in my opinionhttpdocakkaiodocsakkaversion or snapshot
; general
More important than the highlight it doesnt limit the search to the exact version For example 20 will also find 20RC and 201
; general
I also think site is the way to go The stable and milestones already have nice versioned directories and SNAPSHOT can just be point to snapshotCant we use the doc string replacement tool for this
; general
Ill see what I can do perhaps just take the url of the current page and add as site
; general
Of course not the entire url but the appropriate part of it
; general
That would probably do the trick
; general
Do we ship the html docs in the downloadIn that case it doesnt work to take the url
; general
Search is only generated for the online docs
; general
ok no search bar for local docs good
; general
Why is this called a Mailbox when it is not a Mailbox
; general
This is not a mailbox either
; general
That was one of the questions I expected to come up users are used to the Mailbox term does it have more value to use the lessgripping term MessageQueue because it matches our internal abstraction Its a serious question Either we rename all of them including the config file entries or none
; design
Users will only deal with the MailboxType not the Mailbox itself so you can rename the Mailboxes and keep the MailboxTypes intact
; general
ouch good one
; general
can the first condition actually ever be true might also do    testConductorgetNodesawaittoSet  Setmyselfor use subsetOf instead of  if necessary
; general
This change basically means that it is okay to disconnect clients without warning while nobody is waiting for a barrier Is that what you intended
; general
testConductiongetNodesawaitfilterNot  myselfisEmpty
; general
what is this used for
; general
Yes thats the intention as stated in the pull request comment
; general
The first condition is a just in case things go very wrong Sure it should never happenWhy would toSet  Setmyself be better Creating a set in a tight loop just to check for a condition
; general
Yes much nicer
; general
controller  ClientDisconnectedroleName since the controller needs a roleName to do something useful
; general
Creating the set is probably cheaper compared to the getNodes  await though
; general
ouch indeed Youre right of course
; general
Sorry for not reading the front matter must have still slept this morning Even so it is not immediately clear to me why this is a good idea The rationale behind the previous implementation was that the conductor should better know when players are on their way out if they leave without permission better notify everyone ASAP that the test is failingfailed
; design
Performance is of no concern here I think But Viktors suggestion also makes the intention clear I just proposed subsetOf because we dont use it yet
; general
Yes I know and fully support that idea and come to think of it I should probably revert some of this and make the other nodes remove themselves before exitingWhy didnt I do that before
; general
I didnt remove the nodes since I cant know in beforeShutdown if the test has failed and removing the nodes just makes the barriers succeedThe compromise right now is that if any node is in a barrier when a node is disconnected then that barrier and all subsequent barriers will failIf I leave the code as it was then every MultiNodeSpec will print a number of ERROR messages when the test is shutting down normally
; general
I cant see that this hook is used any more Good to have anyway
; general
Sorry my search capabilities are in for repair it is used
; general
no need for volatile AFAICS
; general
I can remove it if you guarantee that it works
; general
hmm currently it shouldnt be a problem but if someone were to pass these setups around different threads  good point leave it in then
; general
Am I right to assume that this change is only done to make the withValue sugar available
; general
not just sugar but the overloading taking out the current value replacing it with the new and then restoring the old on exit
; general
I knew it There was something which successfully hid amidst the shadows
; general
The Klang works in mysterious ways
; general
stopMessage we always call them messages
; general
Yes that sounds better
; general
please avoid mentioning Awaitresult in code samples better use onCompleteAlso while touching this please add to the warning above that using gracefulStop to make sure that systemactorOf will work with the same name does not work I dont think we want to actually fix this and the problem will go away in a few months
; general
There is a warning alreadybIMPORTANT NOTICEb the actor being terminated and its supervisor    being informed of the availability of the deceased actors name are two    distinct operations which do not obey any reliable ordering Especially    the following will NOT workAwaitresultgracefulStopsomeChild timeout timeout        contextactorOfProps someChild  assuming that that was someChilds name this will NOT work
; design
Change 3 to 2
; general
Debug residue removing
; general
Debug residue removing
; general
Hmm I find the previous style much easier to parse One thing per line lines ordered
; general
have you tested that this actually works wasnt there a problem when mixing different netty stacks in the same thread pool
; general
Just to give the reasoning about why this is called AES128CounterRNGFastThe DefaultSeedGenerator requires Internet access it goes through the 3 random sourcesIf it isnt available it slows down the initialisationThe SecureRandomSeedGenerator uses the SecureRandom seed generator implemented by Java and shouldnt have a start up delay unless you have evidence to the contraryPerhaps the classes need renaming because now the AES256CounterRNGSecure is inconsistent with AES128CounterRNGSecure
; general
I can revert this change if you want to me it was clearly dubious to call something secure and not use the SecureRandomSeedGenerator Ill revert my change if you are sure that the original code was right Ill also add some comments describing why it looks like it looks
; general
Also why do you use new SecureRandomgenerateSeednumBytes instead of SecureRandomSeedGeneratorIts a bit inconsistent and undercommented to be able to figure these things out if youre not the author of it
; general
Ok reverted to the original codeId still like to have some comments to those Providers though since these design desicions are undocumented
; design
No I think you are on to something I think the class names should be renamed to be a bit more selfexplanatory
; design
Excellent thanks Please create a branch off of master and open a pull request with the renames  comments
; general
How about AES128CounterRNGRandomOrg AES256CounterRNGRandomOrg and AES128CounterRNGSecureRandom
; general
AES128CounterInetRNG  AES256CounterInetRNG  AES128CounterSecureRNG
; general
Alright looking forward to your pull request
; general
It is nothing wrong with that  This is expected behavior or This is expected behavior since
; general
Maybe clarify what is an empty CurrentClusterState
; general
yes better thanks
; general
This is really nice Talk about disposable actor
; general
We decided to not have autojoin right
; general
Very nice indeed
; general
we decided to not have auto rejoinI think the autojoin still has a purpose to be able to define seed nodes  deputy nodes but not join them automatically at startup
; general
thx  dogfooding
; general
Perhaps make it public I dont see any problem in that this is queryable in the cluster user API
; design
Right As we discussed
; general
this sets it to the default value of maximumframesize not to the real configured one this kind of substitution does unfortunately not work in referenceconf which is always resolved on its own before being merged
; general
lazy vals make my spidey senses tingle can we not just not create the extension if it is configured off
; general
this should also mention that for all messages larger than this limit there will be extra performance and scalability cost
; general
um the idea was that normally this will never be instantiated because all normal messages are less than the size but I can make the limit into a magic off value as well and create different implementations of extension based on that Checking the property on call side is an alternative with the trade off that the caller needs to know
; general
different impl based on an onoff switch sounds good to me keeping one CHM per ActorSystem around does not sound like such a big deal otherwise
; general
good points I will adjust
; general
This is static ie does not adapt with changing mean I have a hunch that we might want to make this dynamic
; general
I was thinking about what way to go but decided to not base it on mean because it is for preventing sudden pauses that has nothing to do with the normal intervals I think one know from experience of monitoring your system that you have max gc pause of for example 4 secondsIts super simple to change to use the calucated mean instead if we think that is better but Im not convinced
; general
Then Id propose to decouple it completely ie rename it to acceptableheartbeatpause in seconds in the config
; general
Is this really a timemachine and not a clock
; general
What happens if this is negative
; general
What happens if this is negative
; general
What happens if this is negative
; general
Id be happy to rename it to clock I never liked timeMachine
; general
Id love that Kept it as factor because that was what we talked about but I also prefer it to be a plain duration
; general
Lets call it clock so as to not confuse the readers
; general
Symbolic names ftw
; general
as you see the constructor is private and it cant be negative except if you have negative durations which I could add check for if we like the defensive style
; design
I can add check stupid user exception
; general
yeah but some day we should provide a real time machine would be useful
; general
Might also help in cases of overflow etc
; general
Absolutely put in a TODO Rename to timemachine when invented
; general
The idea with a factor of something else is that there is less knobs to learn how to turn But Im fine with either
; general
Good docs But I think this ScalaDoc should be part of the class ScalaDoc It really describes what the whole FD is all about
; design
Ah that is what I call geeky Love it
; general
Hakat upp dig
; general
no its sum of the squares
; general
so its a squaredIntervalSum
; general
yes Ill change itotherwise intervalSum is pretty badass
; general
Ahh dont turn me on like that
; general
soo nice hard to resist
; general
sorry for teasing its not legal Scala  The closest you can get is interval2 since the raised 2 is not a legal character for an identifier
; general
ah then its no fun Ill stick with the boring squaredIntervalSum
; general
You are checking if this node is a singleton AND is also part of the other nodes membership table I dont get it
; general
yes the scenario is that the singleton cluster node sends join and then later receives a gossip which includes him in the member ring
; general
Ok Now I understand
; general
Do we need to check this every time
; general
what is your concernHow would it be detected if not checked forIt could be moved into the next else branch but Im not a big fan of nested ifs
; general
Nevermind I wasnt thinking of the growing and shrinking
; general
perhaps better name isOlderThanWDYT
; general
I think that isOlderThan is a better name
; general
So cant we just set uninitialized to 0 instead of having this IntMaxValue dance Yes the comparison would have to compensate for it instead Dont know which is worse
; general
the reason was to keep isOlderThan clean but I agree that this is a bit uglyI dont know what is best
; general
so instead of keeping a maximum in the gossip we deduce it from the current members which means that the new member may well get a number which was used before this might be what we want but it should be documented as such I might have missed it in the RST but it is not in the ScalaDoc
; general
the upNumber is not public api it is only isOlderThan that is exposed and as far as I can see there is no problem with reusing the up number for that purpose
; design
yes as I said it may well be good enough but its semantics should be documented in the Member ScalaDoc
; general
ok Ill add comment
; general
yeah there are lots of ways to achieve this you can also leave off the second  or we just go for the
; general
there is a CrossVersion thingy in this file also is that correct
; general
this is a very long line
; general
So were replacing pastExec with proper rounding is that what youre saying here
; general
closing over nonthreadsafe vars and update them on other threads is a nogo for me
; general
Same comment here as above any solution needs to be based on nonmutable state
; design
There is an implicit conversion involved for max here rightUse max in Duration instead and define a 1nanos constant
; general
What if this throws an exception
; general
If what throws an exceptionIf runnablerun throws it then scheduleNext is not called The PR doesnt change behavior here
; general
Then were on the same page Alright could you do me the favor of squashing the commits into 1 so its easy to cherrypick it into 204Great work
; general
Ok I created a branch wip2579squashedschedulerdriftakshaal and squashed wip2579schedulerdriftakshaal into itI dont know whether its possible to update this pull request or should I create a new oneHere is the commithttpsgithubcomakshaalakkacommit3783be2f58d4380e900891d7b8331f4333dc7d86
; general
Its probably easiest to close this PR and open a new for the squash not a huge fan of push f
; general
Here we go httpsgithubcomakkaakkapull786
; general
Dont we normally use ConfigExceptions for this
; general
yes or IllegalArgumentException possibly via requiresensuring throws assertion error which was the reason for httpswwwassemblacomspacesakkasimpleplannerticket2798
; general
ah yes of course my bad will fix
; general
you know this is done for each Testwe have used BeforeAll and a static system variable at some other places
; general
use context dispatcher instead
; general
you might want to extract this to a method used here and from preStartwas it intentional to use different delays
; general
I saw that the differences in delays was by design good
; design
Yes I know Just modeled after some other test in the doc I can change it
; general
This dance is not necessary any longer I added the junitinterface plugin so that JUnittests are picked up automatically
; general
I mean only within the akkadocs and akkacontrib projects
; general
Good to know Why not everywherePatrik5 okt 2012 kl 2024 skrev Roland Kuhn notificationsgithubcom In akkadocsrstjavacodedocspatternSchedulerPatternTestscala    00 19       Copyright C 20092012 Typesafe Inc httpwwwtypesafecom       package docspattern    import orgscalatestjunitJUnitSuite    class SchedulerPatternTest extends SchedulerPatternTestBase with JUnitSuite I mean only within the akkadocs and akkacontrib projects   Reply to this email directly or view it on GitHub
; design
I snuck it in when I needed it planned on discussing it and then forgot about it Problem right now is that it runs all tests twice so we should decide on how we want it to be and then do it
; design
in a finally block
; general
I had the same thought recently and then decided against it this is not a resource leak and it only is problematic if the test blows up
; general
Which is when I dont want the log file to be bloated
; general
what scheduler the system scheduler
; general
please comment also that the interval may be even more off than usual across a restart up to twice as long
; general
Yes the word scheduler is bad Will change to the periodic message scheduling or something of the sortWill add comment about that the interval might drift up to twice as long you have to be really unlucky though but there is a possibility or shorter
; general
I was thinking about going the other way and adding some annotations for the JUnit tests and enhancing the JUnitSuite so it produces the same tags timing etc so we can classify JUnit tests as wellWe definitely need to discuss where we want to go
; general
class ScheduleInReceivevar target ActorRef   def this  thisnull
; design
Please try to read which code I show in the doc and which is for the test
; general
I can write contextsystemschedulerschedule500 millis 1000 millis self tick on the next line if you think its better
; general
Say what Im challenging the choice of having var target in the class body this is completely unrelated to whether the code is used in docs or not
; design
Its definitely better as the wildcard import pollutes the local namespace and adds 2 extra lines and is more letters than it saves
; general
Sorry What I was trying to say was that the var target ActorRef is only there to test the code It is not visible in the docI couldnt come up with a better solution to not pollute the code that is in the doc
; design
Viktor he doesnt want to show the target ActorRef in the docs which your suggestion would ruin
; general
Ah sorry about that noooow I get it Good call But please add a comment about things like that so happy cowboys dont Boy Scout too much in the future
; general
Absolutely Will add comments
; general
I think this gets kind of confusing calling the default buffer buffer and the test allocated buffers buffer
; general
What happens if we loop around with the default buffer Will we not clear the previously read data
; general
Yes That is what clear does
; general
Sure what do you propose
; general
Yes and we should clear the data after every partial read
; general
Shouldnt we pass in into here
; general
What about defaultBuffer
; general
Yes see the deleted bufferclear further down in this PR
; general
Missed that nobody ever looked at the things read into the default buffer clear away
; general
should this not only happen at the first iteration
; general
Me and Viktor discussed this in one of the outdated diffs It should always be cleared since the defaultBuffer really is a throwAwayBuffer and nobody cares about the data being read
; general
in that case it might want to have a comment
; general
how about a factorpercentage of nodes instead of a fixed number
; general
Did you need FixedRateTask after the scheduler fix
; general
why would that be betterfactor 5  is reasonable for a 100 node cluster but not for 1000 node cluster
; general
I will remove that but that will be done as a separate ticket today
; general
Maybe log that fewer peers were selected because attemptLimit was reached
; general
shouldnt be update called here
; general
This deserves a comment
; general
it certainly should thanks
; general
What if heartbeatInterval is 1
; general
What if you do not know the grand total of nodes when you boot the app
; general
I dont understand what you mean or what you think is the problem Please elaborateWhen would it not be good that each node is monitored by 5 other nodes It will of course not be more than number of members  1 Why should it be proportional to number of nodes in cluster That doesnt scale Patrik8 okt 2012 kl 1817 skrev Viktor Klang  notificationsgithubcom In akkaclustersrcmainresourcesreferenceconf    786 7810  akka           how often should the node send out heartbeats         heartbeatinterval  1s            Number of member nodes that each member will send heartbeat messages to         ie each node will be monitored by this number of other nodes        monitoredbynrofmembers  5 What if you do not know the grand total of nodes when you boot the app   Reply to this email directly or view it on GitHub
; general
Nevermind I might just be overexaggerating
; general
ok added yet another comment why this workaround exists  cant wait for the new remoting
; general
alright added some boundary checks
; general
Instead of having a lot of vars arent most of the vars interconnected Create a case class and use copy
; design
I have moved the state and related logic to a separate immutable case class ClusterHeartbeatSenderState Pretty slick Easier to unit test
; design
my reading of SI7203 does not suggest that this code would be affected either it is and then the SI must be amended or the comment and the val should go
; general
Yes I cant see that SI7203 has any bearing on that piece of code Removing
; general
this should have docs assuming that it is public and for people who want to use their own deque
; design
Should it be public Is there any real value in allowing people to have their own deque
; design
well people might want to use this for the very same reason why you introduced it unbounded deque
; general
missing space between words also othergetClassgetName
; general
you should also contextwatchtargetActor and stop this supervisor when the child terminates possibly informing the caller
; general
Creating toplevel actors should be a rare operation using it on a permessage basis is too costly the guardian supervisor would become a bottleneck for creationtermination Therefore it would be better to create a toplevel supervisor which the query is sent to in a message who will then create the actor you currently call JavaAskI would recommend offering a static factory method which takes an ActorSystem and makes such a toplevel supervisor and then an ask method which takes a supervisor Props and message
; design
it would be more flexible to leave this open ie return the Future to the caller
; general
ah instead of an ActorSystem the factory method should take an ActorRefFactory so that you can also create the supervisor below another actor
; design
please replace this ie the whole listing with     includecode codedocspatternJavaAskjava
; general
in case you didnt know it sure is not documented yet youll need to run akkadocssphinxgeneratehtml in SBT to get the right HTML output
; general
he must make sure that the asked actor replies with StatusFailure
; design
the promise returned by Patternsask is fulfilled as a failure including the exception
; general
I think a better name would be SingleUse Actor Trees with HighLevel Error Reporting or some shorter variant which mentions the singleshot nature
; design
Given the change to return the Future I proposed above this should be changed along the lines of asynchronous API but you can make synchronous calls by using Awaitresult on the returned handle
; design
when changing to returning a Future the timeout parameter could still be passed into the created supervisor so that that actor uses it as a receive timeout and shuts down the whole operation when that fires
; design
I think JavaAsk is an inappropriate name How about SupervisedAsk
; general
I totally agree but a problem with that would be that the javaAsk is immediately stopped in the below finally and the whole point is ruinedIs it possible to demand that the targetActor is stopping itself after processing then the stop of the javaAsk can be done inside JavaAsk by using watch of the target and this finally stop is not needed Perhaps demanding too much of the target actor
; design
The supervisor can also watch the caller and then shut itself down upon receiving the Terminated message This means that the target cannot expect to do anything after having replied but that is a reasonable limitation in this context
; general
yes that was what I tried to say thanks for clarifying
; general
But isnt the toplevel actor the next bottleneckApart from that this pattern is not usable for bulkoperations In that case a parent actor should createcallinitiate the actionsThe issue of a bottleneck might not be the question Anyway I will present a solution as you mentioned
; design
Yes SupervisedAsk is a nice one And the method could be askOf in order to underline the Props similar to actorOf
; general
yes askOf sounds good
; general
the issue is that the guardian actor user is a single shared resource in an ActorSystem while your own toplevel supervisors are private to this pattern and you can create as many as are needed to handle the load
; design
please add package declaration docspattern
; design
please move the example usage into an actual SupervisedAskSpec so that it is executed also this does not compile as is
; design
emphasize not here
; general
include the code from SupervisorAskSpec here once moved out
; general
please fix indentation
; general
In doc code we have switched to 2 space indentation for java code also and line breaks after some 70 chars unsure about the exact numberThis is due to limited space in pdf output
; general
Its fine to use the full 80 chars and it will render ok in the pdf
; general
Id rather invert the lines above and below and remove the sleep
; general
How much slower is the test now on average
; general
Yes good idea
; general
Slow On my machine it takes about 630msThe test before it is slow  3 seconds
; general
Sorry about that I didnt mean to say that I speeded up this test step The preceding test step is slow
; general
So then my question still stands
; general
This 643msMaster 937ms
; general
we should use more unique names to not interfere with user name space
; general
Creating such a highly customized Serializer seems like a huge waste of namespace Cant this be generalized Id bet a ObjecttoProto Serializer would be much more interesting
; general
why not string
; general
WDYM Unfortunately this has to be specialized see 3271But I intend to use this serializer for other possible envelopes like Broadcast and friends
; general
My point was that instead of hardcoding the conversions it would be nice to have something more generalized so it could even be used by endusers I can imagine having richer classes that you want to be Protobuf going over the wire but be reassembled into Java classes Does that make sense
; general
Yes of course The point here though is that a lot of tells go through  ActorSelection especially with clustering so it makes sense to handle it  in a handcrafted way An autogenerated format for SelectionPath would  probably end up nesting them since it is a linked structure I encode  them as sequences here for faster encodingdecoding For other messages  this is probably not neededBut this is a proposal PR so we should think about alternatives
; general
I dont know SerializedMessage in WireFormatsproto uses bytes too I just kept it the same
; general
objecttoproto sounds so general that my instincts say useless what am I missing I agree with Endre on this specific feature maybe we should talk in front of a whiteboard about what you mean
; general
1 add akka to it at least
; general
Ive used objgetClass in some of places It will be printed as class fooBar or interface fooBar What do we want it to be
; design
I think it is redundant name should be enoughWhen will it print interface
; general
Calling getClass on an instance will of course never print interface what I meant was that I used it in  places where a have some kind of class where that might be an interface and an instance and then print them both Settling on getName is fine by me
; design
Removing the redundant closing  would be nice as well IDEA has some quirks wink
; general
Ah the good old if  always
; general
This or similar code seems to be duplicated I think we ought to switch to something similar to httpsgistgithubcom4338250
; general
Nice Add a ticket please
; general
I dont think its a new ticket its Boy Scout Rule  DRY
; general
you can still create a ticket if you fear that you would otherwise forget it I know I would
; general
No I fix it right away
; general
If it should be fixed as a part of the PR theres no way to forget it
; general
This is slightly more complicated than it seemed first Can we go the ticket way I have several failures to debug
; general
Yes but only because we are under high pressure to stabilize master DRY and Boy Scout Rule is not something that deserve their own tickets normally  its the way we write code
; general
Thank you for the relief I promise to be a good Boy Scout
; general
This seems weird whats the difference between successFaile and failuree
; general
This seems weird whats the difference between successFaile and   failureeI shouldnt have used failuree The status itself can be Faile and  Invalide in case of errors
; general
What about statusPromisefailureInvalidExceptione and statusPromisefailuree
; general
That could make sense But this means that I have to change the Transport  API so this will be a larger change
; design
Can I use pipeTo with failed futures
; general
From a quick glance checking the uses of Status trait it should be fairly quick just remove Status Fail and Invalid see what breaks introduce InvalidAssociationException
; general
final class PipeableFutureTval future FutureTimplicit executionContext ExecutionContext         def pipeTorecipient ActorRefimplicit sender ActorRef  ActornoSender FutureT            future onComplete             case Successr  recipient  r            case Failuref  recipient  StatusFailuref                    future                def torecipient ActorRef PipeableFutureT  torecipient null        def torecipient ActorRef sender ActorRef PipeableFutureT            pipeTorecipientsender          this
; design
Yes and this might be related to some of the failures Doing this one now
; general
This is not the way to do it use intercept
; general
You can replace all uses of Promisesuccessfulfuture with Futuresuccessful and vice versa with Promisefailed
; general
Is this line safe
; general
use auxiliary constructor instead of null
; general
initchannel remoteSocketAddress msgstatusPromisesuccess
; general
use auxiliary constructor instead of explicit null
; general
banging head against wallThis is just plain wrong it should be pipeTo instead I think you might  found the bug in the throttler
; general
unless this is known to be completed before this actor shuts down you might want to protect against self being null here
; design
same problem in case of an intervening restart
; general
I think we should switch to putting a Uuid in SharedMailbox and sort the buddies on that And then add to buddies after the mailbox has been set and remove from buddies before the dead letter mailbox has been set Would that work
; general
Add comment on the order is extremely important here
; general
This will be extremely expensive since it will require a traversal of the entire mailbox to find the size also the size doesnt really make sense since the messages will be processed in parallel so when you get the number back out it might be larger or smaller
; general
And since we arent adding and removing to the queue frequently it might be more performant to just use either a CLQ or a Vector with a CCAS
; general
why all the trouble the line above is from the ActorModelSpec and I just sorted the buddies there to better find which ones were missing etc I think were good wrt buddiesorting
; general
Well that all depends on the usecase which is why I made it tunable if you expect high message rate then you should dispatch to the actors eg RoundRobin and rely on that only ie set BWT1 if on the other hand you expect only low rate but must absolutely wake up somebody if possible then set it to 1 but then job submission is not so frequently done anyway and an appropriate router can reduce the number of traversals by not failing registerForExecution in the first place And if normally the queue contains like 10 elements then set it to 10 and let that equalize the number of active mailboxes eg routing only ever to the first one I think this is flexible enough there is no silver bullet which does not require tuning
; general
And the new code passes the tests even if you stress it real hard
; general
What do you mean besides running the ModelSpec Is there anything meaner
; general
Its never failed reproducibly only but tuning the params right
; general
We could add an AtomicLong into the mailbox to keep track of current size or perhaps use iterator and iterate over entries to see if we have enough
; general
Ill try the Iterator approach because it feels more cachestriped
; general
I think this deserves more clarification First mention that default preRestart stops the children and they will not be recreated automaticallyThen what I think is a little known fact is that if you override preRestart to not stop the children the children will be recreated automatically ie new instance of each child
; general
Oh I just followed the mailinglist discussion that Roland included in  the ticket and this was a pattern that Derek mentioned I kind of tried  to reconstruct what Roland had in mind with this ticket so it mightbe better to discuss this with him tomorrow
; general
its described in point 6 here httpdocakkaiodocsakkasnapshotgeneralsupervisionhtmlbut that doesnt match what is written here
; general
the full link httpdocakkaiodocsakkasnapshotgeneralsupervisionhtmlWhatRestartingMeans
; general
its described in point 6 here   httpdocakkaiodocsakkasnapshotgeneralsupervisionhtml but that doesnt match what is written hereI believe you The comment I followed wasI prefer the constructor for nonchildish things but for creating and  starting children I prefer preStart  The reason is because I can  optout of childstoppage in preRestart and if Ive created children in  the constructor then I have no recourse to ensure that duplicates dont  get started  This just provides me with a pattern that generally works  and is resilient to refactorings a bit more than the other methodI think I will close this PR for now and wait until I can discuss it with  Roland
; general
why close it its a lot of great stuff here
; general
I meant to reopen it after reconsidering some of the stuff  But you are  right it may remain open
; general
yes we will probably sort it out tomorrow and I think there is only a need for some minor adjustments of this section
; general
to use of  to use
; general
not like to reinitialize some internals upon every restart most particularly child actorslike to avoid reinitializing internals on restart For example it is often useful to preserve child actors across restarts
; general
Unclear what during the initialization of the first instance means
; general
It might be useful to link to other parts of the docs that include related discussion eg For more information see refwhatrestartingmeansscala
; general
Patrik and Endre are both right the point was to discuss what it means to override preRestart both concerning not calling postStop and not killing all children At that point it is important to mention that children will recursively be restarted so you have to make the choice between killing and restarting at each level of the hierarchy
; general
this can be avoided if the parent does not publish the ref before enqueueing the initialization message which makes me think that is only true in the local case for remotedeployed children failure of delivery must be considered as well
; general
yes that is a good point that was the reason why I used constructor instead of initialization message pattern for the cluster singleton pattern
; general
Can you explain this in more detail
; general
Ah I see
; general
This is the most dangerous initialization pattern but as I wrote in the presence of circular dependencies it is the only possible one
; design
Also not publishing is not always possible see the IOTCP for example where various registration acts might be needed from the client before using the actor
; design
Im not so sure about this warning It might be too strong Especially the last sentence can be interpreted as something similar to the problem of publication of this reference from java constructor The important thing is that you must be aware of that the init message might not be the the first received message
; design
case Danger Danger  true
; general
is this needed
; general
otherwise the test would fail in such a case
; general
I think the author publisher and the publication date even ISBN should be included hereI personally would prefer thumbnails of the covers but others might disagree
; general
yes Ill add some facts but are we allowed to put up thumbnails images and copyright is always scary
; general
I dont know It is not that important but the other metadata is
; general
we are using requiring in other places
; general
what about TestTransport
; general
document the  32k limit also
; general
that takes it from config maximumpayloadbytes
; general
true I just taken code from neighbors
; general
why get or else instead of a simple pattern match
; general
Right Will fix
; general
Remove or use commented out code is just liability
; general
why not optimize this as the one below
; general
why copy if its already seen
; general
This is so badass I dont even know where to begin
; general
is nodereceive threadsafe
; general
Override unhandled instead
; general
Why is this the string representation of the address
; general
this is very suboptimal
; general
Why top level
; general
Why top level
; general
why not case class instead of all the boilerplate
; design
why the import here
; general
Always use getBytes with a specific charset
; general
Using what encoding
; general
Open ticket and remove fixme
; general
MapemptyNode Timestamp is not a singleton
; general
Whats the Java API
; general
I suggest removing this as this goes against how Extensions are normally used within the system Make your Extension named Node instead so you can do Nodesystem
; general
Do we relly want to prolong the tests 30 seconds Thats adding 50 to my test time no like
; general
Whats up with all this wasting developer time
; general
Why this catch block
; general
why this catch block
; general
Why this waste of developer time
; general
Why this waste of developer time
; general
Why this waste of developer time
; general
Now Ive seen the same string quite a few times please use the Config librarys fallback mechanics
; general
We should rewrite the tests so that they only take as long as they need use awaitCond instead of arbitrary sleeps
; general
Why did this return from the dead
; general
Why is this back again
; general
Ill remove and create a ticket
; general
I dont understand what you mean
; general
I dont understand what you meanAnd the line you are commenting on does not make sense Which line do you mean
; general
def seenaddress Address Gossip   163    this copy overview  overview copy seen  overviewseen  address  versionWhy is this not optimized as the one above only copy if you must
; general
WDYM Are you ironic What is wrong Please provide understandable feedback
; general
Seems to have been some issue with GitHub or youe pushed new code today Ive explained on the comment above this one Ill go through and verify that not all my review has been broken by github
; general
Holy shit github has completely fucked my review
; general
Sure But why are you constantly commenting on the wrong line Makes it hard to understand what you mean
; general
No as I said github has completely fucked up my comments putting them on the wrong lines sigh
; general
What is Commenting on wrong line again
; general
read my comments about this I think Ive responded that github has fucked my comments like 5 times now
; general
You mean call it self
; general
8 lines up Still dont get it val node  systemnode  implicit conversion adds node method
; general
Am I using Extensions wrong What is suboptimal
; general
Ah you mean passing in Impl
; general
I need access to the systemActorOf that is onyl in Impl class What do you suggest
; design
This was just completely wrong Im talking about the use of addresstoString both to set as Node value AND to do comparisons between nodes dont understand why toString should be used
; general
8 lines up lands on memberMembershipChangeListeners WDYM
; general
WDYM Where should I create the clusterSettings in a companion object
; general
Why do you need that Also why are you creating multiple toplevel actors instead of just one that is responsible for the clustering and that one can have children
; general
Got it Fixed
; general
The toplevle remarks was around these private val clusterCommandDaemon  systemsystemActorOf  376    Propsnew ClusterCommandDaemonsystem this clusterCommand  377  378  private val clusterGossipDaemon  systemsystemActorOf  379    Propsnew ClusterGossipDaemonsystem thiswithRouterRoundRobinRouternrOfGossipDaemons clusterGossip
; design
this is asynchronous
; general
this is asynchronous
; general
Should this be called for every recur
; general
These state transition do not do anything nor are they documented as what who is supposed to do with them
; general
Should this be called for every recur
; general
This can become annoying if theres many retries
; general
This can become annoying if theres many retries
; general
put merge on Gossip instead
; general
Why is this needed newMemberSet is immutable right
; design
should we log every time it recurs
; general
why not toSet
; general
or why not use distinct since youre not going to use the set anyway
; general
It is two different kind of Node  The Node value you are talking about is for VectorClockNode with is only a glorified typed identifier Should be the Address string The comparison is for NodeMember eg the different nodes in the cluster The comparison is for maintaining a SortedSet for the ordering of the nodes in the node ring
; general
Because I want the cluster management actors to live under the systemGuardian I could create a dummy parent supervisor for the cluster management actors might be a good idea Is that what you mean So systemclusterManagementSupervisor
; general
Still dont know where this line is
; general
Got it See my previous comment
; general
Damn Thanks New funky 20 world Are they guaranteed to run being stopped in order of how stop is called though
; general
No Good catch Thank you
; general
Because Im stupid Fixed
; general
I know I should not have added them yet Will impl them very soon They are all documented in the specification
; general
Right Fixing it
; general
Fixed Thank you
; general
Fixed as well
; general
Fixed all of these to foreach
; general
Already done Committed to my working branch yesterday
; general
Because newMemberSet is a Set but I need it to be a SortedSet See the comment about bug in Scala There is no CanBuildFrom for SortedSet
; general
I like that Fixed
; general
Because I needed a specific apply method to create the Node instance Same signature as the generated one but different impl    def applyname String Node  new Nodehashname
; design
Cant use distinct directly since does not exist on Iterable Would have to do valuestoSeqdistinctSo instead I do valuestoSet
; general
Ticket already exists Removing comment
; general
What do you mean
; general
sealed trait Node    object Node       private case class NodeImplname String extends Node  override def toString String  Node  name         def applyname String Node  NodeImplhashname
; design
It is needed To let the system gossip enough Could perhaps be cut with 10 sec I dont knowBut I have tagged all these long running tests with a tag long running so they are excluded by default you have to run     sbt Dakkatesttagsincludelongrunningto run them
; design
Welcome to the distributed eventually consistent world
; general
Since errors were swallowed Now they are reported as failure
; general
Ive answered this
; general
Error in merge I guess Fixed
; general
Sorry Must have screwed up merge
; general
seenvaluestoSet is probably the best option here
; general
Yes What I did
; general
Indeed shorter Taken Nice
; general
I think this should be accompanied by a factory which accepts ActorContext and has the appropriate WARNING signs and uses contextsystem obviously Then I think this would make sense
; design
Yeah the reason why I didnt do that is because It hink that map flatMap etc are still unsolvedId like to have another abstraction like an EventLoop that could be used instead of Actors for this
; general
okay color me clueless I guess I dont wanna know
; general
why not include the other good changes in scalamailboxesrst Configuration name default mailbox
; general
Thats not a part of 3437 so please open a ticket on that
; general
I guess that was a comment on how to change the default mailbox
; general
my job is to be picky when reviewing here is another mismatch
; general
Id prefer RuntimeException
; general
I kept the original approach here copied from ActiveClientHandler We can change it but it will be not thrown anyway
; general
ok if its not thrown then no problem
; general
make message more unique and use NoStackTrace
; general
WDYM This is not thrown everywhere and it is exactly the same code that the Server has Do we want to change it now
; general
it does not matter whether it is thrown the stack trace will be filled in during construction unless you use NoStackTrace and getting that stack trace takes ages
; general
yes this is what makes this interesting
; general
not used remove param
; general
MessageDispatcher requires it
; general
that is a nice test
; general
This will not work when messages are serializedI dont think that type of messages is good in a hello world sample
; general
crapSeriously thanks Will make it  wait for it  new Serializable  private static final long serialVersionUID  1L The thing is that we have this mistake in ALL our Java samples ie we declare none of our beans Serializable
; design
yes very nice I tried SystemsetOut which did not work
; general
I think Viktor used the trick before to shadow the implementation of println with a custom one and since the custom code was not included in the docs it maintained the illusion of a real println
; design
I think you should do a proper immutable message class similar to how Jonas did it
; design
how about an Enum If it does not need fields then that should cover everything
; general
no this should be used as a getting started template no tricksit just reflects the fact that println is not observable from the outside
; general
yes Enum is alright but rather weird to define an enum for just one message wait you have two ok
; general
Enum is the way here Incredible how much Java I forgot already
; general
lets call it carefully crafted example
; general
Yeah wasnt sure about that one compose by itself doesnt sound right tough I havent actually used dataflow yet so Im not sure how to improve that may be compositionBut the other changes are good
; general
flow expressions compose is a statement I think Reworded It is possible to compose flow expressions But anyway it is confusing
; general
yes the original was correct here and the other change is not correct either
; general
Are you also saying makes the look like is ok
; general
The flow method acts as the delimiter of flow expression composition vs The flow method acts as the delimiter of flow expression compose
; general
Its currentlyThe flow method acts as the delimiter of dataflow expressions  and flowexpressions compose  which is completely true and valid imho
; general
no that was overlooked there is a code missing
; general
And correct me if Im wrong but I thought does is the singular form and here you are referencing a singular  forcomprehensions so it should be doesnt not dontAs I dont understand what dataflow composition in akka really is I wont argue the point anymore but as a native english speaker flowexpressions compose doesnt sound right at all See the examples here httpdictionaryreferencecombrowsecomposeIf you wanted to use the form compose instead of composition I would have thought it would be The flow method acts as the delimiter of dataflow expressions  and to compose flowexpressions
; general
The point is not that flow method compose flowexpressions but flowexpressions can be composed which is in CS jargon simply used as flowexpressions compose See analogue applicatives compose
; general
wosh thanks drewhk Havent seen that jargon before Dont suppose you have any links handy that elaborate Tried googling applicatives compose Found this httpstackoverflowcomquestions7040844applicativescomposemonadsdont  Ohno Monads sigh
; general
Try Google Scholar you wont get noise results from music composition etc Btw forcomprehensions is in plural form A forcomprehension is a kind of expression so forcomprehensions mean the set of those expressions
; general
Sigh Ah well 13 isnt a total waste of effort and my heard was in the right place
; general
Isnt it better to assign nodevalueticks oncenodevalueticks  if pastExec  isCurrent offset  WheelSize else offset
; general
Could you perhaps move this buffer into apply or better yet make it part of the tailrec method
; design
delimiter must not be empty
; general
No the parts in the buffer have to survive for multiple events
; general
Ah I see I just didnt see it used anywhere else in the class but didnt realize that it was needed for multiple events Cool
; design
Thankful I am
; general
But you are right about the apply one Thanks
; general
this needs to be clearer when sending you need to include the terminator if includeTerminator is true
; general
Id rather call this minSize
; general
this should discard frames which are too large
; general
Well you dont need to But you have to know what you are doing then
; general
same for LengthFieldFrame then
; general
Then I have to search for delimiters in the passed data
; general
no the contract is that above this stage ByteStrings are single messages
; general
if includeTerminator then it is not necessarily true
; general
WDYM Especially in that case we have to assume that everything coming in is a separate message no And I would find it quite inconsistent to support sending multiple frames in one ByteString when you WILL get them back one by one
; general
Strictly speaking there could be no encoding step at all  it is so easy to construct it yourself and possibly batch messages Decoding adds more value I dont find it inconsistent
; general
Looking at the eventPipeline I see the following semantics below this stage you have a stream of bytes represented by a stream of ByteStrings above this stage you have a stream of frame represented by a stream of ByteStrings where each ByteString contains exactly one frameConsistency means that the commandPipeline honors these very same semantics
; general
I dont really like this consistency criterion I definitely see value in the ability to batch outgoing frames while not having to decode them manually Netty has only httpnettyio40apiionettyhandlercodecLineBasedFrameDecoderhtml but no encoder  since it is trivial
; general
okay finally I got what youre saying sometimes I am a bit slow this should be part of the documentation ScalaDoc and rst then
; general
OTOH you made me thinking about if that is really a good idea to add the terminator in the encode step It should be either a separate option or just up to the user completely
; general
yes that is a possibility as well you just need to document it
; general
So shouldnt this be called includeDelimiter And the included delimiter doesnt need to be a byte
; general
Id suggest to only have one method that takes an immutableSeqAddress and convert it to an immutableIndexedSeqAddress inside the method and instruct Java users to use akkajapiUtilimmutableSeq as we are talking about an API for power users
; design
We need to say what it does if its already joined
; general
alright I will copy the docs from the manual
; general
Why is there a StatsMessages and Messages interface that looks like the same The same question for TransformationMessages Is this something specific to Java usage I do not see Messages imported or linked from docs
; general
Oops residue from refactoring thanksPatrik4 okt 2012 kl 1707 skrev drewhk notificationsgithubcom In akkasamplesakkasampleclustersrcmainjavasampleclusterstatsjapiStatsMessagesjava    00 155   package sampleclusterstatsjapi    import javaioSerializable    messages  public interface StatsMessages  Why is there a StatsMessages and Messages interface that looks like the same The same question for TransformationMessages Is this something specific to Java usage I do not see Messages imported or linked from docs   Reply to this email directly or view it on GitHub
; design
Doesnt say whether its safe to mutate the resulting collection or not
; general
Doesnt say whether its safe to mutate the resulting collection or not
; general
Can we please wipe all author tags we have collective code ownership
; general
and also because authorship is maintained by the git log and all the current code is a putpourri of contributions
; general
missing end paren
; general
its an sample app main program that prints results to console running this at hight speed wouldnt be very nicethis is the main thread
; general
Of course I meant that it might warrant a comment stating why its done
; general
ok changed to ignore ClusterDomainEvents that was the intention and rest are unhandled
; general
I was struggling with java interop but it was the sealed trait that was the problem not the return type so I have changed to MemberStatus here thx
; general
added doc comment
; general
failure foreach throw
; general
just curious is there a signature difference between this and lazy val actorClass Class  Actor
; design
should this be public
; general
That is a good question I think it can be useful An example would be to create actors in different hierarchies based on the class
; general
You cant have  on val definitions right I think we want to keep the  since this definitely has side effects
; general
ok good point
; general
yes this should be public exposing the class was the whole point of the refactoring
; design
please do not use default values here they are mainly useful for providing nice and shiny user APIs and make refactoring less reliable otherwise
; general
ok good point
; general
yes but not in ActorCell where we eschew HOFs
; general
rename exitValueOrKill  exitValue
; general
What is the reason for the removal of this check
; general
So the code that is removed or rather the comments are related to the removed kill method which was commented out in the Conductor It fills no purpose since we right now cant kill a remote node from within the conductor but only tell that JVM to exit nicelyMaybe it will be added in the future but right now exit seems to be enoughWhat happened was that if you sent a negative exit code it was ignored Not what you would have expected
; general
has used with great success in to
; general
Actors also provides  Shouldnt it be Actors also provide
; general
Overlooked this error  It existed in the previous version  Git marked that line as added because I had reformatted the paragraph
; general
Fixed in the commit httpsgithubcomderekmaharakkacommit0e0c55010af9476e9b2981e4b3c2030641b03f10
; general
Nice catch Roland
; general
Doesnt the RemoteSystemDaemon have the remoteSettings
; general
No need to deserialize it here lazily not interesting what it was
; general
Nice catch what if payload is null tho
; general
WDYMThe protocol identifier akka supposed to be a constant
; general
That sharedglobalstate AtomicInteger is not pretty
; general
There is no need The actor handles its lifecycle fully there isnt any bookkeeping for the manager
; design
By inlining these throws you just reverted an earlier review comment  Im fine with your changes though
; general
Yeah a man can change right
; general
I like this way better so you are welcome
; general
NettyFutureBridge is sexy
; general
Ah I wanted to do the same Removal of Status was a very good idea I think a lot ot refactorings will be possible now
; general
Yep great work
; general
this duplicates the dependencies  Seqactor above should not be necessary
; general
Does that mean that akkaactor is not an OSGibundle anymore You said something about including it in akkaosgi but I cannot see that there should be a comment somewhere explaining this
; general
yes indeed comment added
; general
I just tried out your branch and while the akkaosgi bundle contains all of akkaactor save for referenceconf it does not contain any referenceconf the problem might well be that the compile task copies resources from src to target so your dependency here is probably just too late
; general
well I thought running sbt package before sbt osgibundle was necessary and would do this trick I move it to the compile task if you prefer
; design
I just did sbt publishlocal under the assumption that that should work because it is very close to what our release script does
; general
thanks seams to work by adding the task to compile
; general
string interpolation instead of format
; general
bunle  bundle
; general
Is there a reason to only support conf files and not properties and jsonPerhaps use ConfigFactoryparseFileAnySyntax instead
; general
Im not sure if extendedActorSystemConfig is a good name for this Could it be confused with unrelated ExtendedActorSystem
; general
this would be nicer as    for       x  acceptedFileName      y  acceptedFileExtension     yield setcxy
; general
using parseFileAnySyntax makes the extensions dance unnecessary if you give it only the base name it will do exactly what you do manually here
; general
Id probably do thisif  x  1  uniquepossible map 1 possiblemap2scalacollectionbreakOut  logwarningMultiple serializers found for   clazz   choosing first   possiblepossible02
; general
dont like magic names perhaps turn into a constant somewhere
; general
Then youd be doing it wrong  But I got your point
; general
val ser  bindings filter  1 isAssignableFrom clazz  match           case Seq  throw new NotSerializableExceptionNo configured serializationbindings for class s format clazzgetName          case possible             ifpossiblesize  1  uniquepossible map 1 possiblemap2scalacollectionbreakOut               logwarningMultiple serializers found for   clazz   choosing first   possible            possible02
; design
is this thread safe
; general
Is it possible to test that it only has the expected output
; general
the OutputStreamAppender is synchronized some locks and ByteArrayOutputStream is synchronized so I think it is fine
; general
if ByteArrayOutputStream is synchronized then you should be just fine
; general
we should not test slf4jlogback  that has been done by othersIm only interested that the output includes correct values for thespecific fields that we logOn Tue Feb 7 2012 at 436 PM viktorklang replyreplygithubcom wrote          Slf4jEventHandler must         log error with stackTrace in         producer  new RuntimeExceptionSimulated error          awaitCondoutputStringcontains 5 seconds        val s  outputString        s must includeakkaSourceakkaSlf4jEventHandlerSpecuserlogProducer        s must includelevelERROR        s must includeloggerakkaeventslf4jSlf4jEventHandlerSpecLogProducer        s must include regex sourceThreadForkJoinPool1909worker1909        s must includemsgSimulated error        s must includejavalangRuntimeException Simulated error        s must includeat akkaeventslf4jSlf4jEventHandlerSpec Is it possible to test that it only has the expected output  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull314filesr423695 Patrik NordwallTypesafe httptypesafecom   The software stack for applications thatscaleTwitter patriknw
; general
My point was just to verify that were not printing things we shouldnt print
; general
But I guess that would only happen if someone changes the test layout Which is rather unlikely so nevermind push
; general
I can add another regexp check for the whole linePatrik7 feb 2012 kl 1650 skrev viktorklangreplyreplygithubcom       Slf4jEventHandler must       log error with stackTrace in        producer  new RuntimeExceptionSimulated error        awaitCondoutputStringcontains 5 seconds       val s  outputString       s must includeakkaSourceakkaSlf4jEventHandlerSpecuserlogProducer       s must includelevelERROR       s must includeloggerakkaeventslf4jSlf4jEventHandlerSpecLogProducer       s must include regex sourceThreadForkJoinPool1909worker1909       s must includemsgSimulated error       s must includejavalangRuntimeException Simulated error       s must includeat akkaeventslf4jSlf4jEventHandlerSpec  My point was just to verify that were not printing things we shouldnt print    Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull314filesr423748
; general
not possible to use selftype here
; general
to be clear is the supervisor strategy used by the head actor to supervise the routeesused for might sound like it is the supervisor strategy that is used for supervising the head actorHave I misunderstood the whole thing
; design
Yes its the strategy for the router itself
; general
So I couldnt get my head around using thistype when I implemented this If there is a more elegant way to get the methods return type parameterized then I would like to know
; general
what you are asking for is the MyType pattern which is not supported in Scala see scala mailing list archives look for Martins posts
; general
Why is this lazy its going to get forced by the line below it
; general
Find the error
; general
I dont think we can put the Typesafe Copyright on it if its based on the code that someone else wrote It needs to feature the original copyright header and it needs to have an ApacheV2 compliant license
; general
I dont understand this will be executed all the time
; general
I think this is not needed either take size in bytes in the method or the size in bits in either case its just  8 or 8
; design
This prevents using invalid values which will cause exceptions
; general
This is called upon creation of the AESCounterInetRNG classes only
; general
No Im saying that it will always throw the IllegalStateException
; general
There is no more safety in these than in a manual number if you specify Seed128 when you really mean Seed192 I dont see the added value compared against the added cost They arent to be used by user code anyway
; general
why INSTANCEgenerateSeedSeed256size instead of engineGenerateSeedSeedSize256SeedSize could be    object SeedSize       def applybits Int Int  if bits  8  0 throw new IllegalArgumentExceptionbits need to be a multiple of 8 else bits  8
; design
I think we should call engineGenerateSeedSeedSize128 to dogfood our own code it also makes it easier to hoist INSTANCE in the future
; general
I think that the order should be RandomDotOrgSeedGenerator SecureRandomSeedGenerator and then DevRandomSeedGenerator The SecureRandomSeedGenerator is configurable from the outside but the DevRandomSeedGenerator is hardcoded to devrandom This leaves more possibilities to configure your way around bad devrandom implementations
; general
Thanks for clarifying That is supposed to have the following commentfrom Daniel Dyers code This shouldnt happen as at least one the generators should be able to generate a seedWill fix to make sure it fitsOn 20120702 0421 PM Viktor Klang  wrote     throw new IllegalStateExceptionAll available seed generation strategies failed No Im saying that it will always throw the IllegalStateException  Reply to this email directly or view it on GitHub httpsgithubcomakkaakkapull571filesr1084499
; general
So what you are saying is that I should remove DevRandomSeedGeneratorbecause according to Paul Dyers SecureRandomSeedGenerator code  pThis is the only seeding strategy that is guaranteed to work on all  platforms and therefore is provided as a fallback option should  none of the other provided link SeedGenerator implementations be  useablepOn 20120703 0804 AM Bjrn Antonsson wrote     new RandomDotOrgSeedGenerator   first try the Internet seed generator       new DevRandomSeedGenerator   try the local devrandom       new SecureRandomSeedGenerator   this is last because it always works       Nil I think that the order should be RandomDotOrgSeedGenerator SecureRandomSeedGenerator and then DevRandomSeedGenerator The SecureRandomSeedGenerator is configurable from the outside but the DevRandomSeedGenerator is hardcoded to devrandom This leaves more possibilities to configure your way around bad devrandom implementations  Reply to this email directly or view it on GitHub httpsgithubcomakkaakkapull571filesr1090104
; general
Yes if thats guaranteed to work then remove the DevRandomSeedGenerator
; general
Is this threadsafe
; general
Are these threadsafe
; general
def generateSeedlength Int ArrayByte  InternetSeedGeneratorGENERATORSviewflatMap       g  try OptionggenerateSeedlength catch  case  SeedException  None     headOptiongetOrElsethrow new IllegalStateExceptionAll available seed generation strategies failed
; general
maybe mention which thing is changed mcopyname
; general
Why not unconditionally do this This method is for FJP only right
; general
very good to test this
; general
because if the hardcoded ForkJoinPool prefix is changed somehow I dont want to mess upwe could change it in exactly the same way as we do for threadpoolexecutor using our own counter yes that is probably better
; general
Why not just AddresstoString would allow for more descriptive logging
; general
I was afraid of nonsupported characters such as
; general
Good point Leave it as is and put a FIXME to change it to URLEncode when httpwwwassemblacomspacesakkatickets2123 is fixed
; general
will do thanks for pointing it out
; general
Might be okay here but I generally avoid optional booleans They are only the right thing if you dont really care if you get my drift
; general
That does not really do anything or Its enough to set it once
; general
this should be systemsystemActorOfprops name
; general
ah is it thats good I thought since I received a message I must reset that timeout dont know where I got that from
; general
Should this really be ActorSystemImpl and not ExtendedActorSystem
; general
Im skeptic to the PropertyMaster name does it have to do with Props or Java Properties or what from the eyes of the users
; general
Do we need this as a method isnt it just to override createPropertyMaster
; general
wow a new level of hackiness This method should if its existence is warranted be placed inside findClassLoader
; general
getInstanceFor  says nothing about the semantics can I call it twice and get the same instance back
; general
The reflection mention should perhaps be on the DefaultPropertyMaster
; general
If we remove JavaSerializer I dont want to have this comment hereDocument what this field is good for Can I use it to load any classes I need
; general
We might want to call this ReflectivePropertyMaster So if the Spring guys want to add a SpringPropertyMaster its up to them
; general
Why is the currentSystem on JavaSerializer
; general
I think you ought to remove it seems like residue
; general
Perhaps elaborate here
; general
No explanation why
; general
Dont like putting it here since its easily overlooked that you need to set it when you deserialize anything since you do not know the Serializer that will be used Move back to Serialization imho
; design
Or remove if it is not needed
; general
Document or make privateakka or both
; general
Classy what does the effects have on Android
; general
what a beauty
; general
Its just to facilitate the override
; general
Yeah I had lots of fun writing this  Will make it even more private
; general
might might not  Will add docs
; general
no its on the object and might be useful
; design
because nobody else needs it only when doing Java serialization
; general
okay consider it done
; general
will add a section in the docs which explains that when using Java deserialization this must be set which is taken care of automatically when using JavaSerializer and hence only interesting for people who are writing their own serializers
; general
cant we have a better parameter name than i like x
; general
why full class name here instead of import
; design
YES WE CAN
; general
me too one suggestion is ReflectiveAccess we dont really hide the fact that it is about loading classes from strings and creating instances from stringsclasses
; general
yes but isnt it create semantics ie new instance each time In that case it confusing to name it get
; general
didnt I read somewhere that it was possible to replace it in that case it cant be privateakka
; general
I created it with Josh in mind so ReflectivePropertyMaster is just our default others could implement it without using reflection if they so chose
; general
as I said above it does not necessarily create but our default impl does
; general
True will make public again On the other hand we have other places which require external implementors to put their code in the akka package perhaps we should have a look and harmonize
; design
hmm for me getX always returns the same thing without side effects  get is over used in java land and I hate when I see getters with side effectscreateX is more loose for me it normally creates a new instance but can return a cached instance if that makes sense for the specific implementation
; general
Isnt essentially all code relying on the create semantics of it
; general
I understand that but what about DynamicAccess or DynamicClassMaster Looking at the signatures it is all about fqcn stringsPropertyMaster can be a manager that handles just about anything
; general
I like DynamicAccess I chose PropertyMaster for want of a better idea
; general
DynamicAccess is a good one go with that
; general
patriknw Okay will change to createInstanceForviktorklang I thought the same thing but then realized that we use it for I need this kind of thing and thats what the user told me about where to find it If you reuse something that needs to handle it of course but that should be obvious should it not Am I on the wrong track
; general
I mean loading a RemoteTransport could potentially return one which is not created on the spot it just needs to deal with the fact that a certain ActorSystem will be calling into it Or a MailboxType could well be reused if it does not need any further configuration Or do we really depend on different instances being returned I couldnt really find an example but if Im wrong then this requirement needs documentation for sure
; general
Technically shouldnt there be in the ReflectiveDynamicAccess object
; general
technically it should be on the DynamicAccess trait because otherwise its not overridable good point
; general
def serializerOfserializerFQN String EitherThrowable Serializer      systemdynamicAccesscreateInstanceForSerializerserializerFQN SeqclassOfExtendedActorSystem  systemfold      systemdynamicAccesscreateInstanceForSerializerserializerFQN Seq Right
; general
this was what you mentioned on IRC I guess I agree that it should be getClassFor here
; general
How is this visible to other threads
; general
Id probably looking to use a synchronized block
; general
You could also attempt to be a badass by using UnsafemonitorExit
; general
Is this to try to mask the fact that its essentially routees  routees
; general
Even if the JVM optimizes that away its still not allowed to elicit the fence right
; general
impossible cannot create nonnesting synchronized without writing the bytecode by hand I would have preferred that too but thought that handwritten bytecode is not our style
; general
okay got your point with using Unsafe will change
; general
by virtue of the safe publication through the execution contexts queue but its on its way out now anyway
; general
Should probably check that resizeProgress is true before commencing
; general
Is this public API
; design
now that RouterResize is private the only source which sends this message has set it to true and only the Router sets it to false so either I put in an assert or nothing
; design
so why not just do routees  routees or use Unsafe to write the field which cannot be elicited
; general
not any more
; general
or you do getAndSetfalse in the finally and assert that it was true
; general
Ill switch to Unsafe which also serves as documentation in this case
; general
Yeah Im feeling so BAD today
; general
come to think about it I tried very hard to come up with a reason justifying this barrier and I failed so I removed it Made the routeeProvider volatile for good measure No nonvolatile nonfinal fields no cry
; general
okay settled for that
; general
I think the purpose of the test is valid but it is complicated to test this kind of thing
; general
what is the purpose of wrapping a AskTimeoutException in a AskTimeoutException
; general
What exactly and I mean really the details is the test meant to ensure The current implementation of the test fails if any resize call does not lead to an actual Resize event which is definitely flawed And hacking it so that the test works by doing some blocking misses the point IMHO because that is not what user code would do
; design
To get a meaningful stack trace I tried to find which one of the Awaitresults was failing a test and the original stack trace is of course from the timer task all other exceptions should originate somewhere in user code so there you have a hint whats going on It would have been nice to clone the original exception and inject it into the clone as the cause but I have some dim memories of Viktors failed attempt to do so
; general
A comment detailing this would seal the deal
; general
ok it just looked strange a comment would be great
; general
damn I thought this would be obvious  follow the types and stuff will fix obviously
; general
It starts with 1 routee and the purpose of the router  latch1 busy messages are so simulate that the routee is busy eg computing something or waiting or blocking on IO This means that when new messages are sent all current routees are busy processing a message and a resize should occur to create a new routee that can handle the incoming message That is a rather valid use case I thinkWhere will message 2 be routed now To the first routee that is busy and the resize happens afterwards That would mean that routee1 is busy working and has another message in mailbox while the newly created routee2 is idle
; general
Yes you have correctly diagnosed the problem The thing is I had to make the resize go through the actor in order to ensure proper function in the face of terminating children which would otherwise lead to conflicting updates of the childrenRefs from within and without the actor So either we block ALL senders during a Resize event this would be necessary to guarantee what you describe or we document that resizing happens asynchronously and is not guaranteed to complete during any specific bang invocation Needless to say that the first variant would be deadlock prone and potentially disastrous to remotely deployed or looked up routers since remoting invokes bang synchronously assuming that it will never block
; design
also if you want your scenario to work nevertheless you could use a BalancingDispatcher I think if we document this workaround we should be fine
; general
Just wondering if the RoutedActorRef couldnt have a ReentrantLock just for the initialization It really isnt that obvious to me that cell and actorContext is one and the same And I really dont like fiddling with Unsafe even if the code looks correct The JVM hates unbalanced monitorentermonitorexit calls
; general
Thats what I had but if this is guaranteed to work correctly then Id prefer that over the slightly dubious set field before constructor runs deal which would be necessary when introducing another object in the mixWrt cell vs actorContext if someone breaks it the RouterSpec will fail I verified this
; design
ok I think we should go for the simple asynchronous approach as you suggest and add some note about itwipe the test or rewrite it to the new semantics if possible
; general
I find this confusing if identifyRequest is Some youre both going to reply AND DeadLetter
; general
Not very DRY
; general
true I agree it should not be done for identifyReqestwhat I tried to add was that ordinary messages sent with actorSelection was not published to eventStream
; general
ok perhaps better with varargs
; general
I definitely think we should avoid doing this often Just keep an internal map of these
; design
Isnt that last one going to be very expensive
; general
Change toval hasUnavailableMemberStatus  members exists  m  mstatusisUnavailable  maddress  address
; general
Could also be expressed as    membersfindaddress  addressorElseoverviewunreachablefindaddress  addressgetOrElseMemberaddress Removed
; general
Den e najs
; general
you think about that the values are VectorClock and that is expensive or is it the size operator you think aboutI have an idea that the seen table doesnt have to contain the full VectorClock values but only a hash of them less to transfer faster to compare for equality and that is the only thing that the seen table is used for I think
; general
No I mean building the set and then doing the size I think its probably faster to just bail out early byval seenHead  seenvaluesheadOptionval consistency  seenHeadisDefined  seenvaluesforall  seenHeadgetSo the logic is that if something seen then all that is seen has to be the same this fails fast since it doesnt even begin traversal if seen is empty and bails out as soon as it knows that there is no full consistency
; general
nice and with and additional check on seennonEmpty first there is no need for the Option
; general
Just cache the seenvalueshead first so you dont do it for each member in the Set since that can be expensive
; general
def seenSame Boolean       if seenisEmpty false      else         val seenHead  seenhead        seenvaluesforall  seenHead          hasUnreachable  allMembersInSeen  seenSame
; general
and for the record it is    val  seenHead  seenhead
; general
You cant do valueshead
; general
ok makes sense        val values  seenvalues        val seenHead  valueshead        valuesforall  seenHead
; general
badass so worstcase ON1 bestcase O1
; general
You might want to consider putting the most frequent message tpes at the top
; general
clusterseedNodescollect  case a if a  clusterselfAddress  selfpathtoStringWithAddressa
; general
Why isnt this exactly equivalent as just having yourself as the sender of the message
; general
Mapaddress  Deadlinenow  JoinTimeout
; general
Im not sure I understand ScatterGatherFirstCompletedRouter only supports ask
; general
good point Ill shut up now
; general
didnt we say that empty is badass that one was funny thx
; general
No need to store away peers into a local field
; general
No need for braces
; general
dont know not used removed now
; general
that was an unusual syntax for collect
; general
not immutable everywhere
; general
Not needed here as were immediately transforming the Iterable to an immutableIndexedSeq
; design
and if someone changes it while we are doing that they have themselves to blame I agree that it much cleaner for the array case 1
; general
no just an observation I guess it is because of the break out param
; general
Then they could just as well have modified it concurrently while they were generating their immutableIterable
; general
Why doesnt this delegate to the toCamelUri that takes the ConsumerConfig and passes in ActorEndpointPathconsumerConfig Also why doesnt the docs mention that ActorEndpointPathconsumerConfig is used and why are they used
; general
Camel with big C Capital letter after dot
; general
Why is this version needed Also it doesnt escape the given actorPath potentially creating invalid URIs
; design
Why is this not a case object
; general
I dont think this needs to be mentioned Just clairfy allows actor to to allows Untyped Actors to
; design
This section gives a brief overview of the general ideas behind the akkacamel module the  31remaining sections go into the details   pretty superfluous dont you think
; general
Please omit the port number as if someone changes the example the docs is silently borken
; general
What is this doing here
; general
Should probably use FQCNs here for Ack and Failure
; general
Might want to link to Ask here
; general
should not or must not or can not
; general
Weird line breaks in this paragraph
; general
You can drop Since Akka 010  thats ancient history
; general
Does this imply that the last step in the chain is the sender of the response
; general
Are all these callbackmethodnames verified to compile and be current btw
; general
What does this sentence imply Ie what is it intended to convey to the reader
; general
weird line break
; general
Isnt it sort of weird not to camel case this method
; general
So it even works with remote actors
; general
weird line break
; general
What happens if a toclause points to an Actor that doesnt exist
; design
Who owns the copyright of that image
; general
I think the imports should be visible in the code segments so the user knows whats what
; general
If you do a static import of TimeUnitSECONDS then you can make this a bit more concise
; general
Very nice and clean
; general
I really think this should be renamed to autoAck
; general
Why not cache the toCamelUri instead of the ActorRef
; general
Hmmm arent you required to implement onReceive
; general
missing newline before
; general
private final String uri
; design
thisuri  minatcplocalhost6200textlinetrue
; general
missing space before brace
; general
missing space before brace
; general
Yeah Im not happy with this consumer config in general It just doesnt feel right Should delegate of course hacked together too quicklyIt is used for default settings But it is not correct the consumerconfig is now also used when you have a producer which is weird which doesnt even need it Would not like to expose this to user will find a better solution
; design
Ill just fix this within the wip for docs here and also do the referenceconf config FIXMEs
; general
Ive added a commit with the fixes please check that first before I do the doc fixes probably tomorrow morning
; general
done commenting to keep track
; general
changed to cannot made onReceive final
; general
done  Producers send back to the original sender if you dont change onRouteResponse with Consumers the ActorComponent does a tell or ask  with the Consumer Actor and then talks directly back to the exchange
; design
Changed toThis option gives you the ability to change routes that have already been added to Camel  Consumer actors have a hook into the route definition process which can be used to change the route
; general
yes its just an actor path cool right changed it to akka path as discussed before
; design
you get an exception ActorNotRegisteredException
; general
I think Martin Krasser made it not sure but it was originally in the docs
; general
done still learning reStructuredText
; general
no not with a producer the producer has an implementation of onReceive itself and its final if you want to change you behavior you have to use the onTransformOutgoingMessage onTransformResponse onRouteResponse methods
; design
does this mean that superget returns the right type only if the extension is implemented in Java
; general
As far as I can tell it works fine without overriding get when it iswritten in Java We have samples for thatPatrik25 jun 2013 kl 1035 skrev Roland Kuhn notificationsgithubcomIn akkaactorsrcmainscalaakkaactorExtensionscala     Java API        public class MyExt extends AbstractExtensionIdMyExtImpl     implements ExtensionIdProvider      public final static MyExt MyExtProvider  new MyExt       private MyExt        public MyExt lookup        return MyExtMyExtProvider            public MyExtImpl createExtensionExtendedActorSystem system        return new MyExtImpldoes this mean that superget returns the right type only if the extensionis implemented in JavaReply to this email directly or view it onGitHubhttpsgithubcomakkaakkapull1563filesr4861390
; design
this comment sounds like it should be on a deprecated class a quick survey has turned up a small number of mailing list posts and stackoverflow answers which use it Im on the fence on this one
; design
It is just fine if you do an ext for your own proj or only use scala or only use java We might find a solution I think it is to early to deprecate
; design
Yea all this is extremely weird
; general
I think youre right Im climbing down from the fence to where you are then well see how the grass looks like on the other side
; general
I think the need of this kind of documentation is an indication that something is wrong It would be more uniform if the ActorRef always could be thought of as a path that is resolved for each message sent to it in practice this process will be optimized using caches
; general
Yes I totally agree with you as we discussed yesterday I think we should change the behavior Created ticket 3060
; general
ok that will not happen for 21 series I would guess so this PR is still valid and LGTM
; general
Doesnt seem right to me is the contract in the Serialization API that failure always yields a NotSerializableException no matter what serialization algo usedAlso IMO this shouldnt be special cased here
; design
This message is completely void of information Message from who to who and what kind of message
; general
Unfortunately I cannot see the information from here But the message  should be delivered to deadLetters
; general
where the message is serialized or deserialized this must be handled
; general
Doesnt seem right to me is the contract in the Serialization API that   failure always yields a NotSerializableException no matter what   serialization algo usedThen what should I look for Also IMO this shouldnt be special cased hereI thought thats that the point of the ticket Do not close the channel  just log the error and go on
; design
Anything NonFatal thrown when serializing or deserializing a messageSerialization problems shouldnt be handled here it should be handled where it occurs ie where we have the most information
; general
Its kind of tricky as this stuff runs inside the remote pipeline Ill  try to update the PR
; general
Just to reflect on my code payload is a lazy val so will it throw exceptions Should it be a def instead It is used in at most one codepath
; general
Can this line throw an exception
; general
Perhaps payload should be the Try returned from the Serializer
; general
Yes that would do the trick
; general
No I dont thinks so I think all try blocks were removed around tells in  master but not here I can remove them though
; general
The convention is to use
; general
is the toString representation of DaemonMsg small enough to log
; general
Yes it does the right thing logs message class sender and receiver  paths
; design
please change that in the whole file
; general
could it be useful to include egetMessage in the log output
; general
What do you mean
; general
What kind of exceptions might be possible hereAre all of critical nature nothing that should not happen frequent in production
; general
I checked RemoteMessage and that is fine but I asked about DaemonMsg
; general
Ah Ok I will check then
; general
but you are right that this catch is removed in master and placed inside RemoteDaemon def I dont think it can be too bad to toString DaemonMsg even though it contains Props and stuffLeave it as is or move the try to RemoteDaemon to make it the same as in master
; design
Normally nothing should be thrown during encoding or else you have designed your application to fail to send some of your messages I think that is an error
; general
yes I agree I just wanted to be sure
; general
Will we start logging the payload of large messages when they hit dead letters
; general
deadLetters logging uses the toString representation so if it prints the  whole message then unfortunately it will log the content of very large  messages
; general
That might become a problem but I think that this is better than beforeLGTM
; general
DeadLetters should only output from to and type IMO
; general
Should I open a ticket for that
; general
Yes please do I think thats how DeadLetters should work
; general
yes such things are scary can bring down a system in production
; general
it feels a bit strange to specify the handled messages outside of the actornormally an actor logs unhandled messages itself
; design
fill in the parameters with string interpolation
; general
I think giving a more specific log message than unhandled does not hurt here
; general
I still think the egetMessage should be in the error message    logerrore Remote message  could not be delivered from  to  due to              message sndrgetOrElsesystemdeadLetters recipient egetMessage
; general
But the exception is included in the log statement Isnt that enough
; general
that will only be the stack trace not the actual message of the exception AFAIK
; general
No I just doublechecked the message is in therejavalangIllegalArgumentException Message was too large maximum is 1048576 bytes but message was 1048813 bytes long
; general
great my badOn Wed Feb 20 2013 at 1051 AM drewhk notificationsgithubcom wrote In akkaremotesrcmainscalaakkaremotenettyNettyRemoteSupportscala                recipient                message                senderasInstanceOfOptionActorRefbuild          val sndr  senderasInstanceOfOptionActorRef          try             superencodectx channel              remoteSupportcreateMessageSendEnvelope                remoteSupportcreateRemoteMessageProtocolBuilder                  recipient                  message                  sndrbuild           catch             case NonFatale               import remoteSupport              logerrore Remote message  could not be delivered from  to                 message sndrgetOrElsesystemdeadLetters recipient No I just doublechecked the message is in there javalangIllegalArgumentException Message was too large maximum is 1048576 bytes but message was 1048813 bytes long  Reply to this email directly or view it on GitHubhttpsgithubcomakkaakkapull1143filesr3077559
; general
Thanks for the doc changes
; general
np but I forgot the rst doc Ill change there as well
; general
While it fixes the current issue I dont think it is fully correct this introduces a second Dequeue token flying around which will then consume messages too fast I think the delayed Dequeue sending should be done with an FSM named timer which is then canceled right here before doing the direct thing in case of PassThrough only if you want to be really correct you could also cancel and reschedule for throttling mode to get immediate effect of changed bandwidth
; general
Yes you are right The original timer should be canceled and the new  timing recalculated
; general
sixties advertisement voice  and only FSM timers are nonracy FSM timers when you need nonracy cancellation
; general
sounds good Ill take a stab at it
; general
hmm why not use millisecond resolution seems a bit strange to me that 999ms should be rounded down
; general
yes I also thought about that rounding but in the end I trusted the existing code do we need rounding at all doubleseconds
; general
how about doing self  Dequeue in case of zero delay
; general
I would say  001 or so is better than zero
; general
Shouldnt this be in a companion object
; general
You can get rid of the rounding it would improve the code
; general
drewhk what is the reason for using 1nanos hereI would like to change it to DurationZero
; general
How will timers behave if they are given a zero delay
; general
that should be fine but I would like to change to  def scheduleDequeuedelay FiniteDuration Unit  inboundThrottleMode match     case Blackhole                     Do nothing    case  if delay  DurationZero  self  Dequeue    case                             setTimerDequeueTimerName Dequeue delay repeat  false  1nanos feels like a magic number that we dont really need
; general
Good idea patriknw
; general
nanoTime may return negative values is this accounted for in timeToAvailable
; general
its only used for producing a duration ie diff between two nanoTime btw that is the only thing nanoTime can be used for
; general
perhaps it is the name of queue that is a bit nondescript what is it queueing
; general
The signature for timeToAvailable    def timeToAvailablecurrentTime Long tokens Int LongDoesnt say in which format the currentTime is is it currentTimeMillis similar name or currentNanoTime which would hint at nanoTime
; general
I agree I will change
; general
regarding the queue it is holding the throttled delayed not sent yet messages
; general
Can we rename it so that the name has something to do with the contents
; general
why is this not part of NettySSLSupportapply
; general
named parameter would make it more readable isClient  false
; general
I was thinking about that too I cannot do that however until I remove the old remoting as it handles this by hand
; general
in that case please add a ticket
; general
Lets agree first on if we want to use the buildin netty stuff setIssueHandshake or go with the manual way calling handshake and waiting on completion I think the former is cleaner if it works which I think it will
; general
If setIssueHandshake works then we should use it since thats what its for
; general
Sorry but I changed the tag to multinodetesting to be consistent with multijvmtestingDo we have some standard for this
; general
A little caution here The SbtMultiJvm plugin is hardwired for ScalaTest Has been from the very beginning
; general
ok I simply removed that sentence about scalatest
; general
great I was missing that compared to old make script
; general
Isnt this akkaclusterexperimental
; general
yes good catch the old URL still works but does not have the last two builds
; general
Just add a comment on the purpose of this dense section
; general
Add comment about that this is the place to add new replacements
; general
Wow isnt that a bit confusing
; general
This is a bit unorthodox why do we send ourself as a message with ourself as the sender I vote a more descriptive message
; general
I dont know We use Echo at a lot of places I will remove display of it in this section of the docs It doesnt add any value to show the actor impl here
; design
same answer as for the scala Echo
; general
Maybe mention that phi is using logarithmic scale like dB I know it is in the article but I expect that most people will not read that
; general
I think wrong suspicions sounds funky false positives is better
; general
since the previous
; general
a standard deviation
; general
I have added a summary
; general
Does this imply that application messages cant be 0 bytes Is that an issue
; general
Thats not an application message tho Its the inbound payload Akka protocol right
; general
ok I see
; general
No its even lower layer This is the payload of UDP packets or length  encoded TCP frames No upper layer protocol message can be contained in a  0 byte frame so this is safe
; general
I suggest adding the following to NettyFutureBridge    def applynettyFuture ChannelGroupFuture FutureChannelGroup          val p  PromiseChannelGroup        nettyFutureaddListenernew ChannelFutureListener           def operationCompletefuture ChannelFuture Unit  p complete Try            if futureisSuccess futuregetGroup            else if futureisCancelled throw new CancellationException            else throw futuregetCause                pfuture      And then you can write shutdown as something like    override def shutdown Unit        import appropriate ExecutionContext here      def alwaysc ChannelGroupFuture  NettyFutureBridgec recover  case   cgetGroup       for          alwayschannelGroupwriteChannelBuffersbuffer0         always channelGroupunbind channelGroupdisconnect          alwayschannelGroupclose        inboundBootstrapreleaseExternalResources
; general
This section will be extended later
; general
I suspect ie id est that is would be better than eg exempli gratia for example here
; general
whats the purpose of this
; general
should probably be importglobalimplicit
; general
thats a nice trick
; general
no replacement of scalaVersion
; general
like a bouce
; general
see sbtsiteplugin tickets for substitution
; general
nope its all in the code
; general
How I mean the question stated is Should I use Dataflow or forcomprehensions and I dont see that answered in the code
; general
There is no conclusive answer as described in the Conclusions section below The question is there for search engine hits
; general
So when someone searches for it someone actually tackles that question
; general
Ok I just found the treatment a bit terse I think its ok for now
; general
Need feedback on this line I only report the first failure in the future group is this enough
; general
Yeah I think so
; general
Nice This explanation about dead letters was really needed
; general
and postRestart by default calls preStart
; general
Very good explanation but I feel the wording is backwards I would rephrase it like thisEvery time an actor does not terminate by its own decision there is a chancethat some messages which it sends to itself are lost There is one whichhappens quite easily in complex shutdown scenarios that is usually benign
; design
is for correctto references of its parent
; general
yes very good
; general
good should we also clarify if not already done that watch of remote actor will not generate Terminated if remote jvm crash or network drops
; design
yes good point
; general
shouldnt we add another hook before shutdown in AkkaSpec for this purpose
; general
why not postfixOps in tests
; general
I dont much care one way or the other and I started fixing by adding dots that was matching todays mood if youd like to use postfixOps in tests thats also fine with me
; general
maybe this is the second occurrence will think abou it
; general
ok thats fine I just wanted to know if it was a general rule from the tech lead
; general
Shouldnt we include the port as an Int as well
; general
Int Where Why
; general
Well not an Int but currently the only way to see the failing port from  the code is parsing the message Although it might be not as important at  all
; general
or grab it from the ActorSystemsettings I think the reason for the ticket is only for better log messages
; general
I think Roland asked me in the new IO to report back the address when bind  failed Although the error reporting there is not via exceptions
; general
ok from what I can see in the ticket this should be enough for the old IO
; general
What happens if this throws an exception
; general
good point Ill wrap it in a tryfinally
; general
Make it a reST hyperlink
; general
Link to the milestone itself perhaps
; general
I feel that there is a word missing between testing and is like librarykit or otherwise
; general
Should clarify what kind of properties were talking about here
; general
We need to explain what we mean by Multi Node testing
; general
I also tried to figure out to create an url for a specific milestone but I couldnt find it Perhaps by creating a shared filter I dont think it is that important
; general
Its rather easy to link to the milestone but you have to click to see the ticketshttpswwwassemblacomspacesakkamilestones418132coltrane
; general
kit it is
; general
yes this is importantperhaps also add  without any special configuration Then you can run the same tests distributed on multiple machines
; general
try if this works  nodenode2  user  ponger
; general
good I will adjust the cluster sample to use the same and adjust the tests to not depend on STMultiNodeSpec
; general
Works like a charm Reads much nicer
; general
Yes of courseWhatever happened to blaha substitution in these blocks The Akka version should be a replacement string
; general
It would be nice to have a few words or even better an example when this tool is useful
; general
It was moved to sbt site plugin I still think it is rather urgent or are we going to hardcode the artifactId for pomxml instructions or dont we have any of thosehttpswwwassemblacomspacesakkatickets2461httpswwwassemblacomspacesakkatickets2431Here you dont need it and not the parsedliteral either21SNAPSHOT is replaced by the release script so that is another thing
; general
Im working on this writing a preprocessor in our SBT build seemed the easiest of a lot of crappy ways
; general
Yes but I want the cross CrossVersionfull to go away when we hit Scala final So the preprocessor would be niceIs it going into the siteplugin
; general
Great catch Found a couple more of them Switching between MD and ReST makes me dizzy
; general
that was a new  syntax for me
; general
Yes youre right It actually is kind of weird looking Should I change it
; general
I think you should change if there is no good reason for using the quotes we dont need to learn them jvm internals here
; general
You should ask DrK  I just didnt look close enough No need for quotes Ill change
; general
ah I thought it was your old self
; general
Just continuing the tradition
; general
Can we come up with a more efficient solution
; general
Two loops is more efficient but uglier as wellor we can keep the watchedBy collection sortedor we can have to watchedBy collectionsor any more ideas you have
; general
Since the above solution is O2N anyway theres no need for creating an intermediate collection    def sendTerminatedifLocal Booleanwatcher ActorRef Unit        watcher match         case a ActorRefScope if aisLocal  ifLocal           try watchertellterminated self catch             case NonFatalt  publishErrort selfpathtoString clazzactor deathwatch                  case    NA          watchedBy foreach sendTerminatedifLocal  false    watchedBy foreach sendTerminatedifLocal  true
; design
perhaps add a    def isLocal Boolean  hostisEmpty
; general
Thats the two loops approach but much prettier than I thought I like it
; general
Do we need this comment anymore if we use ActorRefScope wich Viktor proposed
; general
Is it safe to ignore ActorRefs without ActorRefScope
; general
why do we have the trycatch around tell
; general
drewhk Yes it should be privateakka abstract class InternalActorRef extends ActorRef with ScalaActorRef  this ActorRefScope However you can add ERROR logging there to make sure
; design
My intuition would be that not all ActorRefs are actual actors so we might get exceptions when invoking tell But I am not a dungeondweller
; general
I think the trycatch is an artifact from the past where tell was allowed to throw exceptions However if it does throw an exception if we dont catch and continue the system is broken
; general
I think that is gooddo we have any ActorRef without ActorRefScope should it be silently ignored
; general
or just remove the case if it should never happen
; general
How does logging work from here I am inside DeathWatch and ActorCell via self type
; general
Did you see my example code above
; general
but we rely on that tell should not throw exception in other places to avoid sprinkling this all over the place
; general
I saw publish but I was not sure if it applies to my case
; general
Thats true lets remove and pray
; general
Why wouldnt it    protected final def publishe LogEvent Unit  try systemeventStreampublishe catch  case NonFatal
; design
I would let it blow up instead remove the case
; general
The irony is that it will blow up if the default case is removed since the localcheck is done in the guard So if you remove the default you haveto make the guard into an ifexpression in the closure body instead
; general
I noticed that already I just added another case statement without the guard but with matching on ActorRefScope Of course I can move the guard inside the case statement as well Which one do you prefer
; design
perhaps just scrap the match all together and just do    if watcherasInstanceOfActorRefScopeisLocal  ifLocal      watchertellterminated self
; general
Could  sendSystemMessage throw an exception Because there is a similar catch construct just one method down
; general
Not likely but lets open a ticket about fixing all such occurences separately
; general
I am at least halfcertain that Addresses may also be interrogated for localness and there ActorRefScope does not help Id like to keep this comment and we should also add an isLocal method which encodes this convention
; general
But if the Address is the same as our listen address then isLocal should return true
; general
no Address has nothing to do with the remoting implementation the address either specifies hostport in which case it is nonlocal or it does not AddressisLocal only means that this Address cannot be migrated to other systems or nodes without additional information
; design
Maybe we should use a different name for that functionisParial migratableWDYT
; general
no its really about the scope of the address not unlike IPv6 addresses hostonly linklocal global it is basically the realm within which this address is supposed to be unique hence I think there should be both    def hasLocalScope  hostisEmpty    def hasGlobalScope  hostisDefined
; general
Perhaps a small comment indicating the choice of this seemingly magic value
; general
Is this still a sensible figure with the Threadsleep inside
; general
yes it normally completes this part in 25 seconds
; general
um its derived from empirical studies
; general
added the comment
; general
why Buffer and not var of Vector or something
; general
I thought it would be nicer to have a mutable data structure with the  method since thats also what the ComposablePartialFunction exposes But either works of course Do you have a preference
; general
the akka convention is to prefer var with immutable over val with mutable exceptions may exist eg performance reasonsYou can still use For vector its
; general
Isnt the name confusing here PartialFunctions are composable by default This is more like a MutablePartialFunctionWhat about making it a builder and then you can call become after you built an immutable final behavior What do others think
; general
Good idea I made it a builder and added another trait to show classtrait composition of the actor I used a simple receive instead of become hopefully thats just as good
; design
Im making this a oneshot builder to alert users to ordering mistakes eg adding a PF after it has already been built
; general
to be strict this should be done in a finally
; general
Yes of course There is no reason to get sloppy Will fix
; general
enough with ActorSystem
; general
note that when you fw port this the property is akkaloggers
; general
loggers  StandardOutLogger
; general
this is a bit confusing the log level doesnt matter if you use NoLoggerthere is a minor performance difference but for this description I think you should just skip loglevel
; general
I want to use the settings thats part of the ActorSystemImpl and startDefaultLoggers takes the impl
; general
settings is part of ActorSystem api
; general
Its the stdoutloglevel initial logger before the actor system has started up and if you set the log level to DEBUG you will still get messages during startup
; design
I can of course skip the setting since the normal configuration is WARNING but I think that it could be worth mentioning
; general
Yes youre right No need then
; general
yes you are of course right but reading the ticket title again describe how to shut off all stdout logging That means that we dont have a way to shut it off completely We should have one log level for that Not that I like jul but they have it          OFF is a special level that can be used to turn off logging      This level is initialized to CODEIntegerMAXVALUECODE         public static final Level OFF  new LevelOFFIntegerMAXVALUE defaultBundle
; design
Yes I think that Ill add that level and just remove the NoLogger completely Its of no use if you can set the level to OFF
; general
yes sorry for not suggesting it earlier
; general
sorry for being picky about this detail but doesnt this look better if construction fails you will not get an instance back anyway    val system  ActorSystemname config    try       systemlogerrorDanger Danger     finally       systemshutdown
; general
Yes you are right Dont know why I put the try around the system creation
; general
Why the inconsistency about using quotes for the values At the top of the PR no quotes are used
; general
No good reason for not being consistent At least all the doc should be consistent
; general
Not sure about the wording Just a suggestionConcurrency means that two or more tasks are making progress even though they might not be executing at exactly the same time This can for example be realized with time slicing where parts of tasks are executed sequentially and mixed with parts of other tasks Parallelism on the other hand arises
; general
similar behavior as blocking
; general
Shouldnt it be asynchronous by nature
; general
sat the same instantsimultaneously
; general
Id drop  A parallel system is always concurrent but not necessarily vice versa it doesnt convey the truth the whole truth and nothing but the truth anywayParallelism only ever exists at the hardware level Cmp instructionlevel parallelism multiple FPUs ALUs etc multicore fusedmultichips multisocket multimachine etc
; general
shas been finishedreturns a value or throws an exception
; general
after a finite number of steps
; general
This is not true Bounded blocking is still blocking
; general
theres a to missing in between on and the
; general
I think we generally use blocking to mean park the Thread until X
; general
This had the following definitionshttpdocsoraclecomcdE1912001opensolaris8165137mtintro75924indexhtmlParallelism A condition that arises when at least two threads are executing  simultaneouslyConcurrency A condition that exists when at least two threads are making progress A  more generalized form of parallelism that can include timeslicing as a  form of virtual parallelismFor me it seems like Concurrency is a subset of Parallelism by those  definitions as if two threads are executing simultaneously then it  follows that two threads are making progress in an overlapping time periodI know that there are many different definitions so I am happy with  whatever we take
; general
Yes the gateway section of an asych call should be waitfree in my  interpretation
; general
Definition comes from The Art of Multiprocessor Programming Ed1
; general
For meParallelism  SimultaneousnessConcurrency  Mutual progress
; general
You can have concurrency without parallelism and parallelism without concurrency only one thread of execution that only ever runs on one execution unit ie when the thread of execution is not parallelizable be it at instruction level or otherwise
; general
We should use our definitions Imagine a bounded blocking operation of 2 billion years
; general
How is that any different Simultaneous things progress mutually tooBut part of my goal with taking this ticket was to reach a consensus as  there are many books definitions not completely compatible So I consider  this as a team exercise and I am not promoting any particular definition
; general
Its different in the sense that if all other cores are effectively only executing NOPs there is no meaningful work being doneHeh Im just pushing my own view on things here
; general
Go ahead Others can chime in as well
; general
This should also be added httpenwikipediaorgwikiNonblockingalgorithmObstructionfreedom
; general
it doesnt have to be signal of completion to the caller
; general
Please note that some of the terms are defined slightly differently in various contexts Our goal is not to unify these but to provide definitions of terms that will be consistently used in the scope of the Akka documentationPlease note that for many of these terms there is no single agreed definition We simply seek to give working definitions that can be used within the Akka documentation
; general
asynchronous  asynchronous
; general
I dont really get this bit Do you mean that asynchronous calls can be made synchronous by using blocking
; general
as it is necessary that a participant thread be able to delay the progression of other threads indefinitely  as each thread is delaying the others
; general
Have we talked about what a thread means  Its complicated in Akka because eg we could could have concurrently executing actors in a single OS thread Also in the case of a single OS thread can we be said to ever use blocking by this definition
; general
I think this definition is more about the ability to block others more than blocking yourself And if you have only one OS thread than the only way to have blocking is by interacting with a hardware component that signals an interrupt and the thread can proceed
; general
can be used is somewhat weak here We do intend to use these in our docs eventually
; general
I am a bit confused about this question  Can you clarify
; general
No that was not the point The blocking definition I used requires the ability to delay another threads indefinitely If this condition is not present one thread will make progress and there is no deadlock  although livelock is completely possible
; general
Hmmm I think we usually use blocking in a different way to mean holding onto a thread unnecessarily while waiting for something else to happen By the way Im not suggesting this is the correct definition just that the one youre providing is significantly different from our usual informal usage
; general
I actually dont think so What you describe is more like being  synchronous for me  which is similar but here blocking means that you  can potentially harm the progression of other threads We are however  free to introduce another name for this definition if we stick to it  Probably we can differentiate between a blocking object and a thread  being blocked by itself or others
; design
Moving discussionhttpsgithubcomakkaakkapull1152discussionr3098722 to new diffI was a bit confused by what the first two sentence meant Maybe it was just the phrasing Is the following kind of what you mean If not maybe you could try writing those sentences a different way so I can understand them A method is synchronous if it blocks internally A method that performs a CPU intensive task internally is also synchronous It is considered synchronous because despite not blocking internally it still prevents the caller from making progress while it executes
; general
Do we consider it to be blocking if we have independent workers operating on a thread pool and each worker blocks thereby using up a thread I think using up a thread unnecessarily is still an important concept that we want a term for because we want to warn users not to do it even if each of those threads is not interfering with other threads
; general
It would be blocking by the definition used here because the workers that  acquired all of the threads block all other workers sharing the same pool   from making progress for an indefinite amount of time The way the  definition is constructed not by me but various others is so that it  fits nicely in the framework of progress conditions nonblocking  properties below So I definitely want to keep it On the other hand I  never care about names so we can rename it
; general
Okay heres my tune Concurrency means that related processes make mutual progress which differs ever so slightly from Viktors definition whereas Parallelism means that processes make progress at the same time be they related or not This means that the two are completely orthogonal and all four combinations exist and are meaningfulFrom this follows that Parallelism is related to how processes are executed while Concurrency is an inherent property of how processes are related to each other if two processes are concurrent by nature proper synchronization will have to be employed to ensure correctness for all possible modes of execution Properly written actors are not concurrent by this definitionThe only relation between Concurrency and Parallelism which I see is that processes can be related such that a minimum level of parallelism is required for correctness or else deadlock Which brings me to the conclusion that Parallelism is not necessarily instantaneous it is about overlapping time intervals and can also be achieved by timeslicing which is the still the dominant implementation on todays hardwarewe typically use many more threads than we have execution units
; design
returns with or without a resulting value
; general
yes I agree that this is useful but you should spell that out explicitly
; general
We need different terms for these two concepts blocking means parking a thread aka wasting it and for this it does not matter whether it is bounded or not we should qualify it as such where needed Not making progress for indefinite amounts of time can still be desired eg for an actor which tries to break a Rijndael cipher which is indefinite for practical purposes Unfortunately blocking is already taken what are the alternatives We need it in order to describe starvation scenarios which can result in a deadlock hogging squatting The word should have just the right amount of negative connotation to it
; design
yes nonblocking is about not wasting the thread what we need to describe progress of other entities is something like nonhogging or so which means that processing time is bounded maybe we can borrow terminology from soft realtime systems
; general
I think it would be clearer if you added eg by wrapping an asynchronous API and applying blocking to await its result
; design
So I do not subscribe to this definition of Concurrency Concurrent processes can be completely unrelated since concurrency is a property of a system where one or more tasks can make progress at the same time Parallelism is about the possibility of simultaneous execution as in algorithms and hardwareI think that we shouldnt stray to far from wikipedia httpenwikipediaorgwikiConcurrencycomputerscience and httpenwikipediaorgwikiParallelcomputing since that will only confuse people
; general
The important aspect is that the participants in the deadlock do not make externally visible progress for an indefinite time span precisely because their progress is mutually dependent This is where the summary concept of blocking and hogging is useful though most cases will use blocking to achieve the effect
; design
Not just wikipedia other sources give similar definitions
; general
My intention with this definition is to clearly demarcate where synchronization bugs must be considered and where not Since we are doing things in ways which are not yet the commonly established conventional wisdom I think that we have some leeway hereWhat I dont like about the definition you cite is that it mentions time which to my mind does not have a place in defining concurrency You can express concurrent processes with synchronization bugs using calculus and that calculus does not know about the concept of time
; general
You dont have to say anything about time if that is an issue that can be rewritten but I still think that your definitions are going off in a new direction and that will confuse the intended audienceDoesnt calculus have the notion of concurrency as one of its cornerstones How is it defined there
; general
Interestingly enough the large and heavy book by Sangiori and Walker does not list concurrency in its index or table of contents and looking into Milners book yields just section 43 which does not feature a formal definition of the term but merely introduces composition ie concurrent processes and summation ie alternatives The distinguishing feature of the composition syntax is to allow reactions to take place in fact it is the only syntax allowing reactions My laymans interpretation of this fact is that concurrency is intimately linked to reactions supporting my earlier argument
; general
I think InitialGWTimeout is misleading its used for things that are not initial just below
; general
You only need to execute the logic below if x ne expired and x ne cancelled    get match       case expired  cancelled        case other
; general
ok Ill rename
; general
These tests are not tagged as TimingTest and 10 ms might seem like ages but I think it needs to be dilated to have some safety margin on the slow Jenkins
; general
oops it should have been 10 seconds the test should verify that cancel is done before the task exec thanks
; general
Can the ExecutionHandler be backed by a Dispatcher and if so should release be called
; general
I actually checked that it is always an  OrderedMemoryAwareThreadPoolExecutor
; general
It cant be backed by a Dispatcher The code creates a new OrderedMemoryAwareThreadPoolExecutor for the executionHandler if the config settings are present
; general
implmentation  implementation
; general
Maybe a short explanation in the docs about why circuitbreaker is used
; general
there is already one sentence about that
; general
it looks like you have some auto line break setting that doesnt match our conventions 120 char lines are ok
; general
OTOH we have a ticket for making sure that code samples fit into the printed docs which made me press cmdshiftf on a few files in order to do some boyscouting maybe I was a bit too triggerhappy with that one since this file is not in the docsBut let me ask do we really care either way for mediumlong lines wrapping around 80 has the advantage of keeping the github displays more readable at times so I guess Im only saying that requiring long lines might be over the top in Java sources where there are no oneliners by definition
; general
Viktor is often nagging on me for breaking up lines but I insist on keeping them below 120 which I think is a nice max 80 is too shortI see no difference for java and scala for these formatting conventionsDoc samples are different
; general
of course you dont need to undo these formatting changes
; general
Ideally line breaks should be done virtually by formatting in your editor Since that is not the case I dont think we should sacrifice readability for people using unix terminals from WWII 120 is a good modern limit
; general
or rather    if message  null throw new InvalidMessageExceptionMessage is null
; general
yes I guess I should look at the bytecode here the whole dance was because I was afraid of boxing here critical path
; general
I checked its fine with if message  null a primitive is already boxed when entering herethanks
; general
I have no idea if this is important or not Is the test trying to see if rInt can be converted implicitly into a Nothing
; general
please put a FIXME in this will work again as soon as we get a more recent scala version
; general
Added a test that will start failing when this bug is fixed in the Scala Library
; general
Pattern matching ftw
; general
wouldnt it make sense to have two methods    setReceiveTimeouttimeout FiniteDuration    clearReceiveTimeout
; general
I dont like the wrong usage of the name frequency Should we change while we are touching this It should be interval
; general
that is sad
; general
This is Java so null is what they use right
; general
ok then it should be setReceiveTimeouttimeout FiniteDuration which is actually rather convenient from scala alsoand it should have some docs about null  clear
; general
yes I think so now that you mention it
; general
I dont see how this improves over trycatch itself In fact I had to read it a couple of times to follow the logic
; general
OK Ive changed to trycatch There are a lot of possible ways to do the error handling so feel free to spell out your preference Ive used a var and null in this latest version because I figure were going for optimal speed here eschewing Options and Eithers and higherorderness
; general
Cant this code live inside the try so channel can be a val and we dont have to do the null setcheck thing
; general
Same thing here
; general
I was thinking about that but I wasnt sure about sending about closingthechannelsendingaFailuremessage once the channel has been registered But I think youre right
; general
Nice So much cleaner with publishing in postStop
; general
import InternalClusterActor at the top in this method
; general
This looks brittle to me
; general
Why not PoisonPill  shut down cluster on postStop
; general
This means that we need to be very careful about creating children in this guy
; general
Yes i struggled a bit with the dependencies here Do u think it would be better to send the publisher ref to the parent from core and start the metrics triggered on that
; general
Good suggestion thanks
; general
Sounds better And also I guess one wants some DeathWAtch sprinkled to make sure that i fsomeone dies what shouldnt things are handled
; general
Awesome catch So adding this is what provokes a vector clock conflict that leads to a merge instead of a winOne thing though wont the vector clock just grow with new nodes We need to prune it at some point right
; general
yes and thats the case for dynamic port 0 as wellthe ticket is httpswwwassemblacomspacesakkatickets1289activityticket
; general
this is racy child creation could check flag before this and create child after line 90 is finished I think this is one of the few places where Id use a conventional Lock
; general
Yes very trueMay i ask why this is not an ordinary actor25 sep 2012 kl 1628 skrev Roland Kuhn notificationsgithubcom In akkaremotesrcmainscalaakkaremoteRemoteDaemonscala           case t Terminated          case unknown        logwarningUnknown message  received by  unknown this      case TerminationHook         terminating  true this is racy child creation could check flag before this and create child after line 90 is finished I think this is one of the few places where Id use a conventional Lock   Reply to this email directly or view it on GitHub
; general
Yes you may  The reasonin short formis that lookups must work for children which are several path levels distant ie getChild needs to be a custom implementation And at least at the time it was written could be rechecked it needs to be synchronous for creation because otherwise sending to a newly created remotedeployed child would fail
; design
I have introduced a Switch lock to avoid the race
; general
Doesnt that do a copy of the original collectionWould it be preferable to have a foreachChildmethod instead
; general
Really What if its DeadLetters
; general
I wanted ifelse semantics and that is what Switchfold does but Ill change it to the following to avoid confusion    val isTerminating  terminatingwhileOff     if isTerminating logdebug
; general
um shouldnt happen internal api but I have added some safety net including watch of the termination hooks please review
; design
ok changed to foreachChild
; general
ouch backport to 20
; general
wow yes please Some tests for this sucker could definitely be added as well
; general
This is still racy if TerminationHook message is being processed and finds a child but before finishing switchOn that child terminates ie removeChild is called then there will never be a confirmation of the shutdown Terminated processing needs to be done under the switch lock
; general
ok I will do that
; general
parameter remove is not used
; general
This is possibly due to my limited understanding but why terminationHooks foreach    TerminationHook  is missing here We do not notify hook registrants when one of them is the terminated one
; general
ooo thanks so much for one of the cases it happens to be the sender will of course fix
; general
yes the original case was only case Terminated which as I understand it is received when it is time for the system guardian to stopNow I have also added watch of the hooks which is the Terminateda if terminationHookscontainsa ie the hook is terminated before its time to start the stop procedure of the guardianI can add a comment about that
; general
I think we should check whos Terminated here
; general
yes that would feel better they are triggered by these watches right    systemGuardiansendSystemMessageWatchguardian systemGuardian    rootGuardiansendSystemMessageWatchsystemGuardian rootGuardianthere is some initialization order to think about herethis termination hook business is only needed for systemGuardian perhaps I should make two different Guardian classes so that userGuardian can be kept simple
; design
added the check in SystemGuardian that it is the user guardian that terminatescreated a separate class for SystemGuardian more clean
; design
Add a comment that they are ignored for a reason
; general
or instead do  case Terminatedguardian    case Terminatedother  terminationHooks  other  no need to check presence before removal
; general
good suggestion thx
; general
This is not needed right
; design
Is it intentional that if this throws an exception the function may not have been applied to all children
; general
true will remove
; general
yes same behavior as foreach of ordinary collections
; general
allChildren foreach  case a  ifaasInstanceOfInternalActorRefgetParentpathaddress  address systemstopa
; general
allChildren foreach  case a InternalActorRef if agetParentpathaddress  address  systemstopa
; general
patriknw I dont think we want it to blow up if the PF doesnt match
; general
So how about    allChildren foreach       case a InternalActorRef if agetParentpathaddress  address  system stop a      case
; general
since I feel a lack of comments from my side on this PR is not acceptable I have no choice but to say 1
; general
but this class already adds children using InternalActorRef assumption so it is very good to blow up if this fails
; design
Change the filter  foreach to simple foreach then merge
; general
Why the duplication create a method that returns this string instead
; general
I dont think the one source file requirement is important A larger contribution might benefit from being split in several files according to normal conventions It should include tests which should be placed in different files It might be a java contribution which might require multiple files It doesnt make senseThe unit could be the package name
; design
Comment is still valid
; general
well I have not pushed the fix yet but even so I wouldnt fix this precise instance if you look closely the above text is not a repetition
; general
Remoting is experimental
; general
No youre looking at akkaremotetests
; general
Ah I was already so proud to work on something experimental AkkaX project or something
; general
still smells like a bug is hiding in there somewhere
; general
Captain Paste S
; general
I saw in the versioning document that the term Experimental Features is used for Scala Should we also say Features instead of Modules
; general
could you please correct this with major releases I ment minor according to the versioning scheme majorminormicroalso binary compatible between minor  should be binary compatible between micro thanks
; general
thats a looong line
; general
That is true no doubt about it I wonder how that is part of my pull request though  will fix
; general
Im not sure I understand the separation of the contrib docs Will it be a separate document not included in ordinary docsIn that case is this the right name and title
; general
why pass sender in Message and not use forward
; general
Why the tick Rate limiting
; general
I assumed that the contrib docs are included in the normal docs Thats what the build produces now anyway
; general
yes they are included I added this file so I could more quickly build the contrib docs by themselves dont know whether we want to keep this or not contra links to the official docs wont work if we want to keep it then I agree that this file needs some cleanup
; general
I vote for not keeping this then
; general
okay removing it
; general
because you need to store the sender of each message in any case for resending another benefit is to enable normal communication between the two endpoints which otherwise would have to be a bit nonobvious
; general
Maybe a short explanation about the tradeoffs with different values
; general
Arent a definitive article missing in the beginning of the sentence Also the thread pool core size WDYT
; general
I dont think that should go here It depends on OS workload etc
; general
In case youre wondering this was moved within the source file to match the ordering in the documentation
; general
why dont we have getTestActor in JavaTestKit I think getRef is too general
; general
perhaps add an assert on two as well
; general
Im not sure I like this it seems a bit leaky
; general
We dont need to create a new message for each send
; general
What if a is already in the map
; general
ok if I make it privateakkaisnt existenceConfirmed also an implementation detail that shouldnt be exposed to users
; design
true will fix
; general
so one devilish scenario would be 1 create remotefoo2 stop it3 create new remotefoo then it might receive the second registration here before the first Terminated msg arrives and when that Terminated arrives it will remove the second from the supervisors Map and it will not be handledrightyes this is very tricky to cover all corner cases here perhaps we dont have to cover everything but cleanup on best effort basisIm open for suggestions
; general
privateakka wont help Java usersAnd if addressTerminated is there it will need to be explained in the ScalaDoc
; general
Should it overwrite the old silently Should the new one replace the old
; general
new replace old is what I think is bestis there a way to lookup the supervisor from the actor ref path in the Terminated msgsupervisor is always its parent but its a bit more tricky than that for those remote deployedif we can derive and lookup the supervisor then this map wouldnt be neededhowever it doesnt solve the devilish scenario
; design
I think both auxiliary flags are of the same quality here meaning that knowing the basis upon which the actors death certificate was built can be interesting to an actor In this case it might well mean that redeploying on the same remote node will not make sense So Id say keep it private and document what it means
; design
But can it be existenceConfirmed AND addressTerminated If not I think it should be one field with different possible values
; general
That said I do find default arguments hard to refactor especially of such a meaningless type as Boolean so please pass it explicitly where this message is created and use the arguments name to be perfectly clear
; general
this comment should also include an explanation to the relationship with the other ChildTerminated which might be generated by the remote daemon
; general
yeah unless boolean milliseconds is a new invention
; general
didnt you see my scalascala pull req
; general
its the best duration in the universe so it wouldnt surprise me if it handled that also
; general
Perhaps use a Deadline instead
; general
rkuhn I was hoping for a suggestion from you here How do I derive the path of the supervisor from an ActorRef of a remote deployed actor Any existing utility
; design
not handling a Terminated still results in a DeathPactException
; general
You dont would be my suggestion The name mangling code is currently confined to one single method and it should stay that wayWrt replacing or not I dont see the issue the old and new entries will have to be identical anywayFor your devilish scenario the only solution I see would be manual refcounting ie keep an Int together with the value and remove the mapping once the last user goes away
; design
ok keeping it simple then ie as is
; general
actually we have to do that because the actor in the message is different
; design
removed the default valueadded some docs
; general
Changed to Deadline
; general
Isnt this tested by the line above
; general
actually not second parameter list not used in equals    scala case class Foos Stringi Int    defined class Foo    scala Fooaa3  Fooaa2    res11 Boolean  trueI have added a check on addressTerminated also
; design
Nice catch but you missed the same one in akkadocsrstjavaremotingrst I guess it makes us even wink
; general
import SupervisorStrategy Stop Resume  above and use Stop and Resume individually since that is how we want people to write it
; design
Perhaps a link to the docs on lifecycles
; general
REPLcan Im about to open a can of REPL on you
; general
I have instead put forwarders into Act for these things this is supposed a DSL and one import should give you all of it
; general
yes good one
; general
Either we explain that you have to pass Dakkatesttagsincludelongrunning to sbt when you start it up or we change the sbt run command to akkasamplemultinodeexperimentalmultijvmtestonly samplemultinodeMultiNodeSampleSpec
; general
ah yes that is a better way to do it it is a bit magic though
; general
This could be confusing because this returns the message but does not connect connectCommand maybe
; general
is a no go for me
; general
so youre saying it should be soReceiveBufferSize
; general
not relevant for those but if we use the same for the Ack type of messages how does the instanceof match look like in onReceive
; general
I could not parse this
; general
if msg  closed
; general
I dont think this add that much value over new Registerhandler
; general
perhaps place all messages in a separate object TcpMessages
; design
yes but it is more uniform to have factories for all messages
; general
this was a test balloon for making the whole Java API of the Tcp object consistent ie everything is factory methodsscary quotes for the case objects
; design
That is an additional stuff to import I prefer having a minimal set of  imports
; general
yes thats fine but why not def receiveBufferSize
; general
Well its kind of a Chimera SORCVBUF would mirror the lower level stuff  receiveBufferSize is closer to JavaScala soReceiveBufferSize is between  them I personally like it
; general
the conventional name of these is SORECVBUFSIZE and so on and it might make sense to somehow retain this prefix that is the reason for the SO object for Scala but unfortunately it does not work for Java so if anybody has other ideas how to present this then dont hold back
; design
There is no import minimization for Java so I think TcpMessagesconnect is a good proposal
; general
if it were TcpMessagesregisterhandler would that work better
; general
Ah yes if its only for Java it makes perfect sense
; general
it could be a separate object for the java api only containing the factory methods only
; design
yes that is what Im leaning towards right now
; general
Yes that would do the trick I am sold on a TcpMessages class as it will be clear that calling connect gives a message and does not do the connect itself
; design
yes that one is clear but I was thinking about the case classes then you need to know the type anyway
; general
the java api object that I mentioned can contain factory methods and helpers for checking instance type and casting
; design
soReceiveBufferSize or TcpSoreceiveBufferSize
; general
all NoAcknull should return NoAck right
; general
which kind of return do you mean I changed wantsAck below as well
; general
NoAcknull eq NoAck must be  true
; general
shouldnt we use explicit return type
; general
Should it be Command or the dollarthing That decision is one I have not settled on yet
; general
Because we are not lazy Niliterator eq Niliterator
; general
where is it shutdown
; general
seems like an irrelevant microoptimization but we can of course do it I dont see anybody writing NoAcknull in their code
; general
good catch it has been forgotten
; general
Its about discipline We are awesome and so is our code We dont let low hanging fruit hang
; general
this is not java
; general
ah sorry part of the udp changes
; general
okay the deciding factor is that your proposal does not really work  case class quirk
; design
Are we using the Queens English now Or is this a stylish aberration
; general
I think there should be a onetothreeword description of the purpose of the branch between X and Y BTW I miss that in your branch names lately
; general
Pretend Gandalf says it
; general
Yeah I just realized that I had a hard time shortening those names while still maintaining contextA GreaseMonkeyscript that adds a tooltip to the branches pulled from Assembla
; general
no I just find it nice to have some kind of hint what might be the topic without having to go to some websites even if it is very imprecise it usually reminds me of the tickets text
; general
should this be removed
; general
No I think its fine Youre seeing me moving the connect up Im not trying to remove it completely
; general
Same as above
; general
I was waiting for someone to solve it already as I had no idea if this is  the right annotation here  but no one fixed it so I relied on your  review
; general
please add explicit return type Command to all of the methods above
; general
please add explicit return type Command to all of the methods aboveOk
; general
yes that is correct annotationIts even in the bible httpdocakkaiodocsakka210javatestinghtmlAsynchronousIntegrationTestingwithJavaTestKit
; general
Why does it throw if it returns an Option In that case just return a Try instead of an Option
; general
Needs docs regarding what it throws and when
; general
but with the same headers
; general
Might be better to put this in the companion object of CamelMessage so Java users are less likely to see it and Scala users cant
; design
no relative imports please
; general
Add docs about not closing over this
; general
No need to repeat type annotations
; general
messages        forsender msg  messages areftellmsg sender      Map
; general
case msg  FailureResult   MessageResult  contextparent forward res
; general
Any reason why this is done prior to creating the CEA
; general
Document as internal
; general
Document as internal
; general
sealed case class what is wrong with final
; design
So you have made sure that in all places where exceptions can be thrown the actor instance is not corrupt
; design
ie very nice
; general
The UID should go on the individual classes
; general
Why not privatecamel
; general
nm parent type is privatecamel
; general
Why is this an object within a class
; design
replace with import systemdispatcher
; general
I dont get this why call getRouteDefinitionHandler twice
; general
Import the methods you need
; general
damn that intellij
; general
its wrong ill change it
; general
yes makes sense
; general
yes thats better
; general
yep I blame the beers at strangeloop
; general
no i cant think of any will reorder
; general
will put it outside of the class
; general
That doesnt seem to work  stable identifier required but ConcurrentActivationTestthissystem found
; general
changed to final
; general
Yes quite confident the only thing that can go wrong is registration in which case the actor is stopped and never goes into service
; design
wouldnt it be useful to include the name in the exception msg
; general
but preRestart is performed on the old instancewouldnt it be more natural to do it in postRestart which calls preStart ie only in preStart
; general
same comment here regarding preRestart and postRestart
; general
no need for val aref
; general
remove parens around msg
; general
everything that should support Serializable should have SerialVersionUID1Lthat also includes case classes that are sent over the wire or need serialization for other reasons
; general
you mean that I should take it out and get people to use copyI like that Ive actually used copy a couple of times in tests instead of these methods cause the semantics are clear already insteadof some weird named withBody etc let me knowMaybe all this with stuff should be removed ar least for Scala and leave things there for Java and also leave in the methods for Scala that do something different than case class copy style
; design
Ill add it
; general
Ah right thats correct Ill remove it
; general
No i was only thinking that you should use copy internally since its a case class You need this for java25 sep 2012 kl 2125 skrev Raymond Roestenburg notificationsgithubcom In akkacamelsrcmainscalaakkacamelCamelMessagescala           def withoutHeaderheaderName String CamelMessage  copythisbody thisheaders  headerName      def copyContentToto JCamelMessage Unit        tosetBodythisbody      for name value  thisheaders togetHeadersputname valueasInstanceOfAnyRef        def withBodybody Any CamelMessage  CamelMessagebody thisheaders you mean that I should take it out and get people to use copy I like that Ive actually used copy a couple of times in tests instead of these methods cause the semantics are clear already instead of some weird named withBody etc let me know  Maybe all this with stuff should be removed ar least for Scala and leave things there for Java and also leave in the methods for Scala that do something different than case class copy style   Reply to this email directly or view it on GitHub
; design
Could be more cheaply expressed as    import context watch actorFor parent     seedNodes foreach        seed  if seed  selfAddress watchactorForparentpathtoStringWithAddressa  InitJoin
; general
What if it was empty before the attempt to remove address
; general
if seedNodesisEmpty  seedNodes  immutableIndexedSeqselfAddress
; general
Id put the    seedNodeProccess  if  else if  etc
; general
Id move this up one line
; design
Id move this up one line
; design
hmm I rather like this style better matches the intent with the indent
; general
Is info level ok here Should it be a warning Somebody actually tried to do something wrongSame thing above
; general
in the existing cluster
; general
yes Ill make it a warningcould be triggered by jmx user command but still its wrong
; general
yes and I think scalariform indentation will be wrong if placing it above the case
; general
you mean initially empty that is not possible and is ensured by httpsgithubcomakkaakkapull1136filesL0R899
; general
parens are not needed here
; design
why not import LsKeyslsync
; general
Isnt this on by default for SBT 012x I remember removing it recently since it wasnt needed anymore for sbtmultijvm and the sbtassembly plugins
; design
May be but it isnt what the docs for it saysThere is also a release available if you are using sbt 0120RC1addSbtPluginmelessis  lssbt  012resolvers  Seq  ClasspathssbtPluginReleases  OptsresolversonatypeReleases  httpsgithubcomsoftpropsls
; general
I think that is only needed for 0120RC1 Just like the doc says
; design
Everything else looks to me like it just avoids the reverse DNS lookup for incoming connections without changing the semantics well the guess of the peers address changes from possibly resolved to numeric IP but we should not depend on that so either this change fixes a bug exposed by the aforementioned shouldbeirrelevant change or I dont understand it
; design
val naked  nakedAddresshandleremoteAddressso this was only a cleanup to skip doublenaked should be same result
; general
Do we lose the sender here is this intentional
; general
Do we lose the sender here is this intentional
; general
it should be the same as before bad things happened httpsgithubcomakkaakkacommit514f68aec0a0ce2b7d72d9440531c0c1411e83d1L4L244
; general
Yeah but is it correct not to forward
; general
could you create a separate ticket for that then  I dont know if it has any implications but I hate branches that fail and would like this to be merged
; general
Nevermind its a test p
; general
shouldnt we avoid relative imports like this
; general
Absolutely sorry about that I blame IDEA wink Will fix
; general
why not just return 0L
; general
So I thought that when we stopped the driver the time would progress as normal for the timer Of course we can let it stand still We should still do some kind of sleep so the timer thread doesnt busy spin
; general
well at this point its stopped so it should really not spin anymore Id think
; general
The driver is stopped but the timer thread is still alive at least until the close method is called on the timer Yes that happens right after each other but the timer thread might start to spin until that happensJust trying to avoid weird behavior on really slow boxes Yes we have one of those you know
; general
if this fails then youve already scheduled it
; general
Is this really going to shut the window completely
; general
Id expect to see some handling here if the compareAndSet fails
; general
Right current  currentBucket wont necessarily hold when enqueuing later
; general
I wonder if the tail TaskHolder could be annotated with its bucket so you could do an atomic check when the new TaskHolder is enqueued
; general
to be precise it only fails if the job has already run which is precisely what it shall do in that case
; general
I think so but that was the question Id like a second opinion on
; general
currently TaskHolder is 24 bytes large that would make it 32 also I dont think it is necessary since during the switch the value makes a transition X  Pause  X where X is guaranteed to be different from X so we can detect the change without internal round marker
; design
Ignore previous comment
; general
That cant be right
; general
I dont get you The bundle provides correct Manifest Is it a question of Scala versionsThe problem we have is to use several versions of Scala 29 and 210 in the same container By default the bundle is resolved with the higher version and the rest of the project is using 29
; general
Akka 131 will not work with Scala 210 and Akka 13 is EOL ie there is no 132 planned
; general
scala 210 is not contained in this range  those are every scala 29x onlyOk thanks for the information about EOL
; general
Man that exclusiveparen always gets me too similar to
; general
Instead of putting isFuture checks in each branch of the match clause Id have a special match clause for when isFuture is true and another when false separates the concerns
; general
hmm this would not lead to less lines or less noise there will always need to be these six cases so I dont see a compelling reason OTOH Id need to repeat the implicits and I dont want to put them outside because calling universelub is a costly operation
; general
Nah you could just make them lazy vals But in any case its just my experience that repeated checks are costlier to maintain than single ones
; general
are these casts really necessary ie are the proper types not available for the compiler without our help
; general
this for example smells like it might use a type parameter to match the input with the output
; general
I think you mean   by running binkaraf
; general
please add copyright header
; general
please remove commented portions unless used in certain circumstances in which case please document
; general
this is the old way of doing things the new remoting is configured differently but you are just using the default values so probably better remove this section possibly apart from the next line
; general
running on a fixed port is always problematic because it keeps us from running eg different PRvalidator jobs in parallel for now just change to an otherwise unused port here and then well think about how to do it better afterwards
; general
please add comment for OSGidummies what exactly this does I think it just publishes two services within this bundle
; general
ouch yes this needs to be understood and fixed
; general
okay I see that there are several things for me to learn
; general
please mention that that is tracked in ticket 2990
; general
javapublic ServiceReference   getServiceReference return referencedue to the wild card I dont see yet a way to enforce the typing I may change the instanceOf to pattern matching if you prefer
; general
I suspect Raman added it here to let people add bundles to the container no more useful
; general
for me also
; general
By the way it may be more useful to use directly the provided registerService in akkaosgi ActorSystemActivator
; general
should be corrected now
; general
I tried it again this code was developed by Raman and got this error first Exception in thread RMI TCP Connectionidle javalangNullPointerException    at comtypesafeconfigimplSerializedConfigValuewriteOriginSerializedConfigValuejava202    at comtypesafeconfigimplConfigImplUtilwriteOriginConfigImplUtiljava224    at comtypesafeconfigConfigExceptionwriteObjectConfigExceptionjava58    at sunreflectNativeMethodAccessorImplinvoke0Native Method    at sunreflectNativeMethodAccessorImplinvokeNativeMethodAccessorImpljava39    at sunreflectDelegatingMethodAccessorImplinvokeDelegatingMethodAccessorImpljava25    at javalangreflectMethodinvokeMethodjava597    at javaioObjectStreamClassinvokeWriteObjectObjectStreamClassjava940before the related exception the NPE is reliated tojava  not private because we use it to serialize ConfigException    static void writeOriginDataOutput out SimpleConfigOrigin origin            SimpleConfigOrigin baseOrigin throws IOException         MapSerializedField Object m  origintoFieldsDeltabaseOrigin        for MapEntrySerializedField Object e  mentrySet             FieldOut field  new FieldOutegetKey            Object v  egetValue            writeOriginFieldfielddata fieldcode v            writeFieldout field                writeEndMarkerout
; design
sIt finally provideFinally it provides
; general
I assume not including the extensions section is because in an OSGi container you want the extension to be initialized in an ondemand fashion not at startup
; general
jamieallen we have changed that in master the cluster extension is always loaded when using the ClusterActorRefProvider
; general
Oh okay  Thanks Patrik
; general
Feel free to ask questions here if any Ill do my best to answer them
; general
Ok to be negative
; general
Why the Optionsuffix
; general
this is an internal message sent to itself so I see no reason to do any boundary checking if that is what you are suggesting
; design
its nothing I like but its a consistent naming I have used for the optional addresses in the FSM data and the reason is that in pattern matching I have SomenewLeaderalso I think newLeaderOption foreach reads better than newLeader foreachif you have suggestion of better naming I dont mind changing
; general
I actually find the case m  MemberDowned  MemberRemoved more readableIs there a performance benefit
; general
no it didnt compile m must be of type MemberEvent so that I can use mmember
; general
Ah sorry You changed the collection to ClusterDomainEvent Missed that
; general
this is some kind of pattern matcher deficiency since it should clearly be able to figure out the LUB of MemberDowned and MemberRemoved but it doesnt
; general
And this isnt allocating anything on each invocation of this method
; general
Sloppy of me to assume it wouldnt Just checked and javap says No The allocation is in the catch any block of the method Its only when there is an exception
; general
Cool then its fine well unless the exception is an OOME
; general
Is the code reuse between the two branches more important than readability    case e InterruptedException       unreserveChildname      Threadinterrupted  clear interrupted flag before throwing according to java convention      throw e    case NonFatald       unreserveChildname      throw e
; general
Probably not I can expand it into two cases if thats more readable
; general
I think we can safely throw here the system messages will then processed when the mailbox runs again And then turn line 236 into if Threadinterrupted because processAllSystemMessages does not actually check this it only catches IE and rethrows
; general
Sure we could throw directly after the invokeThanks for making me reread the code and comments in processAllSystemMessages It relies as you pointed out on systemInvoke throwing InterruptedException which it no longer does Will fix
; general
does it need to be public
; general
alright I have added public to all similar descriptions in referenceconf files
; design
Shouldnt there bee a barrier here for everybody so fourth dont start running the next test case
; general
Ok I see the after  statement now but wont that just work for the first entryWhat will the test conductor think about you reusing barrier names
; general
There is in after L42
; general
Why will it only work for the firstI assume that test conductor doesnt care about reuse When all nodes have entered the barrier it is released and same name can be used againrkuhn is that correct
; general
Just being pessimistic  Read the barrier code in the TestConductor and as far as I can see it should be fine to reuse the names
; general
ok but I tink there is a race when combining barriers with shutdownremove Got that failure on jenkins akkapullrequest now We have a ticket for that 2137
; general
correct in principle but might show errors in the wrong location what if the first version is not entered by a node but the second one is hard to imagine for a cleanly written test but nevertheless So I would recommend as a style that barrier names should not be reused unless good reasons force it
; design
Is this the correct order Should we introduce a composite operation to avoid accidental fcukups
; general
Yeah we have already talked about that If there is not a ticket already add one
; general
Already opened httpwwwassemblacomspacesakkatickets2137
; general
it was the correct order or at least mostly working order but when 2137 is merged it will be the reverse order and I have already fixed that in my local branch of this pull reqIs there any case where one want to do shutdown without a removeNode Easiest would be to always do removeNode under the hood when doing shutdown
; general
If it isnt done automatically Id like to have a comment explaining why the order is as it is
; general
I tried to say that the order will be        testConductorremoveNodethird        testConductorshutdownthird 0
; general
This config property is a durationshould be 30 s
; general
Sure I know Typo
; general
Pushed fix Thanks
; general
so the reason that you increase this is to make sure that the awaitCond Leaving is ok before Exiting happens
; general
might be good to add a comment here that you have increased the leaderactionsfrequency so that Leaving is detected before Exiting
; general
It is so I have a chance of testing 1 before 2 happens I could also split up in two tests Setting the duration to 30 seconds to turn it off in one test and normal in the other WDYT
; general
I think it is fine but a small comment about it might be good
; general
Ok Will do Thanks
; general
Might want to mention that we will not guarantee binary compatibility if the trait is used
; general
Sounds  strange given that we do support other traits How would you word it
; general
Use of the trait is discouraged because of potential issues with binary backwards compatibility in the future use at own risk
; general
Please use infix operator notation for higher order functions Scala Style Guidesystem foreach shutdown
; general
Get rid of the curly braces and the unnecessary type annotationthiscontext  None
; general
Get rid of the curly braces and the unnecessary type annotationthiscontext  None
; general
See next line
; general
Dont use type annotations for local variables
; general
Dont use type annotations for local variables
; general
Add type annotation to notprivate members
; general
All semicolons like these need to be removed
; general
Put explicit method return types on all methods
; general
No braces on case clauses
; general
Remove this it should be obvious when something is built
; general
All tests should be WordSpecs with Mustmatchers
; general
How is this to be used from Java
; general
The two other constructors noargs and plain String have been added to allow Java users to use the ActorSystemActivator but if you want this third option to be available for Java users as well Ill refactor this class to have a protected strategy method that people can override to achieve the same goal
; design
This implicit conversion is meant to make it easier for people to build their test bundles using the Fluent API in our BundleDescriptorBuilder  with this thing people can just use the BundleDescriptorBuilder or plain PojoSR BundleDescriptor whatever they prefer and mix them up transparentlyI can remove this implicit def obviously but all it would do is require an extra build call on a method like this   val testBundles SeqBundleDescriptor  Seq    bundleTESTBUNDLENAMEwithActivatorclassOfTestActorSystemActivator
; design
I vote for the build to be there since in 210 and forward youll have to import languageimplicitConversions to use that wo warnings
; general
Alright then document this constructor as Scala API and the others as Java API
; design
is there a specific reason why youre calling this twice
; general
might just say this  null
; general
on the other hand isnt null bad and None is much nicer
; general
If I understand correctly which may well not be the case then it should be possible to have actors created automatically by referencing them in the XML file If so please add a test case which demonstrates this
; general
Yes this is a good way to do it We dont even need to obey any order on the incoming requests so it is fine to just send them via    endpointFuture onSuccess  case ref  ref  assoc
; general
What happens if a write is attempted when buffers are full
; general
Why is this a Future and not a strict value Making it a Future basically means that someone either needs to block on it or that there is a time window between signaling full and the writer actually throttling see my question above
; general
Yes there is truth in that
; general
result1 must beaddressA    result2 must not be null
; general
Thanks I have to familiarize myself with more idiomatic test assertions
; general
dummy arguments are best named  because then it is completely clear that they are not used
; general
this volatile does not serve any purpose I can see no threads involved
; general
you could also just return the handle from here and store it in a val handleB
; general
leave this off it is implied
; general
This looks really useful would be interesting to see some test cases using it I mean in TestTransportSpec for simulating complex series of events
; general
that obviously needs documenting
; general
this should go into the akkaremote section
; general
Thats the plan I just wanted to keep it separate from the rest until  everything settles
; general
you might want to put in a FIXME so that you dont forget to include the changes to that code in master at the point when this goes live no need to rush right now
; general
this is a bit of a strange name dont know what it is used for yet
; general
this could potentially benefit from being a FSM eg with InitializingBufferingWriting statesId also remove the active vs handleOption duplication just have handleOrActive where None means active
; general
uncorking the write side is not logically connected with starting the read side so I wouldnt put these within one method
; general
OTOH it looks like this is a leftover
; general
no need to pass the handle here just do this line in the writer instead
; general
decodePdu should be lazy wrt decoding the actual payload since we might throw it away in untrustedMode it might be a mem bomb
; general
this will need to be fixed to use the actual appropriate address right
; general
we conventionally call those Settings
; general
I guess you know what Donald would say  and for such a small match at that
; general
Why is this optional
; general
Add FIXME document
; general
On all o em
; general
Why is this public API
; design
tablegetgetresource match       case Somer  risAvailable      case   false    Creates fewer classfiles and less allocations
; general
This will create one new detector for each colliding thread is this by design and if so why
; design
Why do we wantneed all these debugs
; general
No need to create a StringContext for a single param
; general
Theres no check here whether reader is already nonnull or not
; general
remove semicolon and add newline
; general
what if buffering is already false
; general
what if buffering is already true
; general
I think this could benefit from being an FSM Actor or just use become
; design
Why this catchall
; general
What does that mean
; general
I think this is erronous usage of implicitNotFound
; general
Right an FSM makes completely sense here Id also remove the active vs handleOption duplication just have   handleOrActive where None means activeOh yes this is a remaining of a huge refactoring Thank you I will  change
; general
Ok good idea
; general
Yes I used the assumption that it is called on startup Not nice will  refactor
; general
Thanks good idea
; general
Yes definitely This is mentioned in a TODO comment at another place and  this is something I will fix I have to change the protobuf definition  though and I wanted to postpone it after everyone says OK to the current  architecture
; general
No this code is not called from my Remoting class this is just there to  make the old NettyTransport happy he inherits these methods In my code  this is handled in EndpointWriter and it uses the address in the handle
; design
ok so be it
; general
Backwards message compatibility At decoding I assume the old akka  protocol if this is not set But I guess as it seems now this could be  required
; general
This is to be used with the failure detectors Do you think we should hide  it Optionally we can move them to something like remoteutil and leave  them public if people have the irresistible urge to use failure detectors
; design
Ok will change
; general
Patrik needs them I am happy to remove them if he agrees
; general
Yes but only one will win How can you avoid that the colliding threads  do not create competing versions
; general
There is only one child
; general
What is the coding convention for strings When to use interpolation  formatters or plain concatenation
; general
Oh Thanks While it is unlikely that this method gets called twice it is  better to play safe indeed
; general
Then the stash is empty already
; general
That is exactly what Roland proposed too and I agree with both of you on  this
; general
No other thing can arrive This looks stupid now but payload and control  message deserialization will be split in two  and then this match could  go away I need to change the protobuf though and I do not want to touch  it before you say OK to the overall architecture
; general
Oh well Sloppy docs are sloppy I will improve the quality Thanks
; general
sYou commented earlier No need to create a StringContext for a single  param Could we agree on a convention when to use which
; general
The logger is only created once right
; general
Shouldnt these be FiniteDurations
; general
Arent you running SBT Scalariform ought to have changed this into the rightarrow
; general
you could rewrite the 2 lines above ascase a if a eq ra  transportaddressesa  SomerootPathaddress
; general
So this field is here to guarantee that two remote actor refs using different transports but points to the same actor on the other end will compare equals What happens when actorFor is used with different schemes
; design
So what is the semantics Can this method throw something
; general
And users generally shouldnt create instances of them
; general
How often is this called
; general
I think we should enforce this the responsibilityuniqueness when things are put into the transportMapping and not per inbound message
; general
Shouldnt those 5 seconds be configurable
; general
mapping uniqueness should be enforced here
; general
who is the sender of this tell
; general
Or will it cross over the wire
; general
Should be documented as nonthreadsafe since it doesnt use CASlocks to ensure that there are no lost updates
; general
I think HeadActor needs a new and more badass name Robert
; general
no need for all those braces
; general
This is not a strategy its a Directive
; general
Its also only used in one place so doesnt need to be a def just move it to where it is used
; design
transportsAndAddresses is just used in success move the expression in there
; design
Is it OK to get N Listen messages become after first or not
; general
Is it OK to get Send before Listen
; general
No need for the braces
; general
No need for braces
; general
No need for braces Just adds vertical space and has an annoyance factor cause I need to scroll more remove it please
; general
Dont add an onFailure and an onSuccess 2 callbacks when only a single onComplete is needed
; general
Should this really have a random name
; general
Also this method is only used in one place so theres no reuse to be had so just inline the logic here
; general
Id get rid of the val wrappedTransport and inline that whole expression where wrappedTransport is used
; general
no need for the braces in try here
; general
Create a new Set for each call Why
; general
Is this user API
; general
so we throw a match error if other party sends Connect without origin
; general
Why yield serialized    for originAddress  origin serialized  serializeAddressoriginAddress        controlMessageBuildersetOriginserialized
; general
Do you need braces here
; general
Only used in one place inline expression there
; general
What is the purpose of this object
; general
Is this public API Is it intended to be extended or something
; design
associationHandlerPromisefuturemapHandlerRegistered pipeTo self
; general
register a single onComplete instead of onSuccess and onFailure separately
; general
This is not a TODO this is a FIXMEFIXME  must be fixed before releaseTODO  nice to do in the future
; general
Why is the queue a List append is extremely costly
; general
put extends on the same line please
; general
use trySuccess instead of the checkthenact
; general
Is this public API
; design
Dont think this line is needed
; general
Id do    def fakeTimeGeneratortimeIntervals SeqLong Clock       new AtomicReferenceListLong        timeIntervalstailfoldLeftListLongtimeIntervalsheadacc c  acc  ListLongacclast  c         extends Clock           tailrec override def apply Long              val current  get            if compareAndSetcurrenthead currenttail currenthead else apply
; general
This is a FIXME please revisit all TODOs here and make sure that the ones that have to be done are FIXMEs
; general
Ok then I will review the uses of interpolation in my code and remove the  ones that might impact performance
; general
Most probably yes Will fix
; general
This should be removed from RemoteTransport I dont think that the RARP  should have the right to control clients
; general
Ah right toSeq will be the right thing
; general
When a remoteActorRef is created The result is cached in the  RemoteActorRef
; general
I think we should enforce this the responsibilityuniqueness when   things are put into the transportMapping and not per inbound messageIt cannot be done easily The problem is that the address part after the  scheme string in the URL may have transport dependent meaning so only the  specific transports know if their responsibilites overlap For IP based  things subnet masks are the most obvious filters but who knows what kind  of filters people want
; general
Oh yes This is inside a config parameter forgot to use it here Thanks
; general
No it is strictly local
; general
This is also local
; general
And this is local too
; general
Yes it mustnt be used outside HeadActor I document it and hide it
; general
I think it should be named after me EndreActor That would be badass  Joke aside if you have any good name ideas not just here then dont  hesitate to share  I am triggerhappy to rename things
; general
No and it is not Ok to receive multiple Listens become powers needs to  be activated Will fix
; general
No Will fix
; general
The idea was to improve readability somewhat So in general I should  inline all local variables functions that are used at exactly one place
; general
Ugly hack is ugly I will fix it
; general
Nice catch We should throw an exception
; general
What is the purpose of this objectContains message classes constants and a handful of functions that are  used at several places
; general
It will exceed the line length limit
; general
Who has this method
; general
Umm maybe this should be backported to cluster as well
; general
We use it for our testing of the failure detectorI dont think its necessary to expose that to users The less api the marierI think it should be scoped to the failure detector define inside its companion obj
; design
You can remove them
; general
style in this case the if is not a guard of the case and I would write it as    case Sendmsg senderOption recipient       if buffering sendMessagemsg recipient senderOption else stash
; general
I think it would improve understandability anyway to use Terminatedreader
; general
and that was of course with    reader
; general
try if handlewritepdu
; general
addresses is a Set right then this should probably use mkString to construct a nice logger name
; general
is it intended to include the Set in the string
; general
List Seq or IndexedSeq
; general
inside actors we normally dont use private
; general
uuh inlining that would be pretty ugly
; general
we have those to be able to run tests directly inside Eclipse when the scalatests runner is working we will remove all of them
; general
Id add some indentation of the whole config and fix formatting of next line
; general
wow more than 120 chars
; general
Yep it will be 130
; general
Im with Endre and Patrik here theres nothing wrong with naming singleuse values
; general
this means that there is no dedicated supervision for this manager and nobody watches it either also it would be nicer to not create toplevel names with some semicomplicated scheme there should probably be a TransportSupervisor which reports to the HeadActor or similar
; general
ouch this will break with ClusterActorRefProvider but well want to use one remoting for all purposes this needs some thought
; general
Wow thanks I was not aware of that I have to look at CARP
; general
so far ClusterActorRefProvider extends RemoteActorRefProvider
; general
I think these would benefit from something like    def apeTmsg Stringthunk  T Twhich is used like    apeError while decoding incoming Akka PDU codecdecodePdupdu provider
; general
and then remove these helpers because the result would be oneliners
; general
Id remove a lot of  on this line akkaloglevelINFO
; general
well I guess ape could be implemented using Try but the point is really to transform the exception which is thrown
; general
Good ideas thanks
; general
Id probably check isEmpty before size
; general
This seems very complicated simplify
; general
This comment seems to be repeated througout the docs is this intentional
; general
yes since consistenthashing isnt in master yet so I will change once it is
; general
This one can be folded into the pattern match
; general
You mean that this event is sent out even if there is no convergence Is that a good idea
; general
yes but then Id have to add another one to ignore the case when its not convergence
; general
Probably more clear if you name the actor and move the message send to the line below
; design
yes it contains the convergence flag perhaps that is confusing
; general
Do you prefer this       find the node with least routees      val numberOfRouteesPerNode MapAddress Int         currentRouteesfoldLeftcurrentNodesmap  0toMap  acc x           val address  fullAddressx          accgetaddress match             case Somecount  acc  address  count  1            case None         acc  address  1                        val address count  numberOfRouteesPerNodeminBy2      if count  settingsmaxInstancesPerNode Someaddress else None
; general
I will do that change to LeaderChanged It will be harder to keep track of but more useful httpswwwassemblacomspacesakkatickets2518
; general
Good Does not make sense to observe not yet committed state
; general
Could be encoded with OptionEitherLeaderChanged LeaderChanged and remove a var since I assume they cant be both Some at the same time
; general
Does this do what you think it does
; general
Is this really the desired behavior
; general
I hope so  and as far as I have tested it doesIts supposed to publish the stashed event and store it in publishedLeaderChangedDo you see that it does anything else
; general
yes all other events should just be published to the eventStream
; general
The  is not a function its a block of code that evaluates to a function
; general
I think that piece of code is deceptive Can we make it more readable
; general
But it doesnt check if its an event it could be some stray message and then it wont get sent to unhandled and its hard to debug
; general
it starts here httpsgithubcomakkaakkapull703filesL1L203and diff only returns events so I dont see the problem I can move all this to a separate function to not mix up with the actor receive which I guess is what you did
; design
that was a strange link conversion it starts on line 203 diffoldGossip newGossip foreach  event
; general
empty path for deploy
; general
acc  address  1  accgetOrElseaddress 0
; general
Roland implicitly suggested withDefault instead of map  0toMap
; general
so something like     val numberOfRouteesPerNode MapAddress Int  currentRouteesfoldLeftcurrentNodeswithDefault  0  acc x       val a  fullAddressx      acc  a  acca  1
; general
Shouldnt this be the FQCN
; general
I dont know what that path is used for That was how it was done in corresponding RemoteRouterConfig I have changed to use named parameters instead so that the default value for the path is used ie
; general
ok thanks that is nice I have changed to something like thatwithDefault doesnt replace the map  0toMap because that is the conversion from Set to the initial Map but anyway its a nice improvement to use withDefault
; general
I dont like this
; general
Does this actually work
; general
notafan here also
; general
I only noticed because tons of tests failed otherwise
; general
ouch I blame my scrapped Eclipse workspace for losing this piece of configuration
; general
Is this correct1 second
; general
it will be once we update to scala 210s next milestone
; general
Honestly Im not a fan of it anymore But nothing to do about it Ideally Id like to see    class A extends Actor        context become                   One thing to learn and no special treatment of the first behavior
; design
That is already possible with trait Act the DSL
; general
Yes but that is a very different thing
; general
yup just sayin
; general
isnt this breaking the scaladoc again we have a script for doing this or isnt that needed any morescriptsfixprotobufsh
; design
I have not tried scaladoccing this but the failure for that one had a different cause something with a builder
; general
Ive done a publishlocal to be able to verify and try the artifacts without any problems That should have created the docsThis file is also in test if that makes a difference
; general
ah I didnt notice it was in test thought that it was the generated one all good
; general
Why are these removed
; general
They are only needed for sbtosgi  030 It has been upgraded to 030 which is the latest stable
; design
Have you verified the generated jars we need to make sure we dont botch the RC
; general
Yes to the best of my knowledge To quote my own pull request Locally published artifacts have been verified to run a MultiNodeSpec based test which should cover remotingIs there any smoke test that we have or should I add a ticket to create one
; general
I dont understand what the MultiNodeSpec has to do with OSGi bundlesHave youve verified the bundle metadata and the generated poms
; general
I have no idea what the bundle metadata and the generated poms should look like Please enlighten meAs for the MultiNodeSpec I just made sure that the bundle jars which are the only jars we publish actually contain classes and are usable in the best way I could think of
; general
Generate and publishlocal the jars apply the osgichanges publishlocal new jars compare the old with the newThere should be no difference if sbtosgi doesnt do things differently in which case we need to investigate further
; general
Ah sorry Now I get itYou were referring to the sbtosgi changes specifically I was talking about our jars in generalWill double check
; general
Great thanks Also cmp the poms
; general
Since I did two builds I had to zero out the publishing dates in all ivyxml and MANIFESTMF files with some sed s but apart from that all is OKEvery byte matches in all produced files
; general
not much use of a marker when there is only one concrete implementation we can add this later if needed
; design
Im a bit sceptic about this symbolic operator Its not in symmetri with Id simply name this remove
; general
could be an import in the beginning instead similar to the other things
; general
is the toSet needed isnt it already a Set
; design
why not use toSetmax instead of foldLeft
; general
In latest and greatest we use  FiniteDuration
; general
60 seconds is very long whyI prefer that you use withinIt can be used at the top taggedAs LongRunningTest in within20 seconds  or further down    within20 seconds       awaitCondclusterViewmembersfilterstatus  MemberStatusUpsize  rolessize      awaitCondclusterViewclusterMetricssize  rolessize
; general
remove   true
; general
this is racy its enough with the next awaitCond assert
; general
why move this hereits not something that should be done in general
; design
perhaps write the above 3 asserts something like this    mergedGossipnodesmapaddress must be Setm1 m2 m3mapaddress
; general
Ok I thought it was best to use it for 1 Shall I remove it
; general
Yes good catch
; general
That is better I tested max before and it wouldnt compile requiring Ordering but now this does not thx
; general
I like to allow enough time to insure that all the data between the nodes is not going to do the wrong thing but I will reduce the time
; general
that was a stupid mistake thx
; general
I was using it then simply forgot to revert that which I will do now
; general
Yes pleaseThe purpose of the marker traits is to be able to subscribe to more than one subclass eg MemberEvent17 sep 2012 kl 1653 skrev Helena Edelson notificationsgithubcom In akkaclustersrcmainscalaakkaclusterClusterEventscala    896 8916  object ClusterEvent                    Marker interface for cluster metric related events         sealed trait MetricsEvent extends ClusterDomainEvent Ok I thought it was best to use it for 1 Shall I remove it   Reply to this email directly or view it on GitHub
; design
If removed all of the metrics multijvm tests fail because clusterViewclusterMetricssize is always 0 So if we dont want it enabled yet then another test strategy is needed
; general
Subscribe to ClusterMetricsChanged instead should give the same result or am I missing somethingPatrik17 sep 2012 kl 2213 skrev Helena Edelson notificationsgithubcom In akkaclustersrcmainscalaakkaclusterClusterEventscala    896 8916  object ClusterEvent                    Marker interface for cluster metric related events         sealed trait MetricsEvent extends ClusterDomainEvent If removed all of the metrics multijvm tests fail because clusterViewclusterMetricssize is always 0 So if we dont want it enabled yet then another test strategy is needed    Reply to this email directly or view it on GitHub
; design
In the multi jvm tests Im not subscribing but doing things like awaitCondclusterViewclusterMetricssize  rolessize You are suggesting rewriting all metrics multi tests
; general
No that will be just fine ClusterView subscribes to all events ClusterDomainEvent so it will get ClusterMetricsChanged anyway All I want is that you remove the trait MetricsEvent and change ClusterMetricsChanged to    case class ClusterMetricsChangednodes SetNodeMetrics extends ClusterDomainEvent
; design
What is the purpose of this traitI think it should go and move the awesome documentation to ClusterNodeMetricsCollector
; design
contextactorFor should be the same thing can you please change in ClusterDaemonscala and ClusterHeartbeatscala also
; general
this documentation is obsolete
; general
shouldnt this be apply in Metric companion instead    object Metric extends MetricNumericConverter        def applyname String value OptionScalaNumber Metric
; design
here it would be easier to understand if define was Metricapply ie     def systemLoadAverage Metric  Metricsystemloadaverage
; general
what do you think about using plain Try instead of this wrapEg    Try  17  0  getOrElse 5
; general
Works for me It made more sense in an earlyon iteration but Ive been wondering the same If it is not reflecting a best practice then 86 it What does Viktor think
; general
He loves deleting things so dont give him the joy to do it Do it yourselfYeah I agree with the background but not any longerPatrik20 sep 2012 kl 2138 skrev Helena Edelson notificationsgithubcom In akkaclustersrcmainscalaakkaclusterClusterMetricsCollectorscala        This delegates metrics sampling to the akkaclusterMetricsCollector    Calculation of statistical data for each monitored process is delegated to    the akkaclusterDataStream for exponential smoothing    with additional decay factor       This strategy samples and prepares highly variable data for further analysis by    other entities such as load balancing routers       INTERNAL API       author Helena Edelson       see akkaclusterDataStream     privatecluster trait ClusterMetricsCollector  Works for me It made more sense in an earlyon iteration but Ive been wondering the same If it is not reflecting a best practice then 86 it What does Viktor think   Reply to this email directly or view it on GitHub
; design
What trait  Its gone
; general
yes  again cant believe I didnt see that thanks
; general
this is never shutdown
; general
this is never shutdown
; general
thanks will fix
; general
could use    nodeisLeader must beifNodea1truefalseif you are so inclined Otherwise I might as well remove that method so please comment
; general
yes that is much better I will change to that and look more carefully what other goodies we have in there
; general
Just discussed with Viktor the number of parentheses is too high so I am thinking about making the syntax a bit nicer Dont let that get into your way I can do that after you merged this and then Ill experiment with how different options look like
; general
ok pushed change to this branch
; general
uid here also
; general
I think I mislead you regarding the transitions to down when reachable by referring to httpswwwassemblacomspacesakkatickets1907In the code I cant see that we disallow this transition but we dont have any tests for it so it is not a recommended operationI will adjust the ticketAnyway the diagram is currently not consistent The transition from joining to down should be removed or transitions should be added from all other states I suggest that we remove joiningdown until we have tested it
; general
do we need to add anything of this in the Cluster Usage page also
; general
Im not sure since the identifier while looking at it from they view of the user is hostnameport The uid part is more internal and is described below
; design
sure but you added it at another place
; general
Yes youre right Ill add it here for consistency
; general
From what I could see in the code we only ever move nodes that are in the unreachable set to down Yes that arrow from joining should go
; design
Rephrase since When an X is seeing that the Y it is seeing has been seen by Z has just too many see in it Maybe When X can prove that the Y he last observed has been observed by all Z
; general
default maximum 5 since there can be less than 5 nodes
; general
In other words only one node is enough to mark another node unreachable to have it marked unreachable by the cluster itself
; general
Which one is next Shouldnt this be different in 22 and master
; general
I meant line 127 next release
; general
Pitfalls Why wouldnt I as a user having it on according to this description Or is that covered elsewhere In that case please link to it
; general
Yes there are too many seen in it
; general
Very nice addition
; general
Hopefully we will revise this document before we make a real release wink
; general
Described in the usage document Can definitely be repeated
; general
perhaps   you have to stop the actor system and start a new one which will then receive a different UID
; design
vector clocks are foremost a data type and not an algorithm
; general
here I believe the footnote is not sufficient becoming reachable again should not be mentioned here
; general
this is not true leaving is needed in order to reliably remove the entry from the membership list and I think we should persist that hardearned knowledge here so that we dont forget it
; design
we should point out that this leads to lots of singlenode clusters unless appropriate measures are taken to have them shut down
; general
Is this true for all nodes leaving I thought that it is only needed for reliable removal of the leader
; design
yes my memory agrees but this would still mean that LEAVING cannot be used to implement the partition handoff process
; general
I dont think we should mention partition handoff at all now Should be moved to later section
; general
Its in the later section as well Ill remove it here
; general
keeping this at classlevel is a bit irritating why not just have local vals in the test cases
; general
yes it is but how can I change it to a val when it is used later see L89
; general
Its an extension just call Clustersystem again Given that you just always use it twice you could also do it without the node name
; general
ah stupid me thanks
; general
they are complement to each otherthey complement each other
; general
what combination was it that jboner added runtime check on should that be mentioned here
; general
That you can not use a BalancingDispatcher with any kind of Router Now that yields a ConfigurationException So that violates this whole section of the docs
; general
Good catch Patrik
; general
Your right he made sure that there was no Router configured if you used the balancing dispatcher Kind of defeats my whole doc Redo
; general
thx rewrite error
; general
After discussing with Roland this will be changed to just disallow the Router to run on the BalancingDispatcher ticket 2136 so the doc is valid again
; general
It should still mention that routerDispatcher cannot be a BalancingDispatcher
; general
Absolutely will fix
; general
Rereading the last sentence of the above paragraph this is wrong the dispatchers for head and routees are completely distinctly configured This should be made more clear in the docs
; general
ment  meant
; general
insidea  inside
; general
Honestly I think I would delete this paragraph as it does not really help and could potentially confuse people The one above is the important one
; general
Ok fine I think youre right but what about the config information below it
; general
theyre fine I think
; general
damn I need to configure spelling in emacs this is embarrassing
; general
I think we should have a ssl section    ssl       enable  off      keystore  keystore
; general
is this really an error that can be ignoredif ssl is configured you can probably not accept to run without it because of wrong configuration
; general
since you use isDefined combinded with get    sslHandler match       case Someh    h      case None
; general
I wouldnt check for nulls here
; general
Id probably escalate this as this is a serious security issue
; general
never use Optionget Does it really make sense to keep them as individual options they are both required right So make it OptionString String
; general
Avoid this branching here by concating the empty list in case its not defined and a List with the one item if defined
; general
Dont use this use NettyRemoteTransportnotifyListeners instead
; general
Drop this check
; general
I dont really like methods with innocent sounding names like getX that do a whole lot more than just getting somethingAny suggestions as how to improve on this
; general
On 20120525 0622 PM viktorklang wrote    def getSSLHandler  OptionSslHandler   I dont really like methods with innocent sounding names like getX that do a whole lot more than just getting something Any suggestions as how to improve on thisI can rename it to initialiseAndGetSSLHandler or more verboseinitialiseSSLContextAndGetSSLHandler
; general
On 20120525 0749 AM patriknw wrote  1516 15133  akka            O Maximum time window that a client should try to reconnect for        reconnectiontimewindow  600s         IO Enable SSLTLS encryption        This must be enabled on both the client and server to work       enablessl  off I think we should have a ssl section     ssl        enable  off       keystore  keystore              Reply to this email directly or view it on GitHub httpsgithubcomakkaakkapull476filesr879933perfect will do
; general
Id prefer something like tryInitializeSSL dropping the
; general
Can we improve on the helpfulness of this error message
; general
I suggest to just wrap in a RemoteTransportException and rethrow and let the layer above decide if it should be logged or not
; design
We definitely want to help the user identify which setting was missing
; general
Just wrap in a RemoteTransportException and let the caller decide if it should be logged or not
; design
Doing the changes below means that you dont need to provide the NettyRemoteTransport into this method
; general
This should be privateakka and be documented as internal api
; design
Why these changes
; general
its a MultiNodeSpec and should therefore be tagged as longrunning Its that in master also
; general
On 20120530 0430 PM viktorklang wrote  527 527  class RandomRoutedRemoteActorSpec extends MultiNodeSpecRandomRoutedRemoteActorM    def initialParticipants  4      A new remote actor configured with a Random router must      be locally instantiated on a remote node and be able to communicate through its RemoteActorRef in      be locally instantiated on a remote node and be able to communicate through its RemoteActorRef taggedAs LongRunningTest in  Why these changes  Reply to this email directly or view it on GitHub httpsgithubcomakkaakkapull476filesr900378not sure will try to revert
; design
On 20120531 0746 AM patriknw wrote  527 527  class RandomRoutedRemoteActorSpec extends MultiNodeSpecRandomRoutedRemoteActorM    def initialParticipants  4      A new remote actor configured with a Random router must      be locally instantiated on a remote node and be able to communicate through its RemoteActorRef in      be locally instantiated on a remote node and be able to communicate through its RemoteActorRef taggedAs LongRunningTest in  its a MultiNodeSpec and should therefore be tagged as longrunning Its that in master also  Reply to this email directly or view it on GitHub httpsgithubcomakkaakkapull476filesr905537okay thanks for that
; design
Im confused about what this diff shows master already haslookup remote actor taggedAs LongRunningTest in so why does it show up hereprobably no problem
; design
how often is this invokedhas it been tested on linux the blocking issue we discussed previously
; general
jsessionid should probably be removed from this url
; general
great that you have fixed ways around the SHA1PRNG issue just to make sure I understand what is the default if user doesnt configure anything if default will still use the broken SHA1PRNG I think we should log warning on Linux
; general
On 20120607 1059 AM patriknw wrote     Construct a SSLHandler which can be inserted into a Netty serverclient pipeline       def applysettings NettySettings log LoggingAdapter isClient Boolean SslHandler       if isClient initialiseClientSSLsettings log     else initialiseServerSSLsettings log       private def initialiseCustomSecureRandomsettings NettySettings log LoggingAdapter SecureRandom              According to this bug report httpbugssuncomviewbugdojsessionidff625daf459fdffffffffcd54f1c775299e0bugid6202721       Using devurandom is only necessary when using SHA1PRNG on Linux       quoteUse new SecureRandom instead of SecureRandomgetInstanceSHA1PRNGquote to avoid having problems           settingsSSLRandomSource match        case Somepath  SystemsetPropertyjavasecurityegd path       case None        great that you have fixed ways around the SHA1PRNG issue just to make sure I understand what is the default if user doesnt configure anything if default will still use the broken SHA1PRNG I think we should log warning on Linux  Reply to this email directly or view it on GitHub httpsgithubcomakkaakkapull476filesr942223No the default is what I had it as previously It uses the internalJava SecureRandom algorithm not SHA1PRNG as the quote states
; design
On 20120607 1055 AM patriknw wrote           IO Protocol to use for SSL encryption choose from          Java 6  7            SSLv3 TLSv1          Java 7            TLSv11 TLSv12         protocol  TLSv1           You need to install the JCE Unlimited Strength Jurisdiction Policy Files to use AES 256          More info here httpdocsoraclecomjavase7docstechnotesguidessecuritySunProvidershtmlSunJCEProvider         supportedalgorithms  TLSRSAWITHAES128CBCSHA TLSRSAWITHAES256CBCSHA           Using devurandom is only necessary when using SHA1PRNG on Linux to prevent blocking          It is NOT as secure because it reuses the seed            defaults to devrandom or whatever is set in javasecurity for example securerandomsourcefiledevrandom          devurandom  NOT devurandom as that doesnt work according to httpbugssuncomviewbugdojsessionidff625daf459fdffffffffcd54f1c775299e0bugid6202721 jsessionid should probably be removed from this url  Reply to this email directly or view it on GitHub httpsgithubcomakkaakkapull476filesr942202will do
; general
Why not throw an exception here instead of having to check for None in the code which uses it That keeps config stuff local and simplifies the code which consumes these settings
; general
And with my above suggestion these validations would not be necessary simply have defaults which do not trigger them as you did already
; general
good idea but then these must be lazy not used when enabled  false
; general
why not test actual communication with SSL could include nonexpiring certificates with the source
; general
no if the user changes this to  without enabling SSL why should he reasonably expect it to work
; general
ok but it is  as default in referenceconfthen it must be removed commented out from referenceconf
; general
No actually it is keystore in referencecon But an even cleaner solution would be to change that to the empty string change the settings to lazy val and to not being of type Option then force the lazy vals in EnableSSL to validate them This gives exceptions only if SSL is on and it gives them immediately and the rest of the code does not need to be bothered
; design
ok yes that was what I was thinking when I proposed lazy good
; general
This should be written in Scala
; general
This should be written in Scala
; general
This should be written in Scala
; general
This should be written in Scala
; general
On 20120607 1048 AM patriknw wrote           Override     protected void engineNextBytesbyte bytes          rngnextBytesbytes                  Returns the given number of seed bytes  This call may be used to       seed other random number generators             param numBytes the number of seed bytes to generate       return the seed bytes           Override     protected byte engineGenerateSeedint numBytes          return new SecureRandomgenerateSeednumBytes how often is this invoked has it been tested on linux the blocking issue we discussed previously  Reply to this email directly or view it on GitHub httpsgithubcomakkaakkapull476filesr942174It is never called
; design
why use visibility modifiers in java actors we never use it in Scala actors
; general
sorry it want a real actor it is a abstract base class
; design
maybe comment that this is the main methods meaty part
; general
here it is known that storage is defined so use storageget  Getkey for clarity
; general
missing empty  here
; general
ah wait is this based on current master if not disregard
; general
Perhaps use options instead of null
; general
style thing I would prefer a   comment here and only one for the whole method This would probably make it more readable especially since the syntax highlighting is not perfect
; general
is it possible to omit the dot before pipeTo and the parens around it
; general
thx its wrongits based on master and should have
; general
yeah I used it in other places so it should be that here also
; general
of course you can even say    conterService ask GetCurrentCount pipeTo progressListener
; general
yes they can actually be omitted  nice
; general
and what happens in the other case
; general
to hammer the point home
; general
this same Thread is probably not correct anymore
; general
maybe mention that exceptions raised during callbacks are simply logged as Errors
; general
hmm ctor is not correct might be associated with Actor trait You could write Using and actors
; design
This particular section should probably be updated as a part of the patterns docs
; general
remove superfluous braces
; general
remove superfluous braces
; general
remove superfluous braces
; general
remove superfluous braces
; general
For actors you can useextends Actor with ActorLogginginstead
; design
Our conventions is to use brackets around log parameters    Message  not exp
; general
Because it reads more naturally In this line I want to apply conversions
; general
It would have been nice if we could still verify the credentials before building There doesnt seem to be a target for that in the plugin though Maybe pushing a small dummy fileNow in the right place in the script
; general
I was thinking about that but since the upload is the very last thing of the release script it can be done again separately if it fails
; general
Sure Youre right
; general
Doesnt this also sync the docs and api directories to the server Should they also go to S3
; design
ouch completely missed that I will add this back excluding downloads and all ssh checksIs it correct to use exclude releasedirdownloads
; general
The exclude should do it
; general
why this FIXME
; general
leftover from the revert will remove thanks
; general
I have extracted some common things to MultiNodeClusterSpec so this can be replaced with     commonConfigdebugConfigon  false        withFallbackConfigFactoryparseStringakkaclusterautodown  off        withFallbackMultiNodeClusterSpecclusterConfigShould we use autodown  off as default for all our cluster tests
; general
with MultiNodeClusterSpec if you like
; general
In MultiNodeClusterSpec this is named cluster
; general
those 3 lines are identical on second third and fourth you can extract them to a    runOnsecond third fourth
; general
Great Ill use that Thanks autodown  on should be default in user applications but we can disable it in tests to have one less moving target Just have to make sure we have enough tests that cover it
; general
Saw that Nice
; general
Ah didnt know Nice Thanks
; general
concatenate these two events
; general
I think we can move this to the base config And turn it on for the tests we need it in
; design
No biggie but mySelf is a single word and should be myself  looks ugly now Where is controller defined
; general
mySelf comes from MultiNodeSpec I can change that to myselfcontroller is a role defined in this test in the object
; general
RE mySelf  thanks do thatRE controller  got it thanks
; general
Open a new Socket on port 0 instead obtain its port shut it down and use that one
; general
Why an Array
; general
case originAddressByteString  superreceiveMessageremoteMessage
; general
Use DynamicVariable instead and do withValue to scope the changed value
; general
Should be in configuration file
; general
Is this threadsafe
; general
Never use return in Scala    bytecodeCacheremovefqn match       case null  load via rcl      case bytecode  defineClassfqn bytecode 0 bytecodelength
; general
This will throw a TimeoutException instead of ClassNotFoundException if it times out is that intentional
; general
def getOriginrm RemoteMessage ByteString        import scalacollectionJavaConversions      INPUTFIELDinrmgetgetMetadataListcollectFirst  case x if xgetKey  origin  xgetValue orNull
; general
This should not be in code
; general
Why is this needed its very expensive
; design
never do this use akkautilNonFatal
; general
How can fqn be null here
; general
This shouldnt be added into akkaremote it should be a submodule to akkaremote so people dont need the extra dependencies if they dont use rcl
; general
Youre right I was overthinking I did a quick benchmark for contains 10 entriesArray  776 Bytes  13 mssciHashSet 1088 Bytes  028msscmHashSet 896 Bytes 030 ms juHashSet 1200 Bytes   035 msSilly me there is no reason not to use sciHashSet
; general
Thanks for the tip I first used 0 as port in the system settings but then didnt found a nonreflection way of findig the exact port opened This will work nice
; general
We are using a blocking implementation of RCL Also whenif we are going to support reloading Id prefer to use a separate channel to do thisThe problem is that the RCL messages may be left waiting by the OrderedMemoryAwareThreadPoolExecutor for the users stuff to complete And in the case of blocking RCL we deadlockI like to be able to use idiomatic akka way for RCL communication therefore we have the separate systemAlternatives WDYT Is this to much Leave it be for the moment
; design
Yes because it is called from within loadClass method which is synchronized We have a full blown lock here
; general
Youre right Right now I am using a debugger to see what is going on nonmultijvm setup Will do proper debug logs next
; general
Kneejerk reaction from Java
; general
Youre right It is unnecessary check
; general
Id need to jarjar them in any caseIf no extra dependencies are needed can this stay here or do you think extra module is right in any caseIll get rid of them From Guava I am using LoadingCache but that can be done with locks and HashMap same as remoting is doing and for ASM stuff I can always manually parse the constant pool table from bytecode
; design
Also Arrays are horrible
; general
But dont create an entire ActorSystem for that its extremely expensive
; general
It should be in its own module so people who do not use it dont need the added weight
; general
Yeah Its own module Since it will probably only be used in dev mode
; general
would be nice with systemshutdown in afterAllinstead to avoid mem leaks in case of failure
; general
you already create an ActorSystem in constructor and this shadows system in TestKit
; general
I dont think AtomicReference should be visible in the api isnt that an implementation detailNow the value is also changeable from the outside without going through refresh is that by design
; design
I tried to make the cacheactorsetup self contained but I guess its not worth it as anyone should know how to create an actor system anyway Good catch
; design
HiIt is perhaps a bit more succinct to do this    val stopRefresh  systemschedulerschedule0 millis retryInterval  cacherefresh Cheers
; general
Hi  thanks for the comment VictorRoland pointed out in another comment that this way we avoid problems if the refresh would take longer than the retryInterval schedule the refresh when the previous is done instead of having a hard refresh timebox httpsgithubcomktosoakkacommit150a6a83fbce2f762b6d30f4987b31a01483056bcommitcomment1381816 I think Ill agree on that  maybe the name of refreshEvery should be changed to better reflect how where the delay is instead
; general
The variant Viktor proposed will actually run the refresh while I was referring to making the sending of RefreshCache messages recurring While those messages could potentially pile up running the refresh job should be fine if it is done synchronously I still think that the scheduleOnce approach is the easiest to grasp and also it does not leave state lingering around which needs to be cleaned up
; general
I feel that this wording is a bit confusing The assumption which isnt true on Android is that OPCONNECT implies that finnishConnect will succeed but you could also interpret it as being that reties are needed isnt true on AndroidHow about  will succeed which is the case on Android
; design
I dont like the word currently hereId rephrase into something like The aggregator pattern supports writing and actor thator With ordinary actors it is not not straightforward to aggregate
; design
scloseoverscloseover problemsIt can still close over conversational or actor state which is a nice featurenever is perhaps a too strong word you can still do mistakes such as accessing sender and thinking it is the sender of the original message
; design
should it be final
; general
perhaps mention that contextbecome is not supported
; general
this header must be checked by someone who knows more about the legal implications of having a different license and copyright
; general
define explicit return types on all public api ie def expectOncefn ActorReceive ActorReceive
; design
the name handleResponse is maybe confusing handleMessageDoes it have to be public
; general
Is the order important or MapLong BigDecimal
; general
increase to 1 second to avoid false test failures on build servers
; general
better to use contextsystemschedulerscheduleOnce50 milliseconds self TimedOut
; general
Can this class be simplified by using some existing data structure that is good enoughWouldnt javautilLinkedList and its listIterator do the job
; design
Absolutely Ill make that change
; general
Sure Will make the change accordingly
; general
I have been weighing my options here There was just a comment on the forum wanting to override receive Did not make much sense to me but thats where I want to be cautious If we all feel it should be final Ill make the change
; general
I have no problem taking it out or use a Typesafe header The MIT license is more liberal than the Apache license used by Akka yet it is compatible I had to put this in as I point blog posts and discussions to my code Just let me know how you guys want it and Im ok
; general
Sure Will do
; general
NP Fine by me
; general
These came from Jamies post I prefer not to change them unless you feel strongly about it This is to retain as much code from the old example as possible so when people look at the diff they do not have to be concerned about this change
; general
I really like this much better replacement Thank you very much
; general
Im afraid not The WorkList is reentrant as any partial function executed here can modify the list itself This includes adding removing and removing itself from the partial function listIterator only handles removing the current entry or well run into a ConcurrentModificationException Ive looked at my options and resorted back to implementing my own which turns out not such a big deal Please let me know if you find something better
; general
Changed never to not Added a section on sender references to the pitfalls section
; general
yes Im not sure overriding receive is almost like using become not really supported by the Aggregator unless you really know what you are doing might be fine too keep it open for power users
; general
We prefer to use Apache 2 for all code in akka repoIt would be a lot easier if you stick to the same header as in the other files otherwise we must ask layers for advice
; general
The closures registered dynamically will of course close over the actors innards in this sense the sentence is wrong What you want to say is that accessing mutable state within these closures is not problematic
; general
what about restarts
; general
Hmm the following works but might look surprisingscalaother  RequestexpectOnce   case Responsex if sender  other  The surprising part is that sender means something different in this scope this will be natural for newcomers and understandable for gurus but possibly a headscratcher for intermediates We can try it out it is akkacontrib after all
; general
this is the bigger of the two problems
; general
this might want to use the new aroundReceive which is being discussed in the context of akkapersistence we should either await that before going forward with this or create a ticket so we dont forget
; general
this duplication would go away by always keeping one entry as the parent in the list and starting from there
; general
since you traverse for removal I think using an immutableVector would be preferable storing the reference in a var solves the concurrent updates as well I think it is cleaner that way because the processing is done on an immutable snapshot to avoid endless loops
; design
this is not a nice API changing a boolean flag by the presence of an implicit argument
; design
this is targeted for 22x so we should not wait but a ticket is good
; general
This goes into the definition of close over I could not find the formal definition and it seems our understandings may be slightly different Perhaps we should stick the definition in the Akka documentation apologies if it is already there and I just happen to miss outMy understanding of close over in the context of an actor is as follows Access to the actor state from a closure that may be executed from another thread It seems inaccurate based on what youre sayingIll change it as suggested
; design
Very good point Yes these shortlived actors are stateful A restart will loose its state The requester will need to retry the messageThis makes me look at FSM which has its state externalized Do we actually use this to populate the actor after a restart Do we make a copy of the state and roll back to that copy if the actor restarts Only then can we guarantee the state is not corrupt
; design
Yes this is an interesting one Id personally stay away from this pattern as it is incompatible with forward and actorSelection You actually expect the message to come from the actor you send the request to But yes if you can live within these constraints you could use this sender reference to qualify the message And surprisingly it does work
; design
Agree You really have to be careful what sender youre using
; general
Not sure Im clear about this suggestion Do you mean keeping the parent as a state in the list Would we have conflicts on reentrant calls into the list list has a parent that is not the current parent in this iteration
; general
Let me take a stab at that From the efficiency point of view it may not be as efficient as the current implementation though
; design
Could get around this by not using  but a proper name like add with two parameters What do you think
; general
I would definitely go for add with explicit parameters and a corresponding remove just so the names are balanced
; general
I think the idea here is to always have an empty head node so you could just send in head and headnext to the inner function which could have a different name than process as not to confuse and have the null check for entry at the beginning of the inner function
; general
FSM doesnt keep the state after restart I think the aggregator should loose its state or manage it on the app level
; general
I dont find it unintuitive that sender in this case corresponds to the sender of the Response Its not a callback its an added receive block
; general
While I am not feeling strongly about one or the other and will make the mods as suggested I could use some education on the nice API comment Since Im relatively new to Scala and see quite a bit of precedence in using such an API it becomes confusing to judge a nice from a not nice API One precedence being the use of an implicit timeout on ask and the other being the use of an implicit execution context on Future methods What would make one case justifiable while the other not Please feel free to point me to any previous discussions or literature if applicable Thanks
; design
I would support creating a ticket Once aroundReceive is in place Id be happy to make the proper modifications
; general
An implicit argument is used to capture some context of the call site providing additional infrastructure to make things work eg an ExecutionContext Passing these along manually is just a burden and boilerplate to be avoided In the case of the implicit Timeout the case used to be more clear than it is now the Timeout type was created as a wrapper for Duration precisely for the purpose of being used implicitly since we deemed Duration to be more like Int ie too generic a type to capture implicitlyIn the case under discussion here you use the implicit to change the semantics of the method call rather drastically and it is implicit only to avoid having to pass a second argument
; general
A closure is a lambda expression with free variables which are bound to the enclosing lexical context the core feature is that it transports these bindings out of that context and uses them wherever it may be expanded
; general
Thanks for all the input I agree the use of Boolean as an implicit is definitely not right Although we can argue about timeout being contextual information this case is definitely not It is there merely to express the append as  So it is all clear to me to change Lesson learnedTalking about context one other programming model issue Ill have to address is to pass contextual info across actor messages We have implicits in Scala calls through the stack We use ThreadLocal extensively for such purposes in a threaded environment We dont have anything like that in the actor model Contexts have to be explicitly passed as part of the message Just food for thought for now It is best to have these discussions publicly so Ill take it up sometime soon Thanks again
; design
Got it Thanks Ill put it in
; general
I think closure is clear  The issue is more on close over Based on the definition you gave on closure are you saying that close over means just the transport of the bindings out of the context That would be the same as closure Im rather thinking of close over as expanding and using these bindings in a place or context that can cause consistency issues In that case the use of close over in the text above is correct But if close over and closure are supposed to mean the same thing then yes the text should rather say  accessing mutable state within these closures is not problematic Thanks
; general
this is wrong fourth doesnt mean that it cant be leader hostsports are unknown to the test so any node can be leader when runyou might want to use the new role sorting facilities that I have added in httpsgithubcomakkaakkapull483 not in master yet
; general
address  address
; general
That might work as well But checking on port should be sufficient
; general
I know It slipped through I have already pushed a fix Planned to enforce leadership to first but then decided not to and left this line by mistake
; general
same port different hosts
; general
Fixed and pushed checking on address now instead
; general
override is not really needed ist
; design
I need override or The compiler says NO I could change the name but that feels weird
; general
I would say that changed name is normal practice decider SupervisorStrategyDecider
; general
and you dont even have to change the name if you remove the val
; general
INTERNAL API marker
; design
this looks interesting
; general
In fact plain wrong This unwrapping should be done only in the SerializeAllMessages case Thanks
; general
stupid IntelliJ I usually remove these but this slipped through
; general
IntelliJ again After a number of imports reached it switches to underscore I dont know why the actorIdentify import remained then Sigh
; general
Id say healthy nodes or member nodes in the cluster not systems
; general
Same here Not system but node
; general
Can you not use awaitCond for the isAvailable expressions instead of the sleep
; general
they are true from beginning phi  00 so that would not verify muchcould be used for the must be false case in the next case but we might want to check that first and second are not affected anywayI can reduce the length of the sleep here and use awaitCond in next test  that is a good enough compromise
; general
You sure this wont cause problems
; general
well all our code still compiles No Java code is supposed to call Functionapply rightThe alternative would be to add ThrowingFunction but thats also ugly
; general
I was just fearing that it would require people to add  throws Throwable everywhere
; general
that will not be the case you can always skip the exception in the method signature that implements interfacewhy is the throwsclassOfThrowable neededall methods can throw a Throwable anyway
; design
nope Chuck Testa throw Throwablethr does not work unless you add throws Throwable which you cant unless the interface also has it been there  But all of this will probably be moot in a few minutes anyway
; general
ok what I was thinking of is that in practice you never use Throwabledirectly you use subtypes of RuntimeException and Errror which can bethrown from any method but sure if Exception can be thrown it makes senseto add throwsclassOfThrowable or throwsclassOfExceptionOn Thu Jan 26 2012 at 905 AM Roland Kuhn replyreplygithubcom wrote   106 107  import scalaSome     A Function interface Used to create firstclassfunctions is Java       trait FunctionT R     throwsclassOfThrowable nope Chuck Testa throw Throwablethr does not work unless you add throws Throwable which you cant unless the interface also has it been there  But all of this will probably be moot in a few minutes anyway  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull266filesr386976 Patrik NordwallTypesafe httptypesafecom   The software stack for applications thatscaleTwitter patriknw
; general
Cant do that since you pass a Throwable in and need to rethrow it if not handled
; general
Why Arrays are mutable
; general
Use IndexedSeq instead Vector
; general
0 until count map  i  akka  akkaSpeci    mkString
; general
What do you say about taking this one step further and remove the source parameter and derive it from    contextselfasInstanceOfLocalActorRefunderlyingactor
; general
Id probably docase   if contextsystemsettingsAddLoggingReceive new LoggingReceivesource r else r
; general
for the record the original reason for this test was to support HotSwap messages with LoggingReceive that is gone
; general
me too that is the current me
; general
yes since HotSwap is dead we can do that Probably easier    contextasInstanceOfActorCellactor
; general
Is it only 1 or is it any negative number
; general
is it possible to do akkaactordebuglifecycle  on
; general
Perhaps clarify why listener is the second argument
; general
Make these an enum
; general
No they are not enums not related but it triggered me to rearrange declaration of messages similar to how it is done in scala companion objects
; general
thx it should be negative fixed
; general
Shouldnt it be named router
; general
umm but it is a router of workers
; general
Name the val workerRouter and same with the name
; general
mathematically speaking it is probably more of an approximation than an estimate
; general
yes thats a good one to demonstrate
; general
ok changed everywhere
; general
Is utilmanifest user apiI think this looks very unfamiliar to Java users because class names always have capital letter
; design
methods should start with lower case
; general
Looks good I probaby missed the discussion on taking out the communication style Is this a similar point to the one in the producer basically more standard behavior
; general
return true cant see in the diff where this is used but since communicationstyle is gone it should not be necessary
; general
I spoken to Martin about it and he is fine with removing the blocking style as there is no benefit in using it after the  has been removed
; general
good spot Ill remove it
; general
Good stuff its really coming together No other comments
; general
Use logdebugENQUEUING message in amqpbased mailbox  envelope
; general
Why does every mailbox have its own ConnectionFactory
; general
What if something blows up here
; general
Dont log N throw either log or throw
; general
Add explicit return type
; general
logdebugDEQUEUING message in amqpbased mailbox  envelope
; general
Why a trycatch within withErrorHandling
; general
def numberOfMessages Int  withErrorHandling  poolwithChannel  queueDeclarename true false false nullgetMessageCount
; general
Great to see this
; general
withErrorHandling  poolwithChannel  basicPublish name MessagePropertiesPERSISTENTBASIC serializeenvelope
; general
Isnt an emptycheck cheaper than a count
; general
What if this fails
; general
Isnt PoolableObjectFactory parameterized with the object type
; design
Return type and parens to denote sideeffecting
; general
Whats your suggestion on this Would adding a trycatch in the catch block to wrap the exception in an AMQPBasedMailboxException be okay
; general
What is consider to be fatal and what is recoverable
; general
A connection loss would be recoverable an unreachable server would be fatal But how can I differentiate the 2 cases The library just throws IOException
; general
Isnt connect a blocking operation How long timeout do you useA connect throwing an exception would likely mean that server is down right
; general
There seems to be no way to do this in rabbit Rabbit always returns a DeclareOK Object when asked for a queue and that contains the message count If you have any idea to make it better please tell me
; design
Fair enough but should be documented in a comment using size for isEmpty alerts my spider senses
; general
Youre right connection timeout is 0 by default which means infinite Should be configurable I guess
; general
Okay Ill add a comment
; general
I think since 16
; general
Im still not sold on every actor having its own connection pool
; design
Is this mailbox usable with other AMQP brokers than rabbitmq
; general
Any need to extract selection of PERSISTENTBASIC to configOther message properties that might be neededconfigurable
; general
numberOfMessages expensiveviktorklang is hasMessages invoked often
; general
I think we should add some kind of circuit breaker mechanism that can be used for all durable mailboxes I created ticket httpwwwassemblacomspacesakkatickets1734circuitbreakerindurablemailboxes
; general
Perhaps you can place the pool in the extension instead
; general
Is this override needed I see that we have it in some other extensions also Ill take a look
; design
connectionTimeout should be duration ie connectionTimeout  1s
; general
ConnectionTimeout should be DurationDurationconfiggetMillisecondsakkaactormailboxamqpconnectionTimeout TimeUnitMILLISECONDS
; general
Use akkas logging mechanism insteadpass in a log LoggingAdapter in constructor
; general
For the record it is needed for extensions that are written in scala and to be used from java also So it is correct here
; design
I just tested it with Apache Qpid and it worked The guide on rabbitmqcom says The client API is closely modelled on the AMQP protocol specification with additional abstractions for ease of use so it should work for any AMQP broker
; design
Hm the other properties would be either of type textplain which is not needed or Or BASIC which is nonpersistent or MINIMALPERSISTENTBASIC which would be persistent but without content type set to applicationoctetstream
; design
ok you know this stuff best
; general
perhaps pass down config into the constructor so that local overrides are possible in the dispatcher config section
; general
for every reschedule attempt which I think qualifies as a yes
; general
now imagine some very creative user attaching a logger which employs an AMQP mailbox just to be safe you know
; general
Sorry but I dont get it  The message is exactly the same as in any other durable mailbox Can you please clarify
; general
Id really like to do it differently but I havent found a way yetedit Okay maybe this could be done with a Queueing consumer but it is not documented when the messages will be acked If they are acked on dequeueing that would do it The QueueingConsumer contains a javautilconcurrentBlockingQueue with the prefetched messages Ill try to find out how the QueueingConsumer behaves
; general
I just copied this from the other mailboxes none of them passes the config to the constructor I was already wondering why it is passed in every time Is this really necessary The config is only read in the AMQPBasedMailboxSettings class
; general
well then every other durable mailbox has the same problem everybody else does it is not a good defense
; general
The config being passed in here is the specific dispatcher section while your Settings only look at the defaults You should extract the Settings from    configwithFallbackdefaultsfor a suitable definition of defaults
; general
ffnet Sie eine ticket bitte
; general
hr har du det httpwwwassemblacomspacesakkatickets1834durablemailboxesshouldnotlogenqueuedmessages
; general
Ah I see But I need the config in the AMQPBasedMailboxSettings class because the AMQPChannelPool is created there Is it possible to pass the config to it Also if I understand this correctly this means that all the other durable message boxes also just use the default values
; design
Currently you are creating the Settings object as an extension which makes it scoped to the whole ActorSystem I think in this case with userpassname info etc you might want to scope it to the actual mailbox instead ie not make it an extension but create it in the MailboxType constructor that is why the specific config subtree is passed as a constructor argumentAnd yes it would make sense to look into the other durable mailbox types as well whether this change is applicable to them also ticket created
; design
Okay thank you
; general
below you are reading akkaactormailboxamqp from the resulting config which would require the user to configure like this    mydispatcher       mailboxtype  AMQP      akkaactormailboxamqp         hostname            Instead I would recommend doing userConfigwithFallbacksystemsettingsconfiggetConfigakkaactormailboxamqp and then below getStringhostname
; design
Oh thanks will fix this as soon as i get home
; general
Please add a case to the Java API tests too I merged that already you should see the file in master and 22
; design
What do you mean What and where should I test java api resolveOne does not add anything that is complicated from java
; design
yes but now we have at least one centralized test for all the pattern related Java APIs
; general
I dont mind adding more to that but what should I add thereI have not changed patterns except for boy scouting the docs
; general
I dont mind adding more to that but what should I add there I have not changed patterns except for boy scouting the docsHm true Maybe it is not needed at all
; design
two thoughts remove the new should we differentiate between noreply and negativereply
; general
it might be a good idea to have test case which explicitly spells out that the FiniteDuration variant is for the Java API so that nobody mistakenly rationalizes it away
; design
I think we should keep it simple ie not differentiate Its just convenience after all
; general
yes I thought the same but wanted to have it on the record
; general
but it is not only for java nice for scala as well when implicits not wantedI included both methods in the test I wrote
; general
yes I agree it would be enough to add a comment to the test
; general
Hmmm this is a bit suboptimalCan we come up with a clean solution to this
; design
can try the problem is already illustrated with the behaviorStackPlaceHolder trick which is that 1 the behavior stack depends on the actor instance it already depends on instancereceive and with this patch additionally depends on instancearoundReceive but 2 we want to allow modifying the behavior stack while constructing the instance Already newActor contains the fixup to put instancereceive in front of the stack and with this patch it needs the additional fixup to apply instancearoundReceive to the stack elementsPossibly theres a cleanup that eliminates behaviorStackPlaceHolder as wellThe cleanest cleanup would be to prohibit using become during construction but obviously that isnt compatibleA possibility might be to make Actor fill in ActorCellbehaviorStack and ActorCellactor during Actor construction that could look like in ActorContextscaladef privateactor setInstanceinstance Actor UnitIn ActorCellscalaoverride def setInstanceinstance Actor Unit    requireactor eq null  we can only be invoked once  actor  instance  behaviorStack  StackemptypushactoraroundReceiveactorreceiveIn Actor the initializer for val context would do a contextsetInstancethis and therefore the instance must be set before anyone can invoke contextbecomeWed remove behaviorStack and actor initialization in newActor and kill off behaviorStackPlaceHolder
; design
Care to take a stab at it
; general
There is a problem though if aroundReceive depends on Actor state then itwill blow up in ctor
; design
The patch comes out something like this httpsgistgithubcom2822571 Its ugly in its own wayTricky bits include  creating the instance may not run Actors constructor an existing instance can be returned  receive can depend on context and self eg akkaeventLoggingReceive does  handling restart of the actorAs you say receive and aroundReceive will be called before the actors constructor completes which may be unexpectedAlso while the above patch handles getting the same instance back on restart it doesnt handle the case where a constructor is never called not even the first time I dont know if that case is allowed but if it is this approach cant workSide note I think the original pull request has an issue that on restart the actor is not null inside become during the second construction of the actor instance So it probably uses receivearoundReceive from the first instead of the newlyrestarted instance This is probably fixable by just setting actor to null during restartSide note 2 maybe its too late at night but with either the original pull request approach or this patch I wonder if behaviorStackPlaceHolder can just be Stackempty if were using behaviorStackPlaceHolder then I think receiveMessage will NPE anyway because it tries to invoke actorunhandled with a null actor It seems to already be true that receiveMessage is never called unless theres an actor instance and thus an actual nonplaceholder behavior Dont know
; design
Remove this comment or write something real
; general
From user api itsCompanion object providing factory methods
; design
Java API alias for apply
; design
this asInstanceOf shouldnt be needed I think that was something added when we had problems with overloaded signatues
; design
why change clean is very sideeffecting
; general
Is there any test which tests massive concurrent usage
; general
I generally prefer  to  since  is the Unit value and  simply infers it
; general
Add a FIXME here its a bit wasteful to create Futures for oneoffs just use ECexecute instead
; general
this is wrong include should be DangerousJavaActorjava
; general
No there isnt currently  Should I look to put something into akkaperformancemicrobench  Need some pointers here
; general
30 maj 2012 kl 0120 skrev scullxbonesreplyreplygithubcom       breakersmultiFailureCbwithCircuitBreakerFuturesayHi       awaitCondbreakersmultiFailureCbcurrentFailureCount  0 awaitTimeout           increment failure count on callTimeout in        breakersshortCallTimeoutCbwithCircuitBreaker          Future            100millisdilatedsleep           sayHi                        checkLatchbreakersopenLatch       breakersshortCallTimeoutCbcurrentFailureCount must be1          No there isnt currently  Should I look to put something into akkaperformancemicrobenchNo I dont think that is necessary  Need some pointers hereI think what Viktor is looking for is some test that verifies functionality with concurrent usage Share same circuit breaker between several threads eg futures Simulate failure and verify that it behaves as expected   Reply to this email directly or view it on GitHub httpsgithubcomakkaakkapull493filesr896796
; general
Yes exactly once thats done Im merging this one into master
; general
missing  3  Copyright C 20092012 Typesafe Inc httpwwwtypesafecom  4
; general
Why did you remove this section We still have the concept of a singleton cluster
; general
Because there were two identical sections httpdocakkaiodocsakkasnapshotclusterclusterhtmlsingletoncluster
; general
Ah ok Good with good commit messages
; general
shouldnt this be maintainAddressTerminatedSubscription passing in self will just execute the block since self is local
; general
you are right code will not work in most cases
; general
The code inside maintainAddressTerminatedSubscription doesnt guard the block with trycatch If we throw an exception we will leak the subscription I think we need to be defensive and add a try catch inside maintainAddressTerminatedSubscription
; general
um but we are normally not that defensive sendSystemMessage should not throw exception it is even documented Is only allowed to throw Fatal Throwables
; general
Ok fine by me It was just a change from the old behavior
; general
I guess that every test that uses actorFor and the TestConductor needs to use a lazy val to avoid this problemCan we document this somewhere
; general
yes its not actorFor that is a problem but nodemaster uses test conductorits a pitty that its not possible to tag the whole Spec and have scalatest to ignore it completely instead of always creating an instance of it  annotations not invented here syndrome
; general
Yes I got that it was the expansion and lookup I meant in this way I guess we just have to be extra careful to not do global initializations in the testsTagging the whole spec would have been nice
; general
Wont be confusing for Scala compiler if you do awaitTermination
; general
I suggest the following in ActorSystem    def awaitTerminationtimeout Duration Unit    final def awaitTermination Unit  awaitTerminationDurationInf Not LongMaxValuenanos because it easily overflows Implementation gets to deal with Inf
; design
damn I started with default value param but changed for Java api but missed to remove here will fix
; design
I say the same  thx
; general
If theres an Errornonexception throwable then system hangs forever
; general
This should be in a finally block
; general
tried Inf but it doesnt work throws IllegalArgumentException for most thingsfor example IllegalArgumentExceptiontoNanos not allowed on infinite DurationsI can change to some reasonable big nanos Where do you think it will overflow BTW
; general
umm catching OOME is not god either Ill change tocase e  and write a note referring tohttpwwwassemblacomspacesakkatickets1310reviseexceptionhandling
; general
Use a LinkedBlockingDeque instead of CLQ and do    tailrec def run Unit  dqpollLast match       case null        case some  try somerun catch  case e  loge  finally run        try run finally latchcountDown
; general
Id still recommend having this final and calling the other with DurationInf then the implementation of that can deal with DurationInf as it wants
; design
Patrik did you see the above comment Thanks
; general
Might want to make these final
; general
ok I did that down in Impl but you are right it can be here instead
; general
ok making class final and akka private not user api
; design
Is the reason to be able to register new callbacks during shutdown I didnt thought that was importantLBQ doesnt have pollLast I guess I could use CopyOnWriteArrayList since I know that I only add and use removelsize 1 to take from right but it It will not be any hard guarantees of order in case of concurrent add and remove
; general
I didnt say LBQ I said LBD Deque
; general
ah sorry Ill finish this up during the weekend
; general
Np I can do it right now
; general
Thx but if is not urgent I would like to complete it tomorrow Preparing for Ebbas birthday party now Patrik20 jan 2012 kl 1625 skrev viktorklangreplyreplygithubcom  4944 52735  class ActorSystemImplval name String applicationConfig Config extends Actor       override def toString  lookupRootpathrootaddresstoString    class TerminationCallbacks extends Runnable with AwaitableUnit      import scalacollectionJavaConverters     private val callbacks  new ConcurrentLinkedQueueRunnable     private val latch  new CountDownLatch1      def addcallback Runnable        callbacks add callback           def run        for c  callbacksasScalatoSeqreverse   Np I can do it right now    Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull238filesr371465
; design
Dont worry about it Ive already fixed it have a great weekend
; general
sorry I shouldnt have eaten all that fudge
; general
The crackpipe didnt help either
; general
or the Java samples
; general
This sounds wrong is it true
; general
Why not use PoisonPill
; general
I think its faster to ask all first then await all
; general
I didnt validate the quality of the existing tests but I agree that that looks very much like a PoisonPill I can change that
; general
First ask then await
; general
Would probably be even better with loner names
; general
Shouldnt it also test that it gets the responses from the right nodes
; general
Great Boy Scout
; general
Nice to have the actor system name in the thread names how long can a thread name be in practiceCould they be arranged with same thread group Maybe they are
; design
Good point Im thinking about how we could collect all created threads and do clean shutdowns etc
; general
this would probably be cleaner to read if the Settings instance were cached either in a field or in the constructor    final Settings settings  SettingsinstancegetgetContextsystem    Connection connection  connectsettingsDBURI settingsCIRCUITBREAKERTIMEOUT
; general
can this be written in a more readable way
; general
yes use a default case instead of orElse either with a guard or appoyOrElse
; general
you mean like      OneForOneStrategymaxNrOfRetries  10 withinTimeRange  1 minute         case  ArithmeticException  Resume        case t Throwable if supersupervisorStrategydeciderisDefinedAtt            supersupervisorStrategydecidert      I dont see how applyOrElse can be used here
; general
not testedscalaOneForOneStrategy   case  ArithmeticException  Resume  case t  supersupervisorStrategydeciderapplyOrElset Escalate
; general
yes then the user decides that defaultdefault is Escalate which is fine by meI will go with that
; general
It must actually be    override val supervisorStrategy       OneForOneStrategymaxNrOfRetries  10 withinTimeRange  1 minute         case  ArithmeticException  Resume        case t           supersupervisorStrategydeciderapplyOrElset  Any  Escalate      What do you think about making SupervisorStrategyescalateDefault public
; general
this should be an akkautilDuration then you can do shutdownWaitdilatedsleep
; general
I dont think this will work since we run tests in parallel in same jvm
; general
Actually not parallelExecution in Test  SystemgetPropertyakkaparallelExecution falsetoBooleanIve run the tests and the default dispatcher tests pass but the remote tests dont  When configured nondaemonic there is still a daemon thread  That could have been done on purpose for all I know and the test needs modifying
; general
I use parallel tests run all the time httpakkaiodocsakkasnapshotdevbuildingakkahtmlparallelexecution
; general
it should be registerConsumerendpointUri String
; general
Misses Copyright header
; general
remove the case that does nothing Or are you making sure that you will never get a match error
; general
Misses Copyright header
; general
It might be handy if the user can configure the DefaultCamelContext like setStreamCaching and others now its hardcoded Might be a feature
; general
Is this TODO still relevant Change all TODO to FIXME
; general
findActor looks out of place on ConsumerRegistry separate in another private camel trait ActorEndpointRegistry Or maybe even better add this as a method to ActorEndPointPath toActorRef
; design
It would be nice to have it on ActorEndpointPath Would the path be dependent on actor systemTicket please
; design
Do we want to add them gradually or in one go at the end There is a ticket for that
; general
More than happy to do so Are there any guidelines for TODOsFIXMEs anywhere
; general
Yes I wanted to make sure that I am not getting match error My assumption was that unless this function exhaust all the possibilities map will throw MatchErrorAlso it is more explicit for the reader of this code what is happening here and what we are expecting to get
; general
I only saw Viktor comment somewhere to make TODO into FIXME I dont know if its documented
; general
Ah didnt know about ticket Check every file In one go is fine in that ticket I guess
; general
Yes it is dependent on system On ActorEndpointPath object the applyActorRef  you know the actorRef you could keep it and you also know system through the ref on the fromCamelPath on the object you could pass system or Camel in as a parameter Ill add a ticket
; design
I wouldnt be comfortable with AEP containing a reference to the system Think about it from the responsibility point of view Its not a responsibility of a AEP to find and actor It is a responsibility of a system I would rather have a wrapper of a system doing this with or without implicit or AEP singleton could have a method findActorpathAEP systemActorSystem
; design
I have a better idea We could add a method to AEP findActorInsystemActorSystemThis would be most naturalWDYT
; general
Good idea do that that leaves the responsibility in the right place no system in AEP and so separates the lifetime of AEP and system since you always need to pass it in Ill edit the ticket
; general
might be clearer as case ResendStateuid buffer cant write backtick in GFM
; general
Is there anything that prevents nacked and nonAcked to contain duplicates which would lead to newNackedsize being equal to acknackssize even though it doesnt contain all the elements asked for by acknacksYes the code below should filter out those I see that but I havent read the other side of the communication wink
; general
Of course true
; general
No that should not happen
; general
I have fixed this case ResendStateuid buffer
; general
I think it might be better to recommend loading the extension when the actor system is started by defining it inakkaextensions configuration property    akkaextensions  akkacontribpatternClusterReceptionistExtension
; design
patriknw Alright how do you get a reference to the receptionist then in order to register the actors
; design
Looks like the recommendation for loading the extension via the config is already there Id just like to understand the answer to my question above
; general
I dont think it hurts to repeat the recommendation to start the receptions hereWhen you register the actors you use ClusterReceptionistExtensionsystemregisterService which of course also load the extension if not already done but if you have a node that doesnt have any actors that are registered the extension will not be loaded and things will not workI suggest that you add description of the akkaextensions conf property above and change ClusterClientSpec to explicitly use ClusterReceptionistExtensionsystem instead of the def receptionist remove the def receptionist
; general
This makes the code examples in the docs more clear even if its less DRY in the specs
; general
or we could just set this closeInfo unconditionally and then the supervisors Stop command will do the right thing in case of error no
; general
Yes but the code follows this style in the other places
; general
That may be true but in the end this is a style which relies on trycatch instead of actor supervision which I think is wrong Setting things up to deal with the unexpected is more robust Regards Dr Roland Kuhn Akka Tech Lead Typesafe  Reactive apps on the JVM twitter rolandkuhn
; design
So I really cant make this look nice It juts feels so wrong to unconditionally set this field twice for every connect and create the corresponding objects just in case something sometimes goes wrong which is not the normal caseI can make the code a bit more DRY though
; general
braces are superfluous
; general
braces are superfluous
; general
technically shouldnt this be Optionin
; general
Should this really leak to the user
; general
Are users supposed to deal with these explicit types
; general
Very nice clarification
; general
Really love Akka FSM
; general
Very nice sample
; general
I could argue that I know that FSM will never pass null to code which is supposed to use this
; general
The type is visible if the user calls sendergetClass under the right circumstances so we might as well document its purpose
; general
no same as for PromiseActorRef
; general
Should we really document blocking in preStart That smells bad to me It would probably be better to spawn another child which does the actual counting start that from an askFuture obtained like here and have that send an Initialized message back to the Counter which from that point on will forward message to its counting child I know this is much more complex but it is what people will encounter in real life isnt it
; general
Perhaps not recommended practice
; general
Have to agree with Roland on this
; general
Id do the reformats in separate commitpull request next timeOtherwise its quite hard not to miss something tiny but important
; general
Sorry about that the akka build does this automatically Im not sure how to disable this Howdo you build if we all use the same formatter it should not be a problem which is what should be the case when you use the akkacamel build
; general
Maybe from now on it wont be a problem but initial reformat could have been done in separate commit This would make the review easier
; general
Race conditiont1 camelObjectsput t2 camelObjectsremove  but there is nothing there because ConcurrentHasmap doesnt guarantee that writes happen before readsEffect youve got processor which is not stopped and EndpointDeactivated never gets sent
; general
You need to wrap camelObjects with an actor and not share it between actorsIt is breaking actor principles  no shared state
; design
This can not be called before registerProducer correct me if I am wrongSo why the whole if contains stuffAlso producer could store send processor in a private field so no need to do map lookup for every message  this is slow
; design
to be consistent we need to either send it to the eventStream like in IdempotentConsumerRegistry or in change it and send it directly to activationTracker
; general
Because the Actor can be restarted The ActorRef will stay the same the Actor object will be another one If you store the processor in a private field you also need to handle it in preRestart since it is state of the actor
; design
what if anything in this method fails Someone is going to wait forever for activation We need to send EndpointFailedToActivate message
; general
this is not idempotent in case actor restarted
; design
this will overwrite in case of restart
; general
Ill have another look at this You dont want to go to the map every time you send a message
; general
I dont like this autoreformat
; general
I did have that in mind and left that idea when I wanted to keep the processors and endpoints somewhere else than the Producer so that the Camel extension just keeps track of it If I add the endpoint and processor back as vals in the producer register creation I can wrap all of this in an actor
; general
It is now only published on consumerRegistry Should we not  change it so that the ActivationTracker publishes these events
; general
I added it in because I was not sure if it could be possible in an actor restart at failuresupervision
; design
Question Terminated is not sent for restart of actors correct Is the only way for us to cleanup actor at failurerestartsupervision to use the preRestart and other hooks
; design
I am not sure what you mean AT tracks them and passes them to anyone awaiting for events
; general
Maybe something is missing in the akka standard settings you can check the scalariform settings unless its something that happened in my editor by mistake
; general
I mean the eventStreampublish code
; general
Terminated is only sent when actor is dead  no more restartsI am not aware of other ways so what we need to do is probably cleanup inside the registry in case of reregistrationI would avoid prepostRestart  hooks
; design
OK so when registration is requested that is already registered we stop the existing throw it away and add a new one or do we leave the existing processor alive across restarts
; general
Since Endpoint and SendProcessor are mutable I cant return them as responses from the actor I could create for this which would be necessary if that state would be there Im now opting for a guard around register and remove using standard mutable HashMap and ditching ConcurrentHashMap remove being called before register would mean the actor gets terminated before it gets created which is not possible I think when using a lock and a normal HashMap
; design
Ah you mean AT already subscribes to the events so I can just send the events using the eventStream Ill do that
; general
I think I messed that up Later on the reformatting didnt do this
; general
This object can be accessed from multiple threads and it is not thread safe
; design
It is thread safe lockwithGuard
; general
through calling remove on Registry also happens if reregistered The ProducerWatcher also uses it in Terminated in remove the SendProcessor is stopped In other code I have never seen the endpoint stopped or something like that so I havent
; general
ok with akka we dont need locks at all  ask Viktor We can do the same if we wrap camelObjects with actor Check how its done in IdempotentCamelConsumerRegistry
; design
hehe yeah I know although if you look a little deeper there are locks here and there The only thing is that then that actor needs to give the SendProcessor and Endpoint back to the producer actor in some message But the rule is no mutable messages and these classes are mutable So which rule do I breakBTW Awaitresult blocks
; design
What I meant is this httpsgistgithubcom1659645
; general
Sure that is what I also meant but you are sending mutable messages back here sender  endpoint processor Endpoint and processor are mutable So should I break that ruleAlso the register request response call awaits and blocks not in the same way as a lock but still it is blocking so the benefit is not so muchAlso now you have to handle the timeout which is not there in the lock version
; general
I think the mutable message is a lesser of two evils hereId rather have nice clean encapsulation of a state in one actor rather than actor sharing state with Camel and locks to guard itEasier to understand and manage No accidental lack of locks Isnt it what the Actors are about To simplify concurrencyWhen it comes to mutability of the objects sent in the response It is a good rule to avoid it because in general changes in the message might affect both sender and receiver In our case changes to processor and endpoint are orthogonal to the CamelProducerIdempotentRegistry and also we have a contract that CamelProducerIdempotentRegistry only mutates processor if the actor is dead
; design
Another very simple alternative would be to use preRestart and postStop and override them as final and provide preRestartProducer and postStopProducer hooks which original methods could delegate to This is under assumption that we dont want to reuse processor and endpoint but it could be slowI am not sure though if I like this alternative because of the nonstandard hooks
; general
doneSync has nothing to do with the way we should respond to the sender of the message It is only used together with spring transactions So we should do the same thing in both cases
; general
We dont need to do this FailureResultMessageResult business The decision wether the client of our endpoint is going to be blockingSync or nonblockingasync is made by the client by deciding whether to use tell or ask style of communication
; general
Check this out httpcamelapacheorgasynchtml
; general
this whole method can be rewritten it 2 linesoriginalSender  if exchangeisFailed exchangetoFailureMessagecmsgheadersheadersToCopyelse onResponseexchangetoResponseMessagecmsgheadersheadersToCopy
; general
we dont need this methods The same can be done with camel routing iepreobject CamelRoutes extends App  val system  ActorSystemTest  val camel  CamelExtensionsystem  camelcontextaddRoutes    new RouteBuilder      def configure         fromdirectatodirectoutchoice          whenheaderrespondToisEqualToctodirectc          whenheaderrespondToisEqualTodtodirectd        fromdirectcprocessnew Processor  def processexchange Exchange  printlnC  exchangegetIngetBody        fromdirectdprocessnew Processor  def processexchange Exchange  printlnD  exchangegetIngetBody        fromdirectoutprocessnew Processor           def processexchange Exchange             val body  exchangegetIngetBodytoString            printlnout  body            val response  new DefaultMessage            responsesetBodyRECEIVEDbody            responsesetHeaderrespondTo if bodylength  2  0 c else d            exchangesetOutresponse                              val producer  systemactorOfProps  new Actor with Producer     def endpointUri  directa      producer  some message 1  producer  some message 12  Threadsleep2000  systemshutdownpreOutputpreoutsome message 1CRECEIVEDsome message 1outsome message 12DRECEIVEDsome message 12preCheck this out httpcamelapacheorgrouteshtml
; design
dont need that either
; general
Sometimes I think that what we really need here ispreclass ProducerendpointUri String extends Actor  private lazy val camel  CamelExtensioncontextsystem  final def receive      case msg    cameltemplateasyncCallbackSendBodyendpointUri msg new Callbacksender     final override def preRestartreason Throwable message OptionAny     sender  Failurereason Map  class Callbacksender ActorRef extends Synchronization   import akkacamelCamelExchangeAdapter  def onFailureexchange Exchange  sender  new CamelExchangeAdapterexchangetoFailureMessage  def onCompleteexchange Exchange  sender  new CamelExchangeAdapterexchangetoResponseMessagepre
; design
Isnt it what the Actors are about To simplify concurrency Of course for the user There used to be many places in the akka code where no actors where used for internals That flavor might have changed When it comes to mutability of the objects sent in the response It is a good rule to avoid it because in general changes in the message might affect both sender and receiver In our case changes to processor and endpoint are orthogonal to the CamelProducerIdempotentRegistry and also we have a contract that CamelProducerIdempotentRegistry only mutates processor if the actor is deadAnd you seriously find that more clear than two locksAnyway Ill change it to an Actor its one way or the other most important for me is a working versionOn timeout on registerProducer Ill send EndpointFailedToActivate and throw exception to the Actor
; design
both  and  are nonblocking I have no problem with always making this async since both are now async in 20
; general
Sure you can use routes but not inside the actors in a programmatic way I see that as two distinct features Why would we drop a feature if it is something people We use both receiveAfterProduce and receiveBeforeProduce in existing projects
; general
I disagree Its a useful feature What we normally do is that the Producer has some transformation code to the endpoint and from the endpoint changing headers dynamically etc The receiveBeforeProduce and receiveAfterProduce are perfect for this
; general
Actually I thought about it again Ill rather keep the locks No timeouts no unexpected failure because of load simpler Ill ask Viktor for advice
; general
You can do exactly the same with routes honestly  we dont need this featureAnd also If you dont mind lets just use producer as above No registration hassle simple reliable and we delegate the hard stuff to camelIf its too slow we could consider creating endpoint and using    cameltemplateasyncCallbackSendBodyendpoint msg new Callbacksender
; general
Look at the code below This feature is already there in camel We dont need to duplicate itfromdirectstarttransformbodyappend WorldtomockresultMore here httpcamelapacheorgmessagetranslatorhtml
; general
All we need is to be a gateway to camel No need to write more code than thispreclass ProducerendpointUri String extends Actor  private lazy val camel  CamelExtensioncontextsystem  final def receive      case msg    cameltemplateasyncCallbackSendBodyendpointUri msg new Callbacksender     final override def preRestartreason Throwable message OptionAny     sender  Failurereason Map  class Callbacksender ActorRef extends Synchronization   import akkacamelCamelExchangeAdapter  def onFailureexchange Exchange  sender  new CamelExchangeAdapterexchangetoFailureMessage  def onCompleteexchange Exchange  sender  new CamelExchangeAdapterexchangetoResponseMessagepre
; design
Ive asked Martin and Viktor to check this and see what they would like As a user of akkacamel Im biased to keeping certain stuff in that works really well for me the route that you show does not allow me to add any kind of built up state based on previous messages in my custom producer into the messages
; general
And here you have the full usecase with transformation of the messagehttpsgistgithubcom1664313
; general
All dpeends on the constraints which are not immediately obvious here Could you elaborate
; general
Nice example but you havent wont me over yet  That means that I have to do all transformations in camel processors instead of just doing it right where I produce messages and receive responses in an actor style As a user Im not excited Im not sure that we win much with this scope reduction IMHO
; design
The registerProducer gets called in the producer initialization remove is called on TerminateIf you use a registry actor to register the producer and the system is under a heavier load you would sooner get timeouts then when it is not so thats variable which means sometimes the sendprocessor and endpoint are not received which will fail the producer actor at startup and sometimes not depdending on the timeout In the meantime the registry actor does not know that the producer actor did not get the message and has created the sendprocessor anyway The lock makes this mechanism simpler if the creation of sendprocessor and endpoint succeeds the actor gets them and less different behavior under different loadtimeout conditions I also dont like sending back the mutable SendProcessor and Endpoint back as messages since I dont know for sure if that can cause problems
; design
can you register or deregister multiple endpoints at a time Or do you just guard against registering the same at the same time
; general
Viktor Does a Terminate happen when an actor fails in default supervision restart or stop  Im not exactly sure on this I havent had time to investigate this
; design
You can register multiple different endpoints at the same time say you have producer to httpserver1 and to httpserver2 and you get two producers for it You can also register the same uri for more than one producer actor type but that should result in 1 endpoint for every producer actor since it is keyed on ActorRef The Terminated message handling is in essence serial so the remove would happen one at a time through the ProducerWatcher threadsafe inside this ProducerWatcher actor so that would not be many at a time But without the lock you could have a register and remove of the same endpoint at the same time from different threads if the producer actor is started and immediately stopped
; design
Just add a proxy actor to producer and do the complicated stateful stuff in it
; design
Or use a processor   fromdirectatodirectouttransformbodyprependTRANSFORMEDappend          choice          whenheaderrespondToisEqualToctodirectc          whenheaderrespondToisEqualTodtodirectd          otherwiseprocessnew Processor  def processexchange Exchange  other  exchangegetIngetBody
; general
Why would you ever need final override def preRestartreason Throwable message OptionAny     sender  Failurereason Map  The entire idea is that failures are transient and should not be observed from the outside its between parent and child Only thing interesting for the outside world is Terminated
; general
Youre still being a bit vague If you can ie Camel supports that register multiple endpoints at the same time and that should be possible just use a CHM and putIfAbsent only one wins
; general
Ah you mean like that DefaultCamelContext code synchronizes on endpoints collection for creating endpoint  A new SendProcessor is created with an endpoint so one at a time I had a CHM before Piotr commented that there was no guarantee of order of remove and put on CHM So I went with the maybe too safe lock on the HashMap
; general
a lock wouldnt give you that guarantee either
; general
Hm thats true Does actor start and Terminate guarantee that start happens before Terminate If not would that be reason enough to put all this state in a separate actorKeeping in mind that the getEndpoint is synchronized on endpoints inside DefaultCamelContext
; design
Something you do in preStart should definitely come before Terminated which is published when the Terminate system message gets processedYou can always do a conditional remove in the case of uncertaintyA rule of thumb in trying to go lockless is always use conditional operations putIfAbsentkv replacek old new removek oldnew
; general
receiveAfterProduce is also needed to create custom responses as explained in httpkrassermblogspotcom201102akkaproduceractornewfeaturesandhtml example ACK after message was added to a JMS queue  interaction with the producer actor is inout interaction with the Camel endpoint is inonly Furthermore it is needed to create nonblocking producer pipelines as shown in httpwwwslidesharenetkrassermsystemintegrationwithakkaandapachecamel although since Akka 11 this is possible with futures as well  see slides 42 and 43
; design
Important point I forgot that we also use it like that for sending over ActiveMQ which I think is the same
; general
Ok So CMH has your approval if I use it that way Ill have to work out the conditional ops but thats fine
; general
CHM is fine we have a ticket to switch all CHM usage to Ctries or NBCHM in the future but thats an implementation detail
; design
re inonly and ACKyou can use camel routeonCompletionconstantdone to send confirmation backre pipelines and custom responsesThey are also covered by camel see belowfromdirectatodirectouttransformbodyprependTRANSFORMEDappendchoicewhenheaderrespondToisEqualToctodirectcwhenheaderrespondToisEqualTodtodirectdotherwiseprocessnew Processor  def processexchange Exchange  other  exchangegetIngetBodyWe really do not need to reinvent existing features
; general
You make the assumption that the producer actor sends the message to a Camel route which need not necessarily be the case Furthermore my initial idea with akkacamel was to have actors processing messages between endpoints instead of Camel processors Although everything could be done in Camel as well the threading model is completely different making it trivial to implement stateful processors for example I just didnt have time to further work on actorbased EIPs which still would be a nice to have IMO
; design
I still dont see why would we want to duplicate the features existing in camel Can you give a specific example
; general
What wrong with the example I just gave This is similar to asking why to have sbt when there is Maven
; general
Are you referring to slide 42There are at least two ways of solving that problem without adding this featureCamel way precontextaddRoutesnew RouteBuilder def configure    fromdirectatojmssomeurionCompletiontoactor check ActorRouteDefinitionval producer  new Producerdirectaproducer  some messagepreActor waypreval producer  new Producerjmssomeurival actorWeWantToForwardTo  actorOfPropsnew Actor   def receive         case response  Message  actorWeWantToForwardTo  response       case request  producer  request   producer  some messagepre
; design
No I was referring to implemeting stateful message processors based on actors  Again in your last response you are making the assumption that a Producer actor is sending messages to a Camel route Thats only a special case There are cases where you cannot control the destination endpoint implementation and need a mechanism on the actor side to send custom responses  As a IMO more elegant solution to your actor way example use monadic composition of futures as shown on slide 43 of my presentation httpwwwslidesharenetkrassermsystemintegrationwithakkaandapachecamel This actually is an alternative to receiveAfterProduce The receiveAfterProduce callback was introduced at a time where nonblocking future composition wasnt possible in Akka yet More important there are users out there that make heavy use of receiveAfterProduce So you should ask them on akkauser whether they are willing to migrate to an alternative solutionBut the most important issue is related to using a producer template in your proposed Producer trait implementation Although the producer template exchanges messages with the endpoint in a separate thread it uses a blocking send method that blocks a thread of Camelmanaged thread pool This makes usage of endpoint producers that support nonblocking IO such as cameljetty or camelahc completely useless Whatever the implementation will finally look like supporting nonblocking interactions with endpoints on both Consumer and Producer side is a must have This is a prerequisite to have nonblocking message processing routes based on Akka actors In these routes it is important that no single thread is blocked waiting for a response as shown in the sequence diagram of httpakkaiodocsakkamodules12modulescamelhtmlasynchronousroutingandtransformationexample below the code section This is not possible with your proposed producer template based implementation So please dont sacrifice scalability for a simple implementationFurthermore a discussion around around alternative implementations in Camel should also be made on akkauser We should let users decide if or how much of Camel route programming they want to do My initial idea was to expose only endpoint URIs to the application developer and to do the plumbing route construction and message processing only with actors This is an alternative to the Camel DSL and IMO it is good to have Camel DSL alternatives for reasons Im happy to explain elsewhere
; design
re template issueThe name of the method in a template is quite misleading  it suggests it does things in async way This means we need to create the endpoint and processor and shut it down afterwardsI am glad youMartin are reviewing this code so we can avoid traps like that Would you like to have a look at ActorComponent as well Also there is an issue with Message dependency on CamelContext  can you suggest any elegant way of getting rid of this dependencyre receiveAfterProduceThe only reason I was suggesting we drop it is because it would allow making the Producer implementation MUCH simpler without the need for deathwatch CHM and extra actors Since it could be  done elegantly  as you suggested  with futures than it should not be an issue for the users
; design
There is some good discussion going on here At the same time I would like to close and merge this pull request Leftovers can be done in another ticketThe decision to dropreplace receiveAfterProduce should be a ticket on its own I would like to continue with the next ticketsCan the pull request be merged
; general
Do you want to close this one and create another pull request based on the same changes so we can see changes you applied since this discussion startedIdeally without reformats
; general
Ok that is probably a good idea There are too many comments here now to see what is what I think the best thing is that I take the latest wipcamel with recent merges rebase my changes on top of that and exclude the reformats as one commit and create a new pull request Ill have to do that a little bit later today though
; general
piotrga doing IO asynchronously in a separate thread  nonblocking IO That way the template method does what its name says Its only that it doesnt use the later introduced Camel AsyncProcessor interface that is needed to leverage the nonblocking IO functionality of some producer endpointsIll take a look at the ActorComponent and the Message dependencies when I have time
; design
why not val endpoint producer  camel
; general
so we are not restarting endpoint and processor
; general
why do we create this stuff upfront even if they already exist when prev  null
; general
Do we really have to use removekeyvalue instead of removekeyWe should be in threadsafe environment here If we are doing it just in case it would be an alarm bell
; general
shall we stop the endpoint too
; general
Can you please explain why do we need to treat done sync differently than done async
; general
Why do we do receiveAfterProduce only in done sync Is this the convention we are making up
; general
Why dont we copy all the headers Is this performance optimisation
; general
just extract method man
; general
Really You need to test that
; general
what aboutprocessorisStopping or processorisStopped must be true
; general
what does it do
; general
this would suggest that remove might not be so good name for it Maybe unregister
; general
unregister is more likely to stop some things than remove
; general
do we need to check it again here It was already tested in other tests
; general
What if we awaited deactivation Would we have to check the isStopping
; general
i dont think so The endpoint can be a singleton so that could mean you stop everyones endpoint I could check withe the isSingleton but would have to test what really happens if we stop it It wasnt in the original akka camel code
; general
because you want to use putIfAbsent and you need to create what you want to put Nothing much happens in the constructors though
; general
correct We only start when its not there yet no unnecessary stopstart
; general
Oh forgot about this one will do
; general
we are doing it in both its not so easy to see in this commit sending the message to self and then          case res MessageResult  receiveAfterProduceresmessage    case res FailureResult  receiveAfterProduceresfailure
; general
will do unregisterProducer
; general
I would still like to know since the context is a little different
; general
It makes the akkacamel part of the full build and is executed as part of it
; general
Ill remove it the actor instance would have to diestop replaced by new instance and die again still attached to the same ref for anything weird to happen in which case removekeyvalue would only make sure in the case that this happens exactly at the same time that remove is only called once I dont think that is possible worst case you get a EndpointFailedToDeActivate
; design
I think these comments were left over from the previous pull request default restart stops actors Unless user overrides this behavior
; general
Was in original code I left it purely because of that maybe Martin can tell us the idea behind it
; general
Not really I guess especially with the SharedCamelSystem
; general
Sounds like the title of a rap movie
; general
Use Propsempty instead guys
; general
isnt it slow can we do it in lazy wayOtherwise restarts would be slow wouldnt they
; general
No wait I just realised why its done that way Its an optimisation If exchange is done in sync way it is safe to call receiveAfterProduce because we are in the same thread as when we called produce
; general
see my comment above No wait I just realised why its
; general
re Use Propsempty instead guysGenious And obviously its in the docs I just read it
; general
logConfigOnStart  on
; general
here you should create a reference to the section Logging of message invocations on certain actors in testingrst
; design
BTW its worth mentioning here that those log at DEBUG level and you must enable debug log level with    akka       loglevel  DEBUG
; general
Rename FaultHandlingStrategy to SupervisorStrategy
; general
Can actor be null here and if so what should be done
; design
if actor is null here
; design
if actor is null here
; design
perhpas rename all things FaultHandl to SupervisorStrategy
; general
cleaner and cleaner
; general
that was not possible
; general
these finals dont actually do anything right
; general
I think our convention is to use  around variable data in log messages at least Jonas has pointed that out for me
; general
Atleast they signal thaty they are constants and are as such inlinable
; general
nope they are not constant at compile time hence no constants What should be inlined
; general
just verified that the bytecode generated with and without final is identical  vals are always private final fields
; design
but isnt there an accessor method that is different
; general
ah right But according to httpstackoverflowcomquestions3961881whydefiningclassasfinalimprovesjvmperformance this annotation does not really change anything so my main concern was with the field itself being finalSo while this patch does not change inlining characteristics it does make it impossible to subclass Settings which could be achieved with less noise by making the whole class final
; design
Alright I agree we shouldnt do this because of superstition
; general
This doesnt look like java code
; general
Does this mean that resize will not be done for ask
; general
There should also be a section about the actual ask change move from ActorRef to pattern with code samples v13 vs v20Do separate v13v20 samples in java also since the syntax is changed
; design
I think some more things are needed in the migration kitAdd the needed implicit conversions in OldActor so that existing code works inside actorsAdd needed implicit conversion in this packagescala file so that existing code works outside actors ie in tests
; design
ask calls tell which should resize
; general
good point will do including specific section in migration docs
; general
Its a shame that the CPS plugin does not work for Java  good catch will fix of course
; general
Document as internal and make final
; design
I like to move it move it
; design
should be privateakka
; general
Id definitely recommend making DeadLetterActorRef a subtype of EmptyLocalActorRef and drop DeadLetterActorRefLike
; design
why is this class public and not documented Im guessing this should be privateakka and documented as internal Java users will be able to use privateakkathings right
; design
add  Unit
; general
add  Unit
; general
Does AskSupport need some overall ScalaDoc
; general
move f inside flow
; design
move f inside flow
; design
It dont work because constructor of ELAR supposed to init while constructor of DLAR cant init
; general
sure everybody likes Davy Jones dont they
; general
This will always be false since left can at most be 1 I think the following would be more correct  left defaults to throughput  decrementing will always to the right thing also for negative values since  continuation condition is left  1 unless I misremembered what negative throughput is supposed to do I thought slurp all modeAlso wouldnt it cost less to check deadlineNs  0 instead of dispatcherisThroughputDeadlineTimeDefined This can give a false positive and hence one potentially extraneous message processed in the exact nanosecond that nanoTime wraps aroundBut overall I very much agree with the approach much more readable
; general
correction deadlineNs should have 1 ored in for a defined deadline to make sure that the value does not accidentally come out as zero Im sure one extra nanosecond will not kill anybody
; general
I prefer L over l since l looks like 10l  0L
; general
Worrying about nanoTime wraparound would also require changing to SystemnanoTime  deadlineNs  0 since that has the correct overflow behavior This is only halfway academic since nanoTime is documented to not bear any relation to absolute time ie a malicious VM could potentially start that counter a few minutes shy of the wraparound just like the Linux kernel does with its jiffies
; general
Should of course be max here so I fixed that
; general
I think this clears things up
; general
Yes it does you chose to spend one or two extra cycles in order to keep this most central part of our source code readable Fair enough  this shall also serve as my official smiley wrt this pull request
; general
are we sure thats an immutableSeq
; general
isnt this the default I mean DurationInf
; general
the local def was only used to get around the old clunky syntax can make it nice and slick in one expression now
; general
Yes DurationInf is internally treated as previous None
; general
maybe also add an implicit for the makeDecidercauseAction variant which might be nice for composing strategies
; general
and you think I didnt tryI got a very strange compilation error about missing class 1 when usingwildcard import in java
; design
very strange indeed It would be possible to work around that compiler bug it is adding the generated closure to the public static members but it is broken presumably because it is indeed nested within the MODULE by using lazy val but that is too expensive for this minor wart
; general
added it with the twist that it needs to go into a new LowPriorityImplicits trait in order not to clash with this one for empty lists
; general
havocp I suggest that we should add serialversionuid to all serializable config classes
; general
I was thinking about and wasnt sure what to do I read that by default the serialversionuid will be a hash of the class fields and methods so if anything changes the version changes that seems like a very safe behavior will catch any kind of unsafe mismatch between serializer and deserializer the alternative is that if the serialization changes we remember to manually change the serialversionuid right Someone is going to screw that up sometimes though it would also avoid gratuitous serialization format incompatibilities on occasion no doubtI doubt we should commit to freezing the serialization format maybe the policy should be that you need the exact same library version on both sides  I dont even know exactly how akka is using serialization so not sure If the format is subject to change at any time maybe its better if it changes more often but reliably always complains about potential incompatibilitiesI need more context probably
; design
4 feb 2012 kl 2340 skrev Havoc Penningtonreplyreplygithubcom  287 297    with a onelevel javautilMap from paths to nonnull values Null values are   not in the map   final class SimpleConfig implements Config MergeableValue javaioSerializable  final class SimpleConfig implements Config MergeableValue Serializable   I was thinking about and wasnt sure what to do I read that by default the serialversionuid will be a hash of the class fields and methods so if anything changes the version changes that seems like a very safe behavior will catch any kind of unsafe mismatch between serializer and deserializerYes that is the problem it is normally too safe you cant do any changes without breaking serialization if you dont add the serialversionuid  the alternative is that if the serialization changes we remember to manually change the serialversionuid rightWe have to be careful but then we have the option to do changes Adding fields and changing methods is possible Someone is going to screw that up sometimes though it would also avoid gratuitous serialization format incompatibilities on occasion no doubt  I doubt we should commit to freezing the serialization format maybe the policy should be that you need the exact same library version on both sides  I dont even know exactly how akka is using serialization so not sure If the format is subject to change at any time maybe its better if it changes more often but reliably always complains about potential incompatibilities  I need more context probablySerialization is used in the remotingDifferent versions might be needed when doing rolling upgrades and when talking cross different systems Demanding exact same version on both sides is too limiting    Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull298filesr417003
; design
so does the serialization need to be guaranteed just like the ABI I think almost any substantive code change would break the default Java serializer its tempting to implement readwrite by hand to avoid that risk if the serialization needs to be stable then could eg make the deserializer handle both old and new versions and things like reordering fields wouldnt break itif theres no guarantee if youre doing a rolling upgrade or something how would you know whether a particular upgrade will have a problem
; general
On Mon Feb 6 2012 at 917 PM Havoc Pennington replyreplygithubcom wrote   287 297      with a onelevel javautilMap from paths to nonnull values Null values are     not in the map      final class SimpleConfig implements Config MergeableValue javaioSerializable   final class SimpleConfig implements Config MergeableValue Serializable It is even documented in JavaDoc of javaioSerializable lastsection that it is strongly recommended that all serializable classesexplicitly declare serialVersionUID values so does the serialization need to be guaranteed just like the ABI I think almost any substantive code change would break the default Java serializerNo its not good but not that bad You can change methods which ispretty useful and add new fields if you can use default values or null its tempting to implement readwrite by hand to avoid that risk if the serialization needs to be stable then could eg make the deserializer handle both old and new versions and things like reordering fields wouldnt break itYes that could be done but I think the config lib will rather stable andI think that would be overkillReordering fields doesnt break serialization afaik if you defineserialversionuid if theres no guarantee if youre doing a rolling upgrade or something how would you know whether a particular upgrade will have a problemwell we could say cross minor or micro versions it is guaranteed to becompatiblewithout serialversionuid we cant do any changes at all not even recompilethe code may be different with different compilers  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull298filesr420554 Patrik NordwallTypesafe httptypesafecom   The software stack for applications thatscaleTwitter patriknw
; design
sounds good Im not trying to avoid the serialVersionUID just understand what the maintenance requirements are thanks
; general
I pushed a new serializable branch to typesafehubconfig with serialVersionUID and some tests that should fail if we make incompatible changes
; general
Will this mean anything since you dont know which system or port
; general
When is the Random instance cleaned up
; general
Shouldnt we make this configurable
; general
If we make PortRangeStart pull from Config in AbstractRemoteActorMultiJvmSpec then we can dooverride def PortRangeStart  superPortRangeStart  2000
; general
haha nice bug
; general
yes this is good
; general
wouldnt it be better to keep it abstract in order to force explicit assignment per test
; general
Or even reserve a range so tests dont need to know other tests ports
; general
This was old code I moved around Been around since Akka 03 Perhaps does not make sense anymore
; general
Not cleaned up Used for the lifetime of the router
; general
It is configurable since you can override it I think a default is good but make it abstract if you prefer The range is start  nrofnodes
; general
But we dont really have to override it since multijvm tests are executed in sequence We just need to make sure they use a different range than normal remoting tests Dont think it is worth adding the extra complexity of being forced to override it in every test without it being necessary
; general
adding ticket for this
; general
Technically unknown throwable
; general
What happens if the duration is 0 what if its negative Is it recommended to have delays that lasts for days
; general
My point is that you shouldnt have to know what range other tests use So introducing in the baseclass a reservation method instead that they all can useval portrange  reservePorts10  10 nodes needed
; general
Then here you could just do portRange zip remotes
; general
idx would be the port
; general
Ok You really think somebody cares But Ill change it
; general
Good question I dont know This router was contributed by some guy What do you suggest Set a cap Do we do that for other timeouts
; general
Thats nice Ill add PortRange method
; general
Should we not have a check for negative Durations in Duration But Ill add a check for  0 in the Router
; general
this is wrong there is no else so there will be NPE here if throwable eq null put everything in the match instead    throwable match       case null  Unknown Throwable was null      case ae AkkaException  aetoLongString      case e                  ssns format egetClassgetName egetMessage stackTraceToStringe
; general
if within  DurationZero
; general
My point is that you dont They run in sequence No clashes Just need to be different than remote test port range Which this commit fixes You want to generalize more than needed feel free
; design
Damn Missing the else Thanks Patrik Sloppy of me to let this one slip through Ill fix ASAP
; general
I didnt write this just formatted But Ill fix these
; general
I know The reviews are good opportunity to cleanup whatever is noticed thats the way we roll all the time5 feb 2012 kl 0905 skrev Jonas Bonrreplyreplygithubcom  13511 1208  case class RemoteServerClientDisconnected   BeanProperty val clientAddress OptionAddress extends RemoteServerLifeCycleEvent    override def logLevel  LoggingDebugLevel   override def toString      RemoteServerClientDisconnected        remote         Client        if clientAddressisDefined clientAddressget else no address             RemoteServerClientDisconnected  remote         Client  if clientAddressisDefined clientAddressget else no address    I didnt write this just formatted But Ill fix these     Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull297filesr417231
; design
I know It is good practice Im just tired of this commit and ever more that I have to write this in 14 degrees Celsius at home now since the heating system is broken again
; general
I very carefully test this sorry for the duplicate line
; general
Which license is this Is it a complete rewrite
; general
See the the description of the PR and the FIXME comment belowThe orignal Mozilla code is MPL JChardet is a port of that but my code is in fact closer to the original Mozilla code Anyway the license information is here  httpjchardetcvssourceforgenetviewvcjchardetjchardetLICENSErevision11viewmarkup
; general
btw I do not know what is considered a complete rewrite While the structure of my code is very different the getNextState method is the same and the vectors cclass and states are just the evaluated versions of the original ones that had expressions there
; general
I followed the established idiom in that file will fix all occurrences of that same pattern
; general
Does it work with deployconfiggetMillisecondsretryKeymillis
; general
case sender  ClusterDomainEvent  ClusterRouterActorRetryTick  ListDestinationsender routeeProvidercontextself
; general
Id probably prefer a simple if    val interval  routeeProvidersettingsretryLookupInterval    if intervalisFinite  Retries enabled       retryTask  Somecontextsystemschedulerscheduleinterval interval self RetryTickcontextdispatcher
; general
Doesnt schedule take a FiniteDuration11 maj 2013 kl 1957 skrev Viktor Klang  notificationsgithubcomInakkaclustersrcmainscalaakkaclusterroutingClusterRouterConfigscala  3086 33514  privateakka class ClusterRouterActor extends Router         routeeProvidernodes  smemberscollect  case m if routeeProviderisAvailablem  maddress         routeeProvidercreateRoutees       if routeeProvidersettingsisRouteesPathDefined  retryTaskisEmpty         routeeProvidersettingsretryLookupInterval match            case interval FiniteDuration Id probably prefer a simple ifval interval  routeeProvidersettingsretryLookupIntervalif intervalisFinite  Retries enabled   retryTask  Somecontextsystemschedulerscheduleintervalinterval self RetryTickcontextdispatcherReply to this email directly or view it onGitHubhttpsgithubcomakkaakkapull1429filesr4183728
; design
Doh youre right
; general
I guess so Shall I change all places I dont know why we have used thisstyle everywhere11 maj 2013 kl 1917 skrev Viktor Klang  notificationsgithubcomIn akkaclustersrcmainscalaakkaclusterClusterActorRefProviderscala  9113 9326  privateakka class ClusterDeployersettings ActorSystemSettings pm Dynami            if deployrouterConfigisInstanceOfRemoteRouterConfig              throw new ConfigurationExceptionCluster deployment cant be combined with sformatdeployrouterConfig           val routeesPath  deployconfiggetStringclusterrouteespath           val retryLookupInterval Duration               if routeesPath   DurationUndefined             else                val retryKey  clusterretrylookupinterval               deployconfiggetStringretryKeytoLowerCase match                  case off  DurationUndefined                 case       DurationdeployconfiggetMillisecondsretryKey MILLISECONDSDoes it work with deployconfiggetMillisecondsretryKeymillis Reply to this email directly or view it onGitHubhttpsgithubcomakkaakkapull1429filesr4183645
; design
No leave it be Would be nice with an approach that doesnt require ugly isInstanceOf and asInstanceOf but also doesnt require pointless case   do nothing
; general
This val could be eliminated by just moving the expression into the first call of offerElement eliminating the risk of the nanos val being improperly used in the code block
; general
Yup sounds like a good idiom in order to avoid the usage in the locally defined method
; general
logwarningStopping proxy after  retries numRetriesthe actor path self is already logged since log comes from ActorLogging
; design
This is not true any more in master and 22M3 remote death watch takes care of thisTherefore I wonder if you need the special ProxyTerminated message
; general
Im not sure if that definition of 0 is good It would be more natural to use 0 as disable retry feature and a high value MaxInt no special value is needed as no limit
; design
ok the unsent messages can be a reason
; general
Given that Terminated is delivered is this neededPerhaps it is good with a limit anyway
; general
It will be the failuredetector actually no
; general
ah left over from my first implementation thanks
; design
I dont completely understand this part What is the scenario here
; general
yes way cleaner
; general
The idea is that if the leaving node is the only one remaining it should be shutdown This will only happen when it moves itself to Exiting and all others have left I added a test in SingletonClusterSpec that I think will fail without this single node leaving itself
; general
But the comment in case the Exiting gossip never arrives is wrong
; general
That is what I guessed Does it really need to move itself to Exiting I mean this is fine as it is it is not a scenario that is worth optimizing I am just curious
; design
this DOWN  EXITING relationship should be expressed by a method so that it can be kept consistent wdyt
; general
Why 1 to 3
; general
I think it means gossip 3 times Shouldnt this be configurable
; general
Yes I know that  But the question was why 1 to 3 and not 1 to 5 ie why 3 times
; general
So that is covered by my second sentence P
; general
LOL really 3 is best effort D
; general
Well strictly speaking the system will work without any gossip here the idea is try to serve with our last breath
; general
Thank you drewhk for clarifying my intent with this codeIt is a special case when the leader is leaving the cluster will behave better if it tries to tell others that he is exiting before shutting down Otherwise others will detect him as unreachable and so on3 felt like a good effort I dont really see the point in making this configurable but I can of course do that if that is our policy
; general
Ok just document it ie why 3 was chosen so the next guy knows how the magic happened
; general
Make it a named constant  and we can decide if we want to expose this in config later
; design
ok thanks for feedback
; general
I think this comment has gone a little stale now
; general
recalculating upMembers and exitingMembers looks fragile how about just localMembers  newMembers
; general
remember that equals for Member is based on the address only so that kind of check would not detect status change
; general
or better derive newMembers from localMembers upMembers and exitingMembers keep things DRY
; general
same here calculate downedMembers and then use that to derive the newUnreachableMembers
; general
I have not looked at the tests yet but Id like to see it verified that without this extra gossip the new leader will actually do the right thing eventually is this possible
; general
I dont get the comment above this line  Everyone else that is not Exiting stays as they are There is no check for Exiting Everybody else stays as they are It was even wrong before since we removed Down members as well
; general
There will be no new leader that performs any leader actions until convergence so the just shutdown node must first be detected as unreachable and then downed auto or manual which will in the end result in a not so graceful leaving That is why these extra gossips makes things better
; general
yes the comment might be stale but note that Down members can only exist in unreachable
; general
so the comment was wrong before also in another sense
; general
which essentially means that we depend on these gossips for seamless operation of normally graceful operations and hence it is more than pure optimization it looks like this wants to be fixed in the sense that the designated new leader should take action in this case even though there is no full convergence
; general
wont the ClusterCoreDaemon be shut down by clustershutdown thus making this superfluous
; general
When we discussed this solution we said that we should do best effort leaving The real thing will be implemented in 23 when we really need hand off and stuff Or do you have a suggestion of how to solve itChanging leader semantics for leaving is not correct I thinkThe only thing I can think of is to treat unreachable Leaving special so that it is always handled as autodownHowever I dont see the big problem unreachable and downing can always happen
; design
yes but after MemberExited it could come a MemberRemoved which will trigger EndHeartbeat before cluster is completely stopped and the other side will stop monitoring for a while so this prevents this guy from sending out anything more
; general
The difference is that a leaving leader even breaks in the happy case if any other node leaves everything is just fine but if it happens to be the leader then these three random gossips are all that stand between normal function and needing operator intervention and the distinction is rather arbitrary as any node could be the leader If the new leader would just detect convergence if the previous leader is LEAVING and everybody else has seen that then the problem would be solved
; general
okay then this may want to have a comment somewhere
; general
Just a quick question Why didnt we allow Exiting nodes to become unreachable before That feels weird
; general
but my point is that is unlikely probably more unlikely than a normal unreachable failureplease dont complicate the reasoning around convergence just because of this it is confusing as it isit is not as simple as you suggest what if that leader leaves and then that leader
; general
that was a fix I did a few weeks ago yes that was not all good and therefore I reverted it here
; general
I agree the Down and Exiting check should go into something like you did for the gossip with convergenceSkipUnreachableWithMemberStatus
; general
and if sending message to 3 different hosts fails then the network is broken and it is just correct to mark it as unreachable and require downing
; general
Okay convinced Please add a note to the docs if not already there that downing might be required even when the failure happens late during a graceful exit just so people are not surprised it should have been obvious to the cluster
; general
the bug was here missing the assignment to state but I see now that the bug did not exist before my changes so it was introduced by my changesah sorry then it was not easy to spot
; general
in this case rebasing removed the evidence
; general
This split makes it all much more readable Very nice
; general
Shouldnt the Normally this is handled be rephrased and broken out into a real note that ends up in a box instead
; general
On a second thought does this remove IDE related files
; general
yes which I think is good building a release should not be affected by anything which a clean checkout would not have contained otherwise the build is not reproducible
; general
1 on a complete wipeout
; general
So after release everyone has to regenerate the IDE settings Not that I cannot live with the thought but we should document it D
; general
thats the purpose of the prompt which needs a yes before the cleaning happens is that not enough
; general
It is good but I would add a warning at the top of the script to the description of the steps
; general
fine a separate clone can also be used convenient for other reasons as well
; general
without exception can be misleading Either capitalize Exception or rephrase without providing an exception
; general
very true brain turned off
; general
I completely understand D
; general
Document as Internal onlyI recommend adding an deprecated annotation that prints a warning that its internal only
; design
I think we should make it so we always use the behaviorStack ie remove processingBehavior and make it so you cant pop off the last entry on the stack
; general
This should then drop all but the bottom entry
; general
This file is probably not supposed to be here
; general
This should be StackemptyReceivepushreceive
; general
no it was added by misstake
; general
Wouldnt it be nice if the processingBehavior just were the bottom element of the stack at all times One field removed special dispatch logic removed  On the other hand it would make a nonhotswapping actor slightly larger due to the Stacks object overhead instead of using one common empty instance Hmmm I guess it might be fine as it is
; design
Hmm that will pollute our own compiles Isnt there a way to define a ordinary package private visibility in scala I never thought I would miss that java feature but here I actually do
; design
Pushed another commit without the processingBehavior Digest and let us choose the best
; general
Dont know S
; general
val head  behaviorStackifheadisEmpty  headtailisEmpty  behaviorStack  headpop
; general
This method does nothing
; general
I wanted to avoid new Stack which is done by tail
; general
thx missed the assignment    behaviorStack   StackemptyReceivepushbehaviorStacklast
; general
I think you can rip the match out and simply doif behaviorStackheadisDefinedAtmsg behaviorStackheadapplymsg else unhandledmsg
; general
Great observation thanks
; general
thx of courseone thought would it be more efficient to assume that most messages are matched and catch MatchError instead of using isDefinedAt
; general
This cant be right
; general
This cant be right either
; general
true it should of course be dispatcherreportFailuree in all places
; general
I think its better to just report it and let the dispatcher log it
; general
Or perhaps log this at DEBUG wdyt
; general
OverKill with report AND log
; general
Remove logError and only use executorreportFailuree
; general
I dont think the dispatcher has enough context information to do proper logging Perhaps the name reportFailure is misleading its really a decision about rethrow or not as it is now
; general
same answer here
; general
What is the purpose of this method
; general
What is the purpose of this
; general
I dont like this at all Its the provider who should provide these dont like the leakage
; general
Attention to detail
; general
Point is that it feels bad to retain memory just because someone happened to inspect it
; general
Would this still be needed if serializationdeserialization was done by the provider
; design
its documented on ActorPath and its used for cheaply injecting the transport address into its string rep for local Addresses
; general
there should not be all that many Addresses around and those which are will be inspected very often so I think it pays off
; general
I think inbound and outbound connections might be more appropriate since server and client are roles and not components really
; general
Is this still used
; general
is the space here correct
; general
yes because systemprovider does not know who is doing serializing right now so how is the poor LocalActorRef supposed to find out its remote transport address in writeReplace
; general
didnt change it
; general
no forgot to forwardport your change
; general
Isnt the system transitively reachable from the RARP
; general
Shouldnt this use the systems threadfactorys ClassLoader
; general
INTERNAL USE ONLY
; design
privateakka on all of these nouser api stuff
; design
Is this an issue
; general
Is anything of the file above changed I dont like these sweeping changes p
; general
Why not just put the this value as the initial value
; general
this should probably move to the finally clause
; design
I would probably set these before setting the bootstrap val to contain the mutable changes in a block
; general
I dont know I just copied your code into a new file
; general
This is not true
; general
To be honest I think we should remove settingsPort since people easily believes its correct
; general
Is that really true Isnt the PassiveRemoteClient a bastard child in this respect
; general
Im not sure I like this sweeping thing Did you try only doing this at onBind
; general
good point that one might well be preferable will investigate
; general
no the class loader I use is the same one as used for loading the RARP which is the context class loader during ActorSystem creation or the systems loader if no context is set
; design
or did I understand the class loader concept wrongly
; design
yup sounds good
; general
you were the one who requested it
; general
no value other than null is available before this line which would be suitable
; general
That doesnt answer the question
; general
you mean with a doublenested tryfinallysetup for ultra protection
; general
then yes I believe I did some changes in this file Its a shame that git doesnt track these better in case you copy around hunks between files
; general
well I didnt know which one would arrive first and I dont have a test case for it yet because I dont know how to reliably trigger it so this sounded like a hopefully reliable first shot which can later be optimized
; general
we need to read the config somehow so you are proposing a name change
; general
Yes and no since the settings for Actives does not apply for passives
; general
Would be nice if we could just have 1 loader for everything
; general
After this is merged I can have a look and see if its an issue anywhere
; general
p so what am I looking for
; general
so either assert true or do set
; general
Either1 Remove it and pass desiredPort into the constructor or into the startmethod2 Rename it to DesiredPortFromConfig p
; general
Add TODO about that
; general
okay changed it
; general
babystep towards cleaner initialization 1
; general
perhaps time to extract this into method in ReflectiveAccess    def currentClassLoaderobj AnyRef ClassLoader        OptionThreadcurrentThreadgetContextClassLoader getOrElse objgetClassgetClassLoader
; general
and here alsoan alternative might be that the serializer used the ContextClassLoader if any which is now always set in our threads
; general
can be used with or without space
; general
actually I forgot that I cleaned it up so much that even the RARP does not have a reference to its system anymore
; design
getClassgetClassLoader will return the classLoader of RemoteActorRefProviderclass so it will not be able to load fqn if that is located in a child classloader which could be the case Perhaps ReflectiveAccess use contextClassLoader so it will work anyway but feels wrong
; general
wrote a test for the NettySettings
; general
why     case ref ActorRef  refpathaddresshostPort 1
; general
found out that my scheme is b0rked will refactor to store one ClassLoader in ActorSystem and use that everywhere
; general
cutnpaste is why fixed
; general
As I wrote above will make the decision exactly once in ActorSystemImpl and always use that from our code then
; general
well on second look you need this when writing your own transport shall we require this to always happen in the akka package
; general
No the point was to only set it once and the first one wins
; general
done also on ActiveRemoteClient
; general
I chose option 2
; general
ouput is a perfectly fine actor name but people might expect one more t in there
; design
is the wildcard needed ie is the name unpredictable
; design
u think sothanks
; general
it is unnamed probably to avoid conflict with user name space
; general
ah right it might be a tad annoying but luckily concrete deployments take precedence over wildcard ones
; general
here is another ouput nice docs and solution by the way
; design
lol epic typo
; general
Perhaps also mention that wildcard can not be used to match part of the name or can itfoobar
; general
I understand that you mean usersampeActor  third but I guess its rather confusing if user is counted or not since its omitted in the deployment paths
; general
Might be cheaper with a VectorBuilder
; general
if sender  self  endless loop
; general
so if someone sends this a buggy message we dont want it logged in unhandled
; general
case  LeaderChanged  MemberEvent
; general
Gossip creates a new Gossip instance every call should return a cached zero
; general
we should pipe it to unhandled
; general
seems a bit noisy Id recommend just using membersisEmpty
; design
This is not about unhandled stuff Its about filtering out things that should only be published on convergence vs the ones that should be published for every gossip
; general
Yes but it is only called on each node when it joins or leaves the cluster
; general
This is just updating an internal view of the cluster state that only cares about ClusterDomainEvents Ill change it to check that the match is exhaustive instead so we get compile time warnings if we add new events
; design
Im not sure about the naming here these should be named as domain events ie past tenseMemberBecameUnreachable but thats rather longthoughts suggestions
; general
Is the additional clearState on purposea minor style thing  I think you should extract publishDone to a method to make it similar to the other cases
; general
I really dont see the semantic difference between MemberUnreachable and UnreachableMember I think the difference in ordering makes it obvious that its not a normal MemberEvent
; general
do we need this convergence flag any more The state should always be based on converged gossip
; general
also the endless loop is important to address
; general
What would happen if PublishChanges only contained newGossip since this holds latestGossip anyway
; general
Yes the clearing is intentional Ill extract it The loop has been addressed
; general
yes that would be an error if sender  self
; general
I think that the state must include the unreachable members from the latest gossip and that doesnt always reflect a converged state
; general
That would work Add some overhead to the testing since you have to skip over the oldGossip changes to compare the real changes
; general
I dont understan that comment We dont expose convergence in any other place except in the internal SeenChanged event When there are unreachable its never convergenceBy the way can you change seenBy and getSeenBy to privateakka That should only be internal api
; design
what do you think about creating two separate diff functions one for the converged events and one for the others
; general
Thats actually a good idea
; general
Yes youre right we can get rid of the flag and let people check the unreachable
; general
I guess you might want to remove val localGossip to avoid confusion
; general
same here or add a comment why not
; general
bothOld  bothNew should always hold no
; general
talking to Bjrn made me aware of how fragile this solution is Members comparing equal when in fact they are meant to be different Just think about what happens if intersect chose to pick the resulting set randomly from left and right There is nothing in its contract prohibiting such behavior
; design
Was just writing up that comment as well Will rewrite the code
; general
ah I see now what makes reappearing from UNREACHABLE a challenge was this not supposed to happen only upon DOWN patriknw
; general
I think that would be a good changeThe background is that when I implemented this I had the cluster aware router in mind and thought it would be good to minimize the time the router would use the broken reference dropping messages DOWN require the full convergence cycle
; design
then the router should monitor the UnreachableMember messages instead that should give the same timely feedback right
; general
Yes that should be possible perhaps that already done when you mentionit At least for the cluster aware The ordinary listen to Terminated andcan only do soPatrik7 dec 2012 kl 1342 skrev Roland Kuhn notificationsgithubcomIn akkaclustersrcmainscalaakkaclusterClusterEventscala            publish later when convergence           leaderChangedState  SomeLeftx          case ConvergenceChangedtrue             now its convergence publish eventual stashed LeaderChanged event           leaderChangedState match              case SomeLeftx                leaderChangedState  SomeRightx               publishx              case    nothing stashed                      publishevent          case MemberUnreachablem          case UnreachableMemberm             publishevent             notify DeathWatch about unreachable node            publishAddressTerminatedmaddressthen the router should monitor the UnreachableMember messages instead thatshould give the same timely feedback rightReply to this email directly or view it onGitHubhttpsgithubcomakkaakkapull909filesr2347834
; general
could we qualify the name of this diff function since the other one is named diffConverged
; general
should we  do we need to expose convergenceIm afraid its not completeWhat if we start by receiving CurrentClusterState and then nothing more happens then convergence is not really defined
; design
obsolete comment MemberUnreachable
; general
how about diffRaw
; general
So this is in the akka private ClusterReadView and its used in tests some of which could probably be removed awaitUpConvergence for exampleIn LargeCLusterSpec for example should we just check that we have the right number of nodes that all are up and that the leader is the expected one That would probably do it I think
; design
Not too keen on diffRaw any other suggestions Calling it diffRest or any such nondescript thing just for the sake of it feels wrong
; general
so what does it do without looking too hard I thought it would compute the raw diff between two gossips as opposed to bailing out early in case of no convergence
; general
yes since we know that it was convergence when we receive the member events it should be enough to check those which is done in awaitUpConvergence
; general
its all about the unreachable stuff so I suggest diffUnreachable
; general
and make a third one diffSeen that handles SeenChangedSeenChanged is only for test purpose INTERNAL API and I think that can and should be disabled by default so it makes sense to place that into a separate method which is a nop by default
; design
case Destination self  Nil
; general
In the original code we sent the potentially wrapped message argument but here we send the potentially unwrapped one Is it guaranteed that the message is never wrapped in this case
; general
yes Im aware of that and as far as I can tell that should be alright The purpose of wrapped messages eg Broadcast is when sending to the routees Messages to self is Resize AutoReceiveMessages Terminate or other administrative messages ie not wrappedI dont think there was any deep thought into that and you can also see that it was handled differently if it was one destination or many
; general
Ok I just wanted some confirmation before I say OK too quickly again
; general
Move this out of the foreach only needs to be done once
; design
Id use a PF instead    applyRoutes message foreach       case Destinationsender self  supertellmsg sender      case Destinationsender recipient   recipienttellmsg sender
; general
good point thanks
; general
yes with the move of the unwrap thats great I have changed
; design
2 to 8 seems quite arbitrary from this point of view
; general
well 2 lines above it checks number 1 which is the initial resize and then continues here from 2
; general
this definitely is more uniform and pleasantly written I just think we should also spec it as in adding it to the docs
; general
I have added docs describing behavior of RouterEnvelope resize and CurrentRoutees
; general
It wont win a beauty contest but it will do the trick
; general
Are we sure that lookup is used for all getChildByX calls now
; general
Instead of this flag could we check if lookup  underlying
; general
hmm dont think so since that would turn true a bit too early no
; general
It wont matter Ill experiment with that in master would be nice to avoid accidental booleancomplexity
; general
I would prefer H I C   S V N T   D R A C O N E S
; general
No that would be 0 This if is there to add additional tests for the  multibyte delimiter case
; general
should set delimiterFragment  None here
; general
please rename to delimiterSubmatchLength or some such
; general
yes this looks like a good idea
; general
No the match could be inside the nextChunk not just at the prefix
; general
oh right of course
; general
Just one thing before the merge I think it might make sense to compact the buffer at this point too
; general
yes that is a reasonable guess but we might want to measure this as well
; general
Ill leave as it is for now We should benchmark IO to see if that makes  sense or not
; general
then we might want to have some TODOs in the code which remind us about what needs verification
; general
What does this path parameter mean It is not used in the docs for ordinary actors I just want to learn
; general
Um Good question I think it is not what I thought it is
; general
this is indeed misleading path is used internally only AFAIK since Deploy doubles as the container of the parsed deployment section entries
; general
ok then my understanding was not totally off
; general
this line needs to be moved to the end see 1408
; general
Ah I see Nice catchIll push an update in a sec
; general
This closes over this and exposes it to another actor ie when this is replaced by restarts or the actor terminates it will be leaked by anyone holding onto the ChannelRegistration
; design
Benchmark and see if CCAS is faster or not
; general
Do we know that it was a child
; general
We dont know that the creation succeeded here
; general
True Even though this is not an actor but the ChannelRegistryImpl it is created and held by an Actor the SelectionHandler So if the selection were allowed to be restarted thered be a potential leakHowever the SelectionHandler cannot be restarted is has a stopping supervisor strategy and the only ones receiving a registration are its children which are always going to be terminated before the SelectionHandler instance is terminatedTherefore we will never see this potential leak occur
; design
Since the SelectionHandler ref is not exposed to the user the only ones who can potentially call assign a watch are ourselves So we control for what actors we are seeing Terminated events which are only children Ill add a comment explaining that
; design
Would swapping with the next line help
; general
Even with the new Akka 22 Props swapping the lines would of course not helpDo you see an easy fix
; general
One fix is tocreate childincrementwatchdecrement on Terminated
; general
no need for this
; general
no need for this
; general
yes my spidey senses were also triggered by this code but from what I can tell it is fine
; general
why is the channelActor implicit
; general
ChannelRegistry and ChannelRegistration needs some scaladoccomments about expected behavior
; general
Ok I seeSo if the selector is limited ie MaxChannelsPerSelector  0 we are already doing the right thing hereFor the unlimited case the problem of potentially counting failed child creations doesnt matter because we only use the childCount for enforcing the limit which is not checked in the unlimited caseSo I take it that no change is required
; general
Unfortunately it is needed since we create a function that creates the props and not the props themselves
; design
Simply because register is always called from the channelActor and we can spare the explicit self argument this way
; general
Good call clearly needs a comment
; general
Yes Ill add them
; general
yes but for a different reason if something throws an exception here then the selector will shut down meaning that an offbyone child count does not matter if this is not correct then youll need to switch this line with the next
; general
I wasnt sure how a problem with child creation would hit the SelectionHandler actor here Since the actual creation happens asyncly this code would simply run through without seeing an exception no
; design
before dispatching the asynchronous creation several things are already checked eg that the name is okay and not already taken that the mailbox matches the actor class and possibly others in the future which may in principle result in an exception being thrown from actorOf Im not saying that I expect this to happen here though we are just being paranoid
; design
Yes exactly what rkuhn says encoding assumptions without documenting said assumptions will eventually lead to someone changing the code and risking to break those assumptions silently Minimizing this is good for sleep purposes
; general
Ok got itSo stepping back Id say swapping with the next line would increase robustness at least a little bitIll make the change
; general
Ouch thanks that was an omission
; general
might want to make createAsker private or something
; design
this is nice
; general
Not daring to mix a match for InterruptedException plus custom extractor
; general
I think this is where reportFailure is desirable
; general
I think we should complete it with an ExecutionException so we dont let it time out
; general
case  VirtualMachineError   ThreadDeath   InterruptedException  None
; general
sounds good like this    case NonFatale  p complete Lefte    case e  p complete Leftnew ExecutionExceptione throw e
; general
Mixing extractors and normal patterns can be troublesome Roland wdyt
; general
Harmless is an alternative name of this     catch         case Harmlesse WDYT
; general
You mean like    case e InterruptedException     case NonFatale I think that would work and I did that first but I was annoyed by the need of copying the two duplicate lines but that is probably more clean anyway
; general
Yeah Roland you agree here or not
; general
case e   InterruptedException  NonFatal
; general
this looks like it should be fine the problems start when applying constraints to the extracted values
; general
I think NonFatal describes more closely what it does since Harmless is a lot more nebulous
; general
so whats the rationale for not suspending the actor in this case Or should it in fact be implicitly Resumed I mean in the Directive sense
; design
damn that should of course be done that was the two lines of copied code I talked about before THANKS
; general
This looks okay but CTD vs InterruptedException has been a bitch so Jenkins will probably tell us if there is a problem
; general
why not unify this with the other logError in the same file
; general
This cannot ever happen if actor  null then were suspended Otherwise somethings else is broken and should not be masked by this protector clause
; design
I was able to make it null Ill send you the code how to reproduce Im open to suggestions of how to handle it
; general
well one was in the trait and one in the object but I can unify them by passing in the class
; design
Alright Ill change it back to NonFatal then
; general
NonFatal is teh bomb
; general
add val cause Throwable and override def getCause to return that
; general
fixedOn Fri Feb 3 2012 at 1045 AM viktorklang replyreplygithubcom wrote   4996 49913  object Logging      class EventHandlerException extends AkkaException            Exception that wraps a LogEvent         class LogEventExceptionval event LogEvent extends NoStackTrace  add val cause Throwable and override def getCause to return that  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull282filesr413484 Patrik NordwallTypesafe httptypesafecom   The software stack for applications thatscaleTwitter patriknw
; design
added at dubug levelOn Fri Feb 3 2012 at 1047 AM viktorklang replyreplygithubcom wrote   4929 4837  sealed trait FutureT extends japiFutureT with AwaitAwaitableT            future complete try              Rightfres            catch             case e               logErrorFuturemap e              Lefte            case NonFatale  Lefte executorreportFailuree here  Reply to this email directly or view it on GitHub httpsgithubcomjbonerakkapull282filesr413490 Patrik NordwallTypesafe httptypesafecom   The software stack for applications thatscaleTwitter patriknw
; general
What about removing this class and add the isTicking method to Deadline The latter enjoys a nice DSL val deadline  10 seconds fromNow
; design
this is not used or is it
; general
wouldnt it make sense to create a referenceconf in akkacluster and move this section there
; design
dont we have these already as RemoteLifeCycleEvents in RemoteTransportscala
; general
same comment as for the cluster section in referenceconf
; general
Sounds good Will you do it or
; general
True I can remove it
; general
in reply to your reply which is somehow not visible in the pull request diff what is it that you are missing exactly apart from def isTicking Boolean
; general
ah sorry somehow I was under the wrong impression that the remote events were exceptions
; general
Definitely I am on that now Thanks
; general
I want to throw RemoteConnectionException so I can catch it and retry How would the event help me
; general
do we have a policy on these empty lines because I remove them whenever I touch a file
; general
Moving it as we speak
; general
I want to have an empty line after the header Just by habit looks good Formatting without thinking when reading code But if you dont like that I can stop
; general
I am not using isTicking but a search shows that it is used by IOActor I think Deadline is sufficient I guess I used it but refactored it into not using it
; general
okay please create a ticket for removing Timer and Ill do it once this branch is merged into master
; general
Im moving to Deadline So if someone fixes IOActor we can remove the Timer
; general
Do nodes start as Up
; general
Shouldnt these already be Durations
; general
What happens if one of these throw an exception
; general
mistake by me changed from debug when debugging fixing now
; general
Seed nodes are consider Up This node will try to join them on startup But Im removing the concept of seed nodes soon anyway
; general
Remove this code use Git to revive if needed
; general
quite pointless with system  system
; general
What do you suggest we do
; general
point is system should go first since I assume it is ubiquitous to the AFD
; general
Dont like commented out tests either fix or remove
; general
Is this used in remoting
; general
No Im working on this right now
; general
Why is this needed Arent we going to have a ClusterActorRefProvider
; design
Ok Can make it the first arg
; general
should possibly be a finally to remove the k from remoteClients
; general
Are we packaging the cluster module in 20
; general
Are we shipping the cluster docs in 20
; general
It is part of what Im working on right now I can delete the test from repo temporary if it would make you happy
; general
Used it when Gossiper was in akkaremote Can remove now
; general
Just formatted it since it was too long
; general
No But I want it to build with regular build How can we exclude it from packaging only
; general
Yes Cluster spec
; general
Well the question was what we doin the finallyof course
; general
do each in its own finally
; general
I could But the full shutdown still fails Only makes it slightly better
; general
please add a space for better readability      Which
; general
perhaps  instead fo
; general
Is there something similar to     tsetUncaughtExceptionHandlerexceptionHandler
; general
Make sure that you change all usages of these renamed properties For example I dont see any change in AkkaSpec where I know that they are used
; general
All tests pass
; general
That doesnt mean that they are not used at other placesWhat is the problem with searching for them Including rst and scala docs
; general
In general I like my results rather mediumrare  just so I can comment on something
; general
please use prerequisitessysteminternalClassLoader and you may I know you dont   want to use this    val args  SeqclassOfConfig  config classOfDispatcherPrerequisites  prerequisites
; general
I fixed the ones I found
; general
Dont know why this isnt using Akkas get Unsafe it should
; general
We should have our own Adapted Runnable that doesnt eat as much memory
; general
Why do you want to signalAll
; general
Why only here
; general
Because this is the only blocking method which didnt call lockInterruptibly
; general
If we have multiple threads waiting we want to signal all of them not just one Otherwise we could end up in unnececssary waiting or even deadlock if were unlucky
; general
Just making sure
; general
I guess it makes sense to signalAll waiters since we are purging the collection its only in the case where we have more threads than capacity that it is wasteful which should be rare
; general
nope never remove anything from gitignore that only leads to great pain when switching branches across this change
; general
Id argue that it should  You really need to know about those files and remove them
; general
In other words if you dont remove those files they continue to cause issues  This is your best mechanism to discover Id say
; general
No we had that problem before and the conclusion was unanimous and generic never remove anything from gitignore The reason is that the previously ignored files will eventually be committed into the repository inadvertentlyIn this specific case we rely on the release script to clean things up which is a step that also shall be retained even if technically not needed it is a valuable safeguardOne thing we need to verify is how the prvalidator behaves when switching between 22 and 23 branches the files should in principle cause test failures when going 22  23 but currently the relevant test does not run AFAIK we need to fix that anyway
; design
Alright I can remove it if you feel its bestAlso I recommend using paxexam for the tests Theres a junit bundle you can use which will allow you to run the same OSGi tests but without the need for forking to maven so you could include it in your full test suite by defaultAs the tests are currently broken Id recommend trying that out
; design
Im trying to learn the sbt way so why not the following scalaval dirAndNames  projectsmapp  resourceDirectory in Compile in p  normalizedName in pjoindirAndNames map  dn   for     dir project  dn    val conf  dir  referenceconf    if confexists   yield conf  project
; general
Thanks It would be great if we could hakk on that together sometime paxexam was tried and rejected by Christophe and Raman they couldnt get it to work But that will have to wait until after my vacation
; general
Doesnt quite pass the typesystem   Too many levels  Lets look at typesscalaval projects SeqProjectval tmp SeqInitializeFile InitializeString   projectsmapp  resourceDirectory in Compile in p  normalizedName in pval dirsAndNames InitializeSeqFile String  tmpjoin value join is not a member of  SeqInitializeFile InitializeStringThat is the join helper isnt able to discover into a SeqTuple2InitializeInitialzie  Holy nested types batmanThis is actually the simplest I could do to preserve the existing semantics  An even better approach and one I want to do once someone can answer my questions on repercussions is to NOT dynamically depend on projects but to depend on the dependencyClasspath setting  Using this we should be able to get all the dependent jarsclasspath directories and we can filter this to grab the relevant referenceconf files  Then were no longer used advanced sbt features and we might see more stability
; general
Sounds good  Ill also be at the eng meetup early for hakking like this I was able to get paxexam up and running in the Scala build Im certainwe could do so for AKka given enough dedication On Mon Jul 15 2013 at 1158 AM Roland Kuhn notificationsgithubcomwrote In gitignore   407 406  akkacontribrstpreprocessed   akkadocsbuild   akkadocsexts   akkadocsrstpreprocessed  akkaosgisrcmainresourcesconf Thanks It would be great if we could hakk on that together sometime paxexam was tried and rejected by Christophe and Raman they couldnt get it to work But that will have to wait until after my vacation  Reply to this email directly or view it on GitHubhttpsgithubcomakkaakkapull1617filesr5193104
; general
Ah I see thanks for the explanation Classpaths will not work because neither forward nor reverse dependencies capture what we want to gather akkaosgi does not depend onsayakkaremote and the reverse is also not true Filtering projects looks like the only solution to me
; design
Is this test run automatically In that case why do we have so many spec wrappers for other junit tests
; general
this is just to verify compilability
; general
ok but then I think it should not be a junit test remove the Test and write a comment about it I have found junit tests before that were never run because of this and they were supposed to be run
; general
so very true
; general
and is completely oblivious
; general
please remove the lonely s
; general
will be replied to
; general
Yes it can be removed here OTOH how can you add the plural s to these formatted words
; general
will be replied with
; general
well actually will be replied to with an
; general
these are fixed class names for example so they dont participate in normal grammar rules
; design
notified of the termination
; general
the s looks strange
; general
I removed it already but thanks
; general
this should probably be actorSelectionjava
; general
perhaps READERIDLE  ALLIDLE
; general
NettyRemoteTransportsetAddressFromChannel uses settingshost to set addresshost so these two are quite the same
; general
wrong this is the time interval after which a HEARTBEAT will be generated Nothing quite as dramatic as tearing down the connection
; general
I know speed style but    cookie foreach beatsetCookie
; general
Good catch copypaste error
; general
yep why not
; general
I think you can even get away with cookie foreach beatsetCookie
; general
NoScope doesnt make any sense
; general
does lookupDeploy  true  deploy  None make sense
; general
Okay will change to NoConfigurationGivenForThisScope or some such
; general
Scopes are not explained
; general
should probably add some docs at this point systemService deploys locally no matter what deploy can be passed in from a higher level to provide some override and lookupDeploy can be set to false to prevent asking the Deployer again eg if its result is already contained in the deploy argument
; general
return type bitte
; general
creating routers should not be the hot path it never was exactly cheap and the actual router initialization is also not lightweight
; general
will add docs
; general
okay Ill clean up your mess
; general
But dont you really only need to concat iterators apply the withFallback and then do a toList
; general
No its not unscoped its more no scope given please use scope from other place
; general
thats a good one will change
; general
this looks mysteriously similar to code Ive seen before in this commit pull out abstract call
; general
isnt the deploy on Props
; general
great work man
; general
Yes I agree its tantalizingly similar But not the same
; general
Thats a different deploy Im passing the locally determined overrides to the remote system so that they can be applied to props there together with any local configuration overrides the remote system may have
; general
Then drop the final  Nil
; general
nice never liked that one
; general
Thats a good name
; general
we just removed this class completely subsumed by Deadline
; design
Cool I will remove it then Do you think we need Deadline in the Scala Library
; general
should we add hasTimeLeft as convenience to avoid isOverdue
; general
It already has def timeLeft Duration  this  Deadlinenow
; general
well I was asking for hasAnyTimeLeft Boolean to avoid negation which can be hard to seeread but it was only a thought
; general
good point I also think its wasteful to allocate a new Duration just to check time left
; general
